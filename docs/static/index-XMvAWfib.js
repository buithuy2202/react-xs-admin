var dw = Object.defineProperty;
var Df = Object.getOwnPropertySymbols;
var pw = Object.prototype.hasOwnProperty,
  gw = Object.prototype.propertyIsEnumerable;
var Bf = (e, r, t) =>
    r in e ? dw(e, r, { enumerable: !0, configurable: !0, writable: !0, value: t }) : (e[r] = t),
  lo = (e, r) => {
    for (var t in r || (r = {})) pw.call(r, t) && Bf(e, t, r[t]);
    if (Df) for (var t of Df(r)) gw.call(r, t) && Bf(e, t, r[t]);
    return e;
  };
import {
  r as L,
  u as yw,
  g as Ha,
  m as Ya,
  a as Ps,
  c as mw,
  C as xe,
  b as pg,
  d as Ot,
  R as xw,
  i as ww,
  e as bw,
  P as Sw,
  f as Cw,
  T as gg,
  h as Mw,
  t as Aw,
  j as Fw,
  K as yg,
  o as Wa,
  A as Ew,
  _ as mg,
  k as Tw,
  l as Os,
  n as xg,
  p as kw,
  q as Iw,
  s as Lw,
  v as Ui,
  w as Rf,
  x as Pw,
  y as Bu,
  z as Ow,
  B as Dw,
  D as Bw,
  E as Rw,
  F as da,
  G as k,
  H as x,
  I as J,
  J as wt,
  L as pt,
  M as q,
  N as pa,
  O as ga,
  Q as $w,
  S as Nw,
  U as zw,
  V as Bt,
  W as Gw,
  X as At,
  Y as wg,
  Z as dn,
  $ as Vw,
  a0 as Hw,
  a1 as Yw,
} from './index-kemiTooa.js';
import { u as Ww, r as Xw, U as _w, C as Ri, R as jw } from './UserOutlined-a-2el6M0.js';
const Ds = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        get Base() {
          return Ze;
        },
        get Circle() {
          return Uk;
        },
        get Ellipse() {
          return qk;
        },
        get Image() {
          return Zk;
        },
        get Line() {
          return Kk;
        },
        get Marker() {
          return Jk;
        },
        get Path() {
          return Ph;
        },
        get Polygon() {
          return oI;
        },
        get Polyline() {
          return sI;
        },
        get Rect() {
          return cI;
        },
        get Text() {
          return hI;
        },
      },
      Symbol.toStringTag,
      { value: 'Module' },
    ),
  ),
  Bs = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        get Base() {
          return Ge;
        },
        get Circle() {
          return mI;
        },
        get Dom() {
          return xI;
        },
        get Ellipse() {
          return wI;
        },
        get Image() {
          return bI;
        },
        get Line() {
          return SI;
        },
        get Marker() {
          return CI;
        },
        get Path() {
          return MI;
        },
        get Polygon() {
          return AI;
        },
        get Polyline() {
          return FI;
        },
        get Rect() {
          return TI;
        },
        get Text() {
          return PI;
        },
      },
      Symbol.toStringTag,
      { value: 'Module' },
    ),
  );
function Uw() {
  const [, e] = L.useReducer((r) => r + 1, 0);
  return e;
}
function qw() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
  const r = L.useRef({}),
    t = Uw(),
    n = Ww();
  return (
    yw(() => {
      const i = n.subscribe((a) => {
        (r.current = a), e && t();
      });
      return () => n.unsubscribe(i);
    }, []),
    r.current
  );
}
const Zw = L.createContext({}),
  Ru = Zw,
  Kw = (e) => {
    const {
        antCls: r,
        componentCls: t,
        iconCls: n,
        avatarBg: i,
        avatarColor: a,
        containerSize: o,
        containerSizeLG: s,
        containerSizeSM: l,
        textFontSize: u,
        textFontSizeLG: c,
        textFontSizeSM: h,
        borderRadius: f,
        borderRadiusLG: v,
        borderRadiusSM: d,
        lineWidth: p,
        lineType: g,
      } = e,
      y = (m, b, w) => ({
        width: m,
        height: m,
        lineHeight: `${m - p * 2}px`,
        borderRadius: '50%',
        [`&${t}-square`]: { borderRadius: w },
        [`${t}-string`]: {
          position: 'absolute',
          left: { _skip_check_: !0, value: '50%' },
          transformOrigin: '0 center',
        },
        [`&${t}-icon`]: { fontSize: b, [`> ${n}`]: { margin: 0 } },
      });
    return {
      [t]: Object.assign(
        Object.assign(
          Object.assign(Object.assign({}, Ps(e)), {
            position: 'relative',
            display: 'inline-block',
            overflow: 'hidden',
            color: a,
            whiteSpace: 'nowrap',
            textAlign: 'center',
            verticalAlign: 'middle',
            background: i,
            border: `${p}px ${g} transparent`,
            '&-image': { background: 'transparent' },
            [`${r}-image-img`]: { display: 'block' },
          }),
          y(o, u, f),
        ),
        {
          '&-lg': Object.assign({}, y(s, c, v)),
          '&-sm': Object.assign({}, y(l, h, d)),
          '> img': { display: 'block', width: '100%', height: '100%', objectFit: 'cover' },
        },
      ),
    };
  },
  Qw = (e) => {
    const { componentCls: r, groupBorderColor: t, groupOverlapping: n, groupSpace: i } = e;
    return {
      [`${r}-group`]: {
        display: 'inline-flex',
        [`${r}`]: { borderColor: t },
        '> *:not(:first-child)': { marginInlineStart: n },
      },
      [`${r}-group-popover`]: { [`${r} + ${r}`]: { marginInlineStart: i } },
    };
  },
  bg = Ha(
    'Avatar',
    (e) => {
      const { colorTextLightSolid: r, colorTextPlaceholder: t } = e,
        n = Ya(e, { avatarBg: t, avatarColor: r });
      return [Kw(n), Qw(n)];
    },
    (e) => {
      const {
        controlHeight: r,
        controlHeightLG: t,
        controlHeightSM: n,
        fontSize: i,
        fontSizeLG: a,
        fontSizeXL: o,
        fontSizeHeading3: s,
        marginXS: l,
        marginXXS: u,
        colorBorderBg: c,
      } = e;
      return {
        containerSize: r,
        containerSizeLG: t,
        containerSizeSM: n,
        textFontSize: Math.round((a + o) / 2),
        textFontSizeLG: s,
        textFontSizeSM: i,
        groupSpace: u,
        groupOverlapping: -l,
        groupBorderColor: c,
      };
    },
  );
var Jw = function (e, r) {
  var t = {};
  for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && r.indexOf(n) < 0 && (t[n] = e[n]);
  if (e != null && typeof Object.getOwnPropertySymbols == 'function')
    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++)
      r.indexOf(n[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(e, n[i]) &&
        (t[n[i]] = e[n[i]]);
  return t;
};
const tb = (e, r) => {
    const [t, n] = L.useState(1),
      [i, a] = L.useState(!1),
      [o, s] = L.useState(!0),
      l = L.useRef(null),
      u = L.useRef(null),
      c = mw(r, l),
      { getPrefixCls: h, avatar: f } = L.useContext(xe),
      v = L.useContext(Ru),
      d = () => {
        if (!u.current || !l.current) return;
        const nt = u.current.offsetWidth,
          st = l.current.offsetWidth;
        if (nt !== 0 && st !== 0) {
          const { gap: ft = 4 } = e;
          ft * 2 < st && n(st - ft * 2 < nt ? (st - ft * 2) / nt : 1);
        }
      };
    L.useEffect(() => {
      a(!0);
    }, []),
      L.useEffect(() => {
        s(!0), n(1);
      }, [e.src]),
      L.useEffect(d, [e.gap]);
    const p = () => {
        const { onError: nt } = e;
        (nt == null ? void 0 : nt()) !== !1 && s(!1);
      },
      {
        prefixCls: g,
        shape: y,
        size: m,
        src: b,
        srcSet: w,
        icon: S,
        className: C,
        rootClassName: F,
        alt: E,
        draggable: I,
        children: T,
        crossOrigin: P,
      } = e,
      R = Jw(e, [
        'prefixCls',
        'shape',
        'size',
        'src',
        'srcSet',
        'icon',
        'className',
        'rootClassName',
        'alt',
        'draggable',
        'children',
        'crossOrigin',
      ]),
      B = pg((nt) => {
        var st, ft;
        return (ft =
          (st = m != null ? m : v == null ? void 0 : v.size) !== null && st !== void 0
            ? st
            : nt) !== null && ft !== void 0
          ? ft
          : 'default';
      }),
      G = Object.keys(typeof B == 'object' ? B || {} : {}).some((nt) =>
        ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'].includes(nt),
      ),
      j = qw(G),
      D = L.useMemo(() => {
        if (typeof B != 'object') return {};
        const nt = Xw.find((ft) => j[ft]),
          st = B[nt];
        return st
          ? { width: st, height: st, lineHeight: `${st}px`, fontSize: st && (S || T) ? st / 2 : 18 }
          : {};
      }, [j, B]),
      z = h('avatar', g),
      [X, Y] = bg(z),
      V = Ot({ [`${z}-lg`]: B === 'large', [`${z}-sm`]: B === 'small' }),
      W = L.isValidElement(b),
      tt = y || (v == null ? void 0 : v.shape) || 'circle',
      rt = Ot(
        z,
        V,
        f == null ? void 0 : f.className,
        `${z}-${tt}`,
        { [`${z}-image`]: W || (b && o), [`${z}-icon`]: !!S },
        C,
        F,
        Y,
      ),
      Z =
        typeof B == 'number'
          ? { width: B, height: B, lineHeight: `${B}px`, fontSize: S ? B / 2 : 18 }
          : {};
    let K;
    if (typeof b == 'string' && o)
      K = L.createElement('img', {
        src: b,
        draggable: I,
        srcSet: w,
        onError: p,
        alt: E,
        crossOrigin: P,
      });
    else if (W) K = b;
    else if (S) K = S;
    else if (i || t !== 1) {
      const nt = `scale(${t}) translateX(-50%)`,
        st = { msTransform: nt, WebkitTransform: nt, transform: nt },
        ft = typeof B == 'number' ? { lineHeight: `${B}px` } : {};
      K = L.createElement(
        xw,
        { onResize: d },
        L.createElement(
          'span',
          { className: `${z}-string`, ref: u, style: Object.assign(Object.assign({}, ft), st) },
          T,
        ),
      );
    } else
      K = L.createElement('span', { className: `${z}-string`, style: { opacity: 0 }, ref: u }, T);
    return (
      delete R.onError,
      delete R.gap,
      X(
        L.createElement(
          'span',
          Object.assign({}, R, {
            style: Object.assign(
              Object.assign(Object.assign(Object.assign({}, Z), D), f == null ? void 0 : f.style),
              R.style,
            ),
            className: rt,
            ref: c,
          }),
          K,
        ),
      )
    );
  },
  eb = L.forwardRef(tb),
  Sg = eb,
  is = (e) => (e ? (typeof e == 'function' ? e() : e) : null),
  rb = (e) => {
    const {
      componentCls: r,
      popoverColor: t,
      titleMinWidth: n,
      fontWeightStrong: i,
      popoverPadding: a,
      boxShadowSecondary: o,
      colorTextHeading: s,
      borderRadiusLG: l,
      zIndexPopup: u,
      marginXS: c,
      colorBgElevated: h,
      popoverBg: f,
    } = e;
    return [
      {
        [r]: Object.assign(Object.assign({}, Ps(e)), {
          position: 'absolute',
          top: 0,
          left: { _skip_check_: !0, value: 0 },
          zIndex: u,
          fontWeight: 'normal',
          whiteSpace: 'normal',
          textAlign: 'start',
          cursor: 'auto',
          userSelect: 'text',
          transformOrigin: 'var(--arrow-x, 50%) var(--arrow-y, 50%)',
          '--antd-arrow-background-color': h,
          '&-rtl': { direction: 'rtl' },
          '&-hidden': { display: 'none' },
          [`${r}-content`]: { position: 'relative' },
          [`${r}-inner`]: {
            backgroundColor: f,
            backgroundClip: 'padding-box',
            borderRadius: l,
            boxShadow: o,
            padding: a,
          },
          [`${r}-title`]: { minWidth: n, marginBottom: c, color: s, fontWeight: i },
          [`${r}-inner-content`]: { color: t },
        }),
      },
      bw(e, { colorBg: 'var(--antd-arrow-background-color)' }),
      {
        [`${r}-pure`]: {
          position: 'relative',
          maxWidth: 'none',
          margin: e.sizePopupArrow,
          display: 'inline-block',
          [`${r}-content`]: { display: 'inline-block' },
        },
      },
    ];
  },
  nb = (e) => {
    const { componentCls: r } = e;
    return {
      [r]: Sw.map((t) => {
        const n = e[`${t}6`];
        return {
          [`&${r}-${t}`]: {
            '--antd-arrow-background-color': n,
            [`${r}-inner`]: { backgroundColor: n },
            [`${r}-arrow`]: { background: 'transparent' },
          },
        };
      }),
    };
  },
  ib = (e) => {
    const {
        componentCls: r,
        lineWidth: t,
        lineType: n,
        colorSplit: i,
        paddingSM: a,
        controlHeight: o,
        fontSize: s,
        lineHeight: l,
        padding: u,
      } = e,
      c = o - Math.round(s * l),
      h = c / 2,
      f = c / 2 - t,
      v = u;
    return {
      [r]: {
        [`${r}-inner`]: { padding: 0 },
        [`${r}-title`]: {
          margin: 0,
          padding: `${h}px ${v}px ${f}px`,
          borderBottom: `${t}px ${n} ${i}`,
        },
        [`${r}-inner-content`]: { padding: `${a}px ${v}px` },
      },
    };
  },
  Cg = Ha(
    'Popover',
    (e) => {
      const { colorBgElevated: r, colorText: t, wireframe: n } = e,
        i = Ya(e, { popoverPadding: 12, popoverBg: r, popoverColor: t });
      return [rb(i), nb(i), n && ib(i), ww(i, 'zoom-big')];
    },
    (e) => ({ width: 177, minWidth: 177, titleMinWidth: 177, zIndexPopup: e.zIndexPopupBase + 30 }),
    {
      resetStyle: !1,
      deprecatedTokens: [
        ['width', 'titleMinWidth'],
        ['minWidth', 'titleMinWidth'],
      ],
    },
  );
var ab = function (e, r) {
  var t = {};
  for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && r.indexOf(n) < 0 && (t[n] = e[n]);
  if (e != null && typeof Object.getOwnPropertySymbols == 'function')
    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++)
      r.indexOf(n[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(e, n[i]) &&
        (t[n[i]] = e[n[i]]);
  return t;
};
const ob = (e, r, t) => {
    if (!(!r && !t))
      return L.createElement(
        L.Fragment,
        null,
        r && L.createElement('div', { className: `${e}-title` }, is(r)),
        L.createElement('div', { className: `${e}-inner-content` }, is(t)),
      );
  },
  sb = (e) => {
    const {
      hashId: r,
      prefixCls: t,
      className: n,
      style: i,
      placement: a = 'top',
      title: o,
      content: s,
      children: l,
    } = e;
    return L.createElement(
      'div',
      { className: Ot(r, t, `${t}-pure`, `${t}-placement-${a}`, n), style: i },
      L.createElement('div', { className: `${t}-arrow` }),
      L.createElement(Cw, Object.assign({}, e, { className: r, prefixCls: t }), l || ob(t, o, s)),
    );
  },
  lb = (e) => {
    const { prefixCls: r } = e,
      t = ab(e, ['prefixCls']),
      { getPrefixCls: n } = L.useContext(xe),
      i = n('popover', r),
      [a, o] = Cg(i);
    return a(L.createElement(sb, Object.assign({}, t, { prefixCls: i, hashId: o })));
  },
  ub = lb;
var cb = function (e, r) {
  var t = {};
  for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && r.indexOf(n) < 0 && (t[n] = e[n]);
  if (e != null && typeof Object.getOwnPropertySymbols == 'function')
    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++)
      r.indexOf(n[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(e, n[i]) &&
        (t[n[i]] = e[n[i]]);
  return t;
};
const hb = (e) => {
    let { title: r, content: t, prefixCls: n } = e;
    return L.createElement(
      L.Fragment,
      null,
      r && L.createElement('div', { className: `${n}-title` }, is(r)),
      L.createElement('div', { className: `${n}-inner-content` }, is(t)),
    );
  },
  Mg = L.forwardRef((e, r) => {
    const {
        prefixCls: t,
        title: n,
        content: i,
        overlayClassName: a,
        placement: o = 'top',
        trigger: s = 'hover',
        mouseEnterDelay: l = 0.1,
        mouseLeaveDelay: u = 0.1,
        overlayStyle: c = {},
      } = e,
      h = cb(e, [
        'prefixCls',
        'title',
        'content',
        'overlayClassName',
        'placement',
        'trigger',
        'mouseEnterDelay',
        'mouseLeaveDelay',
        'overlayStyle',
      ]),
      { getPrefixCls: f } = L.useContext(xe),
      v = f('popover', t),
      [d, p] = Cg(v),
      g = f(),
      y = Ot(a, p);
    return d(
      L.createElement(
        gg,
        Object.assign(
          { placement: o, trigger: s, mouseEnterDelay: l, mouseLeaveDelay: u, overlayStyle: c },
          h,
          {
            prefixCls: v,
            overlayClassName: y,
            ref: r,
            overlay: n || i ? L.createElement(hb, { prefixCls: v, title: n, content: i }) : null,
            transitionName: Mw(g, 'zoom-big', h.transitionName),
            'data-popover-inject': !0,
          },
        ),
      ),
    );
  });
Mg._InternalPanelDoNotUseOrYouWillBeFired = ub;
const fb = Mg,
  $f = (e) => {
    const { size: r, shape: t } = L.useContext(Ru),
      n = L.useMemo(() => ({ size: e.size || r, shape: e.shape || t }), [e.size, e.shape, r, t]);
    return L.createElement(Ru.Provider, { value: n }, e.children);
  },
  vb = (e) => {
    const { getPrefixCls: r, direction: t } = L.useContext(xe),
      {
        prefixCls: n,
        className: i,
        rootClassName: a,
        style: o,
        maxCount: s,
        maxStyle: l,
        size: u,
        shape: c,
        maxPopoverPlacement: h = 'top',
        maxPopoverTrigger: f = 'hover',
        children: v,
      } = e,
      d = r('avatar', n),
      p = `${d}-group`,
      [g, y] = bg(d),
      m = Ot(p, { [`${p}-rtl`]: t === 'rtl' }, i, a, y),
      b = Aw(v).map((S, C) => Fw(S, { key: `avatar-key-${C}` })),
      w = b.length;
    if (s && s < w) {
      const S = b.slice(0, s),
        C = b.slice(s, w);
      return (
        S.push(
          L.createElement(
            fb,
            {
              key: 'avatar-popover-key',
              content: C,
              trigger: f,
              placement: h,
              overlayClassName: `${p}-popover`,
            },
            L.createElement(Sg, { style: l }, `+${w - s}`),
          ),
        ),
        g(
          L.createElement(
            $f,
            { shape: c, size: u },
            L.createElement('div', { className: m, style: o }, S),
          ),
        )
      );
    }
    return g(
      L.createElement(
        $f,
        { shape: c, size: u },
        L.createElement('div', { className: m, style: o }, b),
      ),
    );
  },
  db = vb,
  Ag = Sg;
Ag.Group = db;
const pb = Ag,
  gb = (e) => {
    const { prefixCls: r, className: t, style: n, size: i, shape: a } = e,
      o = Ot({ [`${r}-lg`]: i === 'large', [`${r}-sm`]: i === 'small' }),
      s = Ot({
        [`${r}-circle`]: a === 'circle',
        [`${r}-square`]: a === 'square',
        [`${r}-round`]: a === 'round',
      }),
      l = L.useMemo(
        () => (typeof i == 'number' ? { width: i, height: i, lineHeight: `${i}px` } : {}),
        [i],
      );
    return L.createElement('span', {
      className: Ot(r, o, s, t),
      style: Object.assign(Object.assign({}, l), n),
    });
  },
  Rs = gb,
  yb = new yg('ant-skeleton-loading', {
    '0%': { backgroundPosition: '100% 50%' },
    '100%': { backgroundPosition: '0 50%' },
  }),
  $s = (e) => ({ height: e, lineHeight: `${e}px` }),
  ei = (e) => Object.assign({ width: e }, $s(e)),
  mb = (e) => ({
    background: e.skeletonLoadingBackground,
    backgroundSize: '400% 100%',
    animationName: yb,
    animationDuration: e.skeletonLoadingMotionDuration,
    animationTimingFunction: 'ease',
    animationIterationCount: 'infinite',
  }),
  zl = (e) => Object.assign({ width: e * 5, minWidth: e * 5 }, $s(e)),
  xb = (e) => {
    const {
      skeletonAvatarCls: r,
      gradientFromColor: t,
      controlHeight: n,
      controlHeightLG: i,
      controlHeightSM: a,
    } = e;
    return {
      [`${r}`]: Object.assign(
        { display: 'inline-block', verticalAlign: 'top', background: t },
        ei(n),
      ),
      [`${r}${r}-circle`]: { borderRadius: '50%' },
      [`${r}${r}-lg`]: Object.assign({}, ei(i)),
      [`${r}${r}-sm`]: Object.assign({}, ei(a)),
    };
  },
  wb = (e) => {
    const {
      controlHeight: r,
      borderRadiusSM: t,
      skeletonInputCls: n,
      controlHeightLG: i,
      controlHeightSM: a,
      gradientFromColor: o,
    } = e;
    return {
      [`${n}`]: Object.assign(
        { display: 'inline-block', verticalAlign: 'top', background: o, borderRadius: t },
        zl(r),
      ),
      [`${n}-lg`]: Object.assign({}, zl(i)),
      [`${n}-sm`]: Object.assign({}, zl(a)),
    };
  },
  Nf = (e) => Object.assign({ width: e }, $s(e)),
  bb = (e) => {
    const { skeletonImageCls: r, imageSizeBase: t, gradientFromColor: n, borderRadiusSM: i } = e;
    return {
      [`${r}`]: Object.assign(
        Object.assign(
          {
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            verticalAlign: 'top',
            background: n,
            borderRadius: i,
          },
          Nf(t * 2),
        ),
        {
          [`${r}-path`]: { fill: '#bfbfbf' },
          [`${r}-svg`]: Object.assign(Object.assign({}, Nf(t)), {
            maxWidth: t * 4,
            maxHeight: t * 4,
          }),
          [`${r}-svg${r}-svg-circle`]: { borderRadius: '50%' },
        },
      ),
      [`${r}${r}-circle`]: { borderRadius: '50%' },
    };
  },
  Gl = (e, r, t) => {
    const { skeletonButtonCls: n } = e;
    return {
      [`${t}${n}-circle`]: { width: r, minWidth: r, borderRadius: '50%' },
      [`${t}${n}-round`]: { borderRadius: r },
    };
  },
  Vl = (e) => Object.assign({ width: e * 2, minWidth: e * 2 }, $s(e)),
  Sb = (e) => {
    const {
      borderRadiusSM: r,
      skeletonButtonCls: t,
      controlHeight: n,
      controlHeightLG: i,
      controlHeightSM: a,
      gradientFromColor: o,
    } = e;
    return Object.assign(
      Object.assign(
        Object.assign(
          Object.assign(
            Object.assign(
              {
                [`${t}`]: Object.assign(
                  {
                    display: 'inline-block',
                    verticalAlign: 'top',
                    background: o,
                    borderRadius: r,
                    width: n * 2,
                    minWidth: n * 2,
                  },
                  Vl(n),
                ),
              },
              Gl(e, n, t),
            ),
            { [`${t}-lg`]: Object.assign({}, Vl(i)) },
          ),
          Gl(e, i, `${t}-lg`),
        ),
        { [`${t}-sm`]: Object.assign({}, Vl(a)) },
      ),
      Gl(e, a, `${t}-sm`),
    );
  },
  Cb = (e) => {
    const {
      componentCls: r,
      skeletonAvatarCls: t,
      skeletonTitleCls: n,
      skeletonParagraphCls: i,
      skeletonButtonCls: a,
      skeletonInputCls: o,
      skeletonImageCls: s,
      controlHeight: l,
      controlHeightLG: u,
      controlHeightSM: c,
      gradientFromColor: h,
      padding: f,
      marginSM: v,
      borderRadius: d,
      titleHeight: p,
      blockRadius: g,
      paragraphLiHeight: y,
      controlHeightXS: m,
      paragraphMarginTop: b,
    } = e;
    return {
      [`${r}`]: {
        display: 'table',
        width: '100%',
        [`${r}-header`]: {
          display: 'table-cell',
          paddingInlineEnd: f,
          verticalAlign: 'top',
          [`${t}`]: Object.assign(
            { display: 'inline-block', verticalAlign: 'top', background: h },
            ei(l),
          ),
          [`${t}-circle`]: { borderRadius: '50%' },
          [`${t}-lg`]: Object.assign({}, ei(u)),
          [`${t}-sm`]: Object.assign({}, ei(c)),
        },
        [`${r}-content`]: {
          display: 'table-cell',
          width: '100%',
          verticalAlign: 'top',
          [`${n}`]: {
            width: '100%',
            height: p,
            background: h,
            borderRadius: g,
            [`+ ${i}`]: { marginBlockStart: c },
          },
          [`${i}`]: {
            padding: 0,
            '> li': {
              width: '100%',
              height: y,
              listStyle: 'none',
              background: h,
              borderRadius: g,
              '+ li': { marginBlockStart: m },
            },
          },
          [`${i}> li:last-child:not(:first-child):not(:nth-child(2))`]: { width: '61%' },
        },
        [`&-round ${r}-content`]: { [`${n}, ${i} > li`]: { borderRadius: d } },
      },
      [`${r}-with-avatar ${r}-content`]: {
        [`${n}`]: { marginBlockStart: v, [`+ ${i}`]: { marginBlockStart: b } },
      },
      [`${r}${r}-element`]: Object.assign(
        Object.assign(
          Object.assign(Object.assign({ display: 'inline-block', width: 'auto' }, Sb(e)), xb(e)),
          wb(e),
        ),
        bb(e),
      ),
      [`${r}${r}-block`]: {
        width: '100%',
        [`${a}`]: { width: '100%' },
        [`${o}`]: { width: '100%' },
      },
      [`${r}${r}-active`]: {
        [`
        ${n},
        ${i} > li,
        ${t},
        ${a},
        ${o},
        ${s}
      `]: Object.assign({}, mb(e)),
      },
    };
  },
  bi = Ha(
    'Skeleton',
    (e) => {
      const { componentCls: r } = e,
        t = Ya(e, {
          skeletonAvatarCls: `${r}-avatar`,
          skeletonTitleCls: `${r}-title`,
          skeletonParagraphCls: `${r}-paragraph`,
          skeletonButtonCls: `${r}-button`,
          skeletonInputCls: `${r}-input`,
          skeletonImageCls: `${r}-image`,
          imageSizeBase: e.controlHeight * 1.5,
          borderRadius: 100,
          skeletonLoadingBackground: `linear-gradient(90deg, ${e.gradientFromColor} 25%, ${e.gradientToColor} 37%, ${e.gradientFromColor} 63%)`,
          skeletonLoadingMotionDuration: '1.4s',
        });
      return [Cb(t)];
    },
    (e) => {
      const { colorFillContent: r, colorFill: t } = e,
        n = r,
        i = t;
      return {
        color: n,
        colorGradientEnd: i,
        gradientFromColor: n,
        gradientToColor: i,
        titleHeight: e.controlHeight / 2,
        blockRadius: e.borderRadiusSM,
        paragraphMarginTop: e.marginLG + e.marginXXS,
        paragraphLiHeight: e.controlHeight / 2,
      };
    },
    {
      deprecatedTokens: [
        ['color', 'gradientFromColor'],
        ['colorGradientEnd', 'gradientToColor'],
      ],
    },
  ),
  Mb = (e) => {
    const {
        prefixCls: r,
        className: t,
        rootClassName: n,
        active: i,
        shape: a = 'circle',
        size: o = 'default',
      } = e,
      { getPrefixCls: s } = L.useContext(xe),
      l = s('skeleton', r),
      [u, c] = bi(l),
      h = Wa(e, ['prefixCls', 'className']),
      f = Ot(l, `${l}-element`, { [`${l}-active`]: i }, t, n, c);
    return u(
      L.createElement(
        'div',
        { className: f },
        L.createElement(Rs, Object.assign({ prefixCls: `${l}-avatar`, shape: a, size: o }, h)),
      ),
    );
  },
  Ab = Mb,
  Fb = (e) => {
    const {
        prefixCls: r,
        className: t,
        rootClassName: n,
        active: i,
        block: a = !1,
        size: o = 'default',
      } = e,
      { getPrefixCls: s } = L.useContext(xe),
      l = s('skeleton', r),
      [u, c] = bi(l),
      h = Wa(e, ['prefixCls']),
      f = Ot(l, `${l}-element`, { [`${l}-active`]: i, [`${l}-block`]: a }, t, n, c);
    return u(
      L.createElement(
        'div',
        { className: f },
        L.createElement(Rs, Object.assign({ prefixCls: `${l}-button`, size: o }, h)),
      ),
    );
  },
  Eb = Fb,
  Tb =
    'M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z',
  kb = (e) => {
    const { prefixCls: r, className: t, rootClassName: n, style: i, active: a } = e,
      { getPrefixCls: o } = L.useContext(xe),
      s = o('skeleton', r),
      [l, u] = bi(s),
      c = Ot(s, `${s}-element`, { [`${s}-active`]: a }, t, n, u);
    return l(
      L.createElement(
        'div',
        { className: c },
        L.createElement(
          'div',
          { className: Ot(`${s}-image`, t), style: i },
          L.createElement(
            'svg',
            {
              viewBox: '0 0 1098 1024',
              xmlns: 'http://www.w3.org/2000/svg',
              className: `${s}-image-svg`,
            },
            L.createElement('path', { d: Tb, className: `${s}-image-path` }),
          ),
        ),
      ),
    );
  },
  Ib = kb,
  Lb = (e) => {
    const {
        prefixCls: r,
        className: t,
        rootClassName: n,
        active: i,
        block: a,
        size: o = 'default',
      } = e,
      { getPrefixCls: s } = L.useContext(xe),
      l = s('skeleton', r),
      [u, c] = bi(l),
      h = Wa(e, ['prefixCls']),
      f = Ot(l, `${l}-element`, { [`${l}-active`]: i, [`${l}-block`]: a }, t, n, c);
    return u(
      L.createElement(
        'div',
        { className: f },
        L.createElement(Rs, Object.assign({ prefixCls: `${l}-input`, size: o }, h)),
      ),
    );
  },
  Pb = Lb;
var Ob = {
  icon: {
    tag: 'svg',
    attrs: { viewBox: '64 64 896 896', focusable: 'false' },
    children: [
      {
        tag: 'path',
        attrs: {
          d: 'M888 792H200V168c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h752c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM288 604a64 64 0 10128 0 64 64 0 10-128 0zm118-224a48 48 0 1096 0 48 48 0 10-96 0zm158 228a96 96 0 10192 0 96 96 0 10-192 0zm148-314a56 56 0 10112 0 56 56 0 10-112 0z',
        },
      },
    ],
  },
  name: 'dot-chart',
  theme: 'outlined',
};
const Db = Ob;
var Bb = function (r, t) {
  return L.createElement(Ew, mg({}, r, { ref: t, icon: Db }));
};
const Rb = L.forwardRef(Bb),
  $b = (e) => {
    const { prefixCls: r, className: t, rootClassName: n, style: i, active: a, children: o } = e,
      { getPrefixCls: s } = L.useContext(xe),
      l = s('skeleton', r),
      [u, c] = bi(l),
      h = Ot(l, `${l}-element`, { [`${l}-active`]: a }, c, t, n),
      f = o != null ? o : L.createElement(Rb, null);
    return u(
      L.createElement(
        'div',
        { className: h },
        L.createElement('div', { className: Ot(`${l}-image`, t), style: i }, f),
      ),
    );
  },
  Nb = $b,
  zb = (e) => {
    const r = (s) => {
        const { width: l, rows: u = 2 } = e;
        if (Array.isArray(l)) return l[s];
        if (u - 1 === s) return l;
      },
      { prefixCls: t, className: n, style: i, rows: a } = e,
      o = Tw(Array(a)).map((s, l) => L.createElement('li', { key: l, style: { width: r(l) } }));
    return L.createElement('ul', { className: Ot(t, n), style: i }, o);
  },
  Gb = zb,
  Vb = (e) => {
    let { prefixCls: r, className: t, width: n, style: i } = e;
    return L.createElement('h3', { className: Ot(r, t), style: Object.assign({ width: n }, i) });
  },
  Hb = Vb;
function Hl(e) {
  return e && typeof e == 'object' ? e : {};
}
function Yb(e, r) {
  return e && !r ? { size: 'large', shape: 'square' } : { size: 'large', shape: 'circle' };
}
function Wb(e, r) {
  return !e && r ? { width: '38%' } : e && r ? { width: '50%' } : {};
}
function Xb(e, r) {
  const t = {};
  return (!e || !r) && (t.width = '61%'), !e && r ? (t.rows = 3) : (t.rows = 2), t;
}
const Si = (e) => {
  const {
      prefixCls: r,
      loading: t,
      className: n,
      rootClassName: i,
      style: a,
      children: o,
      avatar: s = !1,
      title: l = !0,
      paragraph: u = !0,
      active: c,
      round: h,
    } = e,
    { getPrefixCls: f, direction: v, skeleton: d } = L.useContext(xe),
    p = f('skeleton', r),
    [g, y] = bi(p);
  if (t || !('loading' in e)) {
    const m = !!s,
      b = !!l,
      w = !!u;
    let S;
    if (m) {
      const E = Object.assign(Object.assign({ prefixCls: `${p}-avatar` }, Yb(b, w)), Hl(s));
      S = L.createElement(
        'div',
        { className: `${p}-header` },
        L.createElement(Rs, Object.assign({}, E)),
      );
    }
    let C;
    if (b || w) {
      let E;
      if (b) {
        const T = Object.assign(Object.assign({ prefixCls: `${p}-title` }, Wb(m, w)), Hl(l));
        E = L.createElement(Hb, Object.assign({}, T));
      }
      let I;
      if (w) {
        const T = Object.assign(Object.assign({ prefixCls: `${p}-paragraph` }, Xb(m, b)), Hl(u));
        I = L.createElement(Gb, Object.assign({}, T));
      }
      C = L.createElement('div', { className: `${p}-content` }, E, I);
    }
    const F = Ot(
      p,
      { [`${p}-with-avatar`]: m, [`${p}-active`]: c, [`${p}-rtl`]: v === 'rtl', [`${p}-round`]: h },
      d == null ? void 0 : d.className,
      n,
      i,
      y,
    );
    return g(
      L.createElement(
        'div',
        { className: F, style: Object.assign(Object.assign({}, d == null ? void 0 : d.style), a) },
        S,
        C,
      ),
    );
  }
  return typeof o != 'undefined' ? o : null;
};
Si.Button = Eb;
Si.Avatar = Ab;
Si.Input = Pb;
Si.Image = Ib;
Si.Node = Nb;
const _b = Si;
var jb = function (e, r) {
  var t = {};
  for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && r.indexOf(n) < 0 && (t[n] = e[n]);
  if (e != null && typeof Object.getOwnPropertySymbols == 'function')
    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++)
      r.indexOf(n[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(e, n[i]) &&
        (t[n[i]] = e[n[i]]);
  return t;
};
const Ub = (e) => {
    var { prefixCls: r, className: t, hoverable: n = !0 } = e,
      i = jb(e, ['prefixCls', 'className', 'hoverable']);
    const { getPrefixCls: a } = L.useContext(xe),
      o = a('card', r),
      s = Ot(`${o}-grid`, t, { [`${o}-grid-hoverable`]: n });
    return L.createElement('div', Object.assign({}, i, { className: s }));
  },
  Fg = Ub,
  qb = (e) => {
    const {
      antCls: r,
      componentCls: t,
      headerHeight: n,
      cardPaddingBase: i,
      tabsMarginBottom: a,
    } = e;
    return Object.assign(
      Object.assign(
        {
          display: 'flex',
          justifyContent: 'center',
          flexDirection: 'column',
          minHeight: n,
          marginBottom: -1,
          padding: `0 ${i}px`,
          color: e.colorTextHeading,
          fontWeight: e.fontWeightStrong,
          fontSize: e.headerFontSize,
          background: e.headerBg,
          borderBottom: `${e.lineWidth}px ${e.lineType} ${e.colorBorderSecondary}`,
          borderRadius: `${e.borderRadiusLG}px ${e.borderRadiusLG}px 0 0`,
        },
        Os(),
      ),
      {
        '&-wrapper': { width: '100%', display: 'flex', alignItems: 'center' },
        '&-title': Object.assign(Object.assign({ display: 'inline-block', flex: 1 }, xg), {
          [`
          > ${t}-typography,
          > ${t}-typography-edit-content
        `]: { insetInlineStart: 0, marginTop: 0, marginBottom: 0 },
        }),
        [`${r}-tabs-top`]: {
          clear: 'both',
          marginBottom: a,
          color: e.colorText,
          fontWeight: 'normal',
          fontSize: e.fontSize,
          '&-bar': { borderBottom: `${e.lineWidth}px ${e.lineType} ${e.colorBorderSecondary}` },
        },
      },
    );
  },
  Zb = (e) => {
    const { cardPaddingBase: r, colorBorderSecondary: t, cardShadow: n, lineWidth: i } = e;
    return {
      width: '33.33%',
      padding: r,
      border: 0,
      borderRadius: 0,
      boxShadow: `
      ${i}px 0 0 0 ${t},
      0 ${i}px 0 0 ${t},
      ${i}px ${i}px 0 0 ${t},
      ${i}px 0 0 0 ${t} inset,
      0 ${i}px 0 0 ${t} inset;
    `,
      transition: `all ${e.motionDurationMid}`,
      '&-hoverable:hover': { position: 'relative', zIndex: 1, boxShadow: n },
    };
  },
  Kb = (e) => {
    const {
      componentCls: r,
      iconCls: t,
      actionsLiMargin: n,
      cardActionsIconSize: i,
      colorBorderSecondary: a,
      actionsBg: o,
    } = e;
    return Object.assign(
      Object.assign(
        {
          margin: 0,
          padding: 0,
          listStyle: 'none',
          background: o,
          borderTop: `${e.lineWidth}px ${e.lineType} ${a}`,
          display: 'flex',
          borderRadius: `0 0 ${e.borderRadiusLG}px ${e.borderRadiusLG}px `,
        },
        Os(),
      ),
      {
        '& > li': {
          margin: n,
          color: e.colorTextDescription,
          textAlign: 'center',
          '> span': {
            position: 'relative',
            display: 'block',
            minWidth: e.cardActionsIconSize * 2,
            fontSize: e.fontSize,
            lineHeight: e.lineHeight,
            cursor: 'pointer',
            '&:hover': { color: e.colorPrimary, transition: `color ${e.motionDurationMid}` },
            [`a:not(${r}-btn), > ${t}`]: {
              display: 'inline-block',
              width: '100%',
              color: e.colorTextDescription,
              lineHeight: `${e.fontSize * e.lineHeight}px`,
              transition: `color ${e.motionDurationMid}`,
              '&:hover': { color: e.colorPrimary },
            },
            [`> ${t}`]: { fontSize: i, lineHeight: `${i * e.lineHeight}px` },
          },
          '&:not(:last-child)': { borderInlineEnd: `${e.lineWidth}px ${e.lineType} ${a}` },
        },
      },
    );
  },
  Qb = (e) =>
    Object.assign(Object.assign({ margin: `-${e.marginXXS}px 0`, display: 'flex' }, Os()), {
      '&-avatar': { paddingInlineEnd: e.padding },
      '&-detail': {
        overflow: 'hidden',
        flex: 1,
        '> div:not(:last-child)': { marginBottom: e.marginXS },
      },
      '&-title': Object.assign(
        { color: e.colorTextHeading, fontWeight: e.fontWeightStrong, fontSize: e.fontSizeLG },
        xg,
      ),
      '&-description': { color: e.colorTextDescription },
    }),
  Jb = (e) => {
    const { componentCls: r, cardPaddingBase: t, colorFillAlter: n } = e;
    return {
      [`${r}-head`]: { padding: `0 ${t}px`, background: n, '&-title': { fontSize: e.fontSize } },
      [`${r}-body`]: { padding: `${e.padding}px ${t}px` },
    };
  },
  tS = (e) => {
    const { componentCls: r } = e;
    return { overflow: 'hidden', [`${r}-body`]: { userSelect: 'none' } };
  },
  eS = (e) => {
    const {
      antCls: r,
      componentCls: t,
      cardShadow: n,
      cardHeadPadding: i,
      colorBorderSecondary: a,
      boxShadowTertiary: o,
      cardPaddingBase: s,
      extraColor: l,
    } = e;
    return {
      [t]: Object.assign(Object.assign({}, Ps(e)), {
        position: 'relative',
        background: e.colorBgContainer,
        borderRadius: e.borderRadiusLG,
        [`&:not(${t}-bordered)`]: { boxShadow: o },
        [`${t}-head`]: qb(e),
        [`${t}-extra`]: {
          marginInlineStart: 'auto',
          color: l,
          fontWeight: 'normal',
          fontSize: e.fontSize,
        },
        [`${t}-body`]: Object.assign(
          { padding: s, borderRadius: ` 0 0 ${e.borderRadiusLG}px ${e.borderRadiusLG}px` },
          Os(),
        ),
        [`${t}-grid`]: Zb(e),
        [`${t}-cover`]: {
          '> *': { display: 'block', width: '100%' },
          [`img, img + ${r}-image-mask`]: {
            borderRadius: `${e.borderRadiusLG}px ${e.borderRadiusLG}px 0 0`,
          },
        },
        [`${t}-actions`]: Kb(e),
        [`${t}-meta`]: Qb(e),
      }),
      [`${t}-bordered`]: {
        border: `${e.lineWidth}px ${e.lineType} ${a}`,
        [`${t}-cover`]: { marginTop: -1, marginInlineStart: -1, marginInlineEnd: -1 },
      },
      [`${t}-hoverable`]: {
        cursor: 'pointer',
        transition: `box-shadow ${e.motionDurationMid}, border-color ${e.motionDurationMid}`,
        '&:hover': { borderColor: 'transparent', boxShadow: n },
      },
      [`${t}-contain-grid`]: {
        borderRadius: `${e.borderRadiusLG}px ${e.borderRadiusLG}px 0 0 `,
        [`${t}-body`]: { display: 'flex', flexWrap: 'wrap' },
        [`&:not(${t}-loading) ${t}-body`]: {
          marginBlockStart: -e.lineWidth,
          marginInlineStart: -e.lineWidth,
          padding: 0,
        },
      },
      [`${t}-contain-tabs`]: {
        [`> ${t}-head`]: { minHeight: 0, [`${t}-head-title, ${t}-extra`]: { paddingTop: i } },
      },
      [`${t}-type-inner`]: Jb(e),
      [`${t}-loading`]: tS(e),
      [`${t}-rtl`]: { direction: 'rtl' },
    };
  },
  rS = (e) => {
    const { componentCls: r, cardPaddingSM: t, headerHeightSM: n, headerFontSizeSM: i } = e;
    return {
      [`${r}-small`]: {
        [`> ${r}-head`]: {
          minHeight: n,
          padding: `0 ${t}px`,
          fontSize: i,
          [`> ${r}-head-wrapper`]: { [`> ${r}-extra`]: { fontSize: e.fontSize } },
        },
        [`> ${r}-body`]: { padding: t },
      },
      [`${r}-small${r}-contain-tabs`]: {
        [`> ${r}-head`]: {
          [`${r}-head-title, ${r}-extra`]: { paddingTop: 0, display: 'flex', alignItems: 'center' },
        },
      },
    };
  },
  nS = Ha(
    'Card',
    (e) => {
      const r = Ya(e, {
        cardShadow: e.boxShadowCard,
        cardHeadPadding: e.padding,
        cardPaddingBase: e.paddingLG,
        cardActionsIconSize: e.fontSize,
        cardPaddingSM: 12,
      });
      return [eS(r), rS(r)];
    },
    (e) => ({
      headerBg: 'transparent',
      headerFontSize: e.fontSizeLG,
      headerFontSizeSM: e.fontSize,
      headerHeight: e.fontSizeLG * e.lineHeightLG + e.padding * 2,
      headerHeightSM: e.fontSize * e.lineHeight + e.paddingXS * 2,
      actionsBg: e.colorBgContainer,
      actionsLiMargin: `${e.paddingSM}px 0`,
      tabsMarginBottom: -e.padding - e.lineWidth,
      extraColor: e.colorText,
    }),
  );
var zf = function (e, r) {
  var t = {};
  for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && r.indexOf(n) < 0 && (t[n] = e[n]);
  if (e != null && typeof Object.getOwnPropertySymbols == 'function')
    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++)
      r.indexOf(n[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(e, n[i]) &&
        (t[n[i]] = e[n[i]]);
  return t;
};
const iS = (e) => {
    const { prefixCls: r, actions: t = [] } = e;
    return L.createElement(
      'ul',
      { className: `${r}-actions` },
      t.map((n, i) => {
        const a = `action-${i}`;
        return L.createElement(
          'li',
          { style: { width: `${100 / t.length}%` }, key: a },
          L.createElement('span', null, n),
        );
      }),
    );
  },
  aS = L.forwardRef((e, r) => {
    const {
        prefixCls: t,
        className: n,
        rootClassName: i,
        style: a,
        extra: o,
        headStyle: s = {},
        bodyStyle: l = {},
        title: u,
        loading: c,
        bordered: h = !0,
        size: f,
        type: v,
        cover: d,
        actions: p,
        tabList: g,
        children: y,
        activeTabKey: m,
        defaultActiveTabKey: b,
        tabBarExtraContent: w,
        hoverable: S,
        tabProps: C = {},
      } = e,
      F = zf(e, [
        'prefixCls',
        'className',
        'rootClassName',
        'style',
        'extra',
        'headStyle',
        'bodyStyle',
        'title',
        'loading',
        'bordered',
        'size',
        'type',
        'cover',
        'actions',
        'tabList',
        'children',
        'activeTabKey',
        'defaultActiveTabKey',
        'tabBarExtraContent',
        'hoverable',
        'tabProps',
      ]),
      { getPrefixCls: E, direction: I, card: T } = L.useContext(xe),
      P = (Et) => {
        var Yt;
        (Yt = e.onTabChange) === null || Yt === void 0 || Yt.call(e, Et);
      },
      R = L.useMemo(() => {
        let Et = !1;
        return (
          L.Children.forEach(y, (Yt) => {
            Yt && Yt.type && Yt.type === Fg && (Et = !0);
          }),
          Et
        );
      }, [y]),
      B = E('card', t),
      [G, j] = nS(B),
      D = L.createElement(_b, { loading: !0, active: !0, paragraph: { rows: 4 }, title: !1 }, y),
      z = m !== void 0,
      X = Object.assign(Object.assign({}, C), {
        [z ? 'activeKey' : 'defaultActiveKey']: z ? m : b,
        tabBarExtraContent: w,
      });
    let Y;
    const V = pg(f),
      W = !V || V === 'default' ? 'large' : V,
      tt = g
        ? L.createElement(
            kw,
            Object.assign({ size: W }, X, {
              className: `${B}-head-tabs`,
              onChange: P,
              items: g.map((Et) => {
                var { tab: Yt } = Et,
                  Se = zf(Et, ['tab']);
                return Object.assign({ label: Yt }, Se);
              }),
            }),
          )
        : null;
    (u || o || tt) &&
      (Y = L.createElement(
        'div',
        { className: `${B}-head`, style: s },
        L.createElement(
          'div',
          { className: `${B}-head-wrapper` },
          u && L.createElement('div', { className: `${B}-head-title` }, u),
          o && L.createElement('div', { className: `${B}-extra` }, o),
        ),
        tt,
      ));
    const rt = d ? L.createElement('div', { className: `${B}-cover` }, d) : null,
      Z = L.createElement('div', { className: `${B}-body`, style: l }, c ? D : y),
      K = p && p.length ? L.createElement(iS, { prefixCls: B, actions: p }) : null,
      nt = Wa(F, ['onTabChange']),
      st = Ot(
        B,
        T == null ? void 0 : T.className,
        {
          [`${B}-loading`]: c,
          [`${B}-bordered`]: h,
          [`${B}-hoverable`]: S,
          [`${B}-contain-grid`]: R,
          [`${B}-contain-tabs`]: g && g.length,
          [`${B}-${V}`]: V,
          [`${B}-type-${v}`]: !!v,
          [`${B}-rtl`]: I === 'rtl',
        },
        n,
        i,
        j,
      ),
      ft = Object.assign(Object.assign({}, T == null ? void 0 : T.style), a);
    return G(
      L.createElement(
        'div',
        Object.assign({ ref: r }, nt, { className: st, style: ft }),
        Y,
        rt,
        Z,
        K,
      ),
    );
  }),
  oS = aS;
var sS = function (e, r) {
  var t = {};
  for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && r.indexOf(n) < 0 && (t[n] = e[n]);
  if (e != null && typeof Object.getOwnPropertySymbols == 'function')
    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++)
      r.indexOf(n[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(e, n[i]) &&
        (t[n[i]] = e[n[i]]);
  return t;
};
const lS = (e) => {
    const { prefixCls: r, className: t, avatar: n, title: i, description: a } = e,
      o = sS(e, ['prefixCls', 'className', 'avatar', 'title', 'description']),
      { getPrefixCls: s } = L.useContext(xe),
      l = s('card', r),
      u = Ot(`${l}-meta`, t),
      c = n ? L.createElement('div', { className: `${l}-meta-avatar` }, n) : null,
      h = i ? L.createElement('div', { className: `${l}-meta-title` }, i) : null,
      f = a ? L.createElement('div', { className: `${l}-meta-description` }, a) : null,
      v = h || f ? L.createElement('div', { className: `${l}-meta-detail` }, h, f) : null;
    return L.createElement('div', Object.assign({}, o, { className: u }), c, v);
  },
  uS = lS,
  zc = oS;
zc.Grid = Fg;
zc.Meta = uS;
const $i = zc;
var cS = {
    percent: 0,
    prefixCls: 'rc-progress',
    strokeColor: '#2db7f5',
    strokeLinecap: 'round',
    strokeWidth: 1,
    trailColor: '#D9D9D9',
    trailWidth: 1,
    gapPosition: 'bottom',
  },
  hS = function () {
    var r = L.useRef([]),
      t = L.useRef(null);
    return (
      L.useEffect(function () {
        var n = Date.now(),
          i = !1;
        r.current.forEach(function (a) {
          if (a) {
            i = !0;
            var o = a.style;
            (o.transitionDuration = '.3s, .3s, .3s, .06s'),
              t.current && n - t.current < 100 && (o.transitionDuration = '0s, 0s');
          }
        }),
          i && (t.current = Date.now());
      }),
      r.current
    );
  },
  Gf = 0,
  fS = Lw();
function vS() {
  var e;
  return fS ? ((e = Gf), (Gf += 1)) : (e = 'TEST_OR_SSR'), e;
}
const dS = function (e) {
  var r = L.useState(),
    t = Iw(r, 2),
    n = t[0],
    i = t[1];
  return (
    L.useEffect(function () {
      i('rc_progress_'.concat(vS()));
    }, []),
    e || n
  );
};
var Vf = function (r) {
  var t = r.bg,
    n = r.children;
  return L.createElement('div', { style: { width: '100%', height: '100%', background: t } }, n);
};
function Hf(e, r) {
  return Object.keys(e).map(function (t) {
    var n = parseFloat(t),
      i = ''.concat(Math.floor(n * r), '%');
    return ''.concat(e[t], ' ').concat(i);
  });
}
var pS = L.forwardRef(function (e, r) {
    var t = e.prefixCls,
      n = e.color,
      i = e.gradientId,
      a = e.radius,
      o = e.style,
      s = e.ptg,
      l = e.strokeLinecap,
      u = e.strokeWidth,
      c = e.size,
      h = e.gapDegree,
      f = n && Ui(n) === 'object',
      v = f ? '#FFF' : void 0,
      d = c / 2,
      p = L.createElement('circle', {
        className: ''.concat(t, '-circle-path'),
        r: a,
        cx: d,
        cy: d,
        stroke: v,
        strokeLinecap: l,
        strokeWidth: u,
        opacity: s === 0 ? 0 : 1,
        style: o,
        ref: r,
      });
    if (!f) return p;
    var g = ''.concat(i, '-conic'),
      y = h ? ''.concat(180 + h / 2, 'deg') : '0deg',
      m = Hf(n, (360 - h) / 360),
      b = Hf(n, 1),
      w = 'conic-gradient(from '.concat(y, ', ').concat(m.join(', '), ')'),
      S = 'linear-gradient(to '.concat(h ? 'bottom' : 'top', ', ').concat(b.join(', '), ')');
    return L.createElement(
      L.Fragment,
      null,
      L.createElement('mask', { id: g }, p),
      L.createElement(
        'foreignObject',
        { x: 0, y: 0, width: c, height: c, mask: 'url(#'.concat(g, ')') },
        L.createElement(Vf, { bg: S }, L.createElement(Vf, { bg: w })),
      ),
    );
  }),
  qi = 100,
  Yl = function (r, t, n, i, a, o, s, l, u, c) {
    var h = arguments.length > 10 && arguments[10] !== void 0 ? arguments[10] : 0,
      f = (n / 100) * 360 * ((360 - o) / 360),
      v = o === 0 ? 0 : { bottom: 0, top: 180, left: 90, right: -90 }[s],
      d = ((100 - i) / 100) * t;
    u === 'round' && i !== 100 && ((d += c / 2), d >= t && (d = t - 0.01));
    var p = qi / 2;
    return {
      stroke: typeof l == 'string' ? l : void 0,
      strokeDasharray: ''.concat(t, 'px ').concat(r),
      strokeDashoffset: d + h,
      transform: 'rotate('.concat(a + f + v, 'deg)'),
      transformOrigin: ''.concat(p, 'px ').concat(p, 'px'),
      transition:
        'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s, opacity .3s ease 0s',
      fillOpacity: 0,
    };
  },
  gS = [
    'id',
    'prefixCls',
    'steps',
    'strokeWidth',
    'trailWidth',
    'gapDegree',
    'gapPosition',
    'trailColor',
    'strokeLinecap',
    'style',
    'className',
    'strokeColor',
    'percent',
  ];
function Yf(e) {
  var r = e != null ? e : [];
  return Array.isArray(r) ? r : [r];
}
var yS = function (r) {
  var t = Rf(Rf({}, cS), r),
    n = t.id,
    i = t.prefixCls,
    a = t.steps,
    o = t.strokeWidth,
    s = t.trailWidth,
    l = t.gapDegree,
    u = l === void 0 ? 0 : l,
    c = t.gapPosition,
    h = t.trailColor,
    f = t.strokeLinecap,
    v = t.style,
    d = t.className,
    p = t.strokeColor,
    g = t.percent,
    y = Pw(t, gS),
    m = qi / 2,
    b = dS(n),
    w = ''.concat(b, '-gradient'),
    S = m - o / 2,
    C = Math.PI * 2 * S,
    F = u > 0 ? 90 + u / 2 : -90,
    E = C * ((360 - u) / 360),
    I = Ui(a) === 'object' ? a : { count: a, space: 2 },
    T = I.count,
    P = I.space,
    R = Yf(g),
    B = Yf(p),
    G = B.find(function (W) {
      return W && Ui(W) === 'object';
    }),
    j = G && Ui(G) === 'object',
    D = j ? 'butt' : f,
    z = Yl(C, E, 0, 100, F, u, c, h, D, o),
    X = hS(),
    Y = function () {
      var tt = 0;
      return R.map(function (rt, Z) {
        var K = B[Z] || B[B.length - 1],
          nt = Yl(C, E, tt, rt, F, u, c, K, D, o);
        return (
          (tt += rt),
          L.createElement(pS, {
            key: Z,
            color: K,
            ptg: rt,
            radius: S,
            prefixCls: i,
            gradientId: w,
            style: nt,
            strokeLinecap: D,
            strokeWidth: o,
            gapDegree: u,
            ref: function (ft) {
              X[Z] = ft;
            },
            size: qi,
          })
        );
      }).reverse();
    },
    V = function () {
      var tt = Math.round(T * (R[0] / 100)),
        rt = 100 / T,
        Z = 0;
      return new Array(T).fill(null).map(function (K, nt) {
        var st = nt <= tt - 1 ? B[0] : h,
          ft = st && Ui(st) === 'object' ? 'url(#'.concat(w, ')') : void 0,
          Et = Yl(C, E, Z, rt, F, u, c, st, 'butt', o, P);
        return (
          (Z += ((E - Et.strokeDashoffset + P) * 100) / E),
          L.createElement('circle', {
            key: nt,
            className: ''.concat(i, '-circle-path'),
            r: S,
            cx: m,
            cy: m,
            stroke: ft,
            strokeWidth: o,
            opacity: 1,
            style: Et,
            ref: function (Se) {
              X[nt] = Se;
            },
          })
        );
      });
    };
  return L.createElement(
    'svg',
    mg(
      {
        className: Ot(''.concat(i, '-circle'), d),
        viewBox: '0 0 '.concat(qi, ' ').concat(qi),
        style: v,
        id: n,
        role: 'presentation',
      },
      y,
    ),
    !T &&
      L.createElement('circle', {
        className: ''.concat(i, '-circle-trail'),
        r: S,
        cx: m,
        cy: m,
        stroke: h,
        strokeLinecap: D,
        strokeWidth: s || o,
        style: z,
      }),
    T ? V() : Y(),
  );
};
function bn(e) {
  return !e || e < 0 ? 0 : e > 100 ? 100 : e;
}
function as(e) {
  let { success: r, successPercent: t } = e,
    n = t;
  return r && 'progress' in r && (n = r.progress), r && 'percent' in r && (n = r.percent), n;
}
const mS = (e) => {
    let { percent: r, success: t, successPercent: n } = e;
    const i = bn(as({ success: t, successPercent: n }));
    return [i, bn(bn(r) - i)];
  },
  xS = (e) => {
    let { success: r = {}, strokeColor: t } = e;
    const { strokeColor: n } = r;
    return [n || Bu.green, t || null];
  },
  Ns = (e, r, t) => {
    var n, i, a, o;
    let s = -1,
      l = -1;
    if (r === 'step') {
      const u = t.steps,
        c = t.strokeWidth;
      typeof e == 'string' || typeof e == 'undefined'
        ? ((s = e === 'small' ? 2 : 14), (l = c != null ? c : 8))
        : typeof e == 'number'
        ? ([s, l] = [e, e])
        : ([s = 14, l = 8] = e),
        (s *= u);
    } else if (r === 'line') {
      const u = t == null ? void 0 : t.strokeWidth;
      typeof e == 'string' || typeof e == 'undefined'
        ? (l = u || (e === 'small' ? 6 : 8))
        : typeof e == 'number'
        ? ([s, l] = [e, e])
        : ([s = -1, l = 8] = e);
    } else
      (r === 'circle' || r === 'dashboard') &&
        (typeof e == 'string' || typeof e == 'undefined'
          ? ([s, l] = e === 'small' ? [60, 60] : [120, 120])
          : typeof e == 'number'
          ? ([s, l] = [e, e])
          : ((s =
              (i = (n = e[0]) !== null && n !== void 0 ? n : e[1]) !== null && i !== void 0
                ? i
                : 120),
            (l =
              (o = (a = e[0]) !== null && a !== void 0 ? a : e[1]) !== null && o !== void 0
                ? o
                : 120)));
    return [s, l];
  },
  wS = 3,
  bS = (e) => (wS / e) * 100,
  SS = (e) => {
    const {
        prefixCls: r,
        trailColor: t = null,
        strokeLinecap: n = 'round',
        gapPosition: i,
        gapDegree: a,
        width: o = 120,
        type: s,
        children: l,
        success: u,
        size: c = o,
      } = e,
      [h, f] = Ns(c, 'circle');
    let { strokeWidth: v } = e;
    v === void 0 && (v = Math.max(bS(h), 6));
    const d = { width: h, height: f, fontSize: h * 0.15 + 6 },
      p = L.useMemo(() => {
        if (a || a === 0) return a;
        if (s === 'dashboard') return 75;
      }, [a, s]),
      g = i || (s === 'dashboard' && 'bottom') || void 0,
      y = Object.prototype.toString.call(e.strokeColor) === '[object Object]',
      m = xS({ success: u, strokeColor: e.strokeColor }),
      b = Ot(`${r}-inner`, { [`${r}-circle-gradient`]: y }),
      w = L.createElement(yS, {
        percent: mS(e),
        strokeWidth: v,
        trailWidth: v,
        strokeColor: m,
        strokeLinecap: n,
        trailColor: t,
        prefixCls: r,
        gapDegree: p,
        gapPosition: g,
      });
    return L.createElement(
      'div',
      { className: b, style: d },
      h <= 20
        ? L.createElement(gg, { title: l }, L.createElement('span', null, w))
        : L.createElement(L.Fragment, null, w, l),
    );
  },
  CS = SS;
var MS = function (e, r) {
  var t = {};
  for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && r.indexOf(n) < 0 && (t[n] = e[n]);
  if (e != null && typeof Object.getOwnPropertySymbols == 'function')
    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++)
      r.indexOf(n[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(e, n[i]) &&
        (t[n[i]] = e[n[i]]);
  return t;
};
const AS = (e) => {
    let r = [];
    return (
      Object.keys(e).forEach((t) => {
        const n = parseFloat(t.replace(/%/g, ''));
        isNaN(n) || r.push({ key: n, value: e[t] });
      }),
      (r = r.sort((t, n) => t.key - n.key)),
      r
        .map((t) => {
          let { key: n, value: i } = t;
          return `${i} ${n}%`;
        })
        .join(', ')
    );
  },
  FS = (e, r) => {
    const {
        from: t = Bu.blue,
        to: n = Bu.blue,
        direction: i = r === 'rtl' ? 'to left' : 'to right',
      } = e,
      a = MS(e, ['from', 'to', 'direction']);
    if (Object.keys(a).length !== 0) {
      const o = AS(a);
      return { backgroundImage: `linear-gradient(${i}, ${o})` };
    }
    return { backgroundImage: `linear-gradient(${i}, ${t}, ${n})` };
  },
  ES = (e) => {
    const {
        prefixCls: r,
        direction: t,
        percent: n,
        size: i,
        strokeWidth: a,
        strokeColor: o,
        strokeLinecap: s = 'round',
        children: l,
        trailColor: u = null,
        success: c,
      } = e,
      h = o && typeof o != 'string' ? FS(o, t) : { backgroundColor: o },
      f = s === 'square' || s === 'butt' ? 0 : void 0,
      v = { backgroundColor: u || void 0, borderRadius: f },
      d = i != null ? i : [-1, a || (i === 'small' ? 6 : 8)],
      [p, g] = Ns(d, 'line', { strokeWidth: a }),
      y = Object.assign({ width: `${bn(n)}%`, height: g, borderRadius: f }, h),
      m = as(e),
      b = {
        width: `${bn(m)}%`,
        height: g,
        borderRadius: f,
        backgroundColor: c == null ? void 0 : c.strokeColor,
      },
      w = { width: p < 0 ? '100%' : p, height: g };
    return L.createElement(
      L.Fragment,
      null,
      L.createElement(
        'div',
        { className: `${r}-outer`, style: w },
        L.createElement(
          'div',
          { className: `${r}-inner`, style: v },
          L.createElement('div', { className: `${r}-bg`, style: y }),
          m !== void 0 ? L.createElement('div', { className: `${r}-success-bg`, style: b }) : null,
        ),
      ),
      l,
    );
  },
  TS = ES,
  kS = (e) => {
    const {
        size: r,
        steps: t,
        percent: n = 0,
        strokeWidth: i = 8,
        strokeColor: a,
        trailColor: o = null,
        prefixCls: s,
        children: l,
      } = e,
      u = Math.round(t * (n / 100)),
      c = r === 'small' ? 2 : 14,
      h = r != null ? r : [c, i],
      [f, v] = Ns(h, 'step', { steps: t, strokeWidth: i }),
      d = f / t,
      p = new Array(t);
    for (let g = 0; g < t; g++) {
      const y = Array.isArray(a) ? a[g] : a;
      p[g] = L.createElement('div', {
        key: g,
        className: Ot(`${s}-steps-item`, { [`${s}-steps-item-active`]: g <= u - 1 }),
        style: { backgroundColor: g <= u - 1 ? y : o, width: d, height: v },
      });
    }
    return L.createElement('div', { className: `${s}-steps-outer` }, p, l);
  },
  IS = kS,
  Wf = (e) => {
    const r = e ? '100%' : '-100%';
    return new yg(`antProgress${e ? 'RTL' : 'LTR'}Active`, {
      '0%': { transform: `translateX(${r}) scaleX(0)`, opacity: 0.1 },
      '20%': { transform: `translateX(${r}) scaleX(0)`, opacity: 0.5 },
      to: { transform: 'translateX(0) scaleX(1)', opacity: 0 },
    });
  },
  LS = (e) => {
    const { componentCls: r, iconCls: t } = e;
    return {
      [r]: Object.assign(Object.assign({}, Ps(e)), {
        display: 'inline-block',
        '&-rtl': { direction: 'rtl' },
        '&-line': {
          position: 'relative',
          width: '100%',
          fontSize: e.fontSize,
          marginInlineEnd: e.marginXS,
          marginBottom: e.marginXS,
        },
        [`${r}-outer`]: { display: 'inline-block', width: '100%' },
        [`&${r}-show-info`]: {
          [`${r}-outer`]: {
            marginInlineEnd: `calc(-2em - ${e.marginXS}px)`,
            paddingInlineEnd: `calc(2em + ${e.paddingXS}px)`,
          },
        },
        [`${r}-inner`]: {
          position: 'relative',
          display: 'inline-block',
          width: '100%',
          overflow: 'hidden',
          verticalAlign: 'middle',
          backgroundColor: e.remainingColor,
          borderRadius: e.lineBorderRadius,
        },
        [`${r}-inner:not(${r}-circle-gradient)`]: {
          [`${r}-circle-path`]: { stroke: e.defaultColor },
        },
        [`${r}-success-bg, ${r}-bg`]: {
          position: 'relative',
          backgroundColor: e.defaultColor,
          borderRadius: e.lineBorderRadius,
          transition: `all ${e.motionDurationSlow} ${e.motionEaseInOutCirc}`,
        },
        [`${r}-success-bg`]: {
          position: 'absolute',
          insetBlockStart: 0,
          insetInlineStart: 0,
          backgroundColor: e.colorSuccess,
        },
        [`${r}-text`]: {
          display: 'inline-block',
          width: '2em',
          marginInlineStart: e.marginXS,
          color: e.colorText,
          lineHeight: 1,
          whiteSpace: 'nowrap',
          textAlign: 'start',
          verticalAlign: 'middle',
          wordBreak: 'normal',
          [t]: { fontSize: e.fontSize },
        },
        [`&${r}-status-active`]: {
          [`${r}-bg::before`]: {
            position: 'absolute',
            inset: 0,
            backgroundColor: e.colorBgContainer,
            borderRadius: e.lineBorderRadius,
            opacity: 0,
            animationName: Wf(),
            animationDuration: e.progressActiveMotionDuration,
            animationTimingFunction: e.motionEaseOutQuint,
            animationIterationCount: 'infinite',
            content: '""',
          },
        },
        [`&${r}-rtl${r}-status-active`]: { [`${r}-bg::before`]: { animationName: Wf(!0) } },
        [`&${r}-status-exception`]: {
          [`${r}-bg`]: { backgroundColor: e.colorError },
          [`${r}-text`]: { color: e.colorError },
        },
        [`&${r}-status-exception ${r}-inner:not(${r}-circle-gradient)`]: {
          [`${r}-circle-path`]: { stroke: e.colorError },
        },
        [`&${r}-status-success`]: {
          [`${r}-bg`]: { backgroundColor: e.colorSuccess },
          [`${r}-text`]: { color: e.colorSuccess },
        },
        [`&${r}-status-success ${r}-inner:not(${r}-circle-gradient)`]: {
          [`${r}-circle-path`]: { stroke: e.colorSuccess },
        },
      }),
    };
  },
  PS = (e) => {
    const { componentCls: r, iconCls: t } = e;
    return {
      [r]: {
        [`${r}-circle-trail`]: { stroke: e.remainingColor },
        [`&${r}-circle ${r}-inner`]: {
          position: 'relative',
          lineHeight: 1,
          backgroundColor: 'transparent',
        },
        [`&${r}-circle ${r}-text`]: {
          position: 'absolute',
          insetBlockStart: '50%',
          insetInlineStart: 0,
          width: '100%',
          margin: 0,
          padding: 0,
          color: e.circleTextColor,
          fontSize: e.circleTextFontSize,
          lineHeight: 1,
          whiteSpace: 'normal',
          textAlign: 'center',
          transform: 'translateY(-50%)',
          [t]: { fontSize: `${e.fontSize / e.fontSizeSM}em` },
        },
        [`${r}-circle&-status-exception`]: { [`${r}-text`]: { color: e.colorError } },
        [`${r}-circle&-status-success`]: { [`${r}-text`]: { color: e.colorSuccess } },
      },
      [`${r}-inline-circle`]: { lineHeight: 1, [`${r}-inner`]: { verticalAlign: 'bottom' } },
    };
  },
  OS = (e) => {
    const { componentCls: r } = e;
    return {
      [r]: {
        [`${r}-steps`]: {
          display: 'inline-block',
          '&-outer': { display: 'flex', flexDirection: 'row', alignItems: 'center' },
          '&-item': {
            flexShrink: 0,
            minWidth: e.progressStepMinWidth,
            marginInlineEnd: e.progressStepMarginInlineEnd,
            backgroundColor: e.remainingColor,
            transition: `all ${e.motionDurationSlow}`,
            '&-active': { backgroundColor: e.defaultColor },
          },
        },
      },
    };
  },
  DS = (e) => {
    const { componentCls: r, iconCls: t } = e;
    return {
      [r]: { [`${r}-small&-line, ${r}-small&-line ${r}-text ${t}`]: { fontSize: e.fontSizeSM } },
    };
  },
  BS = Ha(
    'Progress',
    (e) => {
      const r = e.marginXXS / 2,
        t = Ya(e, {
          progressStepMarginInlineEnd: r,
          progressStepMinWidth: r,
          progressActiveMotionDuration: '2.4s',
        });
      return [LS(t), PS(t), OS(t), DS(t)];
    },
    (e) => ({
      circleTextColor: e.colorText,
      defaultColor: e.colorInfo,
      remainingColor: e.colorFillSecondary,
      lineBorderRadius: 100,
      circleTextFontSize: '1em',
    }),
  );
var RS = function (e, r) {
  var t = {};
  for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && r.indexOf(n) < 0 && (t[n] = e[n]);
  if (e != null && typeof Object.getOwnPropertySymbols == 'function')
    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++)
      r.indexOf(n[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(e, n[i]) &&
        (t[n[i]] = e[n[i]]);
  return t;
};
const $S = ['normal', 'exception', 'active', 'success'],
  NS = L.forwardRef((e, r) => {
    const {
        prefixCls: t,
        className: n,
        rootClassName: i,
        steps: a,
        strokeColor: o,
        percent: s = 0,
        size: l = 'default',
        showInfo: u = !0,
        type: c = 'line',
        status: h,
        format: f,
        style: v,
      } = e,
      d = RS(e, [
        'prefixCls',
        'className',
        'rootClassName',
        'steps',
        'strokeColor',
        'percent',
        'size',
        'showInfo',
        'type',
        'status',
        'format',
        'style',
      ]),
      p = L.useMemo(() => {
        var R, B;
        const G = as(e);
        return parseInt(
          G !== void 0
            ? (R = G != null ? G : 0) === null || R === void 0
              ? void 0
              : R.toString()
            : (B = s != null ? s : 0) === null || B === void 0
            ? void 0
            : B.toString(),
          10,
        );
      }, [s, e.success, e.successPercent]),
      g = L.useMemo(() => (!$S.includes(h) && p >= 100 ? 'success' : h || 'normal'), [h, p]),
      { getPrefixCls: y, direction: m, progress: b } = L.useContext(xe),
      w = y('progress', t),
      [S, C] = BS(w),
      F = L.useMemo(() => {
        if (!u) return null;
        const R = as(e);
        let B;
        const G = f || ((D) => `${D}%`),
          j = c === 'line';
        return (
          f || (g !== 'exception' && g !== 'success')
            ? (B = G(bn(s), bn(R)))
            : g === 'exception'
            ? (B = j ? L.createElement(Ow, null) : L.createElement(Dw, null))
            : g === 'success' && (B = j ? L.createElement(Bw, null) : L.createElement(Rw, null)),
          L.createElement(
            'span',
            { className: `${w}-text`, title: typeof B == 'string' ? B : void 0 },
            B,
          )
        );
      }, [u, s, p, g, c, w, f]),
      E = Array.isArray(o) ? o[0] : o,
      I = typeof o == 'string' || Array.isArray(o) ? o : void 0;
    let T;
    c === 'line'
      ? (T = a
          ? L.createElement(IS, Object.assign({}, e, { strokeColor: I, prefixCls: w, steps: a }), F)
          : L.createElement(
              TS,
              Object.assign({}, e, { strokeColor: E, prefixCls: w, direction: m }),
              F,
            ))
      : (c === 'circle' || c === 'dashboard') &&
        (T = L.createElement(
          CS,
          Object.assign({}, e, { strokeColor: E, prefixCls: w, progressStatus: g }),
          F,
        ));
    const P = Ot(
      w,
      `${w}-status-${g}`,
      `${w}-${(c === 'dashboard' && 'circle') || (a && 'steps') || c}`,
      {
        [`${w}-inline-circle`]: c === 'circle' && Ns(l, 'circle')[0] <= 20,
        [`${w}-show-info`]: u,
        [`${w}-${l}`]: typeof l == 'string',
        [`${w}-rtl`]: m === 'rtl',
      },
      b == null ? void 0 : b.className,
      n,
      i,
      C,
    );
    return S(
      L.createElement(
        'div',
        Object.assign(
          {
            ref: r,
            style: Object.assign(Object.assign({}, b == null ? void 0 : b.style), v),
            className: P,
            role: 'progressbar',
            'aria-valuenow': p,
          },
          Wa(d, [
            'trailColor',
            'strokeWidth',
            'width',
            'gapDegree',
            'gapPosition',
            'strokeLinecap',
            'success',
            'successPercent',
          ]),
        ),
        T,
      ),
    );
  }),
  zS = NS,
  GS = (e) => ({
    '.numerical-value': {
      display: 'flex',
      justifyContent: 'space-between',
      alignItems: 'flex-end',
      marginBottom: '10px',
      '.number': { color: e.colorText, fontSize: e.fontSizeHeading4, fontWeight: 600 },
    },
  });
var Fe = function (e) {
    return e !== null && typeof e != 'function' && isFinite(e.length);
  },
  fn = function (e, r) {
    return Fe(e) ? e.indexOf(r) > -1 : !1;
  },
  Jt = function (e, r) {
    if (!Fe(e)) return e;
    for (var t = [], n = 0; n < e.length; n++) {
      var i = e[n];
      r(i, n) && t.push(i);
    }
    return t;
  },
  VS = function (e, r) {
    return (
      r === void 0 && (r = []),
      Jt(e, function (t) {
        return !fn(r, t);
      })
    );
  },
  HS = {}.toString,
  en = function (e, r) {
    return HS.call(e) === '[object ' + r + ']';
  };
const U = function (e) {
  return en(e, 'Function');
};
var $ = function (e) {
  return e == null;
};
const N = function (e) {
    return Array.isArray ? Array.isArray(e) : en(e, 'Array');
  },
  xt = function (e) {
    var r = typeof e;
    return (e !== null && r === 'object') || r === 'function';
  };
function M(e, r) {
  if (e) {
    var t;
    if (N(e)) for (var n = 0, i = e.length; n < i && ((t = r(e[n], n)), t !== !1); n++);
    else if (xt(e)) {
      for (var a in e) if (e.hasOwnProperty(a) && ((t = r(e[a], a)), t === !1)) break;
    }
  }
}
var Ci = Object.keys
  ? function (e) {
      return Object.keys(e);
    }
  : function (e) {
      var r = [];
      return (
        M(e, function (t, n) {
          (U(e) && n === 'prototype') || r.push(n);
        }),
        r
      );
    };
function Eg(e, r) {
  var t = Ci(r),
    n = t.length;
  if ($(e)) return !n;
  for (var i = 0; i < n; i += 1) {
    var a = t[i];
    if (r[a] !== e[a] || !(a in e)) return !1;
  }
  return !0;
}
var $u = function (e) {
    return typeof e == 'object' && e !== null;
  },
  nr = function (e) {
    if (!$u(e) || !en(e, 'Object')) return !1;
    if (Object.getPrototypeOf(e) === null) return !0;
    for (var r = e; Object.getPrototypeOf(r) !== null; ) r = Object.getPrototypeOf(r);
    return Object.getPrototypeOf(e) === r;
  };
function Xe(e, r) {
  if (!N(e)) return null;
  var t;
  if (
    (U(r) && (t = r),
    nr(r) &&
      (t = function (i) {
        return Eg(i, r);
      }),
    t)
  ) {
    for (var n = 0; n < e.length; n += 1) if (t(e[n])) return e[n];
  }
  return null;
}
function Tg(e, r, t) {
  t === void 0 && (t = 0);
  for (var n = t; n < e.length; n++) if (r(e[n], n)) return n;
  return -1;
}
var YS = function (e, r) {
    for (var t = null, n = 0; n < e.length; n++) {
      var i = e[n],
        a = i[r];
      if (!$(a)) {
        N(a) ? (t = a[0]) : (t = a);
        break;
      }
    }
    return t;
  },
  Ee = function (e) {
    if (!N(e)) return [];
    for (var r = [], t = 0; t < e.length; t++) r = r.concat(e[t]);
    return r;
  };
const Te = function (e) {
    if (N(e))
      return e.reduce(function (r, t) {
        return Math.max(r, t);
      }, e[0]);
  },
  $e = function (e) {
    if (N(e))
      return e.reduce(function (r, t) {
        return Math.min(r, t);
      }, e[0]);
  };
var kg = function (e) {
    var r = e.filter(function (o) {
      return !isNaN(o);
    });
    if (!r.length) return { min: 0, max: 0 };
    if (N(e[0])) {
      for (var t = [], n = 0; n < e.length; n++) t = t.concat(e[n]);
      r = t;
    }
    var i = Te(r),
      a = $e(r);
    return { min: a, max: i };
  },
  WS = Array.prototype.splice,
  XS = function (r, t) {
    if (!Fe(r)) return [];
    for (var n = r ? t.length : 0, i = n - 1; n--; ) {
      var a = void 0,
        o = t[n];
      (n === i || o !== a) && ((a = o), WS.call(r, o, 1));
    }
    return r;
  },
  ie = function (e, r, t) {
    if (!N(e) && !nr(e)) return e;
    var n = t;
    return (
      M(e, function (i, a) {
        n = r(n, i, a);
      }),
      n
    );
  },
  _S = function (e, r) {
    var t = [];
    if (!Fe(e)) return t;
    for (var n = -1, i = [], a = e.length; ++n < a; ) {
      var o = e[n];
      r(o, n, e) && (t.push(o), i.push(n));
    }
    return XS(e, i), t;
  };
const et = function (e) {
  return en(e, 'String');
};
function jS(e, r) {
  var t;
  if (U(r))
    t = function (i, a) {
      return r(i) - r(a);
    };
  else {
    var n = [];
    et(r) ? n.push(r) : N(r) && (n = r),
      (t = function (i, a) {
        for (var o = 0; o < n.length; o += 1) {
          var s = n[o];
          if (i[s] > a[s]) return 1;
          if (i[s] < a[s]) return -1;
        }
        return 0;
      });
  }
  return e.sort(t), e;
}
function In(e, r) {
  r === void 0 && (r = new Map());
  var t = [];
  if (Array.isArray(e))
    for (var n = 0, i = e.length; n < i; n++) {
      var a = e[n];
      r.has(a) || (t.push(a), r.set(a, !0));
    }
  return t;
}
const je = function (e, r) {
  for (var t = [], n = {}, i = 0; i < e.length; i++) {
    var a = e[i],
      o = a[r];
    if (!$(o)) {
      N(o) || (o = [o]);
      for (var s = 0; s < o.length; s++) {
        var l = o[s];
        n[l] || (t.push(l), (n[l] = !0));
      }
    }
  }
  return t;
};
function Me(e) {
  if (Fe(e)) return e[0];
}
function Ht(e) {
  if (Fe(e)) {
    var r = e;
    return r[r.length - 1];
  }
}
var Gc = function (e, r) {
    for (var t = 0; t < e.length; t++) if (!r(e[t], t)) return !1;
    return !0;
  },
  zs = function (e, r) {
    for (var t = 0; t < e.length; t++) if (r(e[t], t)) return !0;
    return !1;
  },
  US = Object.prototype.hasOwnProperty;
function Ae(e, r) {
  if (!r || !N(e)) return {};
  for (
    var t = {},
      n = U(r)
        ? r
        : function (s) {
            return s[r];
          },
      i,
      a = 0;
    a < e.length;
    a++
  ) {
    var o = e[a];
    (i = n(o)), US.call(t, i) ? t[i].push(o) : (t[i] = [o]);
  }
  return t;
}
function Ig(e, r) {
  if (!r) return { 0: e };
  if (!U(r)) {
    var t = N(r) ? r : r.replace(/\s+/g, '').split('*');
    r = function (n) {
      for (var i = '_', a = 0, o = t.length; a < o; a++) i += n[t[a]] && n[t[a]].toString();
      return i;
    };
  }
  return Ae(e, r);
}
const qS = function (e, r) {
  if (!r) return [e];
  var t = Ig(e, r),
    n = [];
  for (var i in t) n.push(t[i]);
  return n;
};
var Tt = function (e, r, t) {
    return e < r ? r : e > t ? t : e;
  },
  Wl = function (e, r) {
    var t = r.toString(),
      n = t.indexOf('.');
    if (n === -1) return Math.round(e);
    var i = t.substr(n + 1).length;
    return i > 20 && (i = 20), parseFloat(e.toFixed(i));
  },
  at = function (e) {
    return en(e, 'Number');
  },
  ZS = 1e-5;
function Zt(e, r, t) {
  return t === void 0 && (t = ZS), Math.abs(e - r) < t;
}
const Lg = function (e, r) {
    if (N(e)) {
      for (var t, n = -1 / 0, i = 0; i < e.length; i++) {
        var a = e[i],
          o = U(r) ? r(a) : a[r];
        o > n && ((t = a), (n = o));
      }
      return t;
    }
  },
  KS = function (e, r) {
    if (N(e)) {
      for (var t, n = 1 / 0, i = 0; i < e.length; i++) {
        var a = e[i],
          o = U(r) ? r(a) : a[r];
        o < n && ((t = a), (n = o));
      }
      return t;
    }
  };
var Vc = function (e, r) {
    return ((e % r) + r) % r;
  },
  QS = Math.PI / 180,
  Hc = function (e) {
    return QS * e;
  };
const _r = function (e, r) {
  return e.hasOwnProperty(r);
};
var Gs = Object.values
  ? function (e) {
      return Object.values(e);
    }
  : function (e) {
      var r = [];
      return (
        M(e, function (t, n) {
          (U(e) && n === 'prototype') || r.push(t);
        }),
        r
      );
    };
const Xa = function (e) {
  return $(e) ? '' : e.toString();
};
var Mi = function (e) {
  return Xa(e).toLowerCase();
};
function Pg(e, r) {
  return !e || !r
    ? e
    : e.replace(/\\?\{([^{}]+)\}/g, function (t, n) {
        return t.charAt(0) === '\\' ? t.slice(1) : r[n] === void 0 ? '' : r[n];
      });
}
var Nn = function (e) {
    var r = Xa(e);
    return r.charAt(0).toUpperCase() + r.substring(1);
  },
  JS = {}.toString,
  tC = function (e) {
    return JS.call(e)
      .replace(/^\[object /, '')
      .replace(/]$/, '');
  },
  ui = function (e) {
    return en(e, 'Boolean');
  },
  Og = function (e) {
    return en(e, 'Date');
  },
  eC = function (e) {
    return e === null;
  },
  rC = Object.prototype,
  nC = function (e) {
    var r = e && e.constructor,
      t = (typeof r == 'function' && r.prototype) || rC;
    return e === t;
  },
  pn = function (e) {
    return e === void 0;
  },
  Dg = function (e) {
    return e instanceof Element || e instanceof HTMLDocument;
  };
function iC(e) {
  var r =
    window.requestAnimationFrame ||
    window.webkitRequestAnimationFrame ||
    window.mozRequestAnimationFrame ||
    window.msRequestAnimationFrame ||
    function (t) {
      return setTimeout(t, 16);
    };
  return r(e);
}
function aC(e) {
  var r =
    window.cancelAnimationFrame ||
    window.webkitCancelAnimationFrame ||
    window.mozCancelAnimationFrame ||
    window.msCancelAnimationFrame ||
    clearTimeout;
  r(e);
}
function Xl(e, r) {
  for (var t in r) r.hasOwnProperty(t) && t !== 'constructor' && r[t] !== void 0 && (e[t] = r[t]);
}
function bt(e, r, t, n) {
  return r && Xl(e, r), t && Xl(e, t), n && Xl(e, n), e;
}
var oe = function (e) {
  if (typeof e != 'object' || e === null) return e;
  var r;
  if (N(e)) {
    r = [];
    for (var t = 0, n = e.length; t < n; t++)
      typeof e[t] == 'object' && e[t] != null ? (r[t] = oe(e[t])) : (r[t] = e[t]);
  } else {
    r = {};
    for (var i in e) typeof e[i] == 'object' && e[i] != null ? (r[i] = oe(e[i])) : (r[i] = e[i]);
  }
  return r;
};
function Bg(e, r, t) {
  var n;
  return function () {
    var i = this,
      a = arguments,
      o = function () {
        (n = null), t || e.apply(i, a);
      },
      s = t && !n;
    clearTimeout(n), (n = setTimeout(o, r)), s && e.apply(i, a);
  };
}
const Ai = function (e, r) {
  if (!U(e)) throw new TypeError('Expected a function');
  var t = function () {
    for (var n = [], i = 0; i < arguments.length; i++) n[i] = arguments[i];
    var a = r ? r.apply(this, n) : n[0],
      o = t.cache;
    if (o.has(a)) return o.get(a);
    var s = e.apply(this, n);
    return o.set(a, s), s;
  };
  return (t.cache = new Map()), t;
};
var oC = 5;
function Rg(e, r, t, n) {
  (t = t || 0), (n = n || oC);
  for (var i in r)
    if (r.hasOwnProperty(i)) {
      var a = r[i];
      a !== null && nr(a)
        ? (nr(e[i]) || (e[i] = {}), t < n ? Rg(e[i], a, t + 1, n) : (e[i] = r[i]))
        : N(a)
        ? ((e[i] = []), (e[i] = e[i].concat(a)))
        : a !== void 0 && (e[i] = a);
    }
}
var _ = function (e) {
    for (var r = [], t = 1; t < arguments.length; t++) r[t - 1] = arguments[t];
    for (var n = 0; n < r.length; n += 1) Rg(e, r[n]);
    return e;
  },
  $g = function (e, r) {
    if (!Fe(e)) return -1;
    var t = Array.prototype.indexOf;
    if (t) return t.call(e, r);
    for (var n = -1, i = 0; i < e.length; i++)
      if (e[i] === r) {
        n = i;
        break;
      }
    return n;
  },
  sC = Object.prototype.hasOwnProperty;
function ye(e) {
  if ($(e)) return !0;
  if (Fe(e)) return !e.length;
  var r = tC(e);
  if (r === 'Map' || r === 'Set') return !e.size;
  if (nC(e)) return !Object.keys(e).length;
  for (var t in e) if (sC.call(e, t)) return !1;
  return !0;
}
var Dt = function (e, r) {
    if (e === r) return !0;
    if (!e || !r || et(e) || et(r)) return !1;
    if (Fe(e) || Fe(r)) {
      if (e.length !== r.length) return !1;
      for (var t = !0, n = 0; n < e.length && ((t = Dt(e[n], r[n])), !!t); n++);
      return t;
    }
    if ($u(e) || $u(r)) {
      var i = Object.keys(e),
        a = Object.keys(r);
      if (i.length !== a.length) return !1;
      for (var t = !0, n = 0; n < i.length && ((t = Dt(e[i[n]], r[i[n]])), !!t); n++);
      return t;
    }
    return !1;
  },
  kt = function (e, r) {
    if (!Fe(e)) return e;
    for (var t = [], n = 0; n < e.length; n++) {
      var i = e[n];
      t.push(r(i, n));
    }
    return t;
  },
  lC = function (e) {
    return e;
  };
const uC = function (e, r) {
    r === void 0 && (r = lC);
    var t = {};
    return (
      xt(e) &&
        !$(e) &&
        Object.keys(e).forEach(function (n) {
          t[n] = r(e[n], n);
        }),
      t
    );
  },
  A = function (e, r, t) {
    for (var n = 0, i = et(r) ? r.split('.') : r; e && n < i.length; ) e = e[i[n++]];
    return e === void 0 || n < i.length ? t : e;
  },
  Gt = function (e, r, t) {
    var n = e,
      i = et(r) ? r.split('.') : r;
    return (
      i.forEach(function (a, o) {
        o < i.length - 1 ? (xt(n[a]) || (n[a] = at(i[o + 1]) ? [] : {}), (n = n[a])) : (n[a] = t);
      }),
      e
    );
  };
var cC = Object.prototype.hasOwnProperty;
const Yc = function (e, r) {
    if (e === null || !nr(e)) return {};
    var t = {};
    return (
      M(r, function (n) {
        cC.call(e, n) && (t[n] = e[n]);
      }),
      t
    );
  },
  Vs = function (e, r) {
    return ie(
      e,
      function (t, n, i) {
        return r.includes(i) || (t[i] = n), t;
      },
      {},
    );
  },
  Wc = function (e, r, t) {
    var n,
      i,
      a,
      o,
      s = 0;
    t || (t = {});
    var l = function () {
        (s = t.leading === !1 ? 0 : Date.now()),
          (n = null),
          (o = e.apply(i, a)),
          n || (i = a = null);
      },
      u = function () {
        var c = Date.now();
        !s && t.leading === !1 && (s = c);
        var h = r - (c - s);
        return (
          (i = this),
          (a = arguments),
          h <= 0 || h > r
            ? (n && (clearTimeout(n), (n = null)),
              (s = c),
              (o = e.apply(i, a)),
              n || (i = a = null))
            : !n && t.trailing !== !1 && (n = setTimeout(l, h)),
          o
        );
      };
    return (
      (u.cancel = function () {
        clearTimeout(n), (s = 0), (n = i = a = null);
      }),
      u
    );
  },
  hC = function (e) {
    return Fe(e) ? Array.prototype.slice.call(e) : [];
  };
var uo = {};
const rn = function (e) {
    return (e = e || 'g'), uo[e] ? (uo[e] += 1) : (uo[e] = 1), e + uo[e];
  },
  $r = function () {};
function _t(e) {
  return $(e) ? 0 : Fe(e) ? e.length : Object.keys(e).length;
}
var co;
const ho = Ai(
    function (e, r) {
      r === void 0 && (r = {});
      var t = r.fontSize,
        n = r.fontFamily,
        i = r.fontWeight,
        a = r.fontStyle,
        o = r.fontVariant;
      return (
        co || (co = document.createElement('canvas').getContext('2d')),
        (co.font = [a, o, i, t + 'px', n].join(' ')),
        co.measureText(et(e) ? e : '').width
      );
    },
    function (e, r) {
      return r === void 0 && (r = {}), da([e], Gs(r)).join('');
    },
  ),
  fC = function (e, r, t, n) {
    n === void 0 && (n = '...');
    var i = 16,
      a = ho(n, t),
      o = et(e) ? e : Xa(e),
      s = r,
      l = [],
      u,
      c;
    if (ho(e, t) <= r) return e;
    for (; (u = o.substr(0, i)), (c = ho(u, t)), !(c + a > s && c > s); )
      if ((l.push(u), (s -= c), (o = o.substr(i)), !o)) return l.join('');
    for (; (u = o.substr(0, 1)), (c = ho(u, t)), !(c + a > s); )
      if ((l.push(u), (s -= c), (o = o.substr(1)), !o)) return l.join('');
    return '' + l.join('') + n;
  };
var vC = (function () {
    function e() {
      this.map = {};
    }
    return (
      (e.prototype.has = function (r) {
        return this.map[r] !== void 0;
      }),
      (e.prototype.get = function (r, t) {
        var n = this.map[r];
        return n === void 0 ? t : n;
      }),
      (e.prototype.set = function (r, t) {
        this.map[r] = t;
      }),
      (e.prototype.clear = function () {
        this.map = {};
      }),
      (e.prototype.delete = function (r) {
        delete this.map[r];
      }),
      (e.prototype.size = function () {
        return Object.keys(this.map).length;
      }),
      e
    );
  })(),
  $t;
(function (e) {
  (e.FORE = 'fore'), (e.MID = 'mid'), (e.BG = 'bg');
})($t || ($t = {}));
var H;
(function (e) {
  (e.TOP = 'top'),
    (e.TOP_LEFT = 'top-left'),
    (e.TOP_RIGHT = 'top-right'),
    (e.RIGHT = 'right'),
    (e.RIGHT_TOP = 'right-top'),
    (e.RIGHT_BOTTOM = 'right-bottom'),
    (e.LEFT = 'left'),
    (e.LEFT_TOP = 'left-top'),
    (e.LEFT_BOTTOM = 'left-bottom'),
    (e.BOTTOM = 'bottom'),
    (e.BOTTOM_LEFT = 'bottom-left'),
    (e.BOTTOM_RIGHT = 'bottom-right'),
    (e.RADIUS = 'radius'),
    (e.CIRCLE = 'circle'),
    (e.NONE = 'none');
})(H || (H = {}));
var Xt;
(function (e) {
  (e.AXIS = 'axis'),
    (e.GRID = 'grid'),
    (e.LEGEND = 'legend'),
    (e.TOOLTIP = 'tooltip'),
    (e.ANNOTATION = 'annotation'),
    (e.SLIDER = 'slider'),
    (e.SCROLLBAR = 'scrollbar'),
    (e.OTHER = 'other');
})(Xt || (Xt = {}));
var ri = { FORE: 3, MID: 2, BG: 1 },
  ut;
(function (e) {
  (e.BEFORE_RENDER = 'beforerender'),
    (e.AFTER_RENDER = 'afterrender'),
    (e.BEFORE_PAINT = 'beforepaint'),
    (e.AFTER_PAINT = 'afterpaint'),
    (e.BEFORE_CHANGE_DATA = 'beforechangedata'),
    (e.AFTER_CHANGE_DATA = 'afterchangedata'),
    (e.BEFORE_CLEAR = 'beforeclear'),
    (e.AFTER_CLEAR = 'afterclear'),
    (e.BEFORE_DESTROY = 'beforedestroy'),
    (e.BEFORE_CHANGE_SIZE = 'beforechangesize'),
    (e.AFTER_CHANGE_SIZE = 'afterchangesize');
})(ut || (ut = {}));
var Gr;
(function (e) {
  (e.BEFORE_DRAW_ANIMATE = 'beforeanimate'),
    (e.AFTER_DRAW_ANIMATE = 'afteranimate'),
    (e.BEFORE_RENDER_LABEL = 'beforerenderlabel'),
    (e.AFTER_RENDER_LABEL = 'afterrenderlabel');
})(Gr || (Gr = {}));
var ce;
(function (e) {
  (e.MOUSE_ENTER = 'plot:mouseenter'),
    (e.MOUSE_DOWN = 'plot:mousedown'),
    (e.MOUSE_MOVE = 'plot:mousemove'),
    (e.MOUSE_UP = 'plot:mouseup'),
    (e.MOUSE_LEAVE = 'plot:mouseleave'),
    (e.TOUCH_START = 'plot:touchstart'),
    (e.TOUCH_MOVE = 'plot:touchmove'),
    (e.TOUCH_END = 'plot:touchend'),
    (e.TOUCH_CANCEL = 'plot:touchcancel'),
    (e.CLICK = 'plot:click'),
    (e.DBLCLICK = 'plot:dblclick'),
    (e.CONTEXTMENU = 'plot:contextmenu'),
    (e.LEAVE = 'plot:leave'),
    (e.ENTER = 'plot:enter');
})(ce || (ce = {}));
var os;
(function (e) {
  (e.ACTIVE = 'active'),
    (e.INACTIVE = 'inactive'),
    (e.SELECTED = 'selected'),
    (e.DEFAULT = 'default');
})(os || (os = {}));
var Kn = ['color', 'shape', 'size'],
  Mt = '_origin',
  Xf = 1,
  _f = 1,
  jf = 0.25,
  Ng = {};
function dC(e) {
  var r = Ng[e];
  if (!r) throw new Error("G engine '".concat(e, "' is not exist, please register it at first."));
  return r;
}
function zg(e, r) {
  Ng[e] = r;
}
function Wn(e, r, t) {
  if (e) {
    if (typeof e.addEventListener == 'function')
      return (
        e.addEventListener(r, t, !1),
        {
          remove: function () {
            e.removeEventListener(r, t, !1);
          },
        }
      );
    if (typeof e.attachEvent == 'function')
      return (
        e.attachEvent('on' + r, t),
        {
          remove: function () {
            e.detachEvent('on' + r, t);
          },
        }
      );
  }
}
var Zi, _l, Gg, Nu;
function pC() {
  (Zi = document.createElement('table')),
    (_l = document.createElement('tr')),
    (Gg = /^\s*<(\w+|!)[^>]*>/),
    (Nu = {
      tr: document.createElement('tbody'),
      tbody: Zi,
      thead: Zi,
      tfoot: Zi,
      td: _l,
      th: _l,
      '*': document.createElement('div'),
    });
}
function Vr(e) {
  Zi || pC();
  var r = Gg.test(e) && RegExp.$1;
  (!r || !(r in Nu)) && (r = '*');
  var t = Nu[r];
  (e = typeof e == 'string' ? e.replace(/(^\s*)|(\s*$)/g, '') : e), (t.innerHTML = '' + e);
  var n = t.childNodes[0];
  return n && t.contains(n) && t.removeChild(n), n;
}
function de(e, r, t) {
  var n;
  try {
    n = window.getComputedStyle ? window.getComputedStyle(e, null)[r] : e.style[r];
  } catch (i) {
  } finally {
    n = n === void 0 ? t : n;
  }
  return n;
}
function gC(e, r) {
  var t = de(e, 'height', r);
  return t === 'auto' && (t = e.offsetHeight), parseFloat(t);
}
function yC(e, r) {
  var t = gC(e, r),
    n = parseFloat(de(e, 'borderTopWidth')) || 0,
    i = parseFloat(de(e, 'paddingTop')) || 0,
    a = parseFloat(de(e, 'paddingBottom')) || 0,
    o = parseFloat(de(e, 'borderBottomWidth')) || 0,
    s = parseFloat(de(e, 'marginTop')) || 0,
    l = parseFloat(de(e, 'marginBottom')) || 0;
  return t + n + o + i + a + s + l;
}
function mC(e, r) {
  var t = de(e, 'width', r);
  return t === 'auto' && (t = e.offsetWidth), parseFloat(t);
}
function xC(e, r) {
  var t = mC(e, r),
    n = parseFloat(de(e, 'borderLeftWidth')) || 0,
    i = parseFloat(de(e, 'paddingLeft')) || 0,
    a = parseFloat(de(e, 'paddingRight')) || 0,
    o = parseFloat(de(e, 'borderRightWidth')) || 0,
    s = parseFloat(de(e, 'marginRight')) || 0,
    l = parseFloat(de(e, 'marginLeft')) || 0;
  return t + n + o + i + a + l + s;
}
function ne(e, r) {
  if (e) for (var t in r) r.hasOwnProperty(t) && (e.style[t] = r[t]);
  return e;
}
function wC(e) {
  var r = getComputedStyle(e);
  return {
    width:
      (e.clientWidth || parseInt(r.width, 10)) -
      parseInt(r.paddingLeft, 10) -
      parseInt(r.paddingRight, 10),
    height:
      (e.clientHeight || parseInt(r.height, 10)) -
      parseInt(r.paddingTop, 10) -
      parseInt(r.paddingBottom, 10),
  };
}
function Uf(e) {
  return typeof e == 'number' && !isNaN(e);
}
function qf(e, r, t, n) {
  var i = t,
    a = n;
  if (r) {
    var o = wC(e);
    (i = o.width ? o.width : i), (a = o.height ? o.height : a);
  }
  return { width: Math.max(Uf(i) ? i : Xf, Xf), height: Math.max(Uf(a) ? a : _f, _f) };
}
function bC(e) {
  var r = e.parentNode;
  r && r.removeChild(e);
}
var SC = '*',
  Xc = (function () {
    function e() {
      this._events = {};
    }
    return (
      (e.prototype.on = function (r, t, n) {
        return (
          this._events[r] || (this._events[r] = []),
          this._events[r].push({ callback: t, once: !!n }),
          this
        );
      }),
      (e.prototype.once = function (r, t) {
        return this.on(r, t, !0);
      }),
      (e.prototype.emit = function (r) {
        for (var t = this, n = [], i = 1; i < arguments.length; i++) n[i - 1] = arguments[i];
        var a = this._events[r] || [],
          o = this._events[SC] || [],
          s = function (l) {
            for (var u = l.length, c = 0; c < u; c++)
              if (l[c]) {
                var h = l[c],
                  f = h.callback,
                  v = h.once;
                v && (l.splice(c, 1), l.length === 0 && delete t._events[r], u--, c--),
                  f.apply(t, n);
              }
          };
        s(a), s(o);
      }),
      (e.prototype.off = function (r, t) {
        if (!r) this._events = {};
        else if (!t) delete this._events[r];
        else {
          for (var n = this._events[r] || [], i = n.length, a = 0; a < i; a++)
            n[a].callback === t && (n.splice(a, 1), i--, a--);
          n.length === 0 && delete this._events[r];
        }
        return this;
      }),
      (e.prototype.getEvents = function () {
        return this._events;
      }),
      e
    );
  })(),
  _c = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this) || this;
      n.destroyed = !1;
      var i = t.visible,
        a = i === void 0 ? !0 : i;
      return (n.visible = a), n;
    }
    return (
      (r.prototype.show = function () {
        var t = this.visible;
        t || this.changeVisible(!0);
      }),
      (r.prototype.hide = function () {
        var t = this.visible;
        t && this.changeVisible(!1);
      }),
      (r.prototype.destroy = function () {
        this.off(), (this.destroyed = !0);
      }),
      (r.prototype.changeVisible = function (t) {
        this.visible !== t && (this.visible = t);
      }),
      r
    );
  })(Xc),
  ia = `	
\v\f\r   ᠎             　\u2028\u2029`,
  CC = new RegExp(
    '([a-z])[' + ia + ',]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[' + ia + ']*,?[' + ia + ']*)+)',
    'ig',
  ),
  MC = new RegExp('(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[' + ia + ']*,?[' + ia + ']*', 'ig'),
  Qn = function (e) {
    if (!e) return null;
    if (N(e)) return e;
    var r = { a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0 },
      t = [];
    return (
      String(e).replace(CC, function (n, i, a) {
        var o = [],
          s = i.toLowerCase();
        if (
          (a.replace(MC, function (l, u) {
            u && o.push(+u);
          }),
          s === 'm' &&
            o.length > 2 &&
            (t.push([i].concat(o.splice(0, 2))), (s = 'l'), (i = i === 'm' ? 'l' : 'L')),
          s === 'o' && o.length === 1 && t.push([i, o[0]]),
          s === 'r')
        )
          t.push([i].concat(o));
        else for (; o.length >= r[s] && (t.push([i].concat(o.splice(0, r[s]))), !!r[s]); );
        return e;
      }),
      t
    );
  },
  zu = function (e, r) {
    for (var t = [], n = 0, i = e.length; i - 2 * !r > n; n += 2) {
      var a = [
        { x: +e[n - 2], y: +e[n - 1] },
        { x: +e[n], y: +e[n + 1] },
        { x: +e[n + 2], y: +e[n + 3] },
        { x: +e[n + 4], y: +e[n + 5] },
      ];
      r
        ? n
          ? i - 4 === n
            ? (a[3] = { x: +e[0], y: +e[1] })
            : i - 2 === n && ((a[2] = { x: +e[0], y: +e[1] }), (a[3] = { x: +e[2], y: +e[3] }))
          : (a[0] = { x: +e[i - 2], y: +e[i - 1] })
        : i - 4 === n
        ? (a[3] = a[2])
        : n || (a[0] = { x: +e[n], y: +e[n + 1] }),
        t.push([
          'C',
          (-a[0].x + 6 * a[1].x + a[2].x) / 6,
          (-a[0].y + 6 * a[1].y + a[2].y) / 6,
          (a[1].x + 6 * a[2].x - a[3].x) / 6,
          (a[1].y + 6 * a[2].y - a[3].y) / 6,
          a[2].x,
          a[2].y,
        ]);
    }
    return t;
  },
  fo = function (e, r, t, n, i) {
    var a = [];
    if ((i === null && n === null && (n = t), (e = +e), (r = +r), (t = +t), (n = +n), i !== null)) {
      var o = Math.PI / 180,
        s = e + t * Math.cos(-n * o),
        l = e + t * Math.cos(-i * o),
        u = r + t * Math.sin(-n * o),
        c = r + t * Math.sin(-i * o);
      a = [
        ['M', s, u],
        ['A', t, t, 0, +(i - n > 180), 0, l, c],
      ];
    } else
      a = [
        ['M', e, r],
        ['m', 0, -n],
        ['a', t, n, 0, 1, 1, 0, 2 * n],
        ['a', t, n, 0, 1, 1, 0, -2 * n],
        ['z'],
      ];
    return a;
  },
  Gu = function (e) {
    if (((e = Qn(e)), !e || !e.length)) return [['M', 0, 0]];
    var r = [],
      t = 0,
      n = 0,
      i = 0,
      a = 0,
      o = 0,
      s,
      l;
    e[0][0] === 'M' &&
      ((t = +e[0][1]), (n = +e[0][2]), (i = t), (a = n), o++, (r[0] = ['M', t, n]));
    for (
      var u =
          e.length === 3 &&
          e[0][0] === 'M' &&
          e[1][0].toUpperCase() === 'R' &&
          e[2][0].toUpperCase() === 'Z',
        c = void 0,
        h = void 0,
        f = o,
        v = e.length;
      f < v;
      f++
    ) {
      if ((r.push((c = [])), (h = e[f]), (s = h[0]), s !== s.toUpperCase()))
        switch (((c[0] = s.toUpperCase()), c[0])) {
          case 'A':
            (c[1] = h[1]),
              (c[2] = h[2]),
              (c[3] = h[3]),
              (c[4] = h[4]),
              (c[5] = h[5]),
              (c[6] = +h[6] + t),
              (c[7] = +h[7] + n);
            break;
          case 'V':
            c[1] = +h[1] + n;
            break;
          case 'H':
            c[1] = +h[1] + t;
            break;
          case 'R':
            l = [t, n].concat(h.slice(1));
            for (var d = 2, p = l.length; d < p; d++) (l[d] = +l[d] + t), (l[++d] = +l[d] + n);
            r.pop(), (r = r.concat(zu(l, u)));
            break;
          case 'O':
            r.pop(), (l = fo(t, n, h[1], h[2])), l.push(l[0]), (r = r.concat(l));
            break;
          case 'U':
            r.pop(),
              (r = r.concat(fo(t, n, h[1], h[2], h[3]))),
              (c = ['U'].concat(r[r.length - 1].slice(-2)));
            break;
          case 'M':
            (i = +h[1] + t), (a = +h[2] + n);
            break;
          default:
            for (var d = 1, p = h.length; d < p; d++) c[d] = +h[d] + (d % 2 ? t : n);
        }
      else if (s === 'R')
        (l = [t, n].concat(h.slice(1))),
          r.pop(),
          (r = r.concat(zu(l, u))),
          (c = ['R'].concat(h.slice(-2)));
      else if (s === 'O') r.pop(), (l = fo(t, n, h[1], h[2])), l.push(l[0]), (r = r.concat(l));
      else if (s === 'U')
        r.pop(),
          (r = r.concat(fo(t, n, h[1], h[2], h[3]))),
          (c = ['U'].concat(r[r.length - 1].slice(-2)));
      else for (var g = 0, y = h.length; g < y; g++) c[g] = h[g];
      if (((s = s.toUpperCase()), s !== 'O'))
        switch (c[0]) {
          case 'Z':
            (t = +i), (n = +a);
            break;
          case 'H':
            t = c[1];
            break;
          case 'V':
            n = c[1];
            break;
          case 'M':
            (i = c[c.length - 2]), (a = c[c.length - 1]);
            break;
          default:
            (t = c[c.length - 2]), (n = c[c.length - 1]);
        }
    }
    return r;
  },
  vo = function (e, r, t, n) {
    return [e, r, t, n, t, n];
  },
  Zf = function (e, r, t, n, i, a) {
    var o = 0.3333333333333333,
      s = 2 / 3;
    return [o * e + s * t, o * r + s * n, o * i + s * t, o * a + s * n, i, a];
  },
  Vg = function (e, r, t, n, i, a, o, s, l, u) {
    t === n && (t += 1);
    var c = (Math.PI * 120) / 180,
      h = (Math.PI / 180) * (+i || 0),
      f = [],
      v,
      d,
      p,
      g,
      y,
      m = function (st, ft, Et) {
        var Yt = st * Math.cos(Et) - ft * Math.sin(Et),
          Se = st * Math.sin(Et) + ft * Math.cos(Et);
        return { x: Yt, y: Se };
      };
    if (u) (d = u[0]), (p = u[1]), (g = u[2]), (y = u[3]);
    else {
      (v = m(e, r, -h)),
        (e = v.x),
        (r = v.y),
        (v = m(s, l, -h)),
        (s = v.x),
        (l = v.y),
        e === s && r === l && ((s += 1), (l += 1));
      var b = (e - s) / 2,
        w = (r - l) / 2,
        S = (b * b) / (t * t) + (w * w) / (n * n);
      S > 1 && ((S = Math.sqrt(S)), (t = S * t), (n = S * n));
      var C = t * t,
        F = n * n,
        E =
          (a === o ? -1 : 1) *
          Math.sqrt(Math.abs((C * F - C * w * w - F * b * b) / (C * w * w + F * b * b)));
      (g = (E * t * w) / n + (e + s) / 2),
        (y = (E * -n * b) / t + (r + l) / 2),
        (d = Math.asin(((r - y) / n).toFixed(9))),
        (p = Math.asin(((l - y) / n).toFixed(9))),
        (d = e < g ? Math.PI - d : d),
        (p = s < g ? Math.PI - p : p),
        d < 0 && (d = Math.PI * 2 + d),
        p < 0 && (p = Math.PI * 2 + p),
        o && d > p && (d = d - Math.PI * 2),
        !o && p > d && (p = p - Math.PI * 2);
    }
    var I = p - d;
    if (Math.abs(I) > c) {
      var T = p,
        P = s,
        R = l;
      (p = d + c * (o && p > d ? 1 : -1)),
        (s = g + t * Math.cos(p)),
        (l = y + n * Math.sin(p)),
        (f = Vg(s, l, t, n, i, 0, o, P, R, [p, T, g, y]));
    }
    I = p - d;
    var B = Math.cos(d),
      G = Math.sin(d),
      j = Math.cos(p),
      D = Math.sin(p),
      z = Math.tan(I / 4),
      X = (4 / 3) * t * z,
      Y = (4 / 3) * n * z,
      V = [e, r],
      W = [e + X * G, r - Y * B],
      tt = [s + X * D, l - Y * j],
      rt = [s, l];
    if (((W[0] = 2 * V[0] - W[0]), (W[1] = 2 * V[1] - W[1]), u)) return [W, tt, rt].concat(f);
    f = [W, tt, rt].concat(f).join().split(',');
    for (var Z = [], K = 0, nt = f.length; K < nt; K++)
      Z[K] = K % 2 ? m(f[K - 1], f[K], h).y : m(f[K], f[K + 1], h).x;
    return Z;
  },
  Vu = function (e, r) {
    var t = Gu(e),
      n = r && Gu(r),
      i = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },
      a = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },
      o = [],
      s = [],
      l = '',
      u = '',
      c,
      h = function (b, w, S) {
        var C, F;
        if (!b) return ['C', w.x, w.y, w.x, w.y, w.x, w.y];
        switch ((!(b[0] in { T: 1, Q: 1 }) && (w.qx = w.qy = null), b[0])) {
          case 'M':
            (w.X = b[1]), (w.Y = b[2]);
            break;
          case 'A':
            b = ['C'].concat(Vg.apply(0, [w.x, w.y].concat(b.slice(1))));
            break;
          case 'S':
            S === 'C' || S === 'S'
              ? ((C = w.x * 2 - w.bx), (F = w.y * 2 - w.by))
              : ((C = w.x), (F = w.y)),
              (b = ['C', C, F].concat(b.slice(1)));
            break;
          case 'T':
            S === 'Q' || S === 'T'
              ? ((w.qx = w.x * 2 - w.qx), (w.qy = w.y * 2 - w.qy))
              : ((w.qx = w.x), (w.qy = w.y)),
              (b = ['C'].concat(Zf(w.x, w.y, w.qx, w.qy, b[1], b[2])));
            break;
          case 'Q':
            (w.qx = b[1]), (w.qy = b[2]), (b = ['C'].concat(Zf(w.x, w.y, b[1], b[2], b[3], b[4])));
            break;
          case 'L':
            b = ['C'].concat(vo(w.x, w.y, b[1], b[2]));
            break;
          case 'H':
            b = ['C'].concat(vo(w.x, w.y, b[1], w.y));
            break;
          case 'V':
            b = ['C'].concat(vo(w.x, w.y, w.x, b[1]));
            break;
          case 'Z':
            b = ['C'].concat(vo(w.x, w.y, w.X, w.Y));
            break;
        }
        return b;
      },
      f = function (b, w) {
        if (b[w].length > 7) {
          b[w].shift();
          for (var S = b[w]; S.length; )
            (o[w] = 'A'), n && (s[w] = 'A'), b.splice(w++, 0, ['C'].concat(S.splice(0, 6)));
          b.splice(w, 1), (c = Math.max(t.length, (n && n.length) || 0));
        }
      },
      v = function (b, w, S, C, F) {
        b &&
          w &&
          b[F][0] === 'M' &&
          w[F][0] !== 'M' &&
          (w.splice(F, 0, ['M', C.x, C.y]),
          (S.bx = 0),
          (S.by = 0),
          (S.x = b[F][1]),
          (S.y = b[F][2]),
          (c = Math.max(t.length, (n && n.length) || 0)));
      };
    c = Math.max(t.length, (n && n.length) || 0);
    for (var d = 0; d < c; d++) {
      t[d] && (l = t[d][0]),
        l !== 'C' && ((o[d] = l), d && (u = o[d - 1])),
        (t[d] = h(t[d], i, u)),
        o[d] !== 'A' && l === 'C' && (o[d] = 'C'),
        f(t, d),
        n &&
          (n[d] && (l = n[d][0]),
          l !== 'C' && ((s[d] = l), d && (u = s[d - 1])),
          (n[d] = h(n[d], a, u)),
          s[d] !== 'A' && l === 'C' && (s[d] = 'C'),
          f(n, d)),
        v(t, n, i, a, d),
        v(n, t, a, i, d);
      var p = t[d],
        g = n && n[d],
        y = p.length,
        m = n && g.length;
      (i.x = p[y - 2]),
        (i.y = p[y - 1]),
        (i.bx = parseFloat(p[y - 4]) || i.x),
        (i.by = parseFloat(p[y - 3]) || i.y),
        (a.bx = n && (parseFloat(g[m - 4]) || a.x)),
        (a.by = n && (parseFloat(g[m - 3]) || a.y)),
        (a.x = n && g[m - 2]),
        (a.y = n && g[m - 1]);
    }
    return n ? [t, n] : t;
  },
  AC = /,?([a-z]),?/gi,
  Hg = function (e) {
    return e.join(',').replace(AC, '$1');
  },
  Kf = function (e, r, t, n, i) {
    var a = -3 * r + 9 * t - 9 * n + 3 * i,
      o = e * a + 6 * r - 12 * t + 6 * n;
    return e * o - 3 * r + 3 * t;
  },
  Qf = function (e, r, t, n, i, a, o, s, l) {
    l === null && (l = 1), (l = l > 1 ? 1 : l < 0 ? 0 : l);
    for (
      var u = l / 2,
        c = 12,
        h = [
          -0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041,
          -0.9816, 0.9816,
        ],
        f = [
          0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472,
          0.0472,
        ],
        v = 0,
        d = 0;
      d < c;
      d++
    ) {
      var p = u * h[d] + u,
        g = Kf(p, e, t, i, o),
        y = Kf(p, r, n, a, s),
        m = g * g + y * y;
      v += f[d] * Math.sqrt(m);
    }
    return u * v;
  },
  FC = function (e, r, t, n, i, a, o, s) {
    for (var l = [], u = [[], []], c, h, f, v, d = 0; d < 2; ++d) {
      if (
        (d === 0
          ? ((h = 6 * e - 12 * t + 6 * i),
            (c = -3 * e + 9 * t - 9 * i + 3 * o),
            (f = 3 * t - 3 * e))
          : ((h = 6 * r - 12 * n + 6 * a),
            (c = -3 * r + 9 * n - 9 * a + 3 * s),
            (f = 3 * n - 3 * r)),
        Math.abs(c) < 1e-12)
      ) {
        if (Math.abs(h) < 1e-12) continue;
        (v = -f / h), v > 0 && v < 1 && l.push(v);
        continue;
      }
      var p = h * h - 4 * f * c,
        g = Math.sqrt(p);
      if (!(p < 0)) {
        var y = (-h + g) / (2 * c);
        y > 0 && y < 1 && l.push(y);
        var m = (-h - g) / (2 * c);
        m > 0 && m < 1 && l.push(m);
      }
    }
    for (var b = l.length, w = b, S; b--; )
      (v = l[b]),
        (S = 1 - v),
        (u[0][b] = S * S * S * e + 3 * S * S * v * t + 3 * S * v * v * i + v * v * v * o),
        (u[1][b] = S * S * S * r + 3 * S * S * v * n + 3 * S * v * v * a + v * v * v * s);
    return (
      (u[0][w] = e),
      (u[1][w] = r),
      (u[0][w + 1] = o),
      (u[1][w + 1] = s),
      (u[0].length = u[1].length = w + 2),
      {
        min: { x: Math.min.apply(0, u[0]), y: Math.min.apply(0, u[1]) },
        max: { x: Math.max.apply(0, u[0]), y: Math.max.apply(0, u[1]) },
      }
    );
  },
  EC = function (e, r, t, n, i, a, o, s) {
    if (
      !(
        Math.max(e, t) < Math.min(i, o) ||
        Math.min(e, t) > Math.max(i, o) ||
        Math.max(r, n) < Math.min(a, s) ||
        Math.min(r, n) > Math.max(a, s)
      )
    ) {
      var l = (e * n - r * t) * (i - o) - (e - t) * (i * s - a * o),
        u = (e * n - r * t) * (a - s) - (r - n) * (i * s - a * o),
        c = (e - t) * (a - s) - (r - n) * (i - o);
      if (c) {
        var h = l / c,
          f = u / c,
          v = +h.toFixed(2),
          d = +f.toFixed(2);
        if (
          !(
            v < +Math.min(e, t).toFixed(2) ||
            v > +Math.max(e, t).toFixed(2) ||
            v < +Math.min(i, o).toFixed(2) ||
            v > +Math.max(i, o).toFixed(2) ||
            d < +Math.min(r, n).toFixed(2) ||
            d > +Math.max(r, n).toFixed(2) ||
            d < +Math.min(a, s).toFixed(2) ||
            d > +Math.max(a, s).toFixed(2)
          )
        )
          return { x: h, y: f };
      }
    }
  },
  Tr = function (e, r, t) {
    return r >= e.x && r <= e.x + e.width && t >= e.y && t <= e.y + e.height;
  },
  Yg = function (e, r, t, n, i) {
    if (i)
      return [
        ['M', +e + +i, r],
        ['l', t - i * 2, 0],
        ['a', i, i, 0, 0, 1, i, i],
        ['l', 0, n - i * 2],
        ['a', i, i, 0, 0, 1, -i, i],
        ['l', i * 2 - t, 0],
        ['a', i, i, 0, 0, 1, -i, -i],
        ['l', 0, i * 2 - n],
        ['a', i, i, 0, 0, 1, i, -i],
        ['z'],
      ];
    var a = [['M', e, r], ['l', t, 0], ['l', 0, n], ['l', -t, 0], ['z']];
    return (a.parsePathArray = Hg), a;
  },
  Hu = function (e, r, t, n) {
    return (
      e === null && (e = r = t = n = 0),
      r === null && ((r = e.y), (t = e.width), (n = e.height), (e = e.x)),
      {
        x: e,
        y: r,
        width: t,
        w: t,
        height: n,
        h: n,
        x2: e + t,
        y2: r + n,
        cx: e + t / 2,
        cy: r + n / 2,
        r1: Math.min(t, n) / 2,
        r2: Math.max(t, n) / 2,
        r0: Math.sqrt(t * t + n * n) / 2,
        path: Yg(e, r, t, n),
        vb: [e, r, t, n].join(' '),
      }
    );
  },
  TC = function (e, r) {
    return (
      (e = Hu(e)),
      (r = Hu(r)),
      Tr(r, e.x, e.y) ||
        Tr(r, e.x2, e.y) ||
        Tr(r, e.x, e.y2) ||
        Tr(r, e.x2, e.y2) ||
        Tr(e, r.x, r.y) ||
        Tr(e, r.x2, r.y) ||
        Tr(e, r.x, r.y2) ||
        Tr(e, r.x2, r.y2) ||
        (((e.x < r.x2 && e.x > r.x) || (r.x < e.x2 && r.x > e.x)) &&
          ((e.y < r.y2 && e.y > r.y) || (r.y < e.y2 && r.y > e.y)))
    );
  },
  Jf = function (e, r, t, n, i, a, o, s) {
    N(e) || (e = [e, r, t, n, i, a, o, s]);
    var l = FC.apply(null, e);
    return Hu(l.min.x, l.min.y, l.max.x - l.min.x, l.max.y - l.min.y);
  },
  tv = function (e, r, t, n, i, a, o, s, l) {
    var u = 1 - l,
      c = Math.pow(u, 3),
      h = Math.pow(u, 2),
      f = l * l,
      v = f * l,
      d = c * e + h * 3 * l * t + u * 3 * l * l * i + v * o,
      p = c * r + h * 3 * l * n + u * 3 * l * l * a + v * s,
      g = e + 2 * l * (t - e) + f * (i - 2 * t + e),
      y = r + 2 * l * (n - r) + f * (a - 2 * n + r),
      m = t + 2 * l * (i - t) + f * (o - 2 * i + t),
      b = n + 2 * l * (a - n) + f * (s - 2 * a + n),
      w = u * e + l * t,
      S = u * r + l * n,
      C = u * i + l * o,
      F = u * a + l * s,
      E = 90 - (Math.atan2(g - m, y - b) * 180) / Math.PI;
    return {
      x: d,
      y: p,
      m: { x: g, y },
      n: { x: m, y: b },
      start: { x: w, y: S },
      end: { x: C, y: F },
      alpha: E,
    };
  },
  kC = function (e, r, t) {
    var n = Jf(e),
      i = Jf(r);
    if (!TC(n, i)) return t ? 0 : [];
    for (
      var a = Qf.apply(0, e),
        o = Qf.apply(0, r),
        s = ~~(a / 8),
        l = ~~(o / 8),
        u = [],
        c = [],
        h = {},
        f = t ? 0 : [],
        v = 0;
      v < s + 1;
      v++
    ) {
      var d = tv.apply(0, e.concat(v / s));
      u.push({ x: d.x, y: d.y, t: v / s });
    }
    for (var v = 0; v < l + 1; v++) {
      var d = tv.apply(0, r.concat(v / l));
      c.push({ x: d.x, y: d.y, t: v / l });
    }
    for (var v = 0; v < s; v++)
      for (var p = 0; p < l; p++) {
        var g = u[v],
          y = u[v + 1],
          m = c[p],
          b = c[p + 1],
          w = Math.abs(y.x - g.x) < 0.001 ? 'y' : 'x',
          S = Math.abs(b.x - m.x) < 0.001 ? 'y' : 'x',
          C = EC(g.x, g.y, y.x, y.y, m.x, m.y, b.x, b.y);
        if (C) {
          if (h[C.x.toFixed(4)] === C.y.toFixed(4)) continue;
          h[C.x.toFixed(4)] = C.y.toFixed(4);
          var F = g.t + Math.abs((C[w] - g[w]) / (y[w] - g[w])) * (y.t - g.t),
            E = m.t + Math.abs((C[S] - m[S]) / (b[S] - m[S])) * (b.t - m.t);
          F >= 0 &&
            F <= 1 &&
            E >= 0 &&
            E <= 1 &&
            (t ? (f += 1) : f.push({ x: C.x, y: C.y, t1: F, t2: E }));
        }
      }
    return f;
  },
  IC = function (e, r, t) {
    (e = Vu(e)), (r = Vu(r));
    for (var n, i, a, o, s, l, u, c, h, f, v = t ? 0 : [], d = 0, p = e.length; d < p; d++) {
      var g = e[d];
      if (g[0] === 'M') (n = s = g[1]), (i = l = g[2]);
      else {
        g[0] === 'C'
          ? ((h = [n, i].concat(g.slice(1))), (n = h[6]), (i = h[7]))
          : ((h = [n, i, n, i, s, l, s, l]), (n = s), (i = l));
        for (var y = 0, m = r.length; y < m; y++) {
          var b = r[y];
          if (b[0] === 'M') (a = u = b[1]), (o = c = b[2]);
          else {
            b[0] === 'C'
              ? ((f = [a, o].concat(b.slice(1))), (a = f[6]), (o = f[7]))
              : ((f = [a, o, a, o, u, c, u, c]), (a = u), (o = c));
            var w = kC(h, f, t);
            if (t) v += w;
            else {
              for (var S = 0, C = w.length; S < C; S++)
                (w[S].segment1 = d), (w[S].segment2 = y), (w[S].bez1 = h), (w[S].bez2 = f);
              v = v.concat(w);
            }
          }
        }
      }
    }
    return v;
  },
  LC = function (e, r) {
    return IC(e, r);
  };
function PC(e, r) {
  var t = [],
    n = [];
  function i(a, o) {
    if (a.length === 1) t.push(a[0]), n.push(a[0]);
    else {
      for (var s = [], l = 0; l < a.length - 1; l++)
        l === 0 && t.push(a[0]),
          l === a.length - 2 && n.push(a[l + 1]),
          (s[l] = [(1 - o) * a[l][0] + o * a[l + 1][0], (1 - o) * a[l][1] + o * a[l + 1][1]]);
      i(s, o);
    }
  }
  return e.length && i(e, r), { left: t, right: n.reverse() };
}
function OC(e, r, t) {
  var n = [[e[1], e[2]]];
  t = t || 2;
  var i = [];
  r[0] === 'A'
    ? (n.push(r[6]), n.push(r[7]))
    : r[0] === 'C'
    ? (n.push([r[1], r[2]]), n.push([r[3], r[4]]), n.push([r[5], r[6]]))
    : r[0] === 'S' || r[0] === 'Q'
    ? (n.push([r[1], r[2]]), n.push([r[3], r[4]]))
    : n.push([r[1], r[2]]);
  for (var a = n, o = 1 / t, s = 0; s < t - 1; s++) {
    var l = o / (1 - o * s),
      u = PC(a, l);
    i.push(u.left), (a = u.right);
  }
  i.push(a);
  var c = i.map(function (h) {
    var f = [];
    return (
      h.length === 4 && (f.push('C'), (f = f.concat(h[2]))),
      h.length >= 3 && (h.length === 3 && f.push('Q'), (f = f.concat(h[1]))),
      h.length === 2 && f.push('L'),
      (f = f.concat(h[h.length - 1])),
      f
    );
  });
  return c;
}
var DC = function (e, r, t) {
    if (t === 1) return [[].concat(e)];
    var n = [];
    if (r[0] === 'L' || r[0] === 'C' || r[0] === 'Q') n = n.concat(OC(e, r, t));
    else {
      var i = [].concat(e);
      i[0] === 'M' && (i[0] = 'L');
      for (var a = 0; a <= t - 1; a++) n.push(i);
    }
    return n;
  },
  BC = function (e, r) {
    if (e.length === 1) return e;
    var t = e.length - 1,
      n = r.length - 1,
      i = t / n,
      a = [];
    if (e.length === 1 && e[0][0] === 'M') {
      for (var o = 0; o < n - t; o++) e.push(e[0]);
      return e;
    }
    for (var o = 0; o < n; o++) {
      var s = Math.floor(i * o);
      a[s] = (a[s] || 0) + 1;
    }
    var l = a.reduce(function (u, c, h) {
      return h === t ? u.concat(e[t]) : u.concat(DC(e[h], e[h + 1], c));
    }, []);
    return l.unshift(e[0]), (r[n] === 'Z' || r[n] === 'z') && l.push('Z'), l;
  },
  RC = function (e, r) {
    if (e.length !== r.length) return !1;
    var t = !0;
    return (
      M(e, function (n, i) {
        if (n !== r[i]) return (t = !1), !1;
      }),
      t
    );
  };
function $C(e, r, t) {
  var n = null,
    i = t;
  return r < i && ((i = r), (n = 'add')), e < i && ((i = e), (n = 'del')), { type: n, min: i };
}
var NC = function (e, r) {
    var t = e.length,
      n = r.length,
      i,
      a,
      o = 0;
    if (t === 0 || n === 0) return null;
    for (var s = [], l = 0; l <= t; l++) (s[l] = []), (s[l][0] = { min: l });
    for (var u = 0; u <= n; u++) s[0][u] = { min: u };
    for (var l = 1; l <= t; l++) {
      i = e[l - 1];
      for (var u = 1; u <= n; u++) {
        (a = r[u - 1]), RC(i, a) ? (o = 0) : (o = 1);
        var c = s[l - 1][u].min + 1,
          h = s[l][u - 1].min + 1,
          f = s[l - 1][u - 1].min + o;
        s[l][u] = $C(c, h, f);
      }
    }
    return s;
  },
  Wg = function (e, r) {
    var t = NC(e, r),
      n = e.length,
      i = r.length,
      a = [],
      o = 1,
      s = 1;
    if (t[n][i].min !== n) {
      for (var l = 1; l <= n; l++) {
        var u = t[l][l].min;
        s = l;
        for (var c = o; c <= i; c++) t[l][c].min < u && ((u = t[l][c].min), (s = c));
        (o = s), t[l][o].type && a.push({ index: l - 1, type: t[l][o].type });
      }
      for (var l = a.length - 1; l >= 0; l--)
        (o = a[l].index), a[l].type === 'add' ? e.splice(o, 0, [].concat(e[o])) : e.splice(o, 1);
    }
    n = e.length;
    var h = i - n;
    if (n < i)
      for (var l = 0; l < h; l++)
        e[n - 1][0] === 'z' || e[n - 1][0] === 'Z'
          ? e.splice(n - 2, 0, e[n - 2])
          : e.push(e[n - 1]),
          (n += 1);
    return e;
  };
function jl(e, r, t) {
  for (var n = [].concat(e), i, a = 1 / (t + 1), o = Xg(r)[0], s = 1; s <= t; s++)
    (a *= s),
      (i = Math.floor(e.length * a)),
      i === 0
        ? n.unshift([o[0] * a + e[i][0] * (1 - a), o[1] * a + e[i][1] * (1 - a)])
        : n.splice(i, 0, [o[0] * a + e[i][0] * (1 - a), o[1] * a + e[i][1] * (1 - a)]);
  return n;
}
function Xg(e) {
  var r = [];
  switch (e[0]) {
    case 'M':
      r.push([e[1], e[2]]);
      break;
    case 'L':
      r.push([e[1], e[2]]);
      break;
    case 'A':
      r.push([e[6], e[7]]);
      break;
    case 'Q':
      r.push([e[3], e[4]]), r.push([e[1], e[2]]);
      break;
    case 'T':
      r.push([e[1], e[2]]);
      break;
    case 'C':
      r.push([e[5], e[6]]), r.push([e[1], e[2]]), r.push([e[3], e[4]]);
      break;
    case 'S':
      r.push([e[3], e[4]]), r.push([e[1], e[2]]);
      break;
    case 'H':
      r.push([e[1], e[1]]);
      break;
    case 'V':
      r.push([e[1], e[1]]);
      break;
  }
  return r;
}
var Yu = function (e, r) {
  if (e.length <= 1) return e;
  for (var t, n = 0; n < r.length; n++)
    if (e[n][0] !== r[n][0])
      switch (((t = Xg(e[n])), r[n][0])) {
        case 'M':
          e[n] = ['M'].concat(t[0]);
          break;
        case 'L':
          e[n] = ['L'].concat(t[0]);
          break;
        case 'A':
          (e[n] = [].concat(r[n])), (e[n][6] = t[0][0]), (e[n][7] = t[0][1]);
          break;
        case 'Q':
          if (t.length < 2)
            if (n > 0) t = jl(t, e[n - 1], 1);
            else {
              e[n] = r[n];
              break;
            }
          e[n] = ['Q'].concat(
            t.reduce(function (i, a) {
              return i.concat(a);
            }, []),
          );
          break;
        case 'T':
          e[n] = ['T'].concat(t[0]);
          break;
        case 'C':
          if (t.length < 3)
            if (n > 0) t = jl(t, e[n - 1], 2);
            else {
              e[n] = r[n];
              break;
            }
          e[n] = ['C'].concat(
            t.reduce(function (i, a) {
              return i.concat(a);
            }, []),
          );
          break;
        case 'S':
          if (t.length < 2)
            if (n > 0) t = jl(t, e[n - 1], 1);
            else {
              e[n] = r[n];
              break;
            }
          e[n] = ['S'].concat(
            t.reduce(function (i, a) {
              return i.concat(a);
            }, []),
          );
          break;
        default:
          e[n] = r[n];
      }
  return e;
};
const jc = Object.freeze(
  Object.defineProperty(
    {
      __proto__: null,
      catmullRomToBezier: zu,
      fillPath: BC,
      fillPathByDiff: Wg,
      formatPath: Yu,
      intersection: LC,
      parsePathArray: Hg,
      parsePathString: Qn,
      pathToAbsolute: Gu,
      pathToCurve: Vu,
      rectPath: Yg,
    },
    Symbol.toStringTag,
    { value: 'Module' },
  ),
);
var _a = (function () {
  function e(r, t) {
    (this.bubbles = !0),
      (this.target = null),
      (this.currentTarget = null),
      (this.delegateTarget = null),
      (this.delegateObject = null),
      (this.defaultPrevented = !1),
      (this.propagationStopped = !1),
      (this.shape = null),
      (this.fromShape = null),
      (this.toShape = null),
      (this.propagationPath = []),
      (this.type = r),
      (this.name = r),
      (this.originalEvent = t),
      (this.timeStamp = t.timeStamp);
  }
  return (
    (e.prototype.preventDefault = function () {
      (this.defaultPrevented = !0),
        this.originalEvent.preventDefault && this.originalEvent.preventDefault();
    }),
    (e.prototype.stopPropagation = function () {
      this.propagationStopped = !0;
    }),
    (e.prototype.toString = function () {
      var r = this.type;
      return '[Event (type=' + r + ')]';
    }),
    (e.prototype.save = function () {}),
    (e.prototype.restore = function () {}),
    e
  );
})();
function _g(e, r) {
  var t = e.indexOf(r);
  t !== -1 && e.splice(t, 1);
}
var ev = typeof window != 'undefined' && typeof window.document != 'undefined';
function jg(e, r) {
  if (e.isCanvas()) return !0;
  for (var t = r.getParent(), n = !1; t; ) {
    if (t === e) {
      n = !0;
      break;
    }
    t = t.getParent();
  }
  return n;
}
function ya(e) {
  return e.cfg.visible && e.cfg.capture;
}
var Hs = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this) || this;
      n.destroyed = !1;
      var i = n.getDefaultCfg();
      return (n.cfg = bt(i, t)), n;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        return {};
      }),
      (r.prototype.get = function (t) {
        return this.cfg[t];
      }),
      (r.prototype.set = function (t, n) {
        this.cfg[t] = n;
      }),
      (r.prototype.destroy = function () {
        (this.cfg = { destroyed: !0 }), this.off(), (this.destroyed = !0);
      }),
      r
    );
  })(Xc),
  rv = function (e, r, t) {
    if (t || arguments.length === 2)
      for (var n = 0, i = r.length, a; n < i; n++)
        (a || !(n in r)) && (a || (a = Array.prototype.slice.call(r, 0, n)), (a[n] = r[n]));
    return e.concat(a || Array.prototype.slice.call(r));
  },
  zC = (function () {
    function e(r, t, n) {
      (this.name = r), (this.version = t), (this.os = n), (this.type = 'browser');
    }
    return e;
  })(),
  GC = (function () {
    function e(r) {
      (this.version = r), (this.type = 'node'), (this.name = 'node'), (this.os = process.platform);
    }
    return e;
  })(),
  VC = (function () {
    function e(r, t, n, i) {
      (this.name = r),
        (this.version = t),
        (this.os = n),
        (this.bot = i),
        (this.type = 'bot-device');
    }
    return e;
  })(),
  HC = (function () {
    function e() {
      (this.type = 'bot'),
        (this.bot = !0),
        (this.name = 'bot'),
        (this.version = null),
        (this.os = null);
    }
    return e;
  })(),
  YC = (function () {
    function e() {
      (this.type = 'react-native'),
        (this.name = 'react-native'),
        (this.version = null),
        (this.os = null);
    }
    return e;
  })(),
  WC =
    /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/,
  XC = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/,
  nv = 3,
  _C = [
    ['aol', /AOLShield\/([0-9\._]+)/],
    ['edge', /Edge\/([0-9\._]+)/],
    ['edge-ios', /EdgiOS\/([0-9\._]+)/],
    ['yandexbrowser', /YaBrowser\/([0-9\._]+)/],
    ['kakaotalk', /KAKAOTALK\s([0-9\.]+)/],
    ['samsung', /SamsungBrowser\/([0-9\.]+)/],
    ['silk', /\bSilk\/([0-9._-]+)\b/],
    ['miui', /MiuiBrowser\/([0-9\.]+)$/],
    ['beaker', /BeakerBrowser\/([0-9\.]+)/],
    ['edge-chromium', /EdgA?\/([0-9\.]+)/],
    ['chromium-webview', /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
    ['phantomjs', /PhantomJS\/([0-9\.]+)(:?\s|$)/],
    ['crios', /CriOS\/([0-9\.]+)(:?\s|$)/],
    ['firefox', /Firefox\/([0-9\.]+)(?:\s|$)/],
    ['fxios', /FxiOS\/([0-9\.]+)/],
    ['opera-mini', /Opera Mini.*Version\/([0-9\.]+)/],
    ['opera', /Opera\/([0-9\.]+)(?:\s|$)/],
    ['opera', /OPR\/([0-9\.]+)(:?\s|$)/],
    ['pie', /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
    [
      'pie',
      /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/,
    ],
    ['netfront', /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
    ['ie', /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
    ['ie', /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
    ['ie', /MSIE\s(7\.0)/],
    ['bb10', /BB10;\sTouch.*Version\/([0-9\.]+)/],
    ['android', /Android\s([0-9\.]+)/],
    ['ios', /Version\/([0-9\._]+).*Mobile.*Safari.*/],
    ['safari', /Version\/([0-9\._]+).*Safari/],
    ['facebook', /FB[AS]V\/([0-9\.]+)/],
    ['instagram', /Instagram\s([0-9\.]+)/],
    ['ios-webview', /AppleWebKit\/([0-9\.]+).*Mobile/],
    ['ios-webview', /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
    ['curl', /^curl\/([0-9\.]+)$/],
    ['searchbot', WC],
  ],
  iv = [
    ['iOS', /iP(hone|od|ad)/],
    ['Android OS', /Android/],
    ['BlackBerry OS', /BlackBerry|BB10/],
    ['Windows Mobile', /IEMobile/],
    ['Amazon OS', /Kindle/],
    ['Windows 3.11', /Win16/],
    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],
    ['Windows 98', /(Windows 98)|(Win98)/],
    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],
    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],
    ['Windows Server 2003', /(Windows NT 5.2)/],
    ['Windows Vista', /(Windows NT 6.0)/],
    ['Windows 7', /(Windows NT 6.1)/],
    ['Windows 8', /(Windows NT 6.2)/],
    ['Windows 8.1', /(Windows NT 6.3)/],
    ['Windows 10', /(Windows NT 10.0)/],
    ['Windows ME', /Windows ME/],
    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
    ['Open BSD', /OpenBSD/],
    ['Sun OS', /SunOS/],
    ['Chrome OS', /CrOS/],
    ['Linux', /(Linux)|(X11)/],
    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],
    ['QNX', /QNX/],
    ['BeOS', /BeOS/],
    ['OS/2', /OS\/2/],
  ];
function Ug(e) {
  return e
    ? av(e)
    : typeof document == 'undefined' &&
      typeof navigator != 'undefined' &&
      navigator.product === 'ReactNative'
    ? new YC()
    : typeof navigator != 'undefined'
    ? av(navigator.userAgent)
    : qC();
}
function jC(e) {
  return (
    e !== '' &&
    _C.reduce(function (r, t) {
      var n = t[0],
        i = t[1];
      if (r) return r;
      var a = i.exec(e);
      return !!a && [n, a];
    }, !1)
  );
}
function av(e) {
  var r = jC(e);
  if (!r) return null;
  var t = r[0],
    n = r[1];
  if (t === 'searchbot') return new HC();
  var i = n[1] && n[1].split('.').join('_').split('_').slice(0, 3);
  i ? i.length < nv && (i = rv(rv([], i, !0), ZC(nv - i.length), !0)) : (i = []);
  var a = i.join('.'),
    o = UC(e),
    s = XC.exec(e);
  return s && s[1] ? new VC(t, a, o, s[1]) : new zC(t, a, o);
}
function UC(e) {
  for (var r = 0, t = iv.length; r < t; r++) {
    var n = iv[r],
      i = n[0],
      a = n[1],
      o = a.exec(e);
    if (o) return i;
  }
  return null;
}
function qC() {
  var e = typeof process != 'undefined' && process.version;
  return e ? new GC(process.version.slice(1)) : null;
}
function ZC(e) {
  for (var r = [], t = 0; t < e; t++) r.push('0');
  return r;
}
var ss = typeof Float32Array != 'undefined' ? Float32Array : Array;
Math.hypot ||
  (Math.hypot = function () {
    for (var e = 0, r = arguments.length; r--; ) e += arguments[r] * arguments[r];
    return Math.sqrt(e);
  });
function KC(e, r) {
  var t = r[0],
    n = r[1],
    i = r[2],
    a = r[3],
    o = r[4],
    s = r[5],
    l = r[6],
    u = r[7],
    c = r[8],
    h = c * o - s * u,
    f = -c * a + s * l,
    v = u * a - o * l,
    d = t * h + n * f + i * v;
  return d
    ? ((d = 1 / d),
      (e[0] = h * d),
      (e[1] = (-c * n + i * u) * d),
      (e[2] = (s * n - i * o) * d),
      (e[3] = f * d),
      (e[4] = (c * t - i * l) * d),
      (e[5] = (-s * t + i * a) * d),
      (e[6] = v * d),
      (e[7] = (-u * t + n * l) * d),
      (e[8] = (o * t - n * a) * d),
      e)
    : null;
}
function Ys(e, r, t) {
  var n = r[0],
    i = r[1],
    a = r[2],
    o = r[3],
    s = r[4],
    l = r[5],
    u = r[6],
    c = r[7],
    h = r[8],
    f = t[0],
    v = t[1],
    d = t[2],
    p = t[3],
    g = t[4],
    y = t[5],
    m = t[6],
    b = t[7],
    w = t[8];
  return (
    (e[0] = f * n + v * o + d * u),
    (e[1] = f * i + v * s + d * c),
    (e[2] = f * a + v * l + d * h),
    (e[3] = p * n + g * o + y * u),
    (e[4] = p * i + g * s + y * c),
    (e[5] = p * a + g * l + y * h),
    (e[6] = m * n + b * o + w * u),
    (e[7] = m * i + b * s + w * c),
    (e[8] = m * a + b * l + w * h),
    e
  );
}
function QC(e, r) {
  return (
    (e[0] = 1),
    (e[1] = 0),
    (e[2] = 0),
    (e[3] = 0),
    (e[4] = 1),
    (e[5] = 0),
    (e[6] = r[0]),
    (e[7] = r[1]),
    (e[8] = 1),
    e
  );
}
function JC(e, r) {
  var t = Math.sin(r),
    n = Math.cos(r);
  return (
    (e[0] = n),
    (e[1] = t),
    (e[2] = 0),
    (e[3] = -t),
    (e[4] = n),
    (e[5] = 0),
    (e[6] = 0),
    (e[7] = 0),
    (e[8] = 1),
    e
  );
}
function tM(e, r) {
  return (
    (e[0] = r[0]),
    (e[1] = 0),
    (e[2] = 0),
    (e[3] = 0),
    (e[4] = r[1]),
    (e[5] = 0),
    (e[6] = 0),
    (e[7] = 0),
    (e[8] = 1),
    e
  );
}
function eM() {
  var e = new ss(3);
  return ss != Float32Array && ((e[0] = 0), (e[1] = 0), (e[2] = 0)), e;
}
function ma(e, r, t) {
  var n = r[0],
    i = r[1],
    a = r[2];
  return (
    (e[0] = n * t[0] + i * t[3] + a * t[6]),
    (e[1] = n * t[1] + i * t[4] + a * t[7]),
    (e[2] = n * t[2] + i * t[5] + a * t[8]),
    e
  );
}
(function () {
  var e = eM();
  return function (r, t, n, i, a, o) {
    var s, l;
    for (
      t || (t = 3), n || (n = 0), i ? (l = Math.min(i * t + n, r.length)) : (l = r.length), s = n;
      s < l;
      s += t
    )
      (e[0] = r[s]),
        (e[1] = r[s + 1]),
        (e[2] = r[s + 2]),
        a(e, e, o),
        (r[s] = e[0]),
        (r[s + 1] = e[1]),
        (r[s + 2] = e[2]);
    return r;
  };
})();
function rM() {
  var e = new ss(2);
  return ss != Float32Array && ((e[0] = 0), (e[1] = 0)), e;
}
function er(e, r, t) {
  return (e[0] = r[0] + t[0]), (e[1] = r[1] + t[1]), e;
}
function qg(e, r, t) {
  return (e[0] = r[0] - t[0]), (e[1] = r[1] - t[1]), e;
}
function Ut(e, r, t) {
  return (e[0] = Math.min(r[0], t[0])), (e[1] = Math.min(r[1], t[1])), e;
}
function qt(e, r, t) {
  return (e[0] = Math.max(r[0], t[0])), (e[1] = Math.max(r[1], t[1])), e;
}
function se(e, r, t) {
  return (e[0] = r[0] * t), (e[1] = r[1] * t), e;
}
function ci(e, r) {
  var t = r[0] - e[0],
    n = r[1] - e[1];
  return Math.hypot(t, n);
}
function Jn(e) {
  var r = e[0],
    t = e[1];
  return Math.hypot(r, t);
}
function Zg(e, r) {
  var t = r[0],
    n = r[1],
    i = t * t + n * n;
  return i > 0 && (i = 1 / Math.sqrt(i)), (e[0] = r[0] * i), (e[1] = r[1] * i), e;
}
function nM(e, r) {
  return e[0] * r[0] + e[1] * r[1];
}
function iM(e, r, t) {
  var n = r[0],
    i = r[1];
  return (e[0] = t[0] * n + t[3] * i + t[6]), (e[1] = t[1] * n + t[4] * i + t[7]), e;
}
function Wu(e, r) {
  var t = e[0],
    n = e[1],
    i = r[0],
    a = r[1],
    o = Math.sqrt(t * t + n * n) * Math.sqrt(i * i + a * a),
    s = o && (t * i + n * a) / o;
  return Math.acos(Math.min(Math.max(s, -1), 1));
}
function aM(e, r) {
  return e[0] === r[0] && e[1] === r[1];
}
var Sn = qg;
(function () {
  var e = rM();
  return function (r, t, n, i, a, o) {
    var s, l;
    for (
      t || (t = 2), n || (n = 0), i ? (l = Math.min(i * t + n, r.length)) : (l = r.length), s = n;
      s < l;
      s += t
    )
      (e[0] = r[s]), (e[1] = r[s + 1]), a(e, e, o), (r[s] = e[0]), (r[s + 1] = e[1]);
    return r;
  };
})();
function Un(e, r, t) {
  var n = [0, 0, 0, 0, 0, 0, 0, 0, 0];
  return QC(n, t), Ys(e, n, r);
}
function Uc(e, r, t) {
  var n = [0, 0, 0, 0, 0, 0, 0, 0, 0];
  return JC(n, t), Ys(e, n, r);
}
function Kg(e, r, t) {
  var n = [0, 0, 0, 0, 0, 0, 0, 0, 0];
  return tM(n, t), Ys(e, n, r);
}
function oM(e, r, t) {
  return Ys(e, t, r);
}
function Vt(e, r) {
  for (var t = e ? [].concat(e) : [1, 0, 0, 0, 1, 0, 0, 0, 1], n = 0, i = r.length; n < i; n++) {
    var a = r[n];
    switch (a[0]) {
      case 't':
        Un(t, t, [a[1], a[2]]);
        break;
      case 's':
        Kg(t, t, [a[1], a[2]]);
        break;
      case 'r':
        Uc(t, t, a[1]);
        break;
      case 'm':
        oM(t, t, a[1]);
        break;
    }
  }
  return t;
}
function sM(e, r) {
  return e[0] * r[1] - r[0] * e[1];
}
function qc(e, r, t) {
  var n = Wu(e, r),
    i = sM(e, r) >= 0;
  return t ? (i ? Math.PI * 2 - n : n) : i ? n : Math.PI * 2 - n;
}
function ov(e, r) {
  var t = [],
    n = e[0],
    i = e[1],
    a = e[2],
    o = e[3],
    s = e[4],
    l = e[5],
    u = e[6],
    c = e[7],
    h = e[8],
    f = r[0],
    v = r[1],
    d = r[2],
    p = r[3],
    g = r[4],
    y = r[5],
    m = r[6],
    b = r[7],
    w = r[8];
  return (
    (t[0] = f * n + v * o + d * u),
    (t[1] = f * i + v * s + d * c),
    (t[2] = f * a + v * l + d * h),
    (t[3] = p * n + g * o + y * u),
    (t[4] = p * i + g * s + y * c),
    (t[5] = p * a + g * l + y * h),
    (t[6] = m * n + b * o + w * u),
    (t[7] = m * i + b * s + w * c),
    (t[8] = m * a + b * l + w * h),
    t
  );
}
function gr(e, r) {
  var t = [],
    n = r[0],
    i = r[1];
  return (t[0] = e[0] * n + e[3] * i + e[6]), (t[1] = e[1] * n + e[4] * i + e[7]), t;
}
function Ws(e) {
  var r = [],
    t = e[0],
    n = e[1],
    i = e[2],
    a = e[3],
    o = e[4],
    s = e[5],
    l = e[6],
    u = e[7],
    c = e[8],
    h = c * o - s * u,
    f = -c * a + s * l,
    v = u * a - o * l,
    d = t * h + n * f + i * v;
  return d
    ? ((d = 1 / d),
      (r[0] = h * d),
      (r[1] = (-c * n + i * u) * d),
      (r[2] = (s * n - i * o) * d),
      (r[3] = f * d),
      (r[4] = (c * t - i * l) * d),
      (r[5] = (-s * t + i * a) * d),
      (r[6] = v * d),
      (r[7] = (-u * t + n * l) * d),
      (r[8] = (o * t - n * a) * d),
      r)
    : null;
}
var Ni = Vt,
  Ul = 'matrix',
  lM = ['zIndex', 'capture', 'visible', 'type'],
  uM = ['repeat'],
  cM = ':',
  hM = '*';
function fM(e) {
  for (var r = [], t = 0; t < e.length; t++) N(e[t]) ? r.push([].concat(e[t])) : r.push(e[t]);
  return r;
}
function vM(e, r) {
  var t = {},
    n = r.attrs;
  for (var i in e) t[i] = n[i];
  return t;
}
function dM(e, r) {
  var t = {},
    n = r.attr();
  return (
    M(e, function (i, a) {
      uM.indexOf(a) === -1 && !Dt(n[a], i) && (t[a] = i);
    }),
    t
  );
}
function pM(e, r) {
  if (r.onFrame) return e;
  var t = r.startTime,
    n = r.delay,
    i = r.duration,
    a = Object.prototype.hasOwnProperty;
  return (
    M(e, function (o) {
      t + n < o.startTime + o.delay + o.duration &&
        i > o.delay &&
        M(r.toAttrs, function (s, l) {
          a.call(o.toAttrs, l) && (delete o.toAttrs[l], delete o.fromAttrs[l]);
        });
    }),
    e
  );
}
var Qg = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      n.attrs = {};
      var i = n.getDefaultAttrs();
      return bt(i, t.attrs), (n.attrs = i), n.initAttrs(i), n.initAnimate(), n;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        return { visible: !0, capture: !0, zIndex: 0 };
      }),
      (r.prototype.getDefaultAttrs = function () {
        return { matrix: this.getDefaultMatrix(), opacity: 1 };
      }),
      (r.prototype.onCanvasChange = function (t) {}),
      (r.prototype.initAttrs = function (t) {}),
      (r.prototype.initAnimate = function () {
        this.set('animable', !0), this.set('animating', !1);
      }),
      (r.prototype.isGroup = function () {
        return !1;
      }),
      (r.prototype.getParent = function () {
        return this.get('parent');
      }),
      (r.prototype.getCanvas = function () {
        return this.get('canvas');
      }),
      (r.prototype.attr = function () {
        for (var t, n = [], i = 0; i < arguments.length; i++) n[i] = arguments[i];
        var a = n[0],
          o = n[1];
        if (!a) return this.attrs;
        if (xt(a)) {
          for (var s in a) this.setAttr(s, a[s]);
          return this.afterAttrsChange(a), this;
        }
        return n.length === 2
          ? (this.setAttr(a, o), this.afterAttrsChange(((t = {}), (t[a] = o), t)), this)
          : this.attrs[a];
      }),
      (r.prototype.isClipped = function (t, n) {
        var i = this.getClip();
        return i && !i.isHit(t, n);
      }),
      (r.prototype.setAttr = function (t, n) {
        var i = this.attrs[t];
        i !== n && ((this.attrs[t] = n), this.onAttrChange(t, n, i));
      }),
      (r.prototype.onAttrChange = function (t, n, i) {
        t === 'matrix' && this.set('totalMatrix', null);
      }),
      (r.prototype.afterAttrsChange = function (t) {
        if (this.cfg.isClipShape) {
          var n = this.cfg.applyTo;
          n && n.onCanvasChange('clip');
        } else this.onCanvasChange('attr');
      }),
      (r.prototype.show = function () {
        return this.set('visible', !0), this.onCanvasChange('show'), this;
      }),
      (r.prototype.hide = function () {
        return this.set('visible', !1), this.onCanvasChange('hide'), this;
      }),
      (r.prototype.setZIndex = function (t) {
        this.set('zIndex', t);
        var n = this.getParent();
        return n && n.sort(), this;
      }),
      (r.prototype.toFront = function () {
        var t = this.getParent();
        if (t) {
          var n = t.getChildren();
          this.get('el');
          var i = n.indexOf(this);
          n.splice(i, 1), n.push(this), this.onCanvasChange('zIndex');
        }
      }),
      (r.prototype.toBack = function () {
        var t = this.getParent();
        if (t) {
          var n = t.getChildren();
          this.get('el');
          var i = n.indexOf(this);
          n.splice(i, 1), n.unshift(this), this.onCanvasChange('zIndex');
        }
      }),
      (r.prototype.remove = function (t) {
        t === void 0 && (t = !0);
        var n = this.getParent();
        n
          ? (_g(n.getChildren(), this), n.get('clearing') || this.onCanvasChange('remove'))
          : this.onCanvasChange('remove'),
          t && this.destroy();
      }),
      (r.prototype.resetMatrix = function () {
        this.attr(Ul, this.getDefaultMatrix()), this.onCanvasChange('matrix');
      }),
      (r.prototype.getMatrix = function () {
        return this.attr(Ul);
      }),
      (r.prototype.setMatrix = function (t) {
        this.attr(Ul, t), this.onCanvasChange('matrix');
      }),
      (r.prototype.getTotalMatrix = function () {
        var t = this.cfg.totalMatrix;
        if (!t) {
          var n = this.attr('matrix'),
            i = this.cfg.parentMatrix;
          i && n ? (t = ov(i, n)) : (t = n || i), this.set('totalMatrix', t);
        }
        return t;
      }),
      (r.prototype.applyMatrix = function (t) {
        var n = this.attr('matrix'),
          i = null;
        t && n ? (i = ov(t, n)) : (i = n || t),
          this.set('totalMatrix', i),
          this.set('parentMatrix', t);
      }),
      (r.prototype.getDefaultMatrix = function () {
        return null;
      }),
      (r.prototype.applyToMatrix = function (t) {
        var n = this.attr('matrix');
        return n ? gr(n, t) : t;
      }),
      (r.prototype.invertFromMatrix = function (t) {
        var n = this.attr('matrix');
        if (n) {
          var i = Ws(n);
          if (i) return gr(i, t);
        }
        return t;
      }),
      (r.prototype.setClip = function (t) {
        var n = this.getCanvas(),
          i = null;
        if (t) {
          var a = this.getShapeBase(),
            o = Nn(t.type),
            s = a[o];
          s &&
            (i = new s({
              type: t.type,
              isClipShape: !0,
              applyTo: this,
              attrs: t.attrs,
              canvas: n,
            }));
        }
        return this.set('clipShape', i), this.onCanvasChange('clip'), i;
      }),
      (r.prototype.getClip = function () {
        var t = this.cfg.clipShape;
        return t || null;
      }),
      (r.prototype.clone = function () {
        var t = this,
          n = this.attrs,
          i = {};
        M(n, function (s, l) {
          N(n[l]) ? (i[l] = fM(n[l])) : (i[l] = n[l]);
        });
        var a = this.constructor,
          o = new a({ attrs: i });
        return (
          M(lM, function (s) {
            o.set(s, t.get(s));
          }),
          o
        );
      }),
      (r.prototype.destroy = function () {
        var t = this.destroyed;
        t || ((this.attrs = {}), e.prototype.destroy.call(this));
      }),
      (r.prototype.isAnimatePaused = function () {
        return this.get('_pause').isPaused;
      }),
      (r.prototype.animate = function () {
        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
        if (!(!this.get('timeline') && !this.get('canvas'))) {
          this.set('animating', !0);
          var i = this.get('timeline');
          i || ((i = this.get('canvas').get('timeline')), this.set('timeline', i));
          var a = this.get('animations') || [];
          i.timer || i.initTimer();
          var o = t[0],
            s = t[1],
            l = t[2],
            u = l === void 0 ? 'easeLinear' : l,
            c = t[3],
            h = c === void 0 ? $r : c,
            f = t[4],
            v = f === void 0 ? 0 : f,
            d,
            p,
            g,
            y,
            m;
          U(o) ? ((d = o), (o = {})) : xt(o) && o.onFrame && ((d = o.onFrame), (p = o.repeat)),
            xt(s)
              ? ((m = s),
                (s = m.duration),
                (u = m.easing || 'easeLinear'),
                (v = m.delay || 0),
                (p = m.repeat || p || !1),
                (h = m.callback || $r),
                (g = m.pauseCallback || $r),
                (y = m.resumeCallback || $r))
              : (at(h) && ((v = h), (h = null)),
                U(u) ? ((h = u), (u = 'easeLinear')) : (u = u || 'easeLinear'));
          var b = dM(o, this),
            w = {
              fromAttrs: vM(b, this),
              toAttrs: b,
              duration: s,
              easing: u,
              repeat: p,
              callback: h,
              pauseCallback: g,
              resumeCallback: y,
              delay: v,
              startTime: i.getTime(),
              id: rn(),
              onFrame: d,
              pathFormatted: !1,
            };
          a.length > 0 ? (a = pM(a, w)) : i.addAnimator(this),
            a.push(w),
            this.set('animations', a),
            this.set('_pause', { isPaused: !1 });
        }
      }),
      (r.prototype.stopAnimate = function (t) {
        var n = this;
        t === void 0 && (t = !0);
        var i = this.get('animations');
        M(i, function (a) {
          t && (a.onFrame ? n.attr(a.onFrame(1)) : n.attr(a.toAttrs)), a.callback && a.callback();
        }),
          this.set('animating', !1),
          this.set('animations', []);
      }),
      (r.prototype.pauseAnimate = function () {
        var t = this.get('timeline'),
          n = this.get('animations'),
          i = t.getTime();
        return (
          M(n, function (a) {
            (a._paused = !0), (a._pauseTime = i), a.pauseCallback && a.pauseCallback();
          }),
          this.set('_pause', { isPaused: !0, pauseTime: i }),
          this
        );
      }),
      (r.prototype.resumeAnimate = function () {
        var t = this.get('timeline'),
          n = t.getTime(),
          i = this.get('animations'),
          a = this.get('_pause').pauseTime;
        return (
          M(i, function (o) {
            (o.startTime = o.startTime + (n - a)),
              (o._paused = !1),
              (o._pauseTime = null),
              o.resumeCallback && o.resumeCallback();
          }),
          this.set('_pause', { isPaused: !1 }),
          this.set('animations', i),
          this
        );
      }),
      (r.prototype.emitDelegation = function (t, n) {
        var i = this,
          a = n.propagationPath;
        this.getEvents();
        var o;
        t === 'mouseenter' ? (o = n.fromShape) : t === 'mouseleave' && (o = n.toShape);
        for (
          var s = function (h) {
              var f = a[h],
                v = f.get('name');
              if (v) {
                if ((f.isGroup() || (f.isCanvas && f.isCanvas())) && o && jg(f, o)) return 'break';
                N(v)
                  ? M(v, function (d) {
                      i.emitDelegateEvent(f, d, n);
                    })
                  : l.emitDelegateEvent(f, v, n);
              }
            },
            l = this,
            u = 0;
          u < a.length;
          u++
        ) {
          var c = s(u);
          if (c === 'break') break;
        }
      }),
      (r.prototype.emitDelegateEvent = function (t, n, i) {
        var a = this.getEvents(),
          o = n + cM + i.type;
        (a[o] || a[hM]) &&
          ((i.name = o),
          (i.currentTarget = t),
          (i.delegateTarget = this),
          (i.delegateObject = t.get('delegateObject')),
          this.emit(o, i));
      }),
      (r.prototype.translate = function (t, n) {
        t === void 0 && (t = 0), n === void 0 && (n = 0);
        var i = this.getMatrix(),
          a = Ni(i, [['t', t, n]]);
        return this.setMatrix(a), this;
      }),
      (r.prototype.move = function (t, n) {
        var i = this.attr('x') || 0,
          a = this.attr('y') || 0;
        return this.translate(t - i, n - a), this;
      }),
      (r.prototype.moveTo = function (t, n) {
        return this.move(t, n);
      }),
      (r.prototype.scale = function (t, n) {
        var i = this.getMatrix(),
          a = Ni(i, [['s', t, n || t]]);
        return this.setMatrix(a), this;
      }),
      (r.prototype.rotate = function (t) {
        var n = this.getMatrix(),
          i = Ni(n, [['r', t]]);
        return this.setMatrix(i), this;
      }),
      (r.prototype.rotateAtStart = function (t) {
        var n = this.attr(),
          i = n.x,
          a = n.y,
          o = this.getMatrix(),
          s = Ni(o, [
            ['t', -i, -a],
            ['r', t],
            ['t', i, a],
          ]);
        return this.setMatrix(s), this;
      }),
      (r.prototype.rotateAtPoint = function (t, n, i) {
        var a = this.getMatrix(),
          o = Ni(a, [
            ['t', -t, -n],
            ['r', i],
            ['t', t, n],
          ]);
        return this.setMatrix(o), this;
      }),
      r
    );
  })(Hs),
  sv = {},
  Xu = '_INDEX';
function Jg(e, r) {
  if ((e.set('canvas', r), e.isGroup())) {
    var t = e.get('children');
    t.length &&
      t.forEach(function (n) {
        Jg(n, r);
      });
  }
}
function ty(e, r) {
  if ((e.set('timeline', r), e.isGroup())) {
    var t = e.get('children');
    t.length &&
      t.forEach(function (n) {
        ty(n, r);
      });
  }
}
function gM(e, r, t) {
  t === void 0 && (t = !0),
    t ? r.destroy() : (r.set('parent', null), r.set('canvas', null)),
    _g(e.getChildren(), r);
}
function yM(e) {
  return function (r, t) {
    var n = e(r, t);
    return n === 0 ? r[Xu] - t[Xu] : n;
  };
}
var ey = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.isCanvas = function () {
        return !1;
      }),
      (r.prototype.getBBox = function () {
        var t = 1 / 0,
          n = -1 / 0,
          i = 1 / 0,
          a = -1 / 0,
          o = this.getChildren().filter(function (l) {
            return (
              l.get('visible') && (!l.isGroup() || (l.isGroup() && l.getChildren().length > 0))
            );
          });
        o.length > 0
          ? M(o, function (l) {
              var u = l.getBBox(),
                c = u.minX,
                h = u.maxX,
                f = u.minY,
                v = u.maxY;
              c < t && (t = c), h > n && (n = h), f < i && (i = f), v > a && (a = v);
            })
          : ((t = 0), (n = 0), (i = 0), (a = 0));
        var s = { x: t, y: i, minX: t, minY: i, maxX: n, maxY: a, width: n - t, height: a - i };
        return s;
      }),
      (r.prototype.getCanvasBBox = function () {
        var t = 1 / 0,
          n = -1 / 0,
          i = 1 / 0,
          a = -1 / 0,
          o = this.getChildren().filter(function (l) {
            return (
              l.get('visible') && (!l.isGroup() || (l.isGroup() && l.getChildren().length > 0))
            );
          });
        o.length > 0
          ? M(o, function (l) {
              var u = l.getCanvasBBox(),
                c = u.minX,
                h = u.maxX,
                f = u.minY,
                v = u.maxY;
              c < t && (t = c), h > n && (n = h), f < i && (i = f), v > a && (a = v);
            })
          : ((t = 0), (n = 0), (i = 0), (a = 0));
        var s = { x: t, y: i, minX: t, minY: i, maxX: n, maxY: a, width: n - t, height: a - i };
        return s;
      }),
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return (t.children = []), t;
      }),
      (r.prototype.onAttrChange = function (t, n, i) {
        if ((e.prototype.onAttrChange.call(this, t, n, i), t === 'matrix')) {
          var a = this.getTotalMatrix();
          this._applyChildrenMarix(a);
        }
      }),
      (r.prototype.applyMatrix = function (t) {
        var n = this.getTotalMatrix();
        e.prototype.applyMatrix.call(this, t);
        var i = this.getTotalMatrix();
        i !== n && this._applyChildrenMarix(i);
      }),
      (r.prototype._applyChildrenMarix = function (t) {
        var n = this.getChildren();
        M(n, function (i) {
          i.applyMatrix(t);
        });
      }),
      (r.prototype.addShape = function () {
        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
        var i = t[0],
          a = t[1];
        xt(i) ? (a = i) : (a.type = i);
        var o = sv[a.type];
        o || ((o = Nn(a.type)), (sv[a.type] = o));
        var s = this.getShapeBase(),
          l = new s[o](a);
        return this.add(l), l;
      }),
      (r.prototype.addGroup = function () {
        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
        var i = t[0],
          a = t[1],
          o;
        if (U(i)) a ? (o = new i(a)) : (o = new i({ parent: this }));
        else {
          var s = i || {},
            l = this.getGroupBase();
          o = new l(s);
        }
        return this.add(o), o;
      }),
      (r.prototype.getCanvas = function () {
        var t;
        return this.isCanvas() ? (t = this) : (t = this.get('canvas')), t;
      }),
      (r.prototype.getShape = function (t, n, i) {
        if (!ya(this)) return null;
        var a = this.getChildren(),
          o;
        if (this.isCanvas()) o = this._findShape(a, t, n, i);
        else {
          var s = [t, n, 1];
          (s = this.invertFromMatrix(s)),
            this.isClipped(s[0], s[1]) || (o = this._findShape(a, s[0], s[1], i));
        }
        return o;
      }),
      (r.prototype._findShape = function (t, n, i, a) {
        for (var o = null, s = t.length - 1; s >= 0; s--) {
          var l = t[s];
          if ((ya(l) && (l.isGroup() ? (o = l.getShape(n, i, a)) : l.isHit(n, i) && (o = l)), o))
            break;
        }
        return o;
      }),
      (r.prototype.add = function (t) {
        var n = this.getCanvas(),
          i = this.getChildren(),
          a = this.get('timeline'),
          o = t.getParent();
        o && gM(o, t, !1),
          t.set('parent', this),
          n && Jg(t, n),
          a && ty(t, a),
          i.push(t),
          t.onCanvasChange('add'),
          this._applyElementMatrix(t);
      }),
      (r.prototype._applyElementMatrix = function (t) {
        var n = this.getTotalMatrix();
        n && t.applyMatrix(n);
      }),
      (r.prototype.getChildren = function () {
        return this.get('children');
      }),
      (r.prototype.sort = function () {
        var t = this.getChildren();
        M(t, function (n, i) {
          return (n[Xu] = i), n;
        }),
          t.sort(
            yM(function (n, i) {
              return n.get('zIndex') - i.get('zIndex');
            }),
          ),
          this.onCanvasChange('sort');
      }),
      (r.prototype.clear = function () {
        if ((this.set('clearing', !0), !this.destroyed)) {
          for (var t = this.getChildren(), n = t.length - 1; n >= 0; n--) t[n].destroy();
          this.set('children', []), this.onCanvasChange('clear'), this.set('clearing', !1);
        }
      }),
      (r.prototype.destroy = function () {
        this.get('destroyed') || (this.clear(), e.prototype.destroy.call(this));
      }),
      (r.prototype.getFirst = function () {
        return this.getChildByIndex(0);
      }),
      (r.prototype.getLast = function () {
        var t = this.getChildren();
        return this.getChildByIndex(t.length - 1);
      }),
      (r.prototype.getChildByIndex = function (t) {
        var n = this.getChildren();
        return n[t];
      }),
      (r.prototype.getCount = function () {
        var t = this.getChildren();
        return t.length;
      }),
      (r.prototype.contain = function (t) {
        var n = this.getChildren();
        return n.indexOf(t) > -1;
      }),
      (r.prototype.removeChild = function (t, n) {
        n === void 0 && (n = !0), this.contain(t) && t.remove(n);
      }),
      (r.prototype.findAll = function (t) {
        var n = [],
          i = this.getChildren();
        return (
          M(i, function (a) {
            t(a) && n.push(a), a.isGroup() && (n = n.concat(a.findAll(t)));
          }),
          n
        );
      }),
      (r.prototype.find = function (t) {
        var n = null,
          i = this.getChildren();
        return (
          M(i, function (a) {
            if ((t(a) ? (n = a) : a.isGroup() && (n = a.find(t)), n)) return !1;
          }),
          n
        );
      }),
      (r.prototype.findById = function (t) {
        return this.find(function (n) {
          return n.get('id') === t;
        });
      }),
      (r.prototype.findByClassName = function (t) {
        return this.find(function (n) {
          return n.get('className') === t;
        });
      }),
      (r.prototype.findAllByName = function (t) {
        return this.findAll(function (n) {
          return n.get('name') === t;
        });
      }),
      r
    );
  })(Qg),
  hi = 0,
  Ki = 0,
  zi = 0,
  ry = 1e3,
  ls,
  Qi,
  us = 0,
  Ln = 0,
  Xs = 0,
  xa = typeof performance == 'object' && performance.now ? performance : Date,
  ny =
    typeof window == 'object' && window.requestAnimationFrame
      ? window.requestAnimationFrame.bind(window)
      : function (e) {
          setTimeout(e, 17);
        };
function iy() {
  return Ln || (ny(mM), (Ln = xa.now() + Xs));
}
function mM() {
  Ln = 0;
}
function _u() {
  this._call = this._time = this._next = null;
}
_u.prototype = ay.prototype = {
  constructor: _u,
  restart: function (e, r, t) {
    if (typeof e != 'function') throw new TypeError('callback is not a function');
    (t = (t == null ? iy() : +t) + (r == null ? 0 : +r)),
      !this._next && Qi !== this && (Qi ? (Qi._next = this) : (ls = this), (Qi = this)),
      (this._call = e),
      (this._time = t),
      ju();
  },
  stop: function () {
    this._call && ((this._call = null), (this._time = 1 / 0), ju());
  },
};
function ay(e, r, t) {
  var n = new _u();
  return n.restart(e, r, t), n;
}
function xM() {
  iy(), ++hi;
  for (var e = ls, r; e; ) (r = Ln - e._time) >= 0 && e._call.call(null, r), (e = e._next);
  --hi;
}
function lv() {
  (Ln = (us = xa.now()) + Xs), (hi = Ki = 0);
  try {
    xM();
  } finally {
    (hi = 0), bM(), (Ln = 0);
  }
}
function wM() {
  var e = xa.now(),
    r = e - us;
  r > ry && ((Xs -= r), (us = e));
}
function bM() {
  for (var e, r = ls, t, n = 1 / 0; r; )
    r._call
      ? (n > r._time && (n = r._time), (e = r), (r = r._next))
      : ((t = r._next), (r._next = null), (r = e ? (e._next = t) : (ls = t)));
  (Qi = e), ju(n);
}
function ju(e) {
  if (!hi) {
    Ki && (Ki = clearTimeout(Ki));
    var r = e - Ln;
    r > 24
      ? (e < 1 / 0 && (Ki = setTimeout(lv, e - xa.now() - Xs)), zi && (zi = clearInterval(zi)))
      : (zi || ((us = xa.now()), (zi = setInterval(wM, ry))), (hi = 1), ny(lv));
  }
}
function Zc(e, r, t) {
  (e.prototype = r.prototype = t), (t.constructor = e);
}
function oy(e, r) {
  var t = Object.create(e.prototype);
  for (var n in r) t[n] = r[n];
  return t;
}
function ja() {}
var wa = 0.7,
  cs = 1 / wa,
  ni = '\\s*([+-]?\\d+)\\s*',
  ba = '\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*',
  ir = '\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*',
  SM = /^#([0-9a-f]{3,8})$/,
  CM = new RegExp(`^rgb\\(${ni},${ni},${ni}\\)$`),
  MM = new RegExp(`^rgb\\(${ir},${ir},${ir}\\)$`),
  AM = new RegExp(`^rgba\\(${ni},${ni},${ni},${ba}\\)$`),
  FM = new RegExp(`^rgba\\(${ir},${ir},${ir},${ba}\\)$`),
  EM = new RegExp(`^hsl\\(${ba},${ir},${ir}\\)$`),
  TM = new RegExp(`^hsla\\(${ba},${ir},${ir},${ba}\\)$`),
  uv = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074,
  };
Zc(ja, Sa, {
  copy(e) {
    return Object.assign(new this.constructor(), this, e);
  },
  displayable() {
    return this.rgb().displayable();
  },
  hex: cv,
  formatHex: cv,
  formatHex8: kM,
  formatHsl: IM,
  formatRgb: hv,
  toString: hv,
});
function cv() {
  return this.rgb().formatHex();
}
function kM() {
  return this.rgb().formatHex8();
}
function IM() {
  return sy(this).formatHsl();
}
function hv() {
  return this.rgb().formatRgb();
}
function Sa(e) {
  var r, t;
  return (
    (e = (e + '').trim().toLowerCase()),
    (r = SM.exec(e))
      ? ((t = r[1].length),
        (r = parseInt(r[1], 16)),
        t === 6
          ? fv(r)
          : t === 3
          ? new ge(
              ((r >> 8) & 15) | ((r >> 4) & 240),
              ((r >> 4) & 15) | (r & 240),
              ((r & 15) << 4) | (r & 15),
              1,
            )
          : t === 8
          ? po((r >> 24) & 255, (r >> 16) & 255, (r >> 8) & 255, (r & 255) / 255)
          : t === 4
          ? po(
              ((r >> 12) & 15) | ((r >> 8) & 240),
              ((r >> 8) & 15) | ((r >> 4) & 240),
              ((r >> 4) & 15) | (r & 240),
              (((r & 15) << 4) | (r & 15)) / 255,
            )
          : null)
      : (r = CM.exec(e))
      ? new ge(r[1], r[2], r[3], 1)
      : (r = MM.exec(e))
      ? new ge((r[1] * 255) / 100, (r[2] * 255) / 100, (r[3] * 255) / 100, 1)
      : (r = AM.exec(e))
      ? po(r[1], r[2], r[3], r[4])
      : (r = FM.exec(e))
      ? po((r[1] * 255) / 100, (r[2] * 255) / 100, (r[3] * 255) / 100, r[4])
      : (r = EM.exec(e))
      ? pv(r[1], r[2] / 100, r[3] / 100, 1)
      : (r = TM.exec(e))
      ? pv(r[1], r[2] / 100, r[3] / 100, r[4])
      : uv.hasOwnProperty(e)
      ? fv(uv[e])
      : e === 'transparent'
      ? new ge(NaN, NaN, NaN, 0)
      : null
  );
}
function fv(e) {
  return new ge((e >> 16) & 255, (e >> 8) & 255, e & 255, 1);
}
function po(e, r, t, n) {
  return n <= 0 && (e = r = t = NaN), new ge(e, r, t, n);
}
function LM(e) {
  return (
    e instanceof ja || (e = Sa(e)), e ? ((e = e.rgb()), new ge(e.r, e.g, e.b, e.opacity)) : new ge()
  );
}
function Uu(e, r, t, n) {
  return arguments.length === 1 ? LM(e) : new ge(e, r, t, n == null ? 1 : n);
}
function ge(e, r, t, n) {
  (this.r = +e), (this.g = +r), (this.b = +t), (this.opacity = +n);
}
Zc(
  ge,
  Uu,
  oy(ja, {
    brighter(e) {
      return (
        (e = e == null ? cs : Math.pow(cs, e)),
        new ge(this.r * e, this.g * e, this.b * e, this.opacity)
      );
    },
    darker(e) {
      return (
        (e = e == null ? wa : Math.pow(wa, e)),
        new ge(this.r * e, this.g * e, this.b * e, this.opacity)
      );
    },
    rgb() {
      return this;
    },
    clamp() {
      return new ge(Cn(this.r), Cn(this.g), Cn(this.b), hs(this.opacity));
    },
    displayable() {
      return (
        -0.5 <= this.r &&
        this.r < 255.5 &&
        -0.5 <= this.g &&
        this.g < 255.5 &&
        -0.5 <= this.b &&
        this.b < 255.5 &&
        0 <= this.opacity &&
        this.opacity <= 1
      );
    },
    hex: vv,
    formatHex: vv,
    formatHex8: PM,
    formatRgb: dv,
    toString: dv,
  }),
);
function vv() {
  return `#${gn(this.r)}${gn(this.g)}${gn(this.b)}`;
}
function PM() {
  return `#${gn(this.r)}${gn(this.g)}${gn(this.b)}${gn(
    (isNaN(this.opacity) ? 1 : this.opacity) * 255,
  )}`;
}
function dv() {
  const e = hs(this.opacity);
  return `${e === 1 ? 'rgb(' : 'rgba('}${Cn(this.r)}, ${Cn(this.g)}, ${Cn(this.b)}${
    e === 1 ? ')' : `, ${e})`
  }`;
}
function hs(e) {
  return isNaN(e) ? 1 : Math.max(0, Math.min(1, e));
}
function Cn(e) {
  return Math.max(0, Math.min(255, Math.round(e) || 0));
}
function gn(e) {
  return (e = Cn(e)), (e < 16 ? '0' : '') + e.toString(16);
}
function pv(e, r, t, n) {
  return (
    n <= 0 ? (e = r = t = NaN) : t <= 0 || t >= 1 ? (e = r = NaN) : r <= 0 && (e = NaN),
    new We(e, r, t, n)
  );
}
function sy(e) {
  if (e instanceof We) return new We(e.h, e.s, e.l, e.opacity);
  if ((e instanceof ja || (e = Sa(e)), !e)) return new We();
  if (e instanceof We) return e;
  e = e.rgb();
  var r = e.r / 255,
    t = e.g / 255,
    n = e.b / 255,
    i = Math.min(r, t, n),
    a = Math.max(r, t, n),
    o = NaN,
    s = a - i,
    l = (a + i) / 2;
  return (
    s
      ? (r === a
          ? (o = (t - n) / s + (t < n) * 6)
          : t === a
          ? (o = (n - r) / s + 2)
          : (o = (r - t) / s + 4),
        (s /= l < 0.5 ? a + i : 2 - a - i),
        (o *= 60))
      : (s = l > 0 && l < 1 ? 0 : o),
    new We(o, s, l, e.opacity)
  );
}
function OM(e, r, t, n) {
  return arguments.length === 1 ? sy(e) : new We(e, r, t, n == null ? 1 : n);
}
function We(e, r, t, n) {
  (this.h = +e), (this.s = +r), (this.l = +t), (this.opacity = +n);
}
Zc(
  We,
  OM,
  oy(ja, {
    brighter(e) {
      return (
        (e = e == null ? cs : Math.pow(cs, e)), new We(this.h, this.s, this.l * e, this.opacity)
      );
    },
    darker(e) {
      return (
        (e = e == null ? wa : Math.pow(wa, e)), new We(this.h, this.s, this.l * e, this.opacity)
      );
    },
    rgb() {
      var e = (this.h % 360) + (this.h < 0) * 360,
        r = isNaN(e) || isNaN(this.s) ? 0 : this.s,
        t = this.l,
        n = t + (t < 0.5 ? t : 1 - t) * r,
        i = 2 * t - n;
      return new ge(
        ql(e >= 240 ? e - 240 : e + 120, i, n),
        ql(e, i, n),
        ql(e < 120 ? e + 240 : e - 120, i, n),
        this.opacity,
      );
    },
    clamp() {
      return new We(gv(this.h), go(this.s), go(this.l), hs(this.opacity));
    },
    displayable() {
      return (
        ((0 <= this.s && this.s <= 1) || isNaN(this.s)) &&
        0 <= this.l &&
        this.l <= 1 &&
        0 <= this.opacity &&
        this.opacity <= 1
      );
    },
    formatHsl() {
      const e = hs(this.opacity);
      return `${e === 1 ? 'hsl(' : 'hsla('}${gv(this.h)}, ${go(this.s) * 100}%, ${
        go(this.l) * 100
      }%${e === 1 ? ')' : `, ${e})`}`;
    },
  }),
);
function gv(e) {
  return (e = (e || 0) % 360), e < 0 ? e + 360 : e;
}
function go(e) {
  return Math.max(0, Math.min(1, e || 0));
}
function ql(e, r, t) {
  return (
    (e < 60 ? r + ((t - r) * e) / 60 : e < 180 ? t : e < 240 ? r + ((t - r) * (240 - e)) / 60 : r) *
    255
  );
}
const Kc = (e) => () => e;
function DM(e, r) {
  return function (t) {
    return e + t * r;
  };
}
function BM(e, r, t) {
  return (
    (e = Math.pow(e, t)),
    (r = Math.pow(r, t) - e),
    (t = 1 / t),
    function (n) {
      return Math.pow(e + n * r, t);
    }
  );
}
function RM(e) {
  return (e = +e) == 1
    ? ly
    : function (r, t) {
        return t - r ? BM(r, t, e) : Kc(isNaN(r) ? t : r);
      };
}
function ly(e, r) {
  var t = r - e;
  return t ? DM(e, t) : Kc(isNaN(e) ? r : e);
}
const yv = (function e(r) {
  var t = RM(r);
  function n(i, a) {
    var o = t((i = Uu(i)).r, (a = Uu(a)).r),
      s = t(i.g, a.g),
      l = t(i.b, a.b),
      u = ly(i.opacity, a.opacity);
    return function (c) {
      return (i.r = o(c)), (i.g = s(c)), (i.b = l(c)), (i.opacity = u(c)), i + '';
    };
  }
  return (n.gamma = e), n;
})(1);
function uy(e, r) {
  r || (r = []);
  var t = e ? Math.min(r.length, e.length) : 0,
    n = r.slice(),
    i;
  return function (a) {
    for (i = 0; i < t; ++i) n[i] = e[i] * (1 - a) + r[i] * a;
    return n;
  };
}
function cy(e) {
  return ArrayBuffer.isView(e) && !(e instanceof DataView);
}
function $M(e, r) {
  return (cy(r) ? uy : hy)(e, r);
}
function hy(e, r) {
  var t = r ? r.length : 0,
    n = e ? Math.min(t, e.length) : 0,
    i = new Array(n),
    a = new Array(t),
    o;
  for (o = 0; o < n; ++o) i[o] = fs(e[o], r[o]);
  for (; o < t; ++o) a[o] = r[o];
  return function (s) {
    for (o = 0; o < n; ++o) a[o] = i[o](s);
    return a;
  };
}
function NM(e, r) {
  var t = new Date();
  return (
    (e = +e),
    (r = +r),
    function (n) {
      return t.setTime(e * (1 - n) + r * n), t;
    }
  );
}
function qu(e, r) {
  return (
    (e = +e),
    (r = +r),
    function (t) {
      return e * (1 - t) + r * t;
    }
  );
}
function zM(e, r) {
  var t = {},
    n = {},
    i;
  (e === null || typeof e != 'object') && (e = {}),
    (r === null || typeof r != 'object') && (r = {});
  for (i in r) i in e ? (t[i] = fs(e[i], r[i])) : (n[i] = r[i]);
  return function (a) {
    for (i in t) n[i] = t[i](a);
    return n;
  };
}
var Zu = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
  Zl = new RegExp(Zu.source, 'g');
function GM(e) {
  return function () {
    return e;
  };
}
function VM(e) {
  return function (r) {
    return e(r) + '';
  };
}
function HM(e, r) {
  var t = (Zu.lastIndex = Zl.lastIndex = 0),
    n,
    i,
    a,
    o = -1,
    s = [],
    l = [];
  for (e = e + '', r = r + ''; (n = Zu.exec(e)) && (i = Zl.exec(r)); )
    (a = i.index) > t && ((a = r.slice(t, a)), s[o] ? (s[o] += a) : (s[++o] = a)),
      (n = n[0]) === (i = i[0])
        ? s[o]
          ? (s[o] += i)
          : (s[++o] = i)
        : ((s[++o] = null), l.push({ i: o, x: qu(n, i) })),
      (t = Zl.lastIndex);
  return (
    t < r.length && ((a = r.slice(t)), s[o] ? (s[o] += a) : (s[++o] = a)),
    s.length < 2
      ? l[0]
        ? VM(l[0].x)
        : GM(r)
      : ((r = l.length),
        function (u) {
          for (var c = 0, h; c < r; ++c) s[(h = l[c]).i] = h.x(u);
          return s.join('');
        })
  );
}
function fs(e, r) {
  var t = typeof r,
    n;
  return r == null || t === 'boolean'
    ? Kc(r)
    : (t === 'number'
        ? qu
        : t === 'string'
        ? (n = Sa(r))
          ? ((r = n), yv)
          : HM
        : r instanceof Sa
        ? yv
        : r instanceof Date
        ? NM
        : cy(r)
        ? uy
        : Array.isArray(r)
        ? hy
        : (typeof r.valueOf != 'function' && typeof r.toString != 'function') || isNaN(r)
        ? zM
        : qu)(e, r);
}
function YM(e) {
  return +e;
}
function WM(e) {
  return e * e;
}
function XM(e) {
  return e * (2 - e);
}
function mv(e) {
  return ((e *= 2) <= 1 ? e * e : --e * (2 - e) + 1) / 2;
}
function _M(e) {
  return e * e * e;
}
function jM(e) {
  return --e * e * e + 1;
}
function xv(e) {
  return ((e *= 2) <= 1 ? e * e * e : (e -= 2) * e * e + 2) / 2;
}
var Qc = 3,
  UM = (function e(r) {
    r = +r;
    function t(n) {
      return Math.pow(n, r);
    }
    return (t.exponent = e), t;
  })(Qc),
  qM = (function e(r) {
    r = +r;
    function t(n) {
      return 1 - Math.pow(1 - n, r);
    }
    return (t.exponent = e), t;
  })(Qc),
  wv = (function e(r) {
    r = +r;
    function t(n) {
      return ((n *= 2) <= 1 ? Math.pow(n, r) : 2 - Math.pow(2 - n, r)) / 2;
    }
    return (t.exponent = e), t;
  })(Qc),
  fy = Math.PI,
  vy = fy / 2;
function ZM(e) {
  return +e == 1 ? 1 : 1 - Math.cos(e * vy);
}
function KM(e) {
  return Math.sin(e * vy);
}
function bv(e) {
  return (1 - Math.cos(fy * e)) / 2;
}
function jr(e) {
  return (Math.pow(2, -10 * e) - 0.0009765625) * 1.0009775171065494;
}
function QM(e) {
  return jr(1 - +e);
}
function JM(e) {
  return 1 - jr(e);
}
function Sv(e) {
  return ((e *= 2) <= 1 ? jr(1 - e) : 2 - jr(e - 1)) / 2;
}
function tA(e) {
  return 1 - Math.sqrt(1 - e * e);
}
function eA(e) {
  return Math.sqrt(1 - --e * e);
}
function Cv(e) {
  return ((e *= 2) <= 1 ? 1 - Math.sqrt(1 - e * e) : Math.sqrt(1 - (e -= 2) * e) + 1) / 2;
}
var Ku = 4 / 11,
  rA = 6 / 11,
  nA = 8 / 11,
  iA = 3 / 4,
  aA = 9 / 11,
  oA = 10 / 11,
  sA = 15 / 16,
  lA = 21 / 22,
  uA = 63 / 64,
  yo = 1 / Ku / Ku;
function cA(e) {
  return 1 - Ca(1 - e);
}
function Ca(e) {
  return (e = +e) < Ku
    ? yo * e * e
    : e < nA
    ? yo * (e -= rA) * e + iA
    : e < oA
    ? yo * (e -= aA) * e + sA
    : yo * (e -= lA) * e + uA;
}
function hA(e) {
  return ((e *= 2) <= 1 ? 1 - Ca(1 - e) : Ca(e - 1) + 1) / 2;
}
var Jc = 1.70158,
  fA = (function e(r) {
    r = +r;
    function t(n) {
      return (n = +n) * n * (r * (n - 1) + n);
    }
    return (t.overshoot = e), t;
  })(Jc),
  vA = (function e(r) {
    r = +r;
    function t(n) {
      return --n * n * ((n + 1) * r + n) + 1;
    }
    return (t.overshoot = e), t;
  })(Jc),
  Mv = (function e(r) {
    r = +r;
    function t(n) {
      return ((n *= 2) < 1 ? n * n * ((r + 1) * n - r) : (n -= 2) * n * ((r + 1) * n + r) + 2) / 2;
    }
    return (t.overshoot = e), t;
  })(Jc),
  fi = 2 * Math.PI,
  th = 1,
  eh = 0.3,
  dA = (function e(r, t) {
    var n = Math.asin(1 / (r = Math.max(1, r))) * (t /= fi);
    function i(a) {
      return r * jr(-(--a)) * Math.sin((n - a) / t);
    }
    return (
      (i.amplitude = function (a) {
        return e(a, t * fi);
      }),
      (i.period = function (a) {
        return e(r, a);
      }),
      i
    );
  })(th, eh),
  Av = (function e(r, t) {
    var n = Math.asin(1 / (r = Math.max(1, r))) * (t /= fi);
    function i(a) {
      return 1 - r * jr((a = +a)) * Math.sin((a + n) / t);
    }
    return (
      (i.amplitude = function (a) {
        return e(a, t * fi);
      }),
      (i.period = function (a) {
        return e(r, a);
      }),
      i
    );
  })(th, eh),
  pA = (function e(r, t) {
    var n = Math.asin(1 / (r = Math.max(1, r))) * (t /= fi);
    function i(a) {
      return (
        ((a = a * 2 - 1) < 0
          ? r * jr(-a) * Math.sin((n - a) / t)
          : 2 - r * jr(a) * Math.sin((n + a) / t)) / 2
      );
    }
    return (
      (i.amplitude = function (a) {
        return e(a, t * fi);
      }),
      (i.period = function (a) {
        return e(r, a);
      }),
      i
    );
  })(th, eh);
const gA = Object.freeze(
  Object.defineProperty(
    {
      __proto__: null,
      easeBack: Mv,
      easeBackIn: fA,
      easeBackInOut: Mv,
      easeBackOut: vA,
      easeBounce: Ca,
      easeBounceIn: cA,
      easeBounceInOut: hA,
      easeBounceOut: Ca,
      easeCircle: Cv,
      easeCircleIn: tA,
      easeCircleInOut: Cv,
      easeCircleOut: eA,
      easeCubic: xv,
      easeCubicIn: _M,
      easeCubicInOut: xv,
      easeCubicOut: jM,
      easeElastic: Av,
      easeElasticIn: dA,
      easeElasticInOut: pA,
      easeElasticOut: Av,
      easeExp: Sv,
      easeExpIn: QM,
      easeExpInOut: Sv,
      easeExpOut: JM,
      easeLinear: YM,
      easePoly: wv,
      easePolyIn: UM,
      easePolyInOut: wv,
      easePolyOut: qM,
      easeQuad: mv,
      easeQuadIn: WM,
      easeQuadInOut: mv,
      easeQuadOut: XM,
      easeSin: bv,
      easeSinIn: ZM,
      easeSinInOut: bv,
      easeSinOut: KM,
    },
    Symbol.toStringTag,
    { value: 'Module' },
  ),
);
var dy = {};
function yA(e) {
  return dy[e.toLowerCase()] || gA[e];
}
function py(e, r) {
  dy[e.toLowerCase()] = r;
}
var mA = function (e) {
    return ['fill', 'stroke', 'fillStyle', 'strokeStyle'].includes(e);
  },
  xA = function (e) {
    return /^[r,R,L,l]{1}[\s]*\(/.test(e);
  },
  Fv = [1, 0, 0, 0, 1, 0, 0, 0, 1];
function wA(e, r, t) {
  var n = {},
    i = r.fromAttrs,
    a = r.toAttrs;
  if (!e.destroyed) {
    var o;
    for (var s in a)
      if (!Dt(i[s], a[s]))
        if (s === 'path') {
          var l = a[s],
            u = i[s];
          l.length > u.length
            ? ((l = Qn(a[s])),
              (u = Qn(i[s])),
              (u = Wg(u, l)),
              (u = Yu(u, l)),
              (r.fromAttrs.path = u),
              (r.toAttrs.path = l))
            : r.pathFormatted ||
              ((l = Qn(a[s])),
              (u = Qn(i[s])),
              (u = Yu(u, l)),
              (r.fromAttrs.path = u),
              (r.toAttrs.path = l),
              (r.pathFormatted = !0)),
            (n[s] = []);
          for (var c = 0; c < l.length; c++) {
            for (var h = l[c], f = u[c], v = [], d = 0; d < h.length; d++)
              at(h[d]) && f && at(f[d]) ? ((o = fs(f[d], h[d])), v.push(o(t))) : v.push(h[d]);
            n[s].push(v);
          }
        } else if (s === 'matrix') {
          var p = $M(i[s] || Fv, a[s] || Fv),
            g = p(t);
          n[s] = g;
        } else mA(s) && xA(a[s]) ? (n[s] = a[s]) : U(a[s]) || ((o = fs(i[s], a[s])), (n[s] = o(t)));
    e.attr(n);
  }
}
function bA(e, r, t) {
  var n = r.startTime,
    i = r.delay;
  if (t < n + i || r._paused) return !1;
  var a,
    o = r.duration,
    s = r.easing,
    l = yA(s);
  if (((t = t - n - r.delay), r.repeat)) (a = (t % o) / o), (a = l(a));
  else if (((a = t / o), a < 1)) a = l(a);
  else return r.onFrame ? e.attr(r.onFrame(1)) : e.attr(r.toAttrs), !0;
  if (r.onFrame) {
    var u = r.onFrame(a);
    e.attr(u);
  } else wA(e, r, a);
  return !1;
}
var SA = (function () {
    function e(r) {
      (this.animators = []), (this.current = 0), (this.timer = null), (this.canvas = r);
    }
    return (
      (e.prototype.initTimer = function () {
        var r = this,
          t = !1,
          n,
          i,
          a;
        this.timer = ay(function (o) {
          if (((r.current = o), r.animators.length > 0)) {
            for (var s = r.animators.length - 1; s >= 0; s--) {
              if (((n = r.animators[s]), n.destroyed)) {
                r.removeAnimator(s);
                continue;
              }
              if (!n.isAnimatePaused()) {
                i = n.get('animations');
                for (var l = i.length - 1; l >= 0; l--)
                  (a = i[l]),
                    (t = bA(n, a, o)),
                    t && (i.splice(l, 1), (t = !1), a.callback && a.callback());
              }
              i.length === 0 && r.removeAnimator(s);
            }
            var u = r.canvas.get('autoDraw');
            u || r.canvas.draw();
          }
        });
      }),
      (e.prototype.addAnimator = function (r) {
        this.animators.push(r);
      }),
      (e.prototype.removeAnimator = function (r) {
        this.animators.splice(r, 1);
      }),
      (e.prototype.isAnimating = function () {
        return !!this.animators.length;
      }),
      (e.prototype.stop = function () {
        this.timer && this.timer.stop();
      }),
      (e.prototype.stopAllAnimations = function (r) {
        r === void 0 && (r = !0),
          this.animators.forEach(function (t) {
            t.stopAnimate(r);
          }),
          (this.animators = []),
          this.canvas.draw();
      }),
      (e.prototype.getTime = function () {
        return this.current;
      }),
      e
    );
  })(),
  CA = 40,
  Ev = 0,
  Tv = [
    'mousedown',
    'mouseup',
    'dblclick',
    'mouseout',
    'mouseover',
    'mousemove',
    'mouseleave',
    'mouseenter',
    'touchstart',
    'touchmove',
    'touchend',
    'dragenter',
    'dragover',
    'dragleave',
    'drop',
    'contextmenu',
    'mousewheel',
  ];
function kv(e, r, t) {
  (t.name = r), (t.target = e), (t.currentTarget = e), (t.delegateTarget = e), e.emit(r, t);
}
function MA(e, r, t) {
  if (t.bubbles) {
    var n = void 0,
      i = !1;
    if (
      (r === 'mouseenter'
        ? ((n = t.fromShape), (i = !0))
        : r === 'mouseleave' && ((i = !0), (n = t.toShape)),
      e.isCanvas() && i)
    )
      return;
    if (n && jg(e, n)) {
      t.bubbles = !1;
      return;
    }
    (t.name = r), (t.currentTarget = e), (t.delegateTarget = e), e.emit(r, t);
  }
}
var AA = (function () {
    function e(r) {
      var t = this;
      (this.draggingShape = null),
        (this.dragging = !1),
        (this.currentShape = null),
        (this.mousedownShape = null),
        (this.mousedownPoint = null),
        (this._eventCallback = function (n) {
          var i = n.type;
          t._triggerEvent(i, n);
        }),
        (this._onDocumentMove = function (n) {
          var i = t.canvas,
            a = i.get('el');
          if (a !== n.target && (t.dragging || t.currentShape)) {
            var o = t._getPointInfo(n);
            t.dragging && t._emitEvent('drag', n, o, t.draggingShape);
          }
        }),
        (this._onDocumentMouseUp = function (n) {
          var i = t.canvas,
            a = i.get('el');
          if (a !== n.target && t.dragging) {
            var o = t._getPointInfo(n);
            t.draggingShape && t._emitEvent('drop', n, o, null),
              t._emitEvent('dragend', n, o, t.draggingShape),
              t._afterDrag(t.draggingShape, o, n);
          }
        }),
        (this.canvas = r.canvas);
    }
    return (
      (e.prototype.init = function () {
        this._bindEvents();
      }),
      (e.prototype._bindEvents = function () {
        var r = this,
          t = this.canvas.get('el');
        M(Tv, function (n) {
          t.addEventListener(n, r._eventCallback);
        }),
          document &&
            (document.addEventListener('mousemove', this._onDocumentMove),
            document.addEventListener('mouseup', this._onDocumentMouseUp));
      }),
      (e.prototype._clearEvents = function () {
        var r = this,
          t = this.canvas.get('el');
        M(Tv, function (n) {
          t.removeEventListener(n, r._eventCallback);
        }),
          document &&
            (document.removeEventListener('mousemove', this._onDocumentMove),
            document.removeEventListener('mouseup', this._onDocumentMouseUp));
      }),
      (e.prototype._getEventObj = function (r, t, n, i, a, o) {
        var s = new _a(r, t);
        return (
          (s.fromShape = a),
          (s.toShape = o),
          (s.x = n.x),
          (s.y = n.y),
          (s.clientX = n.clientX),
          (s.clientY = n.clientY),
          s.propagationPath.push(i),
          s
        );
      }),
      (e.prototype._getShape = function (r, t) {
        return this.canvas.getShape(r.x, r.y, t);
      }),
      (e.prototype._getPointInfo = function (r) {
        var t = this.canvas,
          n = t.getClientByEvent(r),
          i = t.getPointByEvent(r);
        return { x: i.x, y: i.y, clientX: n.x, clientY: n.y };
      }),
      (e.prototype._triggerEvent = function (r, t) {
        var n = this._getPointInfo(t),
          i = this._getShape(n, t),
          a = this['_on' + r],
          o = !1;
        if (a) a.call(this, n, i, t);
        else {
          var s = this.currentShape;
          r === 'mouseenter' || r === 'dragenter' || r === 'mouseover'
            ? (this._emitEvent(r, t, n, null, null, i),
              i && this._emitEvent(r, t, n, i, null, i),
              r === 'mouseenter' && this.draggingShape && this._emitEvent('dragenter', t, n, null))
            : r === 'mouseleave' || r === 'dragleave' || r === 'mouseout'
            ? ((o = !0),
              s && this._emitEvent(r, t, n, s, s, null),
              this._emitEvent(r, t, n, null, s, null),
              r === 'mouseleave' && this.draggingShape && this._emitEvent('dragleave', t, n, null))
            : this._emitEvent(r, t, n, i, null, null);
        }
        if ((o || (this.currentShape = i), i && !i.get('destroyed'))) {
          var l = this.canvas,
            u = l.get('el');
          u.style.cursor = i.attr('cursor') || l.get('cursor');
        }
      }),
      (e.prototype._onmousedown = function (r, t, n) {
        n.button === Ev &&
          ((this.mousedownShape = t),
          (this.mousedownPoint = r),
          (this.mousedownTimeStamp = n.timeStamp)),
          this._emitEvent('mousedown', n, r, t, null, null);
      }),
      (e.prototype._emitMouseoverEvents = function (r, t, n, i) {
        var a = this.canvas.get('el');
        n !== i &&
          (n &&
            (this._emitEvent('mouseout', r, t, n, n, i),
            this._emitEvent('mouseleave', r, t, n, n, i),
            (!i || i.get('destroyed')) && (a.style.cursor = this.canvas.get('cursor'))),
          i &&
            (this._emitEvent('mouseover', r, t, i, n, i),
            this._emitEvent('mouseenter', r, t, i, n, i)));
      }),
      (e.prototype._emitDragoverEvents = function (r, t, n, i, a) {
        i
          ? (i !== n &&
              (n && this._emitEvent('dragleave', r, t, n, n, i),
              this._emitEvent('dragenter', r, t, i, n, i)),
            a || this._emitEvent('dragover', r, t, i))
          : n && this._emitEvent('dragleave', r, t, n, n, i),
          a && this._emitEvent('dragover', r, t, i);
      }),
      (e.prototype._afterDrag = function (r, t, n) {
        r && (r.set('capture', !0), (this.draggingShape = null)), (this.dragging = !1);
        var i = this._getShape(t, n);
        i !== r && this._emitMouseoverEvents(n, t, r, i), (this.currentShape = i);
      }),
      (e.prototype._onmouseup = function (r, t, n) {
        if (n.button === Ev) {
          var i = this.draggingShape;
          this.dragging
            ? (i && this._emitEvent('drop', n, r, t),
              this._emitEvent('dragend', n, r, i),
              this._afterDrag(i, r, n))
            : (this._emitEvent('mouseup', n, r, t),
              t === this.mousedownShape && this._emitEvent('click', n, r, t),
              (this.mousedownShape = null),
              (this.mousedownPoint = null));
        }
      }),
      (e.prototype._ondragover = function (r, t, n) {
        n.preventDefault();
        var i = this.currentShape;
        this._emitDragoverEvents(n, r, i, t, !0);
      }),
      (e.prototype._onmousemove = function (r, t, n) {
        var i = this.canvas,
          a = this.currentShape,
          o = this.draggingShape;
        if (this.dragging)
          o && this._emitDragoverEvents(n, r, a, t, !1), this._emitEvent('drag', n, r, o);
        else {
          var s = this.mousedownPoint;
          if (s) {
            var l = this.mousedownShape,
              u = n.timeStamp,
              c = u - this.mousedownTimeStamp,
              h = s.clientX - r.clientX,
              f = s.clientY - r.clientY,
              v = h * h + f * f;
            c > 120 || v > CA
              ? l && l.get('draggable')
                ? ((o = this.mousedownShape),
                  o.set('capture', !1),
                  (this.draggingShape = o),
                  (this.dragging = !0),
                  this._emitEvent('dragstart', n, r, o),
                  (this.mousedownShape = null),
                  (this.mousedownPoint = null))
                : !l && i.get('draggable')
                ? ((this.dragging = !0),
                  this._emitEvent('dragstart', n, r, null),
                  (this.mousedownShape = null),
                  (this.mousedownPoint = null))
                : (this._emitMouseoverEvents(n, r, a, t), this._emitEvent('mousemove', n, r, t))
              : (this._emitMouseoverEvents(n, r, a, t), this._emitEvent('mousemove', n, r, t));
          } else this._emitMouseoverEvents(n, r, a, t), this._emitEvent('mousemove', n, r, t);
        }
      }),
      (e.prototype._emitEvent = function (r, t, n, i, a, o) {
        var s = this._getEventObj(r, t, n, i, a, o);
        if (i) {
          (s.shape = i), kv(i, r, s);
          for (var l = i.getParent(); l; )
            l.emitDelegation(r, s),
              s.propagationStopped || MA(l, r, s),
              s.propagationPath.push(l),
              (l = l.getParent());
        } else {
          var u = this.canvas;
          kv(u, r, s);
        }
      }),
      (e.prototype.destroy = function () {
        this._clearEvents(),
          (this.canvas = null),
          (this.currentShape = null),
          (this.draggingShape = null),
          (this.mousedownPoint = null),
          (this.mousedownShape = null),
          (this.mousedownTimeStamp = null);
      }),
      e
    );
  })(),
  Iv = 'px',
  Lv = Ug(),
  FA = Lv && Lv.name === 'firefox',
  _s = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      return n.initContainer(), n.initDom(), n.initEvents(), n.initTimeline(), n;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return (t.cursor = 'default'), (t.supportCSSTransform = !1), t;
      }),
      (r.prototype.initContainer = function () {
        var t = this.get('container');
        et(t) && ((t = document.getElementById(t)), this.set('container', t));
      }),
      (r.prototype.initDom = function () {
        var t = this.createDom();
        this.set('el', t);
        var n = this.get('container');
        n.appendChild(t), this.setDOMSize(this.get('width'), this.get('height'));
      }),
      (r.prototype.initEvents = function () {
        var t = new AA({ canvas: this });
        t.init(), this.set('eventController', t);
      }),
      (r.prototype.initTimeline = function () {
        var t = new SA(this);
        this.set('timeline', t);
      }),
      (r.prototype.setDOMSize = function (t, n) {
        var i = this.get('el');
        ev && ((i.style.width = t + Iv), (i.style.height = n + Iv));
      }),
      (r.prototype.changeSize = function (t, n) {
        this.setDOMSize(t, n),
          this.set('width', t),
          this.set('height', n),
          this.onCanvasChange('changeSize');
      }),
      (r.prototype.getRenderer = function () {
        return this.get('renderer');
      }),
      (r.prototype.getCursor = function () {
        return this.get('cursor');
      }),
      (r.prototype.setCursor = function (t) {
        this.set('cursor', t);
        var n = this.get('el');
        ev && n && (n.style.cursor = t);
      }),
      (r.prototype.getPointByEvent = function (t) {
        var n = this.get('supportCSSTransform');
        if (n) {
          if (FA && !$(t.layerX) && t.layerX !== t.offsetX) return { x: t.layerX, y: t.layerY };
          if (!$(t.offsetX)) return { x: t.offsetX, y: t.offsetY };
        }
        var i = this.getClientByEvent(t),
          a = i.x,
          o = i.y;
        return this.getPointByClient(a, o);
      }),
      (r.prototype.getClientByEvent = function (t) {
        var n = t;
        return (
          t.touches && (t.type === 'touchend' ? (n = t.changedTouches[0]) : (n = t.touches[0])),
          { x: n.clientX, y: n.clientY }
        );
      }),
      (r.prototype.getPointByClient = function (t, n) {
        var i = this.get('el'),
          a = i.getBoundingClientRect();
        return { x: t - a.left, y: n - a.top };
      }),
      (r.prototype.getClientByPoint = function (t, n) {
        var i = this.get('el'),
          a = i.getBoundingClientRect();
        return { x: t + a.left, y: n + a.top };
      }),
      (r.prototype.draw = function () {}),
      (r.prototype.removeDom = function () {
        var t = this.get('el');
        t.parentNode.removeChild(t);
      }),
      (r.prototype.clearEvents = function () {
        var t = this.get('eventController');
        t.destroy();
      }),
      (r.prototype.isCanvas = function () {
        return !0;
      }),
      (r.prototype.getParent = function () {
        return null;
      }),
      (r.prototype.destroy = function () {
        var t = this.get('timeline');
        this.get('destroyed') ||
          (this.clear(),
          t && t.stop(),
          this.clearEvents(),
          this.removeDom(),
          e.prototype.destroy.call(this));
      }),
      r
    );
  })(ey),
  js = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.isGroup = function () {
        return !0;
      }),
      (r.prototype.isEntityGroup = function () {
        return !1;
      }),
      (r.prototype.clone = function () {
        for (
          var t = e.prototype.clone.call(this), n = this.getChildren(), i = 0;
          i < n.length;
          i++
        ) {
          var a = n[i];
          t.add(a.clone());
        }
        return t;
      }),
      r
    );
  })(ey),
  Us = (function (e) {
    k(r, e);
    function r(t) {
      return e.call(this, t) || this;
    }
    return (
      (r.prototype._isInBBox = function (t, n) {
        var i = this.getBBox();
        return i.minX <= t && i.maxX >= t && i.minY <= n && i.maxY >= n;
      }),
      (r.prototype.afterAttrsChange = function (t) {
        e.prototype.afterAttrsChange.call(this, t), this.clearCacheBBox();
      }),
      (r.prototype.getBBox = function () {
        var t = this.cfg.bbox;
        return t || ((t = this.calculateBBox()), this.set('bbox', t)), t;
      }),
      (r.prototype.getCanvasBBox = function () {
        var t = this.cfg.canvasBBox;
        return t || ((t = this.calculateCanvasBBox()), this.set('canvasBBox', t)), t;
      }),
      (r.prototype.applyMatrix = function (t) {
        e.prototype.applyMatrix.call(this, t), this.set('canvasBBox', null);
      }),
      (r.prototype.calculateCanvasBBox = function () {
        var t = this.getBBox(),
          n = this.getTotalMatrix(),
          i = t.minX,
          a = t.minY,
          o = t.maxX,
          s = t.maxY;
        if (n) {
          var l = gr(n, [t.minX, t.minY]),
            u = gr(n, [t.maxX, t.minY]),
            c = gr(n, [t.minX, t.maxY]),
            h = gr(n, [t.maxX, t.maxY]);
          (i = Math.min(l[0], u[0], c[0], h[0])),
            (o = Math.max(l[0], u[0], c[0], h[0])),
            (a = Math.min(l[1], u[1], c[1], h[1])),
            (s = Math.max(l[1], u[1], c[1], h[1]));
        }
        var f = this.attrs;
        if (f.shadowColor) {
          var v = f.shadowBlur,
            d = v === void 0 ? 0 : v,
            p = f.shadowOffsetX,
            g = p === void 0 ? 0 : p,
            y = f.shadowOffsetY,
            m = y === void 0 ? 0 : y,
            b = i - d + g,
            w = o + d + g,
            S = a - d + m,
            C = s + d + m;
          (i = Math.min(i, b)), (o = Math.max(o, w)), (a = Math.min(a, S)), (s = Math.max(s, C));
        }
        return { x: i, y: a, minX: i, minY: a, maxX: o, maxY: s, width: o - i, height: s - a };
      }),
      (r.prototype.clearCacheBBox = function () {
        this.set('bbox', null), this.set('canvasBBox', null);
      }),
      (r.prototype.isClipShape = function () {
        return this.get('isClipShape');
      }),
      (r.prototype.isInShape = function (t, n) {
        return !1;
      }),
      (r.prototype.isOnlyHitBox = function () {
        return !1;
      }),
      (r.prototype.isHit = function (t, n) {
        var i = this.get('startArrowShape'),
          a = this.get('endArrowShape'),
          o = [t, n, 1];
        o = this.invertFromMatrix(o);
        var s = o[0],
          l = o[1],
          u = this._isInBBox(s, l);
        return this.isOnlyHitBox()
          ? u
          : !!(
              u &&
              !this.isClipped(s, l) &&
              (this.isInShape(s, l) || (i && i.isHit(s, l)) || (a && a.isHit(s, l)))
            );
      }),
      r
    );
  })(Qg),
  gy = new Map();
function ze(e, r) {
  gy.set(e, r);
}
function qs(e) {
  return gy.get(e);
}
function yy(e) {
  var r = e.attr(),
    t = r.x,
    n = r.y,
    i = r.width,
    a = r.height;
  return { x: t, y: n, width: i, height: a };
}
function my(e) {
  var r = e.attr(),
    t = r.x,
    n = r.y,
    i = r.r;
  return { x: t - i, y: n - i, width: i * 2, height: i * 2 };
}
function ae(e, r, t, n) {
  var i = e - t,
    a = r - n;
  return Math.sqrt(i * i + a * a);
}
function jo(e, r) {
  return Math.abs(e - r) < 0.001;
}
function Fi(e, r) {
  var t = $e(e),
    n = $e(r),
    i = Te(e),
    a = Te(r);
  return { x: t, y: n, width: i - t, height: a - n };
}
function Zs(e) {
  return (e + Math.PI * 2) % (Math.PI * 2);
}
const Kt = {
  box: function (e, r, t, n) {
    return Fi([e, t], [r, n]);
  },
  length: function (e, r, t, n) {
    return ae(e, r, t, n);
  },
  pointAt: function (e, r, t, n, i) {
    return { x: (1 - i) * e + i * t, y: (1 - i) * r + i * n };
  },
  pointDistance: function (e, r, t, n, i, a) {
    var o = (t - e) * (i - e) + (n - r) * (a - r);
    if (o < 0) return ae(e, r, i, a);
    var s = (t - e) * (t - e) + (n - r) * (n - r);
    return o > s ? ae(t, n, i, a) : this.pointToLine(e, r, t, n, i, a);
  },
  pointToLine: function (e, r, t, n, i, a) {
    var o = [t - e, n - r];
    if (aM(o, [0, 0])) return Math.sqrt((i - e) * (i - e) + (a - r) * (a - r));
    var s = [-o[1], o[0]];
    Zg(s, s);
    var l = [i - e, a - r];
    return Math.abs(nM(l, s));
  },
  tangentAngle: function (e, r, t, n) {
    return Math.atan2(n - r, t - e);
  },
};
var EA = 1e-4;
function xy(e, r, t, n, i, a) {
  var o,
    s = 1 / 0,
    l = [t, n],
    u = 20;
  a && a > 200 && (u = a / 10);
  for (var c = 1 / u, h = c / 10, f = 0; f <= u; f++) {
    var v = f * c,
      d = [i.apply(null, e.concat([v])), i.apply(null, r.concat([v]))],
      p = ae(l[0], l[1], d[0], d[1]);
    p < s && ((o = v), (s = p));
  }
  if (o === 0) return { x: e[0], y: r[0] };
  if (o === 1) {
    var g = e.length;
    return { x: e[g - 1], y: r[g - 1] };
  }
  s = 1 / 0;
  for (var f = 0; f < 32 && !(h < EA); f++) {
    var y = o - h,
      m = o + h,
      d = [i.apply(null, e.concat([y])), i.apply(null, r.concat([y]))],
      p = ae(l[0], l[1], d[0], d[1]);
    if (y >= 0 && p < s) (o = y), (s = p);
    else {
      var b = [i.apply(null, e.concat([m])), i.apply(null, r.concat([m]))],
        w = ae(l[0], l[1], b[0], b[1]);
      m <= 1 && w < s ? ((o = m), (s = w)) : (h *= 0.5);
    }
  }
  return { x: i.apply(null, e.concat([o])), y: i.apply(null, r.concat([o])) };
}
function TA(e, r) {
  for (var t = 0, n = e.length, i = 0; i < n; i++) {
    var a = e[i],
      o = r[i],
      s = e[(i + 1) % n],
      l = r[(i + 1) % n];
    t += ae(a, o, s, l);
  }
  return t / 2;
}
function Or(e, r, t, n) {
  var i = 1 - n;
  return i * i * e + 2 * n * i * r + n * n * t;
}
function Pv(e, r, t) {
  var n = e + t - 2 * r;
  if (jo(n, 0)) return [0.5];
  var i = (e - r) / n;
  return i <= 1 && i >= 0 ? [i] : [];
}
function Ov(e, r, t, n) {
  return 2 * (1 - n) * (r - e) + 2 * n * (t - r);
}
function wy(e, r, t, n, i, a, o) {
  var s = Or(e, t, i, o),
    l = Or(r, n, a, o),
    u = Kt.pointAt(e, r, t, n, o),
    c = Kt.pointAt(t, n, i, a, o);
  return [
    [e, r, u.x, u.y, s, l],
    [s, l, c.x, c.y, i, a],
  ];
}
function Qu(e, r, t, n, i, a, o) {
  if (o === 0) return (ae(e, r, t, n) + ae(t, n, i, a) + ae(e, r, i, a)) / 2;
  var s = wy(e, r, t, n, i, a, 0.5),
    l = s[0],
    u = s[1];
  return l.push(o - 1), u.push(o - 1), Qu.apply(null, l) + Qu.apply(null, u);
}
const by = {
  box: function (e, r, t, n, i, a) {
    var o = Pv(e, t, i)[0],
      s = Pv(r, n, a)[0],
      l = [e, i],
      u = [r, a];
    return o !== void 0 && l.push(Or(e, t, i, o)), s !== void 0 && u.push(Or(r, n, a, s)), Fi(l, u);
  },
  length: function (e, r, t, n, i, a) {
    return Qu(e, r, t, n, i, a, 3);
  },
  nearestPoint: function (e, r, t, n, i, a, o, s) {
    return xy([e, t, i], [r, n, a], o, s, Or);
  },
  pointDistance: function (e, r, t, n, i, a, o, s) {
    var l = this.nearestPoint(e, r, t, n, i, a, o, s);
    return ae(l.x, l.y, o, s);
  },
  interpolationAt: Or,
  pointAt: function (e, r, t, n, i, a, o) {
    return { x: Or(e, t, i, o), y: Or(r, n, a, o) };
  },
  divide: function (e, r, t, n, i, a, o) {
    return wy(e, r, t, n, i, a, o);
  },
  tangentAngle: function (e, r, t, n, i, a, o) {
    var s = Ov(e, t, i, o),
      l = Ov(r, n, a, o),
      u = Math.atan2(l, s);
    return Zs(u);
  },
};
function Dr(e, r, t, n, i) {
  var a = 1 - i;
  return a * a * a * e + 3 * r * i * a * a + 3 * t * i * i * a + n * i * i * i;
}
function Dv(e, r, t, n, i) {
  var a = 1 - i;
  return 3 * (a * a * (r - e) + 2 * a * i * (t - r) + i * i * (n - t));
}
function Kl(e, r, t, n) {
  var i = -3 * e + 9 * r - 9 * t + 3 * n,
    a = 6 * e - 12 * r + 6 * t,
    o = 3 * r - 3 * e,
    s = [],
    l,
    u,
    c;
  if (jo(i, 0)) jo(a, 0) || ((l = -o / a), l >= 0 && l <= 1 && s.push(l));
  else {
    var h = a * a - 4 * i * o;
    jo(h, 0)
      ? s.push(-a / (2 * i))
      : h > 0 &&
        ((c = Math.sqrt(h)),
        (l = (-a + c) / (2 * i)),
        (u = (-a - c) / (2 * i)),
        l >= 0 && l <= 1 && s.push(l),
        u >= 0 && u <= 1 && s.push(u));
  }
  return s;
}
function Sy(e, r, t, n, i, a, o, s, l) {
  var u = Dr(e, t, i, o, l),
    c = Dr(r, n, a, s, l),
    h = Kt.pointAt(e, r, t, n, l),
    f = Kt.pointAt(t, n, i, a, l),
    v = Kt.pointAt(i, a, o, s, l),
    d = Kt.pointAt(h.x, h.y, f.x, f.y, l),
    p = Kt.pointAt(f.x, f.y, v.x, v.y, l);
  return [
    [e, r, h.x, h.y, d.x, d.y, u, c],
    [u, c, p.x, p.y, v.x, v.y, o, s],
  ];
}
function Ju(e, r, t, n, i, a, o, s, l) {
  if (l === 0) return TA([e, t, i, o], [r, n, a, s]);
  var u = Sy(e, r, t, n, i, a, o, s, 0.5),
    c = u[0],
    h = u[1];
  return c.push(l - 1), h.push(l - 1), Ju.apply(null, c) + Ju.apply(null, h);
}
const aa = {
  extrema: Kl,
  box: function (e, r, t, n, i, a, o, s) {
    for (
      var l = [e, o], u = [r, s], c = Kl(e, t, i, o), h = Kl(r, n, a, s), f = 0;
      f < c.length;
      f++
    )
      l.push(Dr(e, t, i, o, c[f]));
    for (var f = 0; f < h.length; f++) u.push(Dr(r, n, a, s, h[f]));
    return Fi(l, u);
  },
  length: function (e, r, t, n, i, a, o, s) {
    return Ju(e, r, t, n, i, a, o, s, 3);
  },
  nearestPoint: function (e, r, t, n, i, a, o, s, l, u, c) {
    return xy([e, t, i, o], [r, n, a, s], l, u, Dr, c);
  },
  pointDistance: function (e, r, t, n, i, a, o, s, l, u, c) {
    var h = this.nearestPoint(e, r, t, n, i, a, o, s, l, u, c);
    return ae(h.x, h.y, l, u);
  },
  interpolationAt: Dr,
  pointAt: function (e, r, t, n, i, a, o, s, l) {
    return { x: Dr(e, t, i, o, l), y: Dr(r, n, a, s, l) };
  },
  divide: function (e, r, t, n, i, a, o, s, l) {
    return Sy(e, r, t, n, i, a, o, s, l);
  },
  tangentAngle: function (e, r, t, n, i, a, o, s, l) {
    var u = Dv(e, t, i, o, l),
      c = Dv(r, n, a, s, l);
    return Zs(Math.atan2(c, u));
  },
};
function Bv(e, r) {
  var t = Math.abs(e);
  return r > 0 ? t : t * -1;
}
const kA = {
  box: function (e, r, t, n) {
    return { x: e - t, y: r - n, width: t * 2, height: n * 2 };
  },
  length: function (e, r, t, n) {
    return Math.PI * (3 * (t + n) - Math.sqrt((3 * t + n) * (t + 3 * n)));
  },
  nearestPoint: function (e, r, t, n, i, a) {
    var o = t,
      s = n;
    if (o === 0 || s === 0) return { x: e, y: r };
    for (
      var l = i - e,
        u = a - r,
        c = Math.abs(l),
        h = Math.abs(u),
        f = o * o,
        v = s * s,
        d = Math.PI / 4,
        p,
        g,
        y = 0;
      y < 4;
      y++
    ) {
      (p = o * Math.cos(d)), (g = s * Math.sin(d));
      var m = ((f - v) * Math.pow(Math.cos(d), 3)) / o,
        b = ((v - f) * Math.pow(Math.sin(d), 3)) / s,
        w = p - m,
        S = g - b,
        C = c - m,
        F = h - b,
        E = Math.hypot(S, w),
        I = Math.hypot(F, C),
        T = E * Math.asin((w * F - S * C) / (E * I)),
        P = T / Math.sqrt(f + v - p * p - g * g);
      (d += P), (d = Math.min(Math.PI / 2, Math.max(0, d)));
    }
    return { x: e + Bv(p, l), y: r + Bv(g, u) };
  },
  pointDistance: function (e, r, t, n, i, a) {
    var o = this.nearestPoint(e, r, t, n, i, a);
    return ae(o.x, o.y, i, a);
  },
  pointAt: function (e, r, t, n, i) {
    var a = 2 * Math.PI * i;
    return { x: e + t * Math.cos(a), y: r + n * Math.sin(a) };
  },
  tangentAngle: function (e, r, t, n, i) {
    var a = 2 * Math.PI * i,
      o = Math.atan2(n * Math.cos(a), -t * Math.sin(a));
    return Zs(o);
  },
};
function IA(e, r, t, n, i, a, o, s) {
  return -1 * t * Math.cos(i) * Math.sin(s) - n * Math.sin(i) * Math.cos(s);
}
function LA(e, r, t, n, i, a, o, s) {
  return -1 * t * Math.sin(i) * Math.sin(s) + n * Math.cos(i) * Math.cos(s);
}
function PA(e, r, t) {
  return Math.atan((-r / e) * Math.tan(t));
}
function OA(e, r, t) {
  return Math.atan(r / (e * Math.tan(t)));
}
function Rv(e, r, t, n, i, a) {
  return t * Math.cos(i) * Math.cos(a) - n * Math.sin(i) * Math.sin(a) + e;
}
function $v(e, r, t, n, i, a) {
  return t * Math.sin(i) * Math.cos(a) + n * Math.cos(i) * Math.sin(a) + r;
}
function DA(e, r, t, n) {
  var i = Math.atan2(n * e, t * r);
  return (i + Math.PI * 2) % (Math.PI * 2);
}
function Nv(e, r, t) {
  return { x: e * Math.cos(t), y: r * Math.sin(t) };
}
function zv(e, r, t) {
  var n = Math.cos(t),
    i = Math.sin(t);
  return [e * n - r * i, e * i + r * n];
}
const BA = {
  box: function (e, r, t, n, i, a, o) {
    for (
      var s = PA(t, n, i), l = 1 / 0, u = -1 / 0, c = [a, o], h = -Math.PI * 2;
      h <= Math.PI * 2;
      h += Math.PI
    ) {
      var f = s + h;
      a < o ? a < f && f < o && c.push(f) : o < f && f < a && c.push(f);
    }
    for (var h = 0; h < c.length; h++) {
      var v = Rv(e, r, t, n, i, c[h]);
      v < l && (l = v), v > u && (u = v);
    }
    for (
      var d = OA(t, n, i), p = 1 / 0, g = -1 / 0, y = [a, o], h = -Math.PI * 2;
      h <= Math.PI * 2;
      h += Math.PI
    ) {
      var m = d + h;
      a < o ? a < m && m < o && y.push(m) : o < m && m < a && y.push(m);
    }
    for (var h = 0; h < y.length; h++) {
      var b = $v(e, r, t, n, i, y[h]);
      b < p && (p = b), b > g && (g = b);
    }
    return { x: l, y: p, width: u - l, height: g - p };
  },
  length: function (e, r, t, n, i, a, o) {},
  nearestPoint: function (e, r, t, n, i, a, o, s, l) {
    var u = zv(s - e, l - r, -i),
      c = u[0],
      h = u[1],
      f = kA.nearestPoint(0, 0, t, n, c, h),
      v = DA(t, n, f.x, f.y);
    v < a ? (f = Nv(t, n, a)) : v > o && (f = Nv(t, n, o));
    var d = zv(f.x, f.y, i);
    return { x: d[0] + e, y: d[1] + r };
  },
  pointDistance: function (e, r, t, n, i, a, o, s, l) {
    var u = this.nearestPoint(e, r, t, n, s, l);
    return ae(u.x, u.y, s, l);
  },
  pointAt: function (e, r, t, n, i, a, o, s) {
    var l = (o - a) * s + a;
    return { x: Rv(e, r, t, n, i, l), y: $v(e, r, t, n, i, l) };
  },
  tangentAngle: function (e, r, t, n, i, a, o, s) {
    var l = (o - a) * s + a,
      u = IA(e, r, t, n, i, a, o, l),
      c = LA(e, r, t, n, i, a, o, l);
    return Zs(Math.atan2(c, u));
  },
};
function Cy(e) {
  for (var r = 0, t = [], n = 0; n < e.length - 1; n++) {
    var i = e[n],
      a = e[n + 1],
      o = ae(i[0], i[1], a[0], a[1]),
      s = { from: i, to: a, length: o };
    t.push(s), (r += o);
  }
  return { segments: t, totalLength: r };
}
function RA(e) {
  if (e.length < 2) return 0;
  for (var r = 0, t = 0; t < e.length - 1; t++) {
    var n = e[t],
      i = e[t + 1];
    r += ae(n[0], n[1], i[0], i[1]);
  }
  return r;
}
function $A(e, r) {
  if (r > 1 || r < 0 || e.length < 2) return null;
  var t = Cy(e),
    n = t.segments,
    i = t.totalLength;
  if (i === 0) return { x: e[0][0], y: e[0][1] };
  for (var a = 0, o = null, s = 0; s < n.length; s++) {
    var l = n[s],
      u = l.from,
      c = l.to,
      h = l.length / i;
    if (r >= a && r <= a + h) {
      var f = (r - a) / h;
      o = Kt.pointAt(u[0], u[1], c[0], c[1], f);
      break;
    }
    a += h;
  }
  return o;
}
function NA(e, r) {
  if (r > 1 || r < 0 || e.length < 2) return 0;
  for (var t = Cy(e), n = t.segments, i = t.totalLength, a = 0, o = 0, s = 0; s < n.length; s++) {
    var l = n[s],
      u = l.from,
      c = l.to,
      h = l.length / i;
    if (r >= a && r <= a + h) {
      o = Math.atan2(c[1] - u[1], c[0] - u[0]);
      break;
    }
    a += h;
  }
  return o;
}
function zA(e, r, t) {
  for (var n = 1 / 0, i = 0; i < e.length - 1; i++) {
    var a = e[i],
      o = e[i + 1],
      s = Kt.pointDistance(a[0], a[1], o[0], o[1], r, t);
    s < n && (n = s);
  }
  return n;
}
const My = {
  box: function (e) {
    for (var r = [], t = [], n = 0; n < e.length; n++) {
      var i = e[n];
      r.push(i[0]), t.push(i[1]);
    }
    return Fi(r, t);
  },
  length: function (e) {
    return RA(e);
  },
  pointAt: function (e, r) {
    return $A(e, r);
  },
  pointDistance: function (e, r, t) {
    return zA(e, r, t);
  },
  tangentAngle: function (e, r) {
    return NA(e, r);
  },
};
function Gv(e, r) {
  return !e || !r
    ? e || r
    : {
        minX: Math.min(e.minX, r.minX),
        minY: Math.min(e.minY, r.minY),
        maxX: Math.max(e.maxX, r.maxX),
        maxY: Math.max(e.maxY, r.maxY),
      };
}
function rh(e, r) {
  var t = e.get('startArrowShape'),
    n = e.get('endArrowShape'),
    i = null,
    a = null;
  return (
    t && ((i = t.getCanvasBBox()), (r = Gv(r, i))),
    n && ((a = n.getCanvasBBox()), (r = Gv(r, a))),
    r
  );
}
function GA(e) {
  for (var r = e.attr(), t = r.points, n = [], i = [], a = 0; a < t.length; a++) {
    var o = t[a];
    n.push(o[0]), i.push(o[1]);
  }
  var s = Fi(n, i),
    l = s.x,
    u = s.y,
    c = s.width,
    h = s.height,
    f = { minX: l, minY: u, maxX: l + c, maxY: u + h };
  return (f = rh(e, f)), { x: f.minX, y: f.minY, width: f.maxX - f.minX, height: f.maxY - f.minY };
}
function VA(e) {
  for (var r = e.attr(), t = r.points, n = [], i = [], a = 0; a < t.length; a++) {
    var o = t[a];
    n.push(o[0]), i.push(o[1]);
  }
  return Fi(n, i);
}
var Ql = null;
function Ks() {
  if (!Ql) {
    var e = document.createElement('canvas');
    (e.width = 1), (e.height = 1), (Ql = e.getContext('2d'));
  }
  return Ql;
}
function Qs(e, r, t) {
  var n = 1;
  if (
    (et(e) &&
      (n = e.split(`
`).length),
    n > 1)
  ) {
    var i = HA(r, t);
    return r * n + i * (n - 1);
  }
  return r;
}
function HA(e, r) {
  return r ? r - e : e * 0.14;
}
function YA(e, r) {
  var t = Ks(),
    n = 0;
  if ($(e) || e === '') return n;
  if (
    (t.save(),
    (t.font = r),
    et(e) &&
      e.includes(`
`))
  ) {
    var i = e.split(`
`);
    M(i, function (a) {
      var o = t.measureText(a).width;
      n < o && (n = o);
    });
  } else n = t.measureText(e).width;
  return t.restore(), n;
}
function Js(e) {
  var r = e.fontSize,
    t = e.fontFamily,
    n = e.fontWeight,
    i = e.fontStyle,
    a = e.fontVariant;
  return [i, a, n, r + 'px', t].join(' ').trim();
}
function WA(e) {
  var r = e.attr(),
    t = r.x,
    n = r.y,
    i = r.text,
    a = r.fontSize,
    o = r.lineHeight,
    s = r.font;
  s || (s = Js(r));
  var l = YA(i, s),
    u;
  if (!l) u = { x: t, y: n, width: 0, height: 0 };
  else {
    var c = r.textAlign,
      h = r.textBaseline,
      f = Qs(i, a, o),
      v = { x: t, y: n - f };
    c && (c === 'end' || c === 'right' ? (v.x -= l) : c === 'center' && (v.x -= l / 2)),
      h && (h === 'top' ? (v.y += f) : h === 'middle' && (v.y += f / 2)),
      (u = { x: v.x, y: v.y, width: l, height: f });
  }
  return u;
}
var XA = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/gi,
  _A = /[^\s\,]+/gi;
function jA(e) {
  var r = e || [];
  if (N(r)) return r;
  if (et(r))
    return (
      (r = r.match(XA)),
      M(r, function (t, n) {
        if (((t = t.match(_A)), t[0].length > 1)) {
          var i = t[0].charAt(0);
          t.splice(1, 0, t[0].substr(1)), (t[0] = i);
        }
        M(t, function (a, o) {
          isNaN(a) || (t[o] = +a);
        }),
          (r[n] = t);
      }),
      r
    );
}
function UA(e, r, t, n) {
  var i = [],
    a = !!n,
    o,
    s,
    l,
    u,
    c,
    h,
    f;
  if (a) {
    (l = n[0]), (u = n[1]);
    for (var v = 0, d = e.length; v < d; v += 1) {
      var p = e[v];
      (l = Ut([0, 0], l, p)), (u = qt([0, 0], u, p));
    }
  }
  for (var v = 0, g = e.length; v < g; v += 1) {
    var p = e[v];
    if (v === 0 && !t) f = p;
    else if (v === g - 1 && !t) (h = p), i.push(f), i.push(h);
    else {
      var y = [v ? v - 1 : g - 1, v - 1][t ? 0 : 1];
      (o = e[y]), (s = e[t ? (v + 1) % g : v + 1]);
      var m = [0, 0];
      (m = Sn(m, s, o)), (m = se(m, m, r));
      var b = ci(p, o),
        w = ci(p, s),
        S = b + w;
      S !== 0 && ((b /= S), (w /= S));
      var C = se([0, 0], m, -b),
        F = se([0, 0], m, w);
      (h = er([0, 0], p, C)),
        (c = er([0, 0], p, F)),
        (c = Ut([0, 0], c, qt([0, 0], s, p))),
        (c = qt([0, 0], c, Ut([0, 0], s, p))),
        (C = Sn([0, 0], c, p)),
        (C = se([0, 0], C, -b / w)),
        (h = er([0, 0], p, C)),
        (h = Ut([0, 0], h, qt([0, 0], o, p))),
        (h = qt([0, 0], h, Ut([0, 0], o, p))),
        (F = Sn([0, 0], p, h)),
        (F = se([0, 0], F, w / b)),
        (c = er([0, 0], p, F)),
        a &&
          ((h = qt([0, 0], h, l)),
          (h = Ut([0, 0], h, u)),
          (c = qt([0, 0], c, l)),
          (c = Ut([0, 0], c, u))),
        i.push(f),
        i.push(h),
        (f = c);
    }
  }
  return t && i.push(i.shift()), i;
}
function qA(e, r, t) {
  r === void 0 && (r = !1),
    t === void 0 &&
      (t = [
        [0, 0],
        [1, 1],
      ]);
  for (var n = !!r, i = [], a = 0, o = e.length; a < o; a += 2) i.push([e[a], e[a + 1]]);
  for (var s = UA(i, 0.4, n, t), l = i.length, u = [], c, h, f, a = 0; a < l - 1; a += 1)
    (c = s[a * 2]),
      (h = s[a * 2 + 1]),
      (f = i[a + 1]),
      u.push(['C', c[0], c[1], h[0], h[1], f[0], f[1]]);
  return (
    n &&
      ((c = s[l]), (h = s[l + 1]), (f = i[0]), u.push(['C', c[0], c[1], h[0], h[1], f[0], f[1]])),
    u
  );
}
var oa = `	
\v\f\r   ᠎             　\u2028\u2029`,
  ZA = new RegExp(
    '([a-z])[' + oa + ',]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[' + oa + ']*,?[' + oa + ']*)+)',
    'ig',
  ),
  KA = new RegExp('(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[' + oa + ']*,?[' + oa + ']*', 'ig');
function Ay(e) {
  if (!e) return null;
  if (N(e)) return e;
  var r = { a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0 },
    t = [];
  return (
    String(e).replace(ZA, function (n, i, a) {
      var o = [],
        s = i.toLowerCase();
      if (
        (a.replace(KA, function (l, u) {
          u && o.push(+u);
        }),
        s === 'm' &&
          o.length > 2 &&
          (t.push([i].concat(o.splice(0, 2))), (s = 'l'), (i = i === 'm' ? 'l' : 'L')),
        s === 'o' && o.length === 1 && t.push([i, o[0]]),
        s === 'r')
      )
        t.push([i].concat(o));
      else for (; o.length >= r[s] && (t.push([i].concat(o.splice(0, r[s]))), !!r[s]); );
      return '';
    }),
    t
  );
}
var QA = /[a-z]/;
function Vv(e, r) {
  return [r[0] + (r[0] - e[0]), r[1] + (r[1] - e[1])];
}
function Fy(e) {
  var r = Ay(e);
  if (!r || !r.length) return [['M', 0, 0]];
  for (var t = !1, n = 0; n < r.length; n++) {
    var i = r[n][0];
    if (QA.test(i) || ['V', 'H', 'T', 'S'].indexOf(i) >= 0) {
      t = !0;
      break;
    }
  }
  if (!t) return r;
  var a = [],
    o = 0,
    s = 0,
    l = 0,
    u = 0,
    c = 0,
    h = r[0];
  (h[0] === 'M' || h[0] === 'm') &&
    ((o = +h[1]), (s = +h[2]), (l = o), (u = s), c++, (a[0] = ['M', o, s]));
  for (var n = c, f = r.length; n < f; n++) {
    var v = r[n],
      d = a[n - 1],
      p = [],
      i = v[0],
      g = i.toUpperCase();
    if (i !== g)
      switch (((p[0] = g), g)) {
        case 'A':
          (p[1] = v[1]),
            (p[2] = v[2]),
            (p[3] = v[3]),
            (p[4] = v[4]),
            (p[5] = v[5]),
            (p[6] = +v[6] + o),
            (p[7] = +v[7] + s);
          break;
        case 'V':
          p[1] = +v[1] + s;
          break;
        case 'H':
          p[1] = +v[1] + o;
          break;
        case 'M':
          (l = +v[1] + o), (u = +v[2] + s), (p[1] = l), (p[2] = u);
          break;
        default:
          for (var y = 1, m = v.length; y < m; y++) p[y] = +v[y] + (y % 2 ? o : s);
      }
    else p = r[n];
    switch (g) {
      case 'Z':
        (o = +l), (s = +u);
        break;
      case 'H':
        (o = p[1]), (p = ['L', o, s]);
        break;
      case 'V':
        (s = p[1]), (p = ['L', o, s]);
        break;
      case 'T':
        (o = p[1]), (s = p[2]);
        var b = Vv([d[1], d[2]], [d[3], d[4]]);
        p = ['Q', b[0], b[1], o, s];
        break;
      case 'S':
        (o = p[p.length - 2]), (s = p[p.length - 1]);
        var w = d.length,
          S = Vv([d[w - 4], d[w - 3]], [d[w - 2], d[w - 1]]);
        p = ['C', S[0], S[1], p[1], p[2], o, s];
        break;
      case 'M':
        (l = p[p.length - 2]), (u = p[p.length - 1]);
        break;
      default:
        (o = p[p.length - 2]), (s = p[p.length - 1]);
    }
    a.push(p);
  }
  return a;
}
function mo(e) {
  return Math.sqrt(e[0] * e[0] + e[1] * e[1]);
}
function tc(e, r) {
  return mo(e) * mo(r) ? (e[0] * r[0] + e[1] * r[1]) / (mo(e) * mo(r)) : 1;
}
function Hv(e, r) {
  return (e[0] * r[1] < e[1] * r[0] ? -1 : 1) * Math.acos(tc(e, r));
}
function ec(e, r) {
  return e[0] === r[0] && e[1] === r[1];
}
function JA(e, r) {
  var t = r[1],
    n = r[2],
    i = Vc(Hc(r[3]), Math.PI * 2),
    a = r[4],
    o = r[5],
    s = e[0],
    l = e[1],
    u = r[6],
    c = r[7],
    h = (Math.cos(i) * (s - u)) / 2 + (Math.sin(i) * (l - c)) / 2,
    f = (-1 * Math.sin(i) * (s - u)) / 2 + (Math.cos(i) * (l - c)) / 2,
    v = (h * h) / (t * t) + (f * f) / (n * n);
  v > 1 && ((t *= Math.sqrt(v)), (n *= Math.sqrt(v)));
  var d = t * t * (f * f) + n * n * (h * h),
    p = d ? Math.sqrt((t * t * (n * n) - d) / d) : 1;
  a === o && (p *= -1), isNaN(p) && (p = 0);
  var g = n ? (p * t * f) / n : 0,
    y = t ? (p * -n * h) / t : 0,
    m = (s + u) / 2 + Math.cos(i) * g - Math.sin(i) * y,
    b = (l + c) / 2 + Math.sin(i) * g + Math.cos(i) * y,
    w = [(h - g) / t, (f - y) / n],
    S = [(-1 * h - g) / t, (-1 * f - y) / n],
    C = Hv([1, 0], w),
    F = Hv(w, S);
  return (
    tc(w, S) <= -1 && (F = Math.PI),
    tc(w, S) >= 1 && (F = 0),
    o === 0 && F > 0 && (F = F - 2 * Math.PI),
    o === 1 && F < 0 && (F = F + 2 * Math.PI),
    {
      cx: m,
      cy: b,
      rx: ec(e, [u, c]) ? 0 : t,
      ry: ec(e, [u, c]) ? 0 : n,
      startAngle: C,
      endAngle: C + F,
      xRotation: i,
      arcFlag: a,
      sweepFlag: o,
    }
  );
}
function Yv(e, r) {
  return [r[0] + (r[0] - e[0]), r[1] + (r[1] - e[1])];
}
function Ey(e) {
  e = jA(e);
  for (var r = [], t = null, n = null, i = null, a = 0, o = e.length, s = 0; s < o; s++) {
    var l = e[s];
    n = e[s + 1];
    var u = l[0],
      c = { command: u, prePoint: t, params: l, startTangent: null, endTangent: null };
    switch (u) {
      case 'M':
        (i = [l[1], l[2]]), (a = s);
        break;
      case 'A':
        var h = JA(t, l);
        c.arcParams = h;
        break;
    }
    if (u === 'Z') (t = i), (n = e[a + 1]);
    else {
      var f = l.length;
      t = [l[f - 2], l[f - 1]];
    }
    n && n[0] === 'Z' && ((n = e[a]), r[a] && (r[a].prePoint = t)),
      (c.currentPoint = t),
      r[a] && ec(t, r[a].currentPoint) && (r[a].prePoint = c.prePoint);
    var v = n ? [n[n.length - 2], n[n.length - 1]] : null;
    c.nextPoint = v;
    var d = c.prePoint;
    if (['L', 'H', 'V'].includes(u))
      (c.startTangent = [d[0] - t[0], d[1] - t[1]]), (c.endTangent = [t[0] - d[0], t[1] - d[1]]);
    else if (u === 'Q') {
      var p = [l[1], l[2]];
      (c.startTangent = [d[0] - p[0], d[1] - p[1]]), (c.endTangent = [t[0] - p[0], t[1] - p[1]]);
    } else if (u === 'T') {
      var g = r[s - 1],
        p = Yv(g.currentPoint, d);
      g.command === 'Q'
        ? ((c.command = 'Q'),
          (c.startTangent = [d[0] - p[0], d[1] - p[1]]),
          (c.endTangent = [t[0] - p[0], t[1] - p[1]]))
        : ((c.command = 'TL'),
          (c.startTangent = [d[0] - t[0], d[1] - t[1]]),
          (c.endTangent = [t[0] - d[0], t[1] - d[1]]));
    } else if (u === 'C') {
      var y = [l[1], l[2]],
        m = [l[3], l[4]];
      (c.startTangent = [d[0] - y[0], d[1] - y[1]]),
        (c.endTangent = [t[0] - m[0], t[1] - m[1]]),
        c.startTangent[0] === 0 &&
          c.startTangent[1] === 0 &&
          (c.startTangent = [y[0] - m[0], y[1] - m[1]]),
        c.endTangent[0] === 0 &&
          c.endTangent[1] === 0 &&
          (c.endTangent = [m[0] - y[0], m[1] - y[1]]);
    } else if (u === 'S') {
      var g = r[s - 1],
        y = Yv(g.currentPoint, d),
        m = [l[1], l[2]];
      g.command === 'C'
        ? ((c.command = 'C'),
          (c.startTangent = [d[0] - y[0], d[1] - y[1]]),
          (c.endTangent = [t[0] - m[0], t[1] - m[1]]))
        : ((c.command = 'SQ'),
          (c.startTangent = [d[0] - m[0], d[1] - m[1]]),
          (c.endTangent = [t[0] - m[0], t[1] - m[1]]));
    } else if (u === 'A') {
      var b = 0.001,
        w = c.arcParams || {},
        S = w.cx,
        C = S === void 0 ? 0 : S,
        F = w.cy,
        E = F === void 0 ? 0 : F,
        I = w.rx,
        T = I === void 0 ? 0 : I,
        P = w.ry,
        R = P === void 0 ? 0 : P,
        B = w.sweepFlag,
        G = B === void 0 ? 0 : B,
        j = w.startAngle,
        D = j === void 0 ? 0 : j,
        z = w.endAngle,
        X = z === void 0 ? 0 : z;
      G === 0 && (b *= -1);
      var Y = T * Math.cos(D - b) + C,
        V = R * Math.sin(D - b) + E;
      c.startTangent = [Y - i[0], V - i[1]];
      var W = T * Math.cos(D + X + b) + C,
        tt = R * Math.sin(D + X - b) + E;
      c.endTangent = [d[0] - W, d[1] - tt];
    }
    r.push(c);
  }
  return r;
}
var Wv = function (e, r, t) {
  return e >= r && e <= t;
};
function tF(e, r, t, n) {
  var i = 0.001,
    a = { x: t.x - e.x, y: t.y - e.y },
    o = { x: r.x - e.x, y: r.y - e.y },
    s = { x: n.x - t.x, y: n.y - t.y },
    l = o.x * s.y - o.y * s.x,
    u = l * l,
    c = o.x * o.x + o.y * o.y,
    h = s.x * s.x + s.y * s.y,
    f = null;
  if (u > i * c * h) {
    var v = (a.x * s.y - a.y * s.x) / l,
      d = (a.x * o.y - a.y * o.x) / l;
    Wv(v, 0, 1) && Wv(d, 0, 1) && (f = { x: e.x + v * o.x, y: e.y + v * o.y });
  }
  return f;
}
var eF = 1e-6;
function Jl(e) {
  return Math.abs(e) < eF ? 0 : e < 0 ? -1 : 1;
}
function rF(e, r, t) {
  return (
    (t[0] - e[0]) * (r[1] - e[1]) === (r[0] - e[0]) * (t[1] - e[1]) &&
    Math.min(e[0], r[0]) <= t[0] &&
    t[0] <= Math.max(e[0], r[0]) &&
    Math.min(e[1], r[1]) <= t[1] &&
    t[1] <= Math.max(e[1], r[1])
  );
}
function Xv(e, r, t) {
  var n = !1,
    i = e.length;
  if (i <= 2) return !1;
  for (var a = 0; a < i; a++) {
    var o = e[a],
      s = e[(a + 1) % i];
    if (rF(o, s, [r, t])) return !0;
    Jl(o[1] - t) > 0 != Jl(s[1] - t) > 0 &&
      Jl(r - ((t - o[1]) * (o[0] - s[0])) / (o[1] - s[1]) - o[0]) < 0 &&
      (n = !n);
  }
  return n;
}
function _v(e) {
  for (var r = [], t = e.length, n = 0; n < t - 1; n++) {
    var i = e[n],
      a = e[n + 1];
    r.push({ from: { x: i[0], y: i[1] }, to: { x: a[0], y: a[1] } });
  }
  if (r.length > 1) {
    var o = e[0],
      s = e[t - 1];
    r.push({ from: { x: s[0], y: s[1] }, to: { x: o[0], y: o[1] } });
  }
  return r;
}
function nF(e, r) {
  var t = !1;
  return (
    M(e, function (n) {
      if (tF(n.from, n.to, r.from, r.to)) return (t = !0), !1;
    }),
    t
  );
}
function jv(e) {
  var r = e.map(function (n) {
      return n[0];
    }),
    t = e.map(function (n) {
      return n[1];
    });
  return {
    minX: Math.min.apply(null, r),
    maxX: Math.max.apply(null, r),
    minY: Math.min.apply(null, t),
    maxY: Math.max.apply(null, t),
  };
}
function iF(e, r) {
  return !(r.minX > e.maxX || r.maxX < e.minX || r.minY > e.maxY || r.maxY < e.minY);
}
function aF(e, r) {
  if (e.length < 2 || r.length < 2) return !1;
  var t = jv(e),
    n = jv(r);
  if (!iF(t, n)) return !1;
  var i = !1;
  if (
    (M(r, function (l) {
      if (Xv(e, l[0], l[1])) return (i = !0), !1;
    }),
    i ||
      (M(e, function (l) {
        if (Xv(r, l[0], l[1])) return (i = !0), !1;
      }),
      i))
  )
    return !0;
  var a = _v(e),
    o = _v(r),
    s = !1;
  return (
    M(o, function (l) {
      if (nF(a, l)) return (s = !0), !1;
    }),
    s
  );
}
function oF(e, r) {
  for (var t = [], n = [], i = [], a = 0; a < e.length; a++) {
    var o = e[a],
      s = o.currentPoint,
      l = o.params,
      u = o.prePoint,
      c = void 0;
    switch (o.command) {
      case 'Q':
        c = by.box(u[0], u[1], l[1], l[2], l[3], l[4]);
        break;
      case 'C':
        c = aa.box(u[0], u[1], l[1], l[2], l[3], l[4], l[5], l[6]);
        break;
      case 'A':
        var h = o.arcParams;
        c = BA.box(h.cx, h.cy, h.rx, h.ry, h.xRotation, h.startAngle, h.endAngle);
        break;
      default:
        t.push(s[0]), n.push(s[1]);
        break;
    }
    c && ((o.box = c), t.push(c.x, c.x + c.width), n.push(c.y, c.y + c.height)),
      r && (o.command === 'L' || o.command === 'M') && o.prePoint && o.nextPoint && i.push(o);
  }
  (t = t.filter(function (y) {
    return !Number.isNaN(y) && y !== 1 / 0 && y !== -1 / 0;
  })),
    (n = n.filter(function (y) {
      return !Number.isNaN(y) && y !== 1 / 0 && y !== -1 / 0;
    }));
  var f = $e(t),
    v = $e(n),
    d = Te(t),
    p = Te(n);
  if (i.length === 0) return { x: f, y: v, width: d - f, height: p - v };
  for (var a = 0; a < i.length; a++) {
    var o = i[a],
      s = o.currentPoint,
      g = void 0;
    s[0] === f
      ? ((g = xo(o, r)), (f = f - g.xExtra))
      : s[0] === d && ((g = xo(o, r)), (d = d + g.xExtra)),
      s[1] === v
        ? ((g = xo(o, r)), (v = v - g.yExtra))
        : s[1] === p && ((g = xo(o, r)), (p = p + g.yExtra));
  }
  return { x: f, y: v, width: d - f, height: p - v };
}
function xo(e, r) {
  var t = e.prePoint,
    n = e.currentPoint,
    i = e.nextPoint,
    a = Math.pow(n[0] - t[0], 2) + Math.pow(n[1] - t[1], 2),
    o = Math.pow(n[0] - i[0], 2) + Math.pow(n[1] - i[1], 2),
    s = Math.pow(t[0] - i[0], 2) + Math.pow(t[1] - i[1], 2),
    l = Math.acos((a + o - s) / (2 * Math.sqrt(a) * Math.sqrt(o)));
  if (!l || Math.sin(l) === 0 || Zt(l, 0)) return { xExtra: 0, yExtra: 0 };
  var u = Math.abs(Math.atan2(i[1] - n[1], i[0] - n[0])),
    c = Math.abs(Math.atan2(i[0] - n[0], i[1] - n[1]));
  (u = u > Math.PI / 2 ? Math.PI - u : u), (c = c > Math.PI / 2 ? Math.PI - c : c);
  var h = {
    xExtra: Math.cos(l / 2 - u) * ((r / 2) * (1 / Math.sin(l / 2))) - r / 2 || 0,
    yExtra: Math.cos(c - l / 2) * ((r / 2) * (1 / Math.sin(l / 2))) - r / 2 || 0,
  };
  return h;
}
function sF(e) {
  var r = e.attr(),
    t = r.path,
    n = r.stroke,
    i = n ? r.lineWidth : 0,
    a = e.get('segments') || Ey(t),
    o = oF(a, i),
    s = o.x,
    l = o.y,
    u = o.width,
    c = o.height,
    h = { minX: s, minY: l, maxX: s + u, maxY: l + c };
  return (h = rh(e, h)), { x: h.minX, y: h.minY, width: h.maxX - h.minX, height: h.maxY - h.minY };
}
function lF(e) {
  var r = e.attr(),
    t = r.x1,
    n = r.y1,
    i = r.x2,
    a = r.y2,
    o = Math.min(t, i),
    s = Math.max(t, i),
    l = Math.min(n, a),
    u = Math.max(n, a),
    c = { minX: o, maxX: s, minY: l, maxY: u };
  return (c = rh(e, c)), { x: c.minX, y: c.minY, width: c.maxX - c.minX, height: c.maxY - c.minY };
}
function uF(e) {
  var r = e.attr(),
    t = r.x,
    n = r.y,
    i = r.rx,
    a = r.ry;
  return { x: t - i, y: n - a, width: i * 2, height: a * 2 };
}
ze('rect', yy);
ze('image', yy);
ze('circle', my);
ze('marker', my);
ze('polyline', GA);
ze('polygon', VA);
ze('text', WA);
ze('path', sF);
ze('line', lF);
ze('ellipse', uF);
var Uv = 0,
  cF = 1 / 2,
  hF = 1 / 2,
  fF = 0.05,
  tl = (function () {
    function e(r) {
      var t = r.xField,
        n = r.yField,
        i = r.adjustNames,
        a = i === void 0 ? ['x', 'y'] : i,
        o = r.dimValuesMap;
      (this.adjustNames = a), (this.xField = t), (this.yField = n), (this.dimValuesMap = o);
    }
    return (
      (e.prototype.isAdjust = function (r) {
        return this.adjustNames.indexOf(r) >= 0;
      }),
      (e.prototype.getAdjustRange = function (r, t, n) {
        var i = this.yField,
          a = n.indexOf(t),
          o = n.length,
          s,
          l;
        return (
          !i && this.isAdjust('y')
            ? ((s = 0), (l = 1))
            : o > 1
            ? ((s = n[a === 0 ? 0 : a - 1]),
              (l = n[a === o - 1 ? o - 1 : a + 1]),
              a !== 0 ? (s += (t - s) / 2) : (s -= (l - t) / 2),
              a !== o - 1 ? (l -= (l - t) / 2) : (l += (t - n[o - 2]) / 2))
            : ((s = t === 0 ? 0 : t - 0.5), (l = t === 0 ? 1 : t + 0.5)),
          { pre: s, next: l }
        );
      }),
      (e.prototype.adjustData = function (r, t) {
        var n = this,
          i = this.getDimValues(t);
        M(r, function (a, o) {
          M(i, function (s, l) {
            n.adjustDim(l, s, a, o);
          });
        });
      }),
      (e.prototype.groupData = function (r, t) {
        return (
          M(r, function (n) {
            n[t] === void 0 && (n[t] = Uv);
          }),
          Ae(r, t)
        );
      }),
      (e.prototype.adjustDim = function (r, t, n, i) {}),
      (e.prototype.getDimValues = function (r) {
        var t = this,
          n = t.xField,
          i = t.yField,
          a = bt({}, this.dimValuesMap),
          o = [];
        if (
          (n && this.isAdjust('x') && o.push(n),
          i && this.isAdjust('y') && o.push(i),
          o.forEach(function (l) {
            (a && a[l]) ||
              (a[l] = je(r, l).sort(function (u, c) {
                return u - c;
              }));
          }),
          !i && this.isAdjust('y'))
        ) {
          var s = 'y';
          a[s] = [Uv, 1];
        }
        return a;
      }),
      e
    );
  })(),
  Ty = {},
  ky = function (e) {
    return Ty[e.toLowerCase()];
  },
  el = function (e, r) {
    if (ky(e)) throw new Error("Adjust type '" + e + "' existed.");
    Ty[e.toLowerCase()] = r;
  };
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ var rc = function (
  e,
  r,
) {
  return (
    (rc =
      Object.setPrototypeOf ||
      ({ __proto__: [] } instanceof Array &&
        function (t, n) {
          t.__proto__ = n;
        }) ||
      function (t, n) {
        for (var i in n) n.hasOwnProperty(i) && (t[i] = n[i]);
      }),
    rc(e, r)
  );
};
function rl(e, r) {
  rc(e, r);
  function t() {
    this.constructor = e;
  }
  e.prototype = r === null ? Object.create(r) : ((t.prototype = r.prototype), new t());
}
var rr = function () {
    return (
      (rr =
        Object.assign ||
        function (r) {
          for (var t, n = 1, i = arguments.length; n < i; n++) {
            t = arguments[n];
            for (var a in t) Object.prototype.hasOwnProperty.call(t, a) && (r[a] = t[a]);
          }
          return r;
        }),
      rr.apply(this, arguments)
    );
  },
  vF = (function (e) {
    rl(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      (n.cacheMap = {}), (n.adjustDataArray = []), (n.mergeData = []);
      var i = t.marginRatio,
        a = i === void 0 ? cF : i,
        o = t.dodgeRatio,
        s = o === void 0 ? hF : o,
        l = t.dodgeBy,
        u = t.intervalPadding,
        c = t.dodgePadding,
        h = t.xDimensionLength,
        f = t.groupNum,
        v = t.defaultSize,
        d = t.maxColumnWidth,
        p = t.minColumnWidth,
        g = t.columnWidthRatio,
        y = t.customOffset;
      return (
        (n.marginRatio = a),
        (n.dodgeRatio = s),
        (n.dodgeBy = l),
        (n.intervalPadding = u),
        (n.dodgePadding = c),
        (n.xDimensionLegenth = h),
        (n.groupNum = f),
        (n.defaultSize = v),
        (n.maxColumnWidth = d),
        (n.minColumnWidth = p),
        (n.columnWidthRatio = g),
        (n.customOffset = y),
        n
      );
    }
    return (
      (r.prototype.process = function (t) {
        var n = oe(t),
          i = Ee(n),
          a = this.dodgeBy,
          o = a ? qS(i, a) : n;
        return (
          (this.cacheMap = {}),
          (this.adjustDataArray = o),
          (this.mergeData = i),
          this.adjustData(o, i),
          (this.adjustDataArray = []),
          (this.mergeData = []),
          n
        );
      }),
      (r.prototype.adjustDim = function (t, n, i, a) {
        var o = this,
          s = this.customOffset,
          l = this.getDistribution(t),
          u = this.groupData(i, t);
        return (
          M(u, function (c, h) {
            var f;
            n.length === 1
              ? (f = { pre: n[0] - 1, next: n[0] + 1 })
              : (f = o.getAdjustRange(t, parseFloat(h), n)),
              M(c, function (v) {
                var d = v[t],
                  p = l[d],
                  g = p.indexOf(a);
                if ($(s)) v[t] = o.getDodgeOffset(f, g, p.length);
                else {
                  var y = f.pre,
                    m = f.next;
                  v[t] = U(s) ? s(v, f) : (y + m) / 2 + s;
                }
              });
          }),
          []
        );
      }),
      (r.prototype.getDodgeOffset = function (t, n, i) {
        var a = this,
          o = a.dodgeRatio,
          s = a.marginRatio,
          l = a.intervalPadding,
          u = a.dodgePadding,
          c = t.pre,
          h = t.next,
          f = h - c,
          v;
        if (!$(l) && $(u) && l >= 0) {
          var d = this.getIntervalOnlyOffset(i, n);
          v = c + d;
        } else if (!$(u) && $(l) && u >= 0) {
          var d = this.getDodgeOnlyOffset(i, n);
          v = c + d;
        } else if (!$(l) && !$(u) && l >= 0 && u >= 0) {
          var d = this.getIntervalAndDodgeOffset(i, n);
          v = c + d;
        } else {
          var p = (f * o) / i,
            g = s * p,
            d =
              (1 / 2) * (f - i * p - (i - 1) * g) +
              ((n + 1) * p + n * g) -
              (1 / 2) * p -
              (1 / 2) * f;
          v = (c + h) / 2 + d;
        }
        return v;
      }),
      (r.prototype.getIntervalOnlyOffset = function (t, n) {
        var i = this,
          a = i.defaultSize,
          o = i.intervalPadding,
          s = i.xDimensionLegenth,
          l = i.groupNum,
          u = i.dodgeRatio,
          c = i.maxColumnWidth,
          h = i.minColumnWidth,
          f = i.columnWidthRatio,
          v = o / s,
          d = (((1 - (l - 1) * v) / l) * u) / (t - 1),
          p = ((1 - v * (l - 1)) / l - d * (t - 1)) / t;
        if (((p = $(f) ? p : (1 / l / t) * f), !$(c))) {
          var g = c / s;
          p = Math.min(p, g);
        }
        if (!$(h)) {
          var y = h / s;
          p = Math.max(p, y);
        }
        (p = a ? a / s : p), (d = ((1 - (l - 1) * v) / l - t * p) / (t - 1));
        var m = ((1 / 2 + n) * p + n * d + (1 / 2) * v) * l - v / 2;
        return m;
      }),
      (r.prototype.getDodgeOnlyOffset = function (t, n) {
        var i = this,
          a = i.defaultSize,
          o = i.dodgePadding,
          s = i.xDimensionLegenth,
          l = i.groupNum,
          u = i.marginRatio,
          c = i.maxColumnWidth,
          h = i.minColumnWidth,
          f = i.columnWidthRatio,
          v = o / s,
          d = (1 * u) / (l - 1),
          p = ((1 - d * (l - 1)) / l - v * (t - 1)) / t;
        if (((p = f ? (1 / l / t) * f : p), !$(c))) {
          var g = c / s;
          p = Math.min(p, g);
        }
        if (!$(h)) {
          var y = h / s;
          p = Math.max(p, y);
        }
        (p = a ? a / s : p), (d = (1 - (p * t + v * (t - 1)) * l) / (l - 1));
        var m = ((1 / 2 + n) * p + n * v + (1 / 2) * d) * l - d / 2;
        return m;
      }),
      (r.prototype.getIntervalAndDodgeOffset = function (t, n) {
        var i = this,
          a = i.intervalPadding,
          o = i.dodgePadding,
          s = i.xDimensionLegenth,
          l = i.groupNum,
          u = a / s,
          c = o / s,
          h = ((1 - u * (l - 1)) / l - c * (t - 1)) / t,
          f = ((1 / 2 + n) * h + n * c + (1 / 2) * u) * l - u / 2;
        return f;
      }),
      (r.prototype.getDistribution = function (t) {
        var n = this.adjustDataArray,
          i = this.cacheMap,
          a = i[t];
        return (
          a ||
            ((a = {}),
            M(n, function (o, s) {
              var l = je(o, t);
              l.length || l.push(0),
                M(l, function (u) {
                  a[u] || (a[u] = []), a[u].push(s);
                });
            }),
            (i[t] = a)),
          a
        );
      }),
      r
    );
  })(tl);
function dF(e, r) {
  return (r - e) * Math.random() + e;
}
var pF = (function (e) {
    rl(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.process = function (t) {
        var n = oe(t),
          i = Ee(n);
        return this.adjustData(n, i), n;
      }),
      (r.prototype.adjustDim = function (t, n, i) {
        var a = this,
          o = this.groupData(i, t);
        return M(o, function (s, l) {
          return a.adjustGroup(s, t, parseFloat(l), n);
        });
      }),
      (r.prototype.getAdjustOffset = function (t) {
        var n = t.pre,
          i = t.next,
          a = (i - n) * fF;
        return dF(n + a, i - a);
      }),
      (r.prototype.adjustGroup = function (t, n, i, a) {
        var o = this,
          s = this.getAdjustRange(n, i, a);
        return (
          M(t, function (l) {
            l[n] = o.getAdjustOffset(s);
          }),
          t
        );
      }),
      r
    );
  })(tl),
  tu = vC,
  gF = (function (e) {
    rl(r, e);
    function r(t) {
      var n = e.call(this, t) || this,
        i = t.adjustNames,
        a = i === void 0 ? ['y'] : i,
        o = t.height,
        s = o === void 0 ? NaN : o,
        l = t.size,
        u = l === void 0 ? 10 : l,
        c = t.reverseOrder,
        h = c === void 0 ? !1 : c;
      return (n.adjustNames = a), (n.height = s), (n.size = u), (n.reverseOrder = h), n;
    }
    return (
      (r.prototype.process = function (t) {
        var n = this,
          i = n.yField,
          a = n.reverseOrder,
          o = i ? this.processStack(t) : this.processOneDimStack(t);
        return a ? this.reverse(o) : o;
      }),
      (r.prototype.reverse = function (t) {
        return t.slice(0).reverse();
      }),
      (r.prototype.processStack = function (t) {
        var n = this,
          i = n.xField,
          a = n.yField,
          o = n.reverseOrder,
          s = o ? this.reverse(t) : t,
          l = new tu(),
          u = new tu();
        return s.map(function (c) {
          return c.map(function (h) {
            var f,
              v = A(h, i, 0),
              d = A(h, [a]),
              p = v.toString();
            if (((d = N(d) ? d[1] : d), !$(d))) {
              var g = d >= 0 ? l : u;
              g.has(p) || g.set(p, 0);
              var y = g.get(p),
                m = d + y;
              return g.set(p, m), rr(rr({}, h), ((f = {}), (f[a] = [y, m]), f));
            }
            return h;
          });
        });
      }),
      (r.prototype.processOneDimStack = function (t) {
        var n = this,
          i = this,
          a = i.xField,
          o = i.height,
          s = i.reverseOrder,
          l = 'y',
          u = s ? this.reverse(t) : t,
          c = new tu();
        return u.map(function (h) {
          return h.map(function (f) {
            var v,
              d = n.size,
              p = f[a],
              g = (d * 2) / o;
            c.has(p) || c.set(p, g / 2);
            var y = c.get(p);
            return c.set(p, y + g), rr(rr({}, f), ((v = {}), (v[l] = y), v));
          });
        });
      }),
      r
    );
  })(tl),
  yF = (function (e) {
    rl(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.process = function (t) {
        var n = Ee(t),
          i = this,
          a = i.xField,
          o = i.yField,
          s = this.getXValuesMaxMap(n),
          l = Math.max.apply(
            Math,
            Object.keys(s).map(function (u) {
              return s[u];
            }),
          );
        return kt(t, function (u) {
          return kt(u, function (c) {
            var h,
              f,
              v = c[o],
              d = c[a];
            if (N(v)) {
              var p = (l - s[d]) / 2;
              return rr(
                rr({}, c),
                ((h = {}),
                (h[o] = kt(v, function (y) {
                  return p + y;
                })),
                h),
              );
            }
            var g = (l - v) / 2;
            return rr(rr({}, c), ((f = {}), (f[o] = [g, v + g]), f));
          });
        });
      }),
      (r.prototype.getXValuesMaxMap = function (t) {
        var n = this,
          i = this,
          a = i.xField,
          o = i.yField,
          s = Ae(t, function (l) {
            return l[a];
          });
        return uC(s, function (l) {
          return n.getDimMaxValue(l, o);
        });
      }),
      (r.prototype.getDimMaxValue = function (t, n) {
        var i = kt(t, function (o) {
            return A(o, n, []);
          }),
          a = Ee(i);
        return Math.max.apply(Math, a);
      }),
      r
    );
  })(tl);
el('Dodge', vF);
el('Jitter', pF);
el('Stack', gF);
el('Symmetric', yF);
var qv = function (e, r) {
    return et(r) ? r : e.invert(e.scale(r));
  },
  Ua = (function () {
    function e(r) {
      (this.names = []),
        (this.scales = []),
        (this.linear = !1),
        (this.values = []),
        (this.callback = function () {
          return [];
        }),
        this._parseCfg(r);
    }
    return (
      (e.prototype.mapping = function () {
        for (var r = this, t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
        var i = t.map(function (a, o) {
          return r._toOriginParam(a, r.scales[o]);
        });
        return this.callback.apply(this, i);
      }),
      (e.prototype.getLinearValue = function (r) {
        var t = this.values.length - 1,
          n = Math.floor(t * r),
          i = t * r - n,
          a = this.values[n],
          o = n === t ? a : this.values[n + 1];
        return a + (o - a) * i;
      }),
      (e.prototype.getNames = function () {
        for (
          var r = this.scales, t = this.names, n = Math.min(r.length, t.length), i = [], a = 0;
          a < n;
          a += 1
        )
          i.push(t[a]);
        return i;
      }),
      (e.prototype.getFields = function () {
        return this.scales.map(function (r) {
          return r.field;
        });
      }),
      (e.prototype.getScale = function (r) {
        return this.scales[this.names.indexOf(r)];
      }),
      (e.prototype.defaultCallback = function () {
        for (var r = this, t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
        return t.length === 0
          ? this.values
          : t.map(function (i, a) {
              var o = r.scales[a];
              return o.type === 'identity' ? o.values[0] : r._getAttributeValue(o, i);
            });
      }),
      (e.prototype._parseCfg = function (r) {
        var t = this,
          n = r.type,
          i = n === void 0 ? 'base' : n,
          a = r.names,
          o = a === void 0 ? [] : a,
          s = r.scales,
          l = s === void 0 ? [] : s,
          u = r.values,
          c = u === void 0 ? [] : u,
          h = r.callback;
        (this.type = i),
          (this.scales = l),
          (this.values = c),
          (this.names = o),
          (this.callback = function () {
            for (var f = [], v = 0; v < arguments.length; v++) f[v] = arguments[v];
            if (h) {
              var d = h.apply(void 0, f);
              if (!$(d)) return [d];
            }
            return t.defaultCallback.apply(t, f);
          });
      }),
      (e.prototype._getAttributeValue = function (r, t) {
        if (r.isCategory && !this.linear) {
          var n = r.translate(t);
          return this.values[n % this.values.length];
        }
        var i = r.scale(t);
        return this.getLinearValue(i);
      }),
      (e.prototype._toOriginParam = function (r, t) {
        return t.isLinear
          ? r
          : N(r)
          ? r.map(function (n) {
              return qv(t, n);
            })
          : qv(t, r);
      }),
      e
    );
  })(),
  mF = /rgba?\(([\s.,0-9]+)\)/,
  xF = /^l\s*\(\s*([\d.]+)\s*\)\s*(.*)/i,
  wF = /^r\s*\(\s*([\d.]+)\s*,\s*([\d.]+)\s*,\s*([\d.]+)\s*\)\s*(.*)/i,
  bF = /[\d.]+:(#[^\s]+|[^\)]+\))/gi,
  SF = function (e) {
    return /^[r,R,L,l]{1}[\s]*\(/.test(e);
  },
  CF = function () {
    var e = document.createElement('i');
    return (
      (e.title = 'Web Colour Picker'), (e.style.display = 'none'), document.body.appendChild(e), e
    );
  },
  eu = function (e, r, t, n) {
    return e[n] + (r[n] - e[n]) * t;
  };
function Iy(e) {
  return '#' + ru(e[0]) + ru(e[1]) + ru(e[2]);
}
var Ly = function (e) {
    return [
      parseInt(e.substr(1, 2), 16),
      parseInt(e.substr(3, 2), 16),
      parseInt(e.substr(5, 2), 16),
    ];
  },
  ru = function (e) {
    var r = Math.round(e).toString(16);
    return r.length === 1 ? '0' + r : r;
  },
  MF = function (e, r) {
    var t = isNaN(Number(r)) || r < 0 ? 0 : r > 1 ? 1 : Number(r),
      n = e.length - 1,
      i = Math.floor(n * t),
      a = n * t - i,
      o = e[i],
      s = i === n ? o : e[i + 1];
    return Iy([eu(o, s, a, 0), eu(o, s, a, 1), eu(o, s, a, 2)]);
  },
  wo,
  Py = function (e) {
    if (e[0] === '#' && e.length === 7) return e;
    wo || (wo = CF()), (wo.style.color = e);
    var r = document.defaultView.getComputedStyle(wo, '').getPropertyValue('color'),
      t = mF.exec(r),
      n = t[1].split(/\s*,\s*/).map(function (i) {
        return Number(i);
      });
    return (r = Iy(n)), r;
  },
  AF = function (e) {
    var r = et(e) ? e.split('-') : e,
      t = kt(r, function (n) {
        return Ly(n.indexOf('#') === -1 ? Py(n) : n);
      });
    return function (n) {
      return MF(t, n);
    };
  },
  FF = function (e) {
    if (SF(e)) {
      var r,
        t = void 0;
      if (e[0] === 'l') {
        var n = xF.exec(e),
          i = +n[1] + 90;
        (t = n[2]), (r = 'linear-gradient(' + i + 'deg, ');
      } else if (e[0] === 'r') {
        r = 'radial-gradient(';
        var n = wF.exec(e);
        t = n[4];
      }
      var a = t.match(bF);
      return (
        M(a, function (o, s) {
          var l = o.split(':');
          (r += l[1] + ' ' + l[0] * 100 + '%'), s !== a.length - 1 && (r += ', ');
        }),
        (r += ')'),
        r
      );
    }
    return e;
  };
const Hr = { rgb2arr: Ly, gradient: AF, toRGB: Ai(Py), toCSSGradient: FF };
var EF = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      return (
        (n.type = 'color'),
        (n.names = ['color']),
        et(n.values) && (n.linear = !0),
        (n.gradient = Hr.gradient(n.values)),
        n
      );
    }
    return (
      (r.prototype.getLinearValue = function (t) {
        return this.gradient(t);
      }),
      r
    );
  })(Ua),
  TF = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      return (n.type = 'opacity'), (n.names = ['opacity']), n;
    }
    return r;
  })(Ua),
  kF = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      return (n.names = ['x', 'y']), (n.type = 'position'), n;
    }
    return (
      (r.prototype.mapping = function (t, n) {
        var i = this.scales,
          a = i[0],
          o = i[1];
        return $(t) || $(n)
          ? []
          : [
              N(t)
                ? t.map(function (s) {
                    return a.scale(s);
                  })
                : a.scale(t),
              N(n)
                ? n.map(function (s) {
                    return o.scale(s);
                  })
                : o.scale(n),
            ];
      }),
      r
    );
  })(Ua),
  IF = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      return (n.type = 'shape'), (n.names = ['shape']), n;
    }
    return (
      (r.prototype.getLinearValue = function (t) {
        var n = Math.round((this.values.length - 1) * t);
        return this.values[n];
      }),
      r
    );
  })(Ua),
  LF = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      return (n.type = 'size'), (n.names = ['size']), n;
    }
    return r;
  })(Ua),
  Oy = {};
function PF(e) {
  return Oy[e];
}
function ur(e, r) {
  Oy[e] = r;
}
var nh = (function () {
    function e(r) {
      (this.type = 'base'),
        (this.isCategory = !1),
        (this.isLinear = !1),
        (this.isContinuous = !1),
        (this.isIdentity = !1),
        (this.values = []),
        (this.range = [0, 1]),
        (this.ticks = []),
        (this.__cfg__ = r),
        this.initCfg(),
        this.init();
    }
    return (
      (e.prototype.translate = function (r) {
        return r;
      }),
      (e.prototype.change = function (r) {
        bt(this.__cfg__, r), this.init();
      }),
      (e.prototype.clone = function () {
        return this.constructor(this.__cfg__);
      }),
      (e.prototype.getTicks = function () {
        var r = this;
        return kt(this.ticks, function (t, n) {
          return xt(t) ? t : { text: r.getText(t, n), tickValue: t, value: r.scale(t) };
        });
      }),
      (e.prototype.getText = function (r, t) {
        var n = this.formatter,
          i = n ? n(r, t) : r;
        return $(i) || !U(i.toString) ? '' : i.toString();
      }),
      (e.prototype.getConfig = function (r) {
        return this.__cfg__[r];
      }),
      (e.prototype.init = function () {
        bt(this, this.__cfg__),
          this.setDomain(),
          ye(this.getConfig('ticks')) && (this.ticks = this.calculateTicks());
      }),
      (e.prototype.initCfg = function () {}),
      (e.prototype.setDomain = function () {}),
      (e.prototype.calculateTicks = function () {
        var r = this.tickMethod,
          t = [];
        if (et(r)) {
          var n = PF(r);
          if (!n) throw new Error('There is no method to to calculate ticks!');
          t = n(this);
        } else U(r) && (t = r(this));
        return t;
      }),
      (e.prototype.rangeMin = function () {
        return this.range[0];
      }),
      (e.prototype.rangeMax = function () {
        return this.range[1];
      }),
      (e.prototype.calcPercent = function (r, t, n) {
        return at(r) ? (r - t) / (n - t) : NaN;
      }),
      (e.prototype.calcValue = function (r, t, n) {
        return t + r * (n - t);
      }),
      e
    );
  })(),
  nl = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'cat'), (t.isCategory = !0), t;
    }
    return (
      (r.prototype.buildIndexMap = function () {
        if (!this.translateIndexMap) {
          this.translateIndexMap = new Map();
          for (var t = 0; t < this.values.length; t++)
            this.translateIndexMap.set(this.values[t], t);
        }
      }),
      (r.prototype.translate = function (t) {
        this.buildIndexMap();
        var n = this.translateIndexMap.get(t);
        return n === void 0 && (n = at(t) ? t : NaN), n;
      }),
      (r.prototype.scale = function (t) {
        var n = this.translate(t),
          i = this.calcPercent(n, this.min, this.max);
        return this.calcValue(i, this.rangeMin(), this.rangeMax());
      }),
      (r.prototype.invert = function (t) {
        var n = this.max - this.min,
          i = this.calcPercent(t, this.rangeMin(), this.rangeMax()),
          a = Math.round(n * i) + this.min;
        return a < this.min || a > this.max ? NaN : this.values[a];
      }),
      (r.prototype.getText = function (t) {
        for (var n = [], i = 1; i < arguments.length; i++) n[i - 1] = arguments[i];
        var a = t;
        return (
          at(t) && !this.values.includes(t) && (a = this.values[a]),
          e.prototype.getText.apply(this, da([a], n))
        );
      }),
      (r.prototype.initCfg = function () {
        this.tickMethod = 'cat';
      }),
      (r.prototype.setDomain = function () {
        if (($(this.getConfig('min')) && (this.min = 0), $(this.getConfig('max')))) {
          var t = this.values.length;
          this.max = t > 1 ? t - 1 : t;
        }
        this.translateIndexMap && (this.translateIndexMap = void 0);
      }),
      r
    );
  })(nh),
  Dy = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|Z|([HhMsDm])\1?|[aA]|"[^"]*"|'[^']*'/g,
  Pr = '\\d\\d?',
  kr = '\\d\\d',
  OF = '\\d{3}',
  DF = '\\d{4}',
  sa = '[^\\s]+',
  By = /\[([^]*?)\]/gm;
function Ry(e, r) {
  for (var t = [], n = 0, i = e.length; n < i; n++) t.push(e[n].substr(0, r));
  return t;
}
var Zv = function (e) {
  return function (r, t) {
    var n = t[e].map(function (a) {
        return a.toLowerCase();
      }),
      i = n.indexOf(r.toLowerCase());
    return i > -1 ? i : null;
  };
};
function Ur(e) {
  for (var r = [], t = 1; t < arguments.length; t++) r[t - 1] = arguments[t];
  for (var n = 0, i = r; n < i.length; n++) {
    var a = i[n];
    for (var o in a) e[o] = a[o];
  }
  return e;
}
var $y = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
  Ny = [
    'January',
    'February',
    'March',
    'April',
    'May',
    'June',
    'July',
    'August',
    'September',
    'October',
    'November',
    'December',
  ],
  BF = Ry(Ny, 3),
  RF = Ry($y, 3),
  ih = {
    dayNamesShort: RF,
    dayNames: $y,
    monthNamesShort: BF,
    monthNames: Ny,
    amPm: ['am', 'pm'],
    DoFn: function (e) {
      return (
        e + ['th', 'st', 'nd', 'rd'][e % 10 > 3 ? 0 : ((e - (e % 10) !== 10 ? 1 : 0) * e) % 10]
      );
    },
  },
  vs = Ur({}, ih),
  zy = function (e) {
    return (vs = Ur(vs, e));
  },
  Kv = function (e) {
    return e.replace(/[|\\{()[^$+*?.-]/g, '\\$&');
  },
  ue = function (e, r) {
    for (r === void 0 && (r = 2), e = String(e); e.length < r; ) e = '0' + e;
    return e;
  },
  $F = {
    D: function (e) {
      return String(e.getDate());
    },
    DD: function (e) {
      return ue(e.getDate());
    },
    Do: function (e, r) {
      return r.DoFn(e.getDate());
    },
    d: function (e) {
      return String(e.getDay());
    },
    dd: function (e) {
      return ue(e.getDay());
    },
    ddd: function (e, r) {
      return r.dayNamesShort[e.getDay()];
    },
    dddd: function (e, r) {
      return r.dayNames[e.getDay()];
    },
    M: function (e) {
      return String(e.getMonth() + 1);
    },
    MM: function (e) {
      return ue(e.getMonth() + 1);
    },
    MMM: function (e, r) {
      return r.monthNamesShort[e.getMonth()];
    },
    MMMM: function (e, r) {
      return r.monthNames[e.getMonth()];
    },
    YY: function (e) {
      return ue(String(e.getFullYear()), 4).substr(2);
    },
    YYYY: function (e) {
      return ue(e.getFullYear(), 4);
    },
    h: function (e) {
      return String(e.getHours() % 12 || 12);
    },
    hh: function (e) {
      return ue(e.getHours() % 12 || 12);
    },
    H: function (e) {
      return String(e.getHours());
    },
    HH: function (e) {
      return ue(e.getHours());
    },
    m: function (e) {
      return String(e.getMinutes());
    },
    mm: function (e) {
      return ue(e.getMinutes());
    },
    s: function (e) {
      return String(e.getSeconds());
    },
    ss: function (e) {
      return ue(e.getSeconds());
    },
    S: function (e) {
      return String(Math.round(e.getMilliseconds() / 100));
    },
    SS: function (e) {
      return ue(Math.round(e.getMilliseconds() / 10), 2);
    },
    SSS: function (e) {
      return ue(e.getMilliseconds(), 3);
    },
    a: function (e, r) {
      return e.getHours() < 12 ? r.amPm[0] : r.amPm[1];
    },
    A: function (e, r) {
      return e.getHours() < 12 ? r.amPm[0].toUpperCase() : r.amPm[1].toUpperCase();
    },
    ZZ: function (e) {
      var r = e.getTimezoneOffset();
      return (r > 0 ? '-' : '+') + ue(Math.floor(Math.abs(r) / 60) * 100 + (Math.abs(r) % 60), 4);
    },
    Z: function (e) {
      var r = e.getTimezoneOffset();
      return (
        (r > 0 ? '-' : '+') + ue(Math.floor(Math.abs(r) / 60), 2) + ':' + ue(Math.abs(r) % 60, 2)
      );
    },
  },
  Qv = function (e) {
    return +e - 1;
  },
  Jv = [null, Pr],
  td = [null, sa],
  ed = [
    'isPm',
    sa,
    function (e, r) {
      var t = e.toLowerCase();
      return t === r.amPm[0] ? 0 : t === r.amPm[1] ? 1 : null;
    },
  ],
  rd = [
    'timezoneOffset',
    '[^\\s]*?[\\+\\-]\\d\\d:?\\d\\d|[^\\s]*?Z?',
    function (e) {
      var r = (e + '').match(/([+-]|\d\d)/gi);
      if (r) {
        var t = +r[1] * 60 + parseInt(r[2], 10);
        return r[0] === '+' ? t : -t;
      }
      return 0;
    },
  ],
  NF = {
    D: ['day', Pr],
    DD: ['day', kr],
    Do: [
      'day',
      Pr + sa,
      function (e) {
        return parseInt(e, 10);
      },
    ],
    M: ['month', Pr, Qv],
    MM: ['month', kr, Qv],
    YY: [
      'year',
      kr,
      function (e) {
        var r = new Date(),
          t = +('' + r.getFullYear()).substr(0, 2);
        return +('' + (+e > 68 ? t - 1 : t) + e);
      },
    ],
    h: ['hour', Pr, void 0, 'isPm'],
    hh: ['hour', kr, void 0, 'isPm'],
    H: ['hour', Pr],
    HH: ['hour', kr],
    m: ['minute', Pr],
    mm: ['minute', kr],
    s: ['second', Pr],
    ss: ['second', kr],
    YYYY: ['year', DF],
    S: [
      'millisecond',
      '\\d',
      function (e) {
        return +e * 100;
      },
    ],
    SS: [
      'millisecond',
      kr,
      function (e) {
        return +e * 10;
      },
    ],
    SSS: ['millisecond', OF],
    d: Jv,
    dd: Jv,
    ddd: td,
    dddd: td,
    MMM: ['month', sa, Zv('monthNamesShort')],
    MMMM: ['month', sa, Zv('monthNames')],
    a: ed,
    A: ed,
    ZZ: rd,
    Z: rd,
  },
  ds = {
    default: 'ddd MMM DD YYYY HH:mm:ss',
    shortDate: 'M/D/YY',
    mediumDate: 'MMM D, YYYY',
    longDate: 'MMMM D, YYYY',
    fullDate: 'dddd, MMMM D, YYYY',
    isoDate: 'YYYY-MM-DD',
    isoDateTime: 'YYYY-MM-DDTHH:mm:ssZ',
    shortTime: 'HH:mm',
    mediumTime: 'HH:mm:ss',
    longTime: 'HH:mm:ss.SSS',
  },
  Gy = function (e) {
    return Ur(ds, e);
  },
  Vy = function (e, r, t) {
    if (
      (r === void 0 && (r = ds.default),
      t === void 0 && (t = {}),
      typeof e == 'number' && (e = new Date(e)),
      Object.prototype.toString.call(e) !== '[object Date]' || isNaN(e.getTime()))
    )
      throw new Error('Invalid Date pass to format');
    r = ds[r] || r;
    var n = [];
    r = r.replace(By, function (a, o) {
      return n.push(o), '@@@';
    });
    var i = Ur(Ur({}, vs), t);
    return (
      (r = r.replace(Dy, function (a) {
        return $F[a](e, i);
      })),
      r.replace(/@@@/g, function () {
        return n.shift();
      })
    );
  };
function Hy(e, r, t) {
  if ((t === void 0 && (t = {}), typeof r != 'string'))
    throw new Error('Invalid format in fecha parse');
  if (((r = ds[r] || r), e.length > 1e3)) return null;
  var n = new Date(),
    i = {
      year: n.getFullYear(),
      month: 0,
      day: 1,
      hour: 0,
      minute: 0,
      second: 0,
      millisecond: 0,
      isPm: null,
      timezoneOffset: null,
    },
    a = [],
    o = [],
    s = r.replace(By, function (w, S) {
      return o.push(Kv(S)), '@@@';
    }),
    l = {},
    u = {};
  (s = Kv(s).replace(Dy, function (w) {
    var S = NF[w],
      C = S[0],
      F = S[1],
      E = S[3];
    if (l[C]) throw new Error('Invalid format. ' + C + ' specified twice in format');
    return (l[C] = !0), E && (u[E] = !0), a.push(S), '(' + F + ')';
  })),
    Object.keys(u).forEach(function (w) {
      if (!l[w]) throw new Error('Invalid format. ' + w + ' is required in specified format');
    }),
    (s = s.replace(/@@@/g, function () {
      return o.shift();
    }));
  var c = e.match(new RegExp(s, 'i'));
  if (!c) return null;
  for (var h = Ur(Ur({}, vs), t), f = 1; f < c.length; f++) {
    var v = a[f - 1],
      d = v[0],
      p = v[2],
      g = p ? p(c[f], h) : +c[f];
    if (g == null) return null;
    i[d] = g;
  }
  i.isPm === 1 && i.hour != null && +i.hour != 12
    ? (i.hour = +i.hour + 12)
    : i.isPm === 0 && +i.hour == 12 && (i.hour = 0);
  var y;
  if (i.timezoneOffset == null) {
    y = new Date(i.year, i.month, i.day, i.hour, i.minute, i.second, i.millisecond);
    for (
      var m = [
          ['month', 'getMonth'],
          ['day', 'getDate'],
          ['hour', 'getHours'],
          ['minute', 'getMinutes'],
          ['second', 'getSeconds'],
        ],
        f = 0,
        b = m.length;
      f < b;
      f++
    )
      if (l[m[f][0]] && i[m[f][0]] !== y[m[f][1]]()) return null;
  } else if (
    ((y = new Date(
      Date.UTC(
        i.year,
        i.month,
        i.day,
        i.hour,
        i.minute - i.timezoneOffset,
        i.second,
        i.millisecond,
      ),
    )),
    i.month > 11 ||
      i.month < 0 ||
      i.day > 31 ||
      i.day < 1 ||
      i.hour > 23 ||
      i.hour < 0 ||
      i.minute > 59 ||
      i.minute < 0 ||
      i.second > 59 ||
      i.second < 0)
  )
    return null;
  return y;
}
var Yy = { format: Vy, parse: Hy, defaultI18n: ih, setGlobalDateI18n: zy, setGlobalDateMasks: Gy };
const zF = Object.freeze(
  Object.defineProperty(
    {
      __proto__: null,
      assign: Ur,
      default: Yy,
      defaultI18n: ih,
      format: Vy,
      parse: Hy,
      setGlobalDateI18n: zy,
      setGlobalDateMasks: Gy,
    },
    Symbol.toStringTag,
    { value: 'Module' },
  ),
);
function GF(e) {
  return function (r, t, n, i) {
    for (var a = $(n) ? 0 : n, o = $(i) ? r.length : i; a < o; ) {
      var s = (a + o) >>> 1;
      e(r[s]) > t ? (o = s) : (a = s + 1);
    }
    return a;
  };
}
var nd = 'format';
function Wy(e, r) {
  var t = zF[nd] || Yy[nd];
  return t(e, r);
}
function ps(e) {
  return (
    et(e) &&
      (e.indexOf('T') > 0
        ? (e = new Date(e).getTime())
        : (e = new Date(e.replace(/-/gi, '/')).getTime())),
    Og(e) && (e = e.getTime()),
    e
  );
}
var Ye = 1e3,
  Mn = 60 * Ye,
  An = 60 * Mn,
  yr = 24 * An,
  la = yr * 31,
  id = yr * 365,
  Gi = [
    ['HH:mm:ss', Ye],
    ['HH:mm:ss', Ye * 10],
    ['HH:mm:ss', Ye * 30],
    ['HH:mm', Mn],
    ['HH:mm', Mn * 10],
    ['HH:mm', Mn * 30],
    ['HH', An],
    ['HH', An * 6],
    ['HH', An * 12],
    ['YYYY-MM-DD', yr],
    ['YYYY-MM-DD', yr * 4],
    ['YYYY-WW', yr * 7],
    ['YYYY-MM', la],
    ['YYYY-MM', la * 4],
    ['YYYY-MM', la * 6],
    ['YYYY', yr * 380],
  ];
function VF(e, r, t) {
  var n = (r - e) / t,
    i =
      GF(function (o) {
        return o[1];
      })(Gi, n) - 1,
    a = Gi[i];
  return i < 0 ? (a = Gi[0]) : i >= Gi.length && (a = Ht(Gi)), a;
}
var HF = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'timeCat'), t;
    }
    return (
      (r.prototype.translate = function (t) {
        t = ps(t);
        var n = this.values.indexOf(t);
        return n === -1 && (at(t) && t < this.values.length ? (n = t) : (n = NaN)), n;
      }),
      (r.prototype.getText = function (t, n) {
        var i = this.translate(t);
        if (i > -1) {
          var a = this.values[i],
            o = this.formatter;
          return (a = o ? o(a, n) : Wy(a, this.mask)), a;
        }
        return t;
      }),
      (r.prototype.initCfg = function () {
        (this.tickMethod = 'time-cat'), (this.mask = 'YYYY-MM-DD'), (this.tickCount = 7);
      }),
      (r.prototype.setDomain = function () {
        var t = this.values;
        M(t, function (n, i) {
          t[i] = ps(n);
        }),
          t.sort(function (n, i) {
            return n - i;
          }),
          e.prototype.setDomain.call(this);
      }),
      r
    );
  })(nl),
  il = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.isContinuous = !0), t;
    }
    return (
      (r.prototype.scale = function (t) {
        if ($(t)) return NaN;
        var n = this.rangeMin(),
          i = this.rangeMax(),
          a = this.max,
          o = this.min;
        if (a === o) return n;
        var s = this.getScalePercent(t);
        return n + s * (i - n);
      }),
      (r.prototype.init = function () {
        e.prototype.init.call(this);
        var t = this.ticks,
          n = Me(t),
          i = Ht(t);
        n < this.min && (this.min = n),
          i > this.max && (this.max = i),
          $(this.minLimit) || (this.min = n),
          $(this.maxLimit) || (this.max = i);
      }),
      (r.prototype.setDomain = function () {
        var t = kg(this.values),
          n = t.min,
          i = t.max;
        $(this.min) && (this.min = n),
          $(this.max) && (this.max = i),
          this.min > this.max && ((this.min = n), (this.max = i));
      }),
      (r.prototype.calculateTicks = function () {
        var t = this,
          n = e.prototype.calculateTicks.call(this);
        return (
          this.nice ||
            (n = Jt(n, function (i) {
              return i >= t.min && i <= t.max;
            })),
          n
        );
      }),
      (r.prototype.getScalePercent = function (t) {
        var n = this.max,
          i = this.min;
        return (t - i) / (n - i);
      }),
      (r.prototype.getInvertPercent = function (t) {
        return (t - this.rangeMin()) / (this.rangeMax() - this.rangeMin());
      }),
      r
    );
  })(nh),
  al = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'linear'), (t.isLinear = !0), t;
    }
    return (
      (r.prototype.invert = function (t) {
        var n = this.getInvertPercent(t);
        return this.min + n * (this.max - this.min);
      }),
      (r.prototype.initCfg = function () {
        (this.tickMethod = 'wilkinson-extended'), (this.nice = !1);
      }),
      r
    );
  })(il);
function Br(e, r) {
  var t = Math.E,
    n;
  return r >= 0 ? (n = Math.pow(t, Math.log(r) / e)) : (n = Math.pow(t, Math.log(-r) / e) * -1), n;
}
function De(e, r) {
  return e === 1 ? 1 : Math.log(r) / Math.log(e);
}
function Xy(e, r, t) {
  $(t) && (t = Math.max.apply(null, e));
  var n = t;
  return (
    M(e, function (i) {
      i > 0 && i < n && (n = i);
    }),
    n === t && (n = t / r),
    n > 1 && (n = 1),
    n
  );
}
var YF = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'log'), t;
    }
    return (
      (r.prototype.invert = function (t) {
        var n = this.base,
          i = De(n, this.max),
          a = this.rangeMin(),
          o = this.rangeMax() - a,
          s,
          l = this.positiveMin;
        if (l) {
          if (t === 0) return 0;
          s = De(n, l / n);
          var u = (1 / (i - s)) * o;
          if (t < u) return (t / u) * l;
        } else s = De(n, this.min);
        var c = (t - a) / o,
          h = c * (i - s) + s;
        return Math.pow(n, h);
      }),
      (r.prototype.initCfg = function () {
        (this.tickMethod = 'log'), (this.base = 10), (this.tickCount = 6), (this.nice = !0);
      }),
      (r.prototype.setDomain = function () {
        e.prototype.setDomain.call(this);
        var t = this.min;
        if (t < 0)
          throw new Error('When you use log scale, the minimum value must be greater than zero!');
        t === 0 && (this.positiveMin = Xy(this.values, this.base, this.max));
      }),
      (r.prototype.getScalePercent = function (t) {
        var n = this.max,
          i = this.min;
        if (n === i || t <= 0) return 0;
        var a = this.base,
          o = this.positiveMin;
        o && (i = (o * 1) / a);
        var s;
        return (
          t < o
            ? (s = t / o / (De(a, n) - De(a, i)))
            : (s = (De(a, t) - De(a, i)) / (De(a, n) - De(a, i))),
          s
        );
      }),
      r
    );
  })(il),
  WF = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'pow'), t;
    }
    return (
      (r.prototype.invert = function (t) {
        var n = this.getInvertPercent(t),
          i = this.exponent,
          a = Br(i, this.max),
          o = Br(i, this.min),
          s = n * (a - o) + o,
          l = s >= 0 ? 1 : -1;
        return Math.pow(s, i) * l;
      }),
      (r.prototype.initCfg = function () {
        (this.tickMethod = 'pow'), (this.exponent = 2), (this.tickCount = 5), (this.nice = !0);
      }),
      (r.prototype.getScalePercent = function (t) {
        var n = this.max,
          i = this.min;
        if (n === i) return 0;
        var a = this.exponent,
          o = (Br(a, t) - Br(a, i)) / (Br(a, n) - Br(a, i));
        return o;
      }),
      r
    );
  })(il),
  XF = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'time'), t;
    }
    return (
      (r.prototype.getText = function (t, n) {
        var i = this.translate(t),
          a = this.formatter;
        return a ? a(i, n) : Wy(i, this.mask);
      }),
      (r.prototype.scale = function (t) {
        var n = t;
        return (et(n) || Og(n)) && (n = this.translate(n)), e.prototype.scale.call(this, n);
      }),
      (r.prototype.translate = function (t) {
        return ps(t);
      }),
      (r.prototype.initCfg = function () {
        (this.tickMethod = 'time-pretty'),
          (this.mask = 'YYYY-MM-DD'),
          (this.tickCount = 7),
          (this.nice = !1);
      }),
      (r.prototype.setDomain = function () {
        var t = this.values,
          n = this.getConfig('min'),
          i = this.getConfig('max');
        if (
          ((!$(n) || !at(n)) && (this.min = this.translate(this.min)),
          (!$(i) || !at(i)) && (this.max = this.translate(this.max)),
          t && t.length)
        ) {
          var a = [],
            o = 1 / 0,
            s = o,
            l = 0;
          M(t, function (u) {
            var c = ps(u);
            if (isNaN(c)) throw new TypeError('Invalid Time: ' + u + ' in time scale!');
            o > c ? ((s = o), (o = c)) : s > c && (s = c), l < c && (l = c), a.push(c);
          }),
            t.length > 1 && (this.minTickInterval = s - o),
            $(n) && (this.min = o),
            $(i) && (this.max = l);
        }
      }),
      r
    );
  })(al),
  _y = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'quantize'), t;
    }
    return (
      (r.prototype.invert = function (t) {
        var n = this.ticks,
          i = n.length,
          a = this.getInvertPercent(t),
          o = Math.floor(a * (i - 1));
        if (o >= i - 1) return Ht(n);
        if (o < 0) return Me(n);
        var s = n[o],
          l = n[o + 1],
          u = o / (i - 1),
          c = (o + 1) / (i - 1);
        return s + ((a - u) / (c - u)) * (l - s);
      }),
      (r.prototype.initCfg = function () {
        (this.tickMethod = 'r-pretty'), (this.tickCount = 5), (this.nice = !0);
      }),
      (r.prototype.calculateTicks = function () {
        var t = e.prototype.calculateTicks.call(this);
        return (
          this.nice ||
            (Ht(t) !== this.max && t.push(this.max), Me(t) !== this.min && t.unshift(this.min)),
          t
        );
      }),
      (r.prototype.getScalePercent = function (t) {
        var n = this.ticks;
        if (t < Me(n)) return 0;
        if (t > Ht(n)) return 1;
        var i = 0;
        return (
          M(n, function (a, o) {
            if (t >= a) i = o;
            else return !1;
          }),
          i / (n.length - 1)
        );
      }),
      r
    );
  })(il),
  _F = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'quantile'), t;
    }
    return (
      (r.prototype.initCfg = function () {
        (this.tickMethod = 'quantile'), (this.tickCount = 5), (this.nice = !0);
      }),
      r
    );
  })(_y),
  jy = {};
function nc(e) {
  return jy[e];
}
function cr(e, r) {
  if (nc(e)) throw new Error("type '" + e + "' existed.");
  jy[e] = r;
}
var jF = (function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'identity'), (t.isIdentity = !0), t;
  }
  return (
    (r.prototype.calculateTicks = function () {
      return this.values;
    }),
    (r.prototype.scale = function (t) {
      return this.values[0] !== t && at(t) ? t : this.range[0];
    }),
    (r.prototype.invert = function (t) {
      var n = this.range;
      return t < n[0] || t > n[1] ? NaN : this.values[0];
    }),
    r
  );
})(nh);
function Uy(e) {
  var r = e.values,
    t = e.tickInterval,
    n = e.tickCount,
    i = e.showLast;
  if (at(t)) {
    var a = Jt(r, function (d, p) {
        return p % t === 0;
      }),
      o = Ht(r);
    return i && Ht(a) !== o && a.push(o), a;
  }
  var s = r.length,
    l = e.min,
    u = e.max;
  if (($(l) && (l = 0), $(u) && (u = r.length - 1), !at(n) || n >= s)) return r.slice(l, u + 1);
  if (n <= 0 || u <= 0) return [];
  for (var c = n === 1 ? s : Math.floor(s / (n - 1)), h = [], f = l, v = 0; v < n && !(f >= u); v++)
    (f = Math.min(l + v * c, u)), v === n - 1 && i ? h.push(r[u]) : h.push(r[f]);
  return h;
}
function UF(e) {
  var r = e.min,
    t = e.max,
    n = e.nice,
    i = e.tickCount,
    a = new qF();
  return a.domain([r, t]), n && a.nice(i), a.ticks(i);
}
var nu = 5,
  ad = Math.sqrt(50),
  od = Math.sqrt(10),
  sd = Math.sqrt(2),
  qF = (function () {
    function e() {
      this._domain = [0, 1];
    }
    return (
      (e.prototype.domain = function (r) {
        return r ? ((this._domain = Array.from(r, Number)), this) : this._domain.slice();
      }),
      (e.prototype.nice = function (r) {
        var t, n;
        r === void 0 && (r = nu);
        var i = this._domain.slice(),
          a = 0,
          o = this._domain.length - 1,
          s = this._domain[a],
          l = this._domain[o],
          u;
        return (
          l < s && ((t = [l, s]), (s = t[0]), (l = t[1]), (n = [o, a]), (a = n[0]), (o = n[1])),
          (u = Uo(s, l, r)),
          u > 0
            ? ((s = Math.floor(s / u) * u), (l = Math.ceil(l / u) * u), (u = Uo(s, l, r)))
            : u < 0 && ((s = Math.ceil(s * u) / u), (l = Math.floor(l * u) / u), (u = Uo(s, l, r))),
          u > 0
            ? ((i[a] = Math.floor(s / u) * u), (i[o] = Math.ceil(l / u) * u), this.domain(i))
            : u < 0 &&
              ((i[a] = Math.ceil(s * u) / u), (i[o] = Math.floor(l * u) / u), this.domain(i)),
          this
        );
      }),
      (e.prototype.ticks = function (r) {
        return (
          r === void 0 && (r = nu),
          ZF(this._domain[0], this._domain[this._domain.length - 1], r || nu)
        );
      }),
      e
    );
  })();
function ZF(e, r, t) {
  var n,
    i = -1,
    a,
    o,
    s;
  if (((r = +r), (e = +e), (t = +t), e === r && t > 0)) return [e];
  if (((n = r < e) && ((a = e), (e = r), (r = a)), (s = Uo(e, r, t)) === 0 || !isFinite(s)))
    return [];
  if (s > 0)
    for (
      e = Math.ceil(e / s), r = Math.floor(r / s), o = new Array((a = Math.ceil(r - e + 1)));
      ++i < a;

    )
      o[i] = (e + i) * s;
  else
    for (
      e = Math.floor(e * s), r = Math.ceil(r * s), o = new Array((a = Math.ceil(e - r + 1)));
      ++i < a;

    )
      o[i] = (e - i) / s;
  return n && o.reverse(), o;
}
function Uo(e, r, t) {
  var n = (r - e) / Math.max(0, t),
    i = Math.floor(Math.log(n) / Math.LN10),
    a = n / Math.pow(10, i);
  return i >= 0
    ? (a >= ad ? 10 : a >= od ? 5 : a >= sd ? 2 : 1) * Math.pow(10, i)
    : -Math.pow(10, -i) / (a >= ad ? 10 : a >= od ? 5 : a >= sd ? 2 : 1);
}
function ld(e, r, t) {
  var n;
  return (
    t === 'ceil'
      ? (n = Math.ceil(e / r))
      : t === 'floor'
      ? (n = Math.floor(e / r))
      : (n = Math.round(e / r)),
    n * r
  );
}
function ah(e, r, t) {
  var n = ld(e, t, 'floor'),
    i = ld(r, t, 'ceil');
  (n = Wl(n, t)), (i = Wl(i, t));
  for (var a = [], o = Math.max((i - n) / (Math.pow(2, 12) - 1), t), s = n; s <= i; s = s + o) {
    var l = Wl(s, o);
    a.push(l);
  }
  return { min: n, max: i, ticks: a };
}
function oh(e, r, t) {
  var n,
    i = e.minLimit,
    a = e.maxLimit,
    o = e.min,
    s = e.max,
    l = e.tickCount,
    u = l === void 0 ? 5 : l,
    c = $(i) ? ($(r) ? o : r) : i,
    h = $(a) ? ($(t) ? s : t) : a;
  if ((c > h && ((n = [c, h]), (h = n[0]), (c = n[1])), u <= 2)) return [c, h];
  for (var f = (h - c) / (u - 1), v = [], d = 0; d < u; d++) v.push(c + f * d);
  return v;
}
function KF(e) {
  var r = e.min,
    t = e.max,
    n = e.tickInterval,
    i = e.minLimit,
    a = e.maxLimit,
    o = UF(e);
  return !$(i) || !$(a) ? oh(e, Me(o), Ht(o)) : n ? ah(r, t, n).ticks : o;
}
function cn(e) {
  return Math.abs(e) < 1e-15 ? e : parseFloat(e.toFixed(15));
}
var QF = [1, 5, 2, 2.5, 4, 3],
  ud = Number.EPSILON * 100;
function JF(e, r) {
  return ((e % r) + r) % r;
}
function t2(e) {
  return Math.round(e * 1e12) / 1e12;
}
function e2(e, r, t, n, i, a) {
  var o = _t(r),
    s = $g(r, e),
    l = 0,
    u = JF(n, a);
  return (u < ud || a - u < ud) && n <= 0 && i >= 0 && (l = 1), 1 - s / (o - 1) - t + l;
}
function r2(e, r, t) {
  var n = _t(r),
    i = $g(r, e),
    a = 1;
  return 1 - i / (n - 1) - t + a;
}
function n2(e, r, t, n, i, a) {
  var o = (e - 1) / (a - i),
    s = (r - 1) / (Math.max(a, n) - Math.min(t, i));
  return 2 - Math.max(o / s, s / o);
}
function i2(e, r) {
  return e >= r ? 2 - (e - 1) / (r - 1) : 1;
}
function a2(e, r, t, n) {
  var i = r - e;
  return 1 - (0.5 * (Math.pow(r - n, 2) + Math.pow(e - t, 2))) / Math.pow(0.1 * i, 2);
}
function o2(e, r, t) {
  var n = r - e;
  if (t > n) {
    var i = (t - n) / 2;
    return 1 - Math.pow(i, 2) / Math.pow(0.1 * n, 2);
  }
  return 1;
}
function s2() {
  return 1;
}
function l2(e, r, t, n, i, a) {
  t === void 0 && (t = 5),
    n === void 0 && (n = !0),
    i === void 0 && (i = QF),
    a === void 0 && (a = [0.25, 0.2, 0.5, 0.05]);
  var o = t < 0 ? 0 : Math.round(t);
  if (Number.isNaN(e) || Number.isNaN(r) || typeof e != 'number' || typeof r != 'number' || !o)
    return { min: 0, max: 0, ticks: [] };
  if (r - e < 1e-15 || o === 1) return { min: e, max: r, ticks: [e] };
  if (r - e > 1e148) {
    var s = t || 5,
      l = (r - e) / s;
    return {
      min: e,
      max: r,
      ticks: Array(s)
        .fill(null)
        .map(function (W, tt) {
          return cn(e + l * tt);
        }),
    };
  }
  for (var u = { score: -2, lmin: 0, lmax: 0, lstep: 0 }, c = 1; c < 1 / 0; ) {
    for (var h = 0; h < i.length; h += 1) {
      var f = i[h],
        v = r2(f, i, c);
      if (a[0] * v + a[1] + a[2] + a[3] < u.score) {
        c = 1 / 0;
        break;
      }
      for (var d = 2; d < 1 / 0; ) {
        var p = i2(d, o);
        if (a[0] * v + a[1] + a[2] * p + a[3] < u.score) break;
        for (var g = (r - e) / (d + 1) / c / f, y = Math.ceil(Math.log10(g)); y < 1 / 0; ) {
          var m = c * f * Math.pow(10, y),
            b = o2(e, r, m * (d - 1));
          if (a[0] * v + a[1] * b + a[2] * p + a[3] < u.score) break;
          var w = Math.floor(r / m) * c - (d - 1) * c,
            S = Math.ceil(e / m) * c;
          if (w <= S)
            for (var s = S - w, C = 0; C <= s; C += 1) {
              var F = w + C,
                E = F * (m / c),
                I = E + m * (d - 1),
                T = m,
                P = e2(f, i, c, E, I, T),
                R = a2(e, r, E, I),
                B = n2(d, o, e, r, E, I),
                G = s2(),
                j = a[0] * P + a[1] * R + a[2] * B + a[3] * G;
              j > u.score &&
                (!n || (E <= e && I >= r)) &&
                ((u.lmin = E), (u.lmax = I), (u.lstep = T), (u.score = j));
            }
          y += 1;
        }
        d += 1;
      }
    }
    c += 1;
  }
  var D = cn(u.lmax),
    z = cn(u.lmin),
    X = cn(u.lstep),
    Y = Math.floor(t2((D - z) / X)) + 1,
    V = new Array(Y);
  V[0] = cn(z);
  for (var h = 1; h < Y; h++) V[h] = cn(V[h - 1] + X);
  return { min: Math.min(e, Me(V)), max: Math.max(r, Ht(V)), ticks: V };
}
function u2(e) {
  var r = e.min,
    t = e.max,
    n = e.tickCount,
    i = e.nice,
    a = e.tickInterval,
    o = e.minLimit,
    s = e.maxLimit,
    l = l2(r, t, n, i).ticks;
  return !$(o) || !$(s) ? oh(e, Me(l), Ht(l)) : a ? ah(r, t, a).ticks : l;
}
function c2(e) {
  var r = e.base,
    t = e.tickCount,
    n = e.min,
    i = e.max,
    a = e.values,
    o,
    s = De(r, i);
  if (n > 0) o = Math.floor(De(r, n));
  else {
    var l = Xy(a, r, i);
    o = Math.floor(De(r, l));
  }
  for (var u = s - o, c = Math.ceil(u / t), h = [], f = o; f < s + c; f = f + c)
    h.push(Math.pow(r, f));
  return n <= 0 && h.unshift(0), h;
}
function qy(e, r, t) {
  if ((t === void 0 && (t = 5), e === r)) return { max: r, min: e, ticks: [e] };
  var n = t < 0 ? 0 : Math.round(t);
  if (n === 0) return { max: r, min: e, ticks: [] };
  var i = 1.5,
    a = 0.5 + 1.5 * i,
    o = r - e,
    s = o / n,
    l = Math.pow(10, Math.floor(Math.log10(s))),
    u = l;
  2 * l - s < i * (s - u) &&
    ((u = 2 * l),
    5 * l - s < a * (s - u) && ((u = 5 * l), 10 * l - s < i * (s - u) && (u = 10 * l)));
  for (
    var c = Math.ceil(r / u),
      h = Math.floor(e / u),
      f = Math.max(c * u, r),
      v = Math.min(h * u, e),
      d = Math.floor((f - v) / u) + 1,
      p = new Array(d),
      g = 0;
    g < d;
    g++
  )
    p[g] = cn(v + g * u);
  return { min: v, max: f, ticks: p };
}
function h2(e) {
  var r = e.exponent,
    t = e.tickCount,
    n = Math.ceil(Br(r, e.max)),
    i = Math.floor(Br(r, e.min)),
    a = qy(i, n, t).ticks;
  return a.map(function (o) {
    var s = o >= 0 ? 1 : -1;
    return Math.pow(o, r) * s;
  });
}
function f2(e, r) {
  var t = e.length * r;
  return r === 1
    ? e[e.length - 1]
    : r === 0
    ? e[0]
    : t % 1 !== 0
    ? e[Math.ceil(t) - 1]
    : e.length % 2 === 0
    ? (e[t - 1] + e[t]) / 2
    : e[t];
}
function v2(e) {
  var r = e.tickCount,
    t = e.values;
  if (!t || !t.length) return [];
  for (
    var n = t.slice().sort(function (s, l) {
        return s - l;
      }),
      i = [],
      a = 0;
    a < r;
    a++
  ) {
    var o = a / (r - 1);
    i.push(f2(n, o));
  }
  return i;
}
function d2(e) {
  var r = e.min,
    t = e.max,
    n = e.tickCount,
    i = e.tickInterval,
    a = e.minLimit,
    o = e.maxLimit,
    s = qy(r, t, n).ticks;
  return !$(a) || !$(o) ? oh(e, Me(s), Ht(s)) : i ? ah(r, t, i).ticks : s;
}
function p2(e) {
  var r = e.min,
    t = e.max,
    n = e.minTickInterval,
    i = e.tickInterval,
    a = e.tickCount;
  if (i) a = Math.ceil((t - r) / i);
  else {
    i = VF(r, t, a)[1];
    var o = (t - r) / i,
      s = o / a;
    s > 1 && (i = i * Math.ceil(s)), n && i < n && (i = n);
  }
  i = Math.max(Math.floor((t - r) / (Math.pow(2, 12) - 1)), i);
  for (var l = [], u = r; u < t + i; u += i) l.push(u);
  return l;
}
function g2(e) {
  var r = Uy(x({ showLast: !0 }, e));
  return r;
}
function gs(e) {
  return new Date(e).getFullYear();
}
function y2(e) {
  return new Date(e, 0, 1).getTime();
}
function ic(e) {
  return new Date(e).getMonth();
}
function m2(e, r) {
  var t = gs(e),
    n = gs(r),
    i = ic(e),
    a = ic(r);
  return (n - t) * 12 + ((a - i) % 12);
}
function x2(e, r) {
  return new Date(e, r, 1).getTime();
}
function w2(e, r) {
  return Math.ceil((r - e) / yr);
}
function b2(e, r) {
  return Math.ceil((r - e) / An);
}
function S2(e, r) {
  return Math.ceil((r - e) / (60 * 1e3));
}
function C2(e) {
  var r = e.min,
    t = e.max,
    n = e.minTickInterval,
    i = e.tickCount,
    a = e.tickInterval,
    o = [];
  a || ((a = (t - r) / i), n && a < n && (a = n)),
    (a = Math.max(Math.floor((t - r) / (Math.pow(2, 12) - 1)), a));
  var s = gs(r);
  if (a > id)
    for (var l = gs(t), u = Math.ceil(a / id), c = s; c <= l + u; c = c + u) o.push(y2(c));
  else if (a > la)
    for (var h = Math.ceil(a / la), f = ic(r), v = m2(r, t), c = 0; c <= v + h; c = c + h)
      o.push(x2(s, c + f));
  else if (a > yr)
    for (
      var d = new Date(r),
        p = d.getFullYear(),
        g = d.getMonth(),
        y = d.getDate(),
        m = Math.ceil(a / yr),
        b = w2(r, t),
        c = 0;
      c < b + m;
      c = c + m
    )
      o.push(new Date(p, g, y + c).getTime());
  else if (a > An)
    for (
      var d = new Date(r),
        p = d.getFullYear(),
        g = d.getMonth(),
        m = d.getDate(),
        w = d.getHours(),
        S = Math.ceil(a / An),
        C = b2(r, t),
        c = 0;
      c <= C + S;
      c = c + S
    )
      o.push(new Date(p, g, m, w + c).getTime());
  else if (a > Mn)
    for (var F = S2(r, t), E = Math.ceil(a / Mn), c = 0; c <= F + E; c = c + E) o.push(r + c * Mn);
  else {
    var I = a;
    I < Ye && (I = Ye);
    for (
      var T = Math.floor(r / Ye) * Ye, P = Math.ceil((t - r) / Ye), R = Math.ceil(I / Ye), c = 0;
      c < P + R;
      c = c + R
    )
      o.push(T + c * Ye);
  }
  return (
    o.length >= 512 &&
      console.warn(
        'Notice: current ticks length(' +
          o.length +
          ') >= 512, may cause performance issues, even out of memory. Because of the configure "tickInterval"(in milliseconds, current is ' +
          a +
          ') is too small, increase the value to solve the problem!',
      ),
    o
  );
}
ur('cat', Uy);
ur('time-cat', g2);
ur('wilkinson-extended', u2);
ur('r-pretty', d2);
ur('time', p2);
ur('time-pretty', C2);
ur('log', c2);
ur('pow', h2);
ur('quantile', v2);
ur('d3-linear', KF);
cr('cat', nl);
cr('category', nl);
cr('identity', jF);
cr('linear', al);
cr('log', YF);
cr('pow', WF);
cr('time', XF);
cr('timeCat', HF);
cr('quantize', _y);
cr('quantile', _F);
var Zy = {},
  Ky = function (e) {
    return Zy[e.toLowerCase()];
  },
  qa = function (e, r) {
    if (Ky(e)) throw new Error("Attribute type '".concat(e, "' existed."));
    Zy[e.toLowerCase()] = r;
  };
qa('Color', EF);
qa('Opacity', TF);
qa('Position', kF);
qa('Shape', IF);
qa('Size', LF);
var sh = (function () {
    function e(r) {
      (this.type = 'coordinate'),
        (this.isRect = !1),
        (this.isHelix = !1),
        (this.isPolar = !1),
        (this.isReflectX = !1),
        (this.isReflectY = !1);
      var t = r.start,
        n = r.end,
        i = r.matrix,
        a = i === void 0 ? [1, 0, 0, 0, 1, 0, 0, 0, 1] : i,
        o = r.isTransposed,
        s = o === void 0 ? !1 : o;
      (this.start = t),
        (this.end = n),
        (this.matrix = a),
        (this.originalMatrix = J([], a)),
        (this.isTransposed = s);
    }
    return (
      (e.prototype.initial = function () {
        (this.center = { x: (this.start.x + this.end.x) / 2, y: (this.start.y + this.end.y) / 2 }),
          (this.width = Math.abs(this.end.x - this.start.x)),
          (this.height = Math.abs(this.end.y - this.start.y));
      }),
      (e.prototype.update = function (r) {
        bt(this, r), this.initial();
      }),
      (e.prototype.convertDim = function (r, t) {
        var n,
          i = this[t],
          a = i.start,
          o = i.end;
        return this.isReflect(t) && ((n = [o, a]), (a = n[0]), (o = n[1])), a + r * (o - a);
      }),
      (e.prototype.invertDim = function (r, t) {
        var n,
          i = this[t],
          a = i.start,
          o = i.end;
        return this.isReflect(t) && ((n = [o, a]), (a = n[0]), (o = n[1])), (r - a) / (o - a);
      }),
      (e.prototype.applyMatrix = function (r, t, n) {
        n === void 0 && (n = 0);
        var i = this.matrix,
          a = [r, t, n];
        return ma(a, a, i), a;
      }),
      (e.prototype.invertMatrix = function (r, t, n) {
        n === void 0 && (n = 0);
        var i = this.matrix,
          a = KC([0, 0, 0, 0, 0, 0, 0, 0, 0], i),
          o = [r, t, n];
        return a && ma(o, o, a), o;
      }),
      (e.prototype.convert = function (r) {
        var t = this.convertPoint(r),
          n = t.x,
          i = t.y,
          a = this.applyMatrix(n, i, 1);
        return { x: a[0], y: a[1] };
      }),
      (e.prototype.invert = function (r) {
        var t = this.invertMatrix(r.x, r.y, 1);
        return this.invertPoint({ x: t[0], y: t[1] });
      }),
      (e.prototype.rotate = function (r) {
        var t = this.matrix,
          n = this.center;
        return Un(t, t, [-n.x, -n.y]), Uc(t, t, r), Un(t, t, [n.x, n.y]), this;
      }),
      (e.prototype.reflect = function (r) {
        return (
          r === 'x' ? (this.isReflectX = !this.isReflectX) : (this.isReflectY = !this.isReflectY),
          this
        );
      }),
      (e.prototype.scale = function (r, t) {
        var n = this.matrix,
          i = this.center;
        return Un(n, n, [-i.x, -i.y]), Kg(n, n, [r, t]), Un(n, n, [i.x, i.y]), this;
      }),
      (e.prototype.translate = function (r, t) {
        var n = this.matrix;
        return Un(n, n, [r, t]), this;
      }),
      (e.prototype.transpose = function () {
        return (this.isTransposed = !this.isTransposed), this;
      }),
      (e.prototype.getCenter = function () {
        return this.center;
      }),
      (e.prototype.getWidth = function () {
        return this.width;
      }),
      (e.prototype.getHeight = function () {
        return this.height;
      }),
      (e.prototype.getRadius = function () {
        return this.radius;
      }),
      (e.prototype.isReflect = function (r) {
        return r === 'x' ? this.isReflectX : this.isReflectY;
      }),
      (e.prototype.resetMatrix = function (r) {
        this.matrix = r || J([], this.originalMatrix);
      }),
      e
    );
  })(),
  Qy = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      return (n.isRect = !0), (n.type = 'cartesian'), n.initial(), n;
    }
    return (
      (r.prototype.initial = function () {
        e.prototype.initial.call(this);
        var t = this.start,
          n = this.end;
        (this.x = { start: t.x, end: n.x }), (this.y = { start: t.y, end: n.y });
      }),
      (r.prototype.convertPoint = function (t) {
        var n,
          i = t.x,
          a = t.y;
        return (
          this.isTransposed && ((n = [a, i]), (i = n[0]), (a = n[1])),
          { x: this.convertDim(i, 'x'), y: this.convertDim(a, 'y') }
        );
      }),
      (r.prototype.invertPoint = function (t) {
        var n,
          i = this.invertDim(t.x, 'x'),
          a = this.invertDim(t.y, 'y');
        return this.isTransposed && ((n = [a, i]), (i = n[0]), (a = n[1])), { x: i, y: a };
      }),
      r
    );
  })(sh),
  M2 = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      (n.isHelix = !0), (n.type = 'helix');
      var i = t.startAngle,
        a = i === void 0 ? 1.25 * Math.PI : i,
        o = t.endAngle,
        s = o === void 0 ? 7.25 * Math.PI : o,
        l = t.innerRadius,
        u = l === void 0 ? 0 : l,
        c = t.radius;
      return (
        (n.startAngle = a), (n.endAngle = s), (n.innerRadius = u), (n.radius = c), n.initial(), n
      );
    }
    return (
      (r.prototype.initial = function () {
        e.prototype.initial.call(this);
        var t = (this.endAngle - this.startAngle) / (2 * Math.PI) + 1,
          n = Math.min(this.width, this.height) / 2;
        this.radius && this.radius >= 0 && this.radius <= 1 && (n = n * this.radius),
          (this.d = Math.floor((n * (1 - this.innerRadius)) / t)),
          (this.a = this.d / (Math.PI * 2)),
          (this.x = { start: this.startAngle, end: this.endAngle }),
          (this.y = { start: this.innerRadius * n, end: this.innerRadius * n + this.d * 0.99 });
      }),
      (r.prototype.convertPoint = function (t) {
        var n,
          i = t.x,
          a = t.y;
        this.isTransposed && ((n = [a, i]), (i = n[0]), (a = n[1]));
        var o = this.convertDim(i, 'x'),
          s = this.a * o,
          l = this.convertDim(a, 'y');
        return {
          x: this.center.x + Math.cos(o) * (s + l),
          y: this.center.y + Math.sin(o) * (s + l),
        };
      }),
      (r.prototype.invertPoint = function (t) {
        var n,
          i = this.d + this.y.start,
          a = qg([0, 0], [t.x, t.y], [this.center.x, this.center.y]),
          o = qc(a, [1, 0], !0),
          s = o * this.a;
        Jn(a) < s && (s = Jn(a));
        var l = Math.floor((Jn(a) - s) / i);
        o = 2 * l * Math.PI + o;
        var u = this.a * o,
          c = Jn(a) - u;
        c = Zt(c, 0) ? 0 : c;
        var h = this.invertDim(o, 'x'),
          f = this.invertDim(c, 'y');
        return (
          (h = Zt(h, 0) ? 0 : h),
          (f = Zt(f, 0) ? 0 : f),
          this.isTransposed && ((n = [f, h]), (h = n[0]), (f = n[1])),
          { x: h, y: f }
        );
      }),
      r
    );
  })(sh),
  A2 = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      (n.isPolar = !0), (n.type = 'polar');
      var i = t.startAngle,
        a = i === void 0 ? -Math.PI / 2 : i,
        o = t.endAngle,
        s = o === void 0 ? (Math.PI * 3) / 2 : o,
        l = t.innerRadius,
        u = l === void 0 ? 0 : l,
        c = t.radius;
      return (
        (n.startAngle = a), (n.endAngle = s), (n.innerRadius = u), (n.radius = c), n.initial(), n
      );
    }
    return (
      (r.prototype.initial = function () {
        for (e.prototype.initial.call(this); this.endAngle < this.startAngle; )
          this.endAngle += Math.PI * 2;
        var t = this.getOneBox(),
          n = t.maxX - t.minX,
          i = t.maxY - t.minY,
          a = Math.abs(t.minX) / n,
          o = Math.abs(t.minY) / i,
          s;
        this.height / i > this.width / n
          ? ((s = this.width / n),
            (this.circleCenter = {
              x: this.center.x - (0.5 - a) * this.width,
              y: this.center.y - (0.5 - o) * s * i,
            }))
          : ((s = this.height / i),
            (this.circleCenter = {
              x: this.center.x - (0.5 - a) * s * n,
              y: this.center.y - (0.5 - o) * this.height,
            })),
          (this.polarRadius = this.radius),
          this.radius
            ? this.radius > 0 && this.radius <= 1
              ? (this.polarRadius = s * this.radius)
              : (this.radius <= 0 || this.radius > s) && (this.polarRadius = s)
            : (this.polarRadius = s),
          (this.x = { start: this.startAngle, end: this.endAngle }),
          (this.y = { start: this.innerRadius * this.polarRadius, end: this.polarRadius });
      }),
      (r.prototype.getRadius = function () {
        return this.polarRadius;
      }),
      (r.prototype.convertPoint = function (t) {
        var n,
          i = this.getCenter(),
          a = t.x,
          o = t.y;
        return (
          this.isTransposed && ((n = [o, a]), (a = n[0]), (o = n[1])),
          (a = this.convertDim(a, 'x')),
          (o = this.convertDim(o, 'y')),
          { x: i.x + Math.cos(a) * o, y: i.y + Math.sin(a) * o }
        );
      }),
      (r.prototype.invertPoint = function (t) {
        var n,
          i = this.getCenter(),
          a = [t.x - i.x, t.y - i.y],
          o = this,
          s = o.startAngle,
          l = o.endAngle;
        this.isReflect('x') && ((n = [l, s]), (s = n[0]), (l = n[1]));
        var u = [1, 0, 0, 0, 1, 0, 0, 0, 1];
        Uc(u, u, s);
        var c = [1, 0, 0];
        ma(c, c, u);
        var h = [c[0], c[1]],
          f = qc(h, a, l < s);
        Zt(f, Math.PI * 2) && (f = 0);
        var v = Jn(a),
          d = f / (l - s);
        d = l - s > 0 ? d : -d;
        var p = this.invertDim(v, 'y'),
          g = { x: 0, y: 0 };
        return (g.x = this.isTransposed ? p : d), (g.y = this.isTransposed ? d : p), g;
      }),
      (r.prototype.getCenter = function () {
        return this.circleCenter;
      }),
      (r.prototype.getOneBox = function () {
        var t = this.startAngle,
          n = this.endAngle;
        if (Math.abs(n - t) >= Math.PI * 2) return { minX: -1, maxX: 1, minY: -1, maxY: 1 };
        for (
          var i = [0, Math.cos(t), Math.cos(n)],
            a = [0, Math.sin(t), Math.sin(n)],
            o = Math.min(t, n);
          o < Math.max(t, n);
          o += Math.PI / 18
        )
          i.push(Math.cos(o)), a.push(Math.sin(o));
        return {
          minX: Math.min.apply(Math, i),
          maxX: Math.max.apply(Math, i),
          minY: Math.min.apply(Math, a),
          maxY: Math.max.apply(Math, a),
        };
      }),
      r
    );
  })(sh),
  Jy = {},
  F2 = function (e) {
    return Jy[e.toLowerCase()];
  },
  ol = function (e, r) {
    Jy[e.toLowerCase()] = r;
  };
ol('rect', Qy);
ol('cartesian', Qy);
ol('polar', A2);
ol('helix', M2);
function tm(e, r, t) {
  var n = new _a(r, t);
  (n.target = e), n.propagationPath.push(e), e.emitDelegation(r, n);
  for (var i = e.getParent(); i; )
    i.emitDelegation(r, n), n.propagationPath.push(i), (i = i.getParent());
}
var em = [1, 0, 0, 0, 1, 0, 0, 0, 1];
function Pn(e, r, t) {
  if ((t === void 0 && (t = em), !r)) return null;
  var n = Vt(t, [
    ['t', -e.x, -e.y],
    ['r', r],
    ['t', e.x, e.y],
  ]);
  return n;
}
function lh(e, r) {
  return !e.x && !e.y ? null : Vt(r || em, [['t', e.x, e.y]]);
}
function E2(e) {
  var r = [1, 0, 0],
    t = [0, 0, 0];
  return ma(t, r, e), Math.atan2(t[1], t[0]);
}
function bo(e, r) {
  var t = [0, 0];
  return iM(t, r, e), t;
}
function T2(e, r) {
  var t = bo(e, [r.minX, r.minY]),
    n = bo(e, [r.maxX, r.minY]),
    i = bo(e, [r.minX, r.maxY]),
    a = bo(e, [r.maxX, r.maxY]),
    o = Math.min(t[0], n[0], i[0], a[0]),
    s = Math.max(t[0], n[0], i[0], a[0]),
    l = Math.min(t[1], n[1], i[1], a[1]),
    u = Math.max(t[1], n[1], i[1], a[1]);
  return { x: o, y: l, minX: o, minY: l, maxX: s, maxY: u, width: s - o, height: u - l };
}
function rm(e, r, t, n) {
  if (r) {
    var i = Pn({ x: t, y: n }, r, e.getMatrix());
    e.setMatrix(i);
  }
}
function uh(e, r, t) {
  var n = lh({ x: r, y: t });
  e.attr('matrix', n);
}
function ys(e) {
  var r = 0,
    t = 0,
    n = 0,
    i = 0;
  return (
    at(e)
      ? (r = t = n = i = e)
      : N(e) &&
        ((r = e[0]),
        (n = $(e[1]) ? e[0] : e[1]),
        (i = $(e[2]) ? e[0] : e[2]),
        (t = $(e[3]) ? n : e[3])),
    [r, n, i, t]
  );
}
function ch(e) {
  for (var r = e.childNodes, t = r.length, n = t - 1; n >= 0; n--) e.removeChild(r[n]);
}
function k2(e, r) {
  return !!e.className.match(new RegExp('(\\s|^)' + r + '(\\s|$)'));
}
function Ma(e) {
  var r = e.start,
    t = e.end,
    n = Math.min(r.x, t.x),
    i = Math.min(r.y, t.y),
    a = Math.max(r.x, t.x),
    o = Math.max(r.y, t.y);
  return { x: n, y: i, minX: n, minY: i, maxX: a, maxY: o, width: a - n, height: o - i };
}
function I2(e) {
  var r = e.map(function (s) {
      return s.x;
    }),
    t = e.map(function (s) {
      return s.y;
    }),
    n = Math.min.apply(Math, r),
    i = Math.min.apply(Math, t),
    a = Math.max.apply(Math, r),
    o = Math.max.apply(Math, t);
  return { x: n, y: i, minX: n, minY: i, maxX: a, maxY: o, width: a - n, height: o - i };
}
function sl(e, r, t, n) {
  var i = e + t,
    a = r + n;
  return {
    x: e,
    y: r,
    width: t,
    height: n,
    minX: e,
    minY: r,
    maxX: isNaN(i) ? 0 : i,
    maxY: isNaN(a) ? 0 : a,
  };
}
function Fn(e, r, t) {
  return (1 - t) * e + r * t;
}
function ii(e, r, t) {
  return { x: e.x + Math.cos(t) * r, y: e.y + Math.sin(t) * r };
}
function L2(e, r) {
  var t = r.x - e.x,
    n = r.y - e.y;
  return Math.sqrt(t * t + n * n);
}
var ms = function (e, r, t) {
  return (
    t === void 0 && (t = Math.pow(Number.EPSILON, 0.5)),
    [e, r].includes(1 / 0) ? Math.abs(e) === Math.abs(r) : Math.abs(e - r) < t
  );
};
function P2(e, r) {
  var t = Math.max(e.minX, r.minX),
    n = Math.max(e.minY, r.minY),
    i = Math.min(e.maxX, r.maxX),
    a = Math.min(e.maxY, r.maxY);
  return sl(t, n, i - t, a - n);
}
function nm(e) {
  var r = e.getClip(),
    t = r && r.getBBox(),
    n;
  if (!e.isGroup()) n = e.getBBox();
  else {
    var i = 1 / 0,
      a = -1 / 0,
      o = 1 / 0,
      s = -1 / 0,
      l = e.getChildren();
    l.length > 0
      ? M(l, function (u) {
          if (u.get('visible')) {
            if (u.isGroup() && u.get('children').length === 0) return !0;
            var c = nm(u),
              h = u.applyToMatrix([c.minX, c.minY, 1]),
              f = u.applyToMatrix([c.minX, c.maxY, 1]),
              v = u.applyToMatrix([c.maxX, c.minY, 1]),
              d = u.applyToMatrix([c.maxX, c.maxY, 1]),
              p = Math.min(h[0], f[0], v[0], d[0]),
              g = Math.max(h[0], f[0], v[0], d[0]),
              y = Math.min(h[1], f[1], v[1], d[1]),
              m = Math.max(h[1], f[1], v[1], d[1]);
            p < i && (i = p), g > a && (a = g), y < o && (o = y), m > s && (s = m);
          }
        })
      : ((i = 0), (a = 0), (o = 0), (s = 0)),
      (n = sl(i, o, a - i, s - o));
  }
  return t ? P2(n, t) : n;
}
function O2(e, r) {
  if (!(!e.getClip() && !r.getClip())) {
    var t = r.getClip();
    if (!t) {
      e.setClip(null);
      return;
    }
    var n = { type: t.get('type'), attrs: t.attr() };
    e.setClip(n);
  }
}
function fe(e) {
  return e + 'px';
}
function im(e, r, t, n) {
  var i = L2(e, r),
    a = n / i,
    o = 0;
  return (
    t === 'start' ? (o = 0 - a) : t === 'end' && (o = 1 + a),
    { x: Fn(e.x, r.x, o), y: Fn(e.y, r.y, o) }
  );
}
var D2 = {
    none: [],
    point: ['x', 'y'],
    region: ['start', 'end'],
    points: ['points'],
    circle: ['center', 'radius', 'startAngle', 'endAngle'],
  },
  am = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      return n.initCfg(), n;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        return {
          id: '',
          name: '',
          type: '',
          locationType: 'none',
          offsetX: 0,
          offsetY: 0,
          animate: !1,
          capture: !0,
          updateAutoRender: !1,
          animateOption: {
            appear: null,
            update: { duration: 400, easing: 'easeQuadInOut' },
            enter: { duration: 400, easing: 'easeQuadInOut' },
            leave: { duration: 350, easing: 'easeQuadIn' },
          },
          events: null,
          defaultCfg: {},
          visible: !0,
        };
      }),
      (r.prototype.clear = function () {}),
      (r.prototype.update = function (t) {
        var n = this,
          i = this.get('defaultCfg') || {};
        M(t, function (a, o) {
          var s = n.get(o),
            l = a;
          s !== a && (xt(a) && i[o] && (l = _({}, i[o], a)), n.set(o, l));
        }),
          this.updateInner(t),
          this.afterUpdate(t);
      }),
      (r.prototype.updateInner = function (t) {}),
      (r.prototype.afterUpdate = function (t) {
        _r(t, 'visible') && (t.visible ? this.show() : this.hide()),
          _r(t, 'capture') && this.setCapture(t.capture);
      }),
      (r.prototype.getLayoutBBox = function () {
        return this.getBBox();
      }),
      (r.prototype.getLocationType = function () {
        return this.get('locationType');
      }),
      (r.prototype.getOffset = function () {
        return { offsetX: this.get('offsetX'), offsetY: this.get('offsetY') };
      }),
      (r.prototype.setOffset = function (t, n) {
        this.update({ offsetX: t, offsetY: n });
      }),
      (r.prototype.setLocation = function (t) {
        var n = x({}, t);
        this.update(n);
      }),
      (r.prototype.getLocation = function () {
        var t = this,
          n = {},
          i = this.get('locationType'),
          a = D2[i];
        return (
          M(a, function (o) {
            n[o] = t.get(o);
          }),
          n
        );
      }),
      (r.prototype.isList = function () {
        return !1;
      }),
      (r.prototype.isSlider = function () {
        return !1;
      }),
      (r.prototype.init = function () {}),
      (r.prototype.initCfg = function () {
        var t = this,
          n = this.get('defaultCfg');
        M(n, function (i, a) {
          var o = t.get(a);
          if (xt(o)) {
            var s = _({}, i, o);
            t.set(a, s);
          }
        });
      }),
      r
    );
  })(Hs),
  ln = 'update_status',
  B2 = ['visible', 'tip', 'delegateObject'],
  R2 = ['container', 'group', 'shapesMap', 'isRegister', 'isUpdating', 'destroyed'],
  re = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          container: null,
          shapesMap: {},
          group: null,
          capture: !0,
          isRegister: !1,
          isUpdating: !1,
          isInit: !0,
        });
      }),
      (r.prototype.remove = function () {
        this.clear();
        var t = this.get('group');
        t.remove();
      }),
      (r.prototype.clear = function () {
        var t = this.get('group');
        t.clear(), this.set('shapesMap', {}), this.clearOffScreenCache(), this.set('isInit', !0);
      }),
      (r.prototype.getChildComponentById = function (t) {
        var n = this.getElementById(t),
          i = n && n.get('component');
        return i;
      }),
      (r.prototype.getElementById = function (t) {
        return this.get('shapesMap')[t];
      }),
      (r.prototype.getElementByLocalId = function (t) {
        var n = this.getElementId(t);
        return this.getElementById(n);
      }),
      (r.prototype.getElementsByName = function (t) {
        var n = [];
        return (
          M(this.get('shapesMap'), function (i) {
            i.get('name') === t && n.push(i);
          }),
          n
        );
      }),
      (r.prototype.getContainer = function () {
        return this.get('container');
      }),
      (r.prototype.updateInner = function (t) {
        this.offScreenRender(), this.get('updateAutoRender') && this.render();
      }),
      (r.prototype.render = function () {
        var t = this.get('offScreenGroup');
        t || (t = this.offScreenRender());
        var n = this.get('group');
        this.updateElements(t, n),
          this.deleteElements(),
          this.applyOffset(),
          this.get('eventInitted') || (this.initEvent(), this.set('eventInitted', !0)),
          this.set('isInit', !1);
      }),
      (r.prototype.show = function () {
        var t = this.get('group');
        t.show(), this.set('visible', !0);
      }),
      (r.prototype.hide = function () {
        var t = this.get('group');
        t.hide(), this.set('visible', !1);
      }),
      (r.prototype.setCapture = function (t) {
        var n = this.get('group');
        n.set('capture', t), this.set('capture', t);
      }),
      (r.prototype.destroy = function () {
        this.removeEvent(), this.remove(), e.prototype.destroy.call(this);
      }),
      (r.prototype.getBBox = function () {
        return this.get('group').getCanvasBBox();
      }),
      (r.prototype.getLayoutBBox = function () {
        var t = this.get('group'),
          n = this.getInnerLayoutBBox(),
          i = t.getTotalMatrix();
        return i && (n = T2(i, n)), n;
      }),
      (r.prototype.on = function (t, n, i) {
        var a = this.get('group');
        return a.on(t, n, i), this;
      }),
      (r.prototype.off = function (t, n) {
        var i = this.get('group');
        return i && i.off(t, n), this;
      }),
      (r.prototype.emit = function (t, n) {
        var i = this.get('group');
        i.emit(t, n);
      }),
      (r.prototype.init = function () {
        e.prototype.init.call(this), this.get('group') || this.initGroup(), this.offScreenRender();
      }),
      (r.prototype.getInnerLayoutBBox = function () {
        return this.get('offScreenBBox') || this.get('group').getBBox();
      }),
      (r.prototype.delegateEmit = function (t, n) {
        var i = this.get('group');
        (n.target = i), i.emit(t, n), tm(i, t, n);
      }),
      (r.prototype.createOffScreenGroup = function () {
        var t = this.get('group'),
          n = t.getGroupBase(),
          i = new n({ delegateObject: this.getDelegateObject() });
        return i;
      }),
      (r.prototype.applyOffset = function () {
        var t = this.get('offsetX'),
          n = this.get('offsetY');
        this.moveElementTo(this.get('group'), { x: t, y: n });
      }),
      (r.prototype.initGroup = function () {
        var t = this.get('container');
        this.set(
          'group',
          t.addGroup({
            id: this.get('id'),
            name: this.get('name'),
            capture: this.get('capture'),
            visible: this.get('visible'),
            isComponent: !0,
            component: this,
            delegateObject: this.getDelegateObject(),
          }),
        );
      }),
      (r.prototype.offScreenRender = function () {
        this.clearOffScreenCache();
        var t = this.createOffScreenGroup();
        return (
          this.renderInner(t), this.set('offScreenGroup', t), this.set('offScreenBBox', nm(t)), t
        );
      }),
      (r.prototype.addGroup = function (t, n) {
        this.appendDelegateObject(t, n);
        var i = t.addGroup(n);
        return this.get('isRegister') && this.registerElement(i), i;
      }),
      (r.prototype.addShape = function (t, n) {
        this.appendDelegateObject(t, n);
        var i = t.addShape(n);
        return this.get('isRegister') && this.registerElement(i), i;
      }),
      (r.prototype.addComponent = function (t, n) {
        var i = n.id,
          a = n.component,
          o = wt(n, ['id', 'component']),
          s = new a(
            x(x({}, o), { id: i, container: t, updateAutoRender: this.get('updateAutoRender') }),
          );
        return (
          s.init(), s.render(), this.get('isRegister') && this.registerElement(s.get('group')), s
        );
      }),
      (r.prototype.initEvent = function () {}),
      (r.prototype.removeEvent = function () {
        var t = this.get('group');
        t.off();
      }),
      (r.prototype.getElementId = function (t) {
        var n = this.get('id'),
          i = this.get('name');
        return n + '-' + i + '-' + t;
      }),
      (r.prototype.registerElement = function (t) {
        var n = t.get('id');
        this.get('shapesMap')[n] = t;
      }),
      (r.prototype.unregisterElement = function (t) {
        var n = t.get('id');
        delete this.get('shapesMap')[n];
      }),
      (r.prototype.moveElementTo = function (t, n) {
        var i = lh(n);
        t.attr('matrix', i);
      }),
      (r.prototype.addAnimation = function (t, n, i) {
        var a = n.attr('opacity');
        $(a) && (a = 1), n.attr('opacity', 0), n.animate({ opacity: a }, i);
      }),
      (r.prototype.removeAnimation = function (t, n, i) {
        n.animate({ opacity: 0 }, i);
      }),
      (r.prototype.updateAnimation = function (t, n, i, a) {
        n.animate(i, a);
      }),
      (r.prototype.updateElements = function (t, n) {
        var i = this,
          a = this.get('animate'),
          o = this.get('animateOption'),
          s = t.getChildren().slice(0),
          l;
        M(s, function (u) {
          var c = u.get('id'),
            h = i.getElementById(c),
            f = u.get('name');
          if (h)
            if (u.get('isComponent')) {
              var v = u.get('component'),
                d = h.get('component'),
                p = Yc(v.cfg, VS(Ci(v.cfg), R2));
              d.update(p), h.set(ln, 'update');
            } else {
              var g = i.getReplaceAttrs(h, u);
              a && o.update ? i.updateAnimation(f, h, g, o.update) : h.attr(g),
                u.isGroup() && i.updateElements(u, h),
                M(B2, function (w) {
                  h.set(w, u.get(w));
                }),
                O2(h, u),
                (l = h),
                h.set(ln, 'update');
            }
          else {
            n.add(u);
            var y = n.getChildren();
            if ((y.splice(y.length - 1, 1), l)) {
              var m = y.indexOf(l);
              y.splice(m + 1, 0, u);
            } else y.unshift(u);
            if ((i.registerElement(u), u.set(ln, 'add'), u.get('isComponent'))) {
              var v = u.get('component');
              v.set('container', n);
            } else u.isGroup() && i.registerNewGroup(u);
            if (((l = u), a)) {
              var b = i.get('isInit') ? o.appear : o.enter;
              b && i.addAnimation(f, u, b);
            }
          }
        });
      }),
      (r.prototype.clearUpdateStatus = function (t) {
        var n = t.getChildren();
        M(n, function (i) {
          i.set(ln, null);
        });
      }),
      (r.prototype.clearOffScreenCache = function () {
        var t = this.get('offScreenGroup');
        t && t.destroy(), this.set('offScreenGroup', null), this.set('offScreenBBox', null);
      }),
      (r.prototype.getDelegateObject = function () {
        var t,
          n = this.get('name'),
          i = ((t = {}), (t[n] = this), (t.component = this), t);
        return i;
      }),
      (r.prototype.appendDelegateObject = function (t, n) {
        var i = t.get('delegateObject');
        n.delegateObject || (n.delegateObject = {}), bt(n.delegateObject, i);
      }),
      (r.prototype.getReplaceAttrs = function (t, n) {
        var i = t.attr(),
          a = n.attr();
        return (
          M(i, function (o, s) {
            a[s] === void 0 && (a[s] = void 0);
          }),
          a
        );
      }),
      (r.prototype.registerNewGroup = function (t) {
        var n = this,
          i = t.getChildren();
        M(i, function (a) {
          n.registerElement(a), a.set(ln, 'add'), a.isGroup() && n.registerNewGroup(a);
        });
      }),
      (r.prototype.deleteElements = function () {
        var t = this,
          n = this.get('shapesMap'),
          i = [];
        M(n, function (s, l) {
          !s.get(ln) || s.destroyed ? i.push([l, s]) : s.set(ln, null);
        });
        var a = this.get('animate'),
          o = this.get('animateOption');
        M(i, function (s) {
          var l = s[0],
            u = s[1];
          if (!u.destroyed) {
            var c = u.get('name');
            if (a && o.leave) {
              var h = bt(
                {
                  callback: function () {
                    t.removeElement(u);
                  },
                },
                o.leave,
              );
              t.removeAnimation(c, u, h);
            } else t.removeElement(u);
          }
          delete n[l];
        });
      }),
      (r.prototype.removeElement = function (t) {
        if (t.get('isGroup')) {
          var n = t.get('component');
          n && n.destroy();
        }
        t.remove();
      }),
      r
    );
  })(am),
  iu = '…';
function $2(e) {
  for (var r = 0, t = 0; t < e.length; t++) r += hn(e, t);
  return r;
}
function hn(e, r) {
  return e.charCodeAt(r) > 0 && e.charCodeAt(r) < 128 ? 1 : 2;
}
function N2(e, r, t) {
  t === void 0 && (t = 'tail');
  var n = e.length,
    i = '';
  if (t === 'tail') {
    for (var a = 0, o = 0; a < r; ) {
      var s = hn(e, o);
      if (a + s <= r) (i += e[o]), (a += hn(e, o)), o++;
      else break;
    }
    i += iu;
  } else if (t === 'head') {
    for (var a = 0, o = n - 1; a < r; ) {
      var s = hn(e, o);
      if (a + s <= r) (i += e[o]), (a += hn(e, o)), o--;
      else break;
    }
    i = iu + i;
  } else {
    for (var l = '', u = '', a = 0, c = 0, h = n - 1; a < r; ) {
      var f = hn(e, c),
        v = !1;
      f + a <= r && ((l += e[c]), c++, (a += f), (v = !0));
      var d = hn(e, h);
      if ((d + a <= r && ((u = e[h] + u), (a += d), h--, (v = !0)), !v)) break;
    }
    i = l + iu + u;
  }
  return i;
}
var z2 = '…',
  G2 = 2,
  V2 = 400;
function H2(e) {
  for (
    var r = e.map(function (l) {
        var u = l.attr('text');
        return $(u) ? '' : '' + u;
      }),
      t = 0,
      n = 0,
      i = 0;
    i < r.length;
    i += 1
  ) {
    for (var a = 0, o = 0; o <= r[i].length; o += 1) {
      var s = r[i].charCodeAt(o);
      s >= 19968 && s <= 40869 ? (a += 2) : (a += 1);
    }
    a > t && ((t = a), (n = i));
  }
  return e[n].getBBox().width;
}
function ac(e) {
  if (e.length > V2) return H2(e);
  var r = 0;
  return (
    M(e, function (t) {
      var n = t.getBBox(),
        i = n.width;
      r < i && (r = i);
    }),
    r
  );
}
function Y2(e, r) {
  var t = r.getCanvasBBox();
  return e ? t.width : t.height;
}
function ua(e, r, t, n) {
  var i;
  n === void 0 && (n = 'tail');
  var a = (i = r.attr('text')) !== null && i !== void 0 ? i : '';
  if (n === 'tail') {
    var o = Yc(r.attr(), ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'fontVariant']),
      s = fC(a, t, o, '…');
    return a !== s ? (r.attr('text', s), r.set('tip', a), !0) : (r.set('tip', null), !1);
  }
  var l = Y2(e, r),
    u = $2(a),
    c = !1;
  if (t < l) {
    var h = Math.floor((t / l) * u) - G2,
      f = void 0;
    h >= 0 ? (f = N2(a, h, n)) : (f = z2), f && (r.attr('text', f), (c = !0));
  }
  return c ? r.set('tip', a) : r.set('tip', null), c;
}
function ll(e, r) {
  var t = r.x,
    n = r.y,
    i = r.content,
    a = r.style,
    o = r.id,
    s = r.name,
    l = r.rotate,
    u = r.maxLength,
    c = r.autoEllipsis,
    h = r.isVertical,
    f = r.ellipsisPosition,
    v = r.background,
    d = e.addGroup({ id: o + '-group', name: s + '-group', attrs: { x: t, y: n } }),
    p = d.addShape({ type: 'text', id: o, name: s, attrs: x({ x: 0, y: 0, text: i }, a) }),
    g = ys(A(v, 'padding', 0));
  if (u && c) {
    var y = u - (g[1] + g[3]);
    ua(!h, p, y, f);
  }
  if (v) {
    var m = A(v, 'style', {}),
      b = p.getCanvasBBox(),
      w = b.minX,
      S = b.minY,
      C = b.width,
      F = b.height,
      E = d.addShape('rect', {
        id: o + '-bg',
        name: o + '-bg',
        attrs: x({ x: w - g[3], y: S - g[0], width: C + g[1] + g[3], height: F + g[0] + g[2] }, m),
      });
    E.toBack();
  }
  uh(d, t, n), rm(d, l, t, n);
}
const ht = {
  fontFamily: `
  BlinkMacSystemFont, "Segoe UI", Roboto,"Helvetica Neue",
  Helvetica, "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei",
  SimSun, "sans-serif"`,
  textColor: '#2C3542',
  activeTextColor: '#333333',
  uncheckedColor: '#D8D8D8',
  lineColor: '#416180',
  regionColor: '#CCD7EB',
  verticalAxisRotate: -Math.PI / 4,
  horizontalAxisRotate: Math.PI / 4,
  descriptionIconStroke: '#fff',
  descriptionIconFill: 'rgba(58, 73, 101, .25)',
};
var W2 = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'annotation',
          type: 'line',
          locationType: 'region',
          start: null,
          end: null,
          style: {},
          text: null,
          defaultCfg: {
            style: {
              fill: ht.textColor,
              fontSize: 12,
              textAlign: 'center',
              textBaseline: 'bottom',
              fontFamily: ht.fontFamily,
            },
            text: {
              position: 'center',
              autoRotate: !0,
              content: null,
              offsetX: 0,
              offsetY: 0,
              style: { stroke: ht.lineColor, lineWidth: 1 },
            },
          },
        });
      }),
      (r.prototype.renderInner = function (t) {
        this.renderLine(t), this.get('text') && this.renderLabel(t);
      }),
      (r.prototype.renderLine = function (t) {
        var n = this.get('start'),
          i = this.get('end'),
          a = this.get('style');
        this.addShape(t, {
          type: 'line',
          id: this.getElementId('line'),
          name: 'annotation-line',
          attrs: x({ x1: n.x, y1: n.y, x2: i.x, y2: i.y }, a),
        });
      }),
      (r.prototype.getLabelPoint = function (t, n, i) {
        var a;
        return (
          i === 'start'
            ? (a = 0)
            : i === 'center'
            ? (a = 0.5)
            : et(i) && i.indexOf('%') !== -1
            ? (a = parseInt(i, 10) / 100)
            : at(i)
            ? (a = i)
            : (a = 1),
          (a > 1 || a < 0) && (a = 1),
          { x: Fn(t.x, n.x, a), y: Fn(t.y, n.y, a) }
        );
      }),
      (r.prototype.renderLabel = function (t) {
        var n = this.get('text'),
          i = this.get('start'),
          a = this.get('end'),
          o = n.position,
          s = n.content,
          l = n.style,
          u = n.offsetX,
          c = n.offsetY,
          h = n.autoRotate,
          f = n.maxLength,
          v = n.autoEllipsis,
          d = n.ellipsisPosition,
          p = n.background,
          g = n.isVertical,
          y = g === void 0 ? !1 : g,
          m = this.getLabelPoint(i, a, o),
          b = m.x + u,
          w = m.y + c,
          S = {
            id: this.getElementId('line-text'),
            name: 'annotation-line-text',
            x: b,
            y: w,
            content: s,
            style: l,
            maxLength: f,
            autoEllipsis: v,
            ellipsisPosition: d,
            background: p,
            isVertical: y,
          };
        if (h) {
          var C = [a.x - i.x, a.y - i.y];
          S.rotate = Math.atan2(C[1], C[0]);
        }
        ll(t, S);
      }),
      r
    );
  })(re),
  X2 = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'annotation',
          type: 'text',
          locationType: 'point',
          x: 0,
          y: 0,
          content: '',
          rotate: null,
          style: {},
          background: null,
          maxLength: null,
          autoEllipsis: !0,
          isVertical: !1,
          ellipsisPosition: 'tail',
          defaultCfg: {
            style: {
              fill: ht.textColor,
              fontSize: 12,
              textAlign: 'center',
              textBaseline: 'middle',
              fontFamily: ht.fontFamily,
            },
          },
        });
      }),
      (r.prototype.setLocation = function (t) {
        this.set('x', t.x), this.set('y', t.y), this.resetLocation();
      }),
      (r.prototype.renderInner = function (t) {
        var n = this.getLocation(),
          i = n.x,
          a = n.y,
          o = this.get('content'),
          s = this.get('style'),
          l = this.getElementId('text'),
          u = this.get('name') + '-text',
          c = this.get('maxLength'),
          h = this.get('autoEllipsis'),
          f = this.get('isVertical'),
          v = this.get('ellipsisPosition'),
          d = this.get('background'),
          p = this.get('rotate'),
          g = {
            id: l,
            name: u,
            x: i,
            y: a,
            content: o,
            style: s,
            maxLength: c,
            autoEllipsis: h,
            isVertical: f,
            ellipsisPosition: v,
            background: d,
            rotate: p,
          };
        ll(t, g);
      }),
      (r.prototype.resetLocation = function () {
        var t = this.getElementByLocalId('text-group');
        if (t) {
          var n = this.getLocation(),
            i = n.x,
            a = n.y,
            o = this.get('rotate');
          uh(t, i, a), rm(t, o, i, a);
        }
      }),
      r
    );
  })(re),
  _2 = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'annotation',
          type: 'arc',
          locationType: 'circle',
          center: null,
          radius: 100,
          startAngle: -Math.PI / 2,
          endAngle: (Math.PI * 3) / 2,
          style: { stroke: '#999', lineWidth: 1 },
        });
      }),
      (r.prototype.renderInner = function (t) {
        this.renderArc(t);
      }),
      (r.prototype.getArcPath = function () {
        var t = this.getLocation(),
          n = t.center,
          i = t.radius,
          a = t.startAngle,
          o = t.endAngle,
          s = ii(n, i, a),
          l = ii(n, i, o),
          u = o - a > Math.PI ? 1 : 0,
          c = [['M', s.x, s.y]];
        if (o - a === Math.PI * 2) {
          var h = ii(n, i, a + Math.PI);
          c.push(['A', i, i, 0, u, 1, h.x, h.y]), c.push(['A', i, i, 0, u, 1, l.x, l.y]);
        } else c.push(['A', i, i, 0, u, 1, l.x, l.y]);
        return c;
      }),
      (r.prototype.renderArc = function (t) {
        var n = this.getArcPath(),
          i = this.get('style');
        this.addShape(t, {
          type: 'path',
          id: this.getElementId('arc'),
          name: 'annotation-arc',
          attrs: x({ path: n }, i),
        });
      }),
      r
    );
  })(re),
  j2 = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'annotation',
          type: 'region',
          locationType: 'region',
          start: null,
          end: null,
          style: {},
          defaultCfg: { style: { lineWidth: 0, fill: ht.regionColor, opacity: 0.4 } },
        });
      }),
      (r.prototype.renderInner = function (t) {
        this.renderRegion(t);
      }),
      (r.prototype.renderRegion = function (t) {
        var n = this.get('start'),
          i = this.get('end'),
          a = this.get('style'),
          o = Ma({ start: n, end: i });
        this.addShape(t, {
          type: 'rect',
          id: this.getElementId('region'),
          name: 'annotation-region',
          attrs: x({ x: o.x, y: o.y, width: o.width, height: o.height }, a),
        });
      }),
      r
    );
  })(re),
  U2 = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'annotation',
          type: 'image',
          locationType: 'region',
          start: null,
          end: null,
          src: null,
          style: {},
        });
      }),
      (r.prototype.renderInner = function (t) {
        this.renderImage(t);
      }),
      (r.prototype.getImageAttrs = function () {
        var t = this.get('start'),
          n = this.get('end'),
          i = this.get('style'),
          a = Ma({ start: t, end: n }),
          o = this.get('src');
        return x({ x: a.x, y: a.y, img: o, width: a.width, height: a.height }, i);
      }),
      (r.prototype.renderImage = function (t) {
        this.addShape(t, {
          type: 'image',
          id: this.getElementId('image'),
          name: 'annotation-image',
          attrs: this.getImageAttrs(),
        });
      }),
      r
    );
  })(re),
  q2 = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'annotation',
          type: 'dataMarker',
          locationType: 'point',
          x: 0,
          y: 0,
          point: {},
          line: {},
          text: {},
          direction: 'upward',
          autoAdjust: !0,
          coordinateBBox: null,
          defaultCfg: {
            point: {
              display: !0,
              style: { r: 3, fill: '#FFFFFF', stroke: '#1890FF', lineWidth: 2 },
            },
            line: { display: !0, length: 20, style: { stroke: ht.lineColor, lineWidth: 1 } },
            text: {
              content: '',
              display: !0,
              style: {
                fill: ht.textColor,
                opacity: 0.65,
                fontSize: 12,
                textAlign: 'start',
                fontFamily: ht.fontFamily,
              },
            },
          },
        });
      }),
      (r.prototype.renderInner = function (t) {
        A(this.get('line'), 'display') && this.renderLine(t),
          A(this.get('text'), 'display') && this.renderText(t),
          A(this.get('point'), 'display') && this.renderPoint(t),
          this.get('autoAdjust') && this.autoAdjust(t);
      }),
      (r.prototype.applyOffset = function () {
        this.moveElementTo(this.get('group'), {
          x: this.get('x') + this.get('offsetX'),
          y: this.get('y') + this.get('offsetY'),
        });
      }),
      (r.prototype.renderPoint = function (t) {
        var n = this.getShapeAttrs().point;
        this.addShape(t, {
          type: 'circle',
          id: this.getElementId('point'),
          name: 'annotation-point',
          attrs: n,
        });
      }),
      (r.prototype.renderLine = function (t) {
        var n = this.getShapeAttrs().line;
        this.addShape(t, {
          type: 'path',
          id: this.getElementId('line'),
          name: 'annotation-line',
          attrs: n,
        });
      }),
      (r.prototype.renderText = function (t) {
        var n = this.getShapeAttrs().text,
          i = n.x,
          a = n.y,
          o = n.text,
          s = wt(n, ['x', 'y', 'text']),
          l = this.get('text'),
          u = l.background,
          c = l.maxLength,
          h = l.autoEllipsis,
          f = l.isVertival,
          v = l.ellipsisPosition,
          d = {
            x: i,
            y: a,
            id: this.getElementId('text'),
            name: 'annotation-text',
            content: o,
            style: s,
            background: u,
            maxLength: c,
            autoEllipsis: h,
            isVertival: f,
            ellipsisPosition: v,
          };
        ll(t, d);
      }),
      (r.prototype.autoAdjust = function (t) {
        var n = this.get('direction'),
          i = this.get('x'),
          a = this.get('y'),
          o = A(this.get('line'), 'length', 0),
          s = this.get('coordinateBBox'),
          l = t.getBBox(),
          u = l.minX,
          c = l.maxX,
          h = l.minY,
          f = l.maxY,
          v = t.findById(this.getElementId('text-group')),
          d = t.findById(this.getElementId('text')),
          p = t.findById(this.getElementId('line'));
        if (s && v) {
          var g = v.attr('x'),
            y = v.attr('y'),
            m = d.getCanvasBBox(),
            b = m.width,
            w = m.height,
            S = 0,
            C = 0;
          if (i + u <= s.minX)
            if (n === 'leftward') S = 1;
            else {
              var F = s.minX - (i + u);
              g = v.attr('x') + F;
            }
          else if (i + c >= s.maxX)
            if (n === 'rightward') S = -1;
            else {
              var F = i + c - s.maxX;
              g = v.attr('x') - F;
            }
          if (
            (S &&
              (p &&
                p.attr('path', [
                  ['M', 0, 0],
                  ['L', o * S, 0],
                ]),
              (g = (o + 2 + b) * S)),
            a + h <= s.minY)
          )
            if (n === 'upward') C = 1;
            else {
              var F = s.minY - (a + h);
              y = v.attr('y') + F;
            }
          else if (a + f >= s.maxY)
            if (n === 'downward') C = -1;
            else {
              var F = a + f - s.maxY;
              y = v.attr('y') - F;
            }
          C &&
            (p &&
              p.attr('path', [
                ['M', 0, 0],
                ['L', 0, o * C],
              ]),
            (y = (o + 2 + w) * C)),
            (g !== v.attr('x') || y !== v.attr('y')) && uh(v, g, y);
        }
      }),
      (r.prototype.getShapeAttrs = function () {
        var t = A(this.get('line'), 'display'),
          n = A(this.get('point'), 'style', {}),
          i = A(this.get('line'), 'style', {}),
          a = A(this.get('text'), 'style', {}),
          o = this.get('direction'),
          s = t ? A(this.get('line'), 'length', 0) : 0,
          l = 0,
          u = 0,
          c = 'top',
          h = 'start';
        switch (o) {
          case 'upward':
            (u = -1), (c = 'bottom');
            break;
          case 'downward':
            (u = 1), (c = 'top');
            break;
          case 'leftward':
            (l = -1), (h = 'end');
            break;
          case 'rightward':
            (l = 1), (h = 'start');
            break;
        }
        return {
          point: x({ x: 0, y: 0 }, n),
          line: x(
            {
              path: [
                ['M', 0, 0],
                ['L', s * l, s * u],
              ],
            },
            i,
          ),
          text: x(
            {
              x: (s + 2) * l,
              y: (s + 2) * u,
              text: A(this.get('text'), 'content', ''),
              textBaseline: c,
              textAlign: h,
            },
            a,
          ),
        };
      }),
      r
    );
  })(re),
  Z2 = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'annotation',
          type: 'dataRegion',
          locationType: 'points',
          points: [],
          lineLength: 0,
          region: {},
          text: {},
          defaultCfg: {
            region: { style: { lineWidth: 0, fill: ht.regionColor, opacity: 0.4 } },
            text: {
              content: '',
              style: {
                textAlign: 'center',
                textBaseline: 'bottom',
                fontSize: 12,
                fill: ht.textColor,
                fontFamily: ht.fontFamily,
              },
            },
          },
        });
      }),
      (r.prototype.renderInner = function (t) {
        var n = A(this.get('region'), 'style', {});
        A(this.get('text'), 'style', {});
        var i = this.get('lineLength') || 0,
          a = this.get('points');
        if (a.length) {
          var o = I2(a),
            s = [];
          s.push(['M', a[0].x, o.minY - i]),
            a.forEach(function (u) {
              s.push(['L', u.x, u.y]);
            }),
            s.push(['L', a[a.length - 1].x, a[a.length - 1].y - i]),
            this.addShape(t, {
              type: 'path',
              id: this.getElementId('region'),
              name: 'annotation-region',
              attrs: x({ path: s }, n),
            });
          var l = x(
            {
              id: this.getElementId('text'),
              name: 'annotation-text',
              x: (o.minX + o.maxX) / 2,
              y: o.minY - i,
            },
            this.get('text'),
          );
          ll(t, l);
        }
      }),
      r
    );
  })(re),
  K2 = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'annotation',
          type: 'regionFilter',
          locationType: 'region',
          start: null,
          end: null,
          color: null,
          shape: [],
        });
      }),
      (r.prototype.renderInner = function (t) {
        var n = this,
          i = this.get('start'),
          a = this.get('end'),
          o = this.addGroup(t, { id: this.getElementId('region-filter'), capture: !1 });
        M(this.get('shapes'), function (l, u) {
          var c = l.get('type'),
            h = oe(l.attr());
          n.adjustShapeAttrs(h),
            n.addShape(o, {
              id: n.getElementId('shape-' + c + '-' + u),
              capture: !1,
              type: c,
              attrs: h,
            });
        });
        var s = Ma({ start: i, end: a });
        o.setClip({
          type: 'rect',
          attrs: { x: s.minX, y: s.minY, width: s.width, height: s.height },
        });
      }),
      (r.prototype.adjustShapeAttrs = function (t) {
        var n = this.get('color');
        t.fill && (t.fill = t.fillStyle = n), (t.stroke = t.strokeStyle = n);
      }),
      r
    );
  })(re),
  Q2 = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), { name: 'annotation', type: 'shape', draw: $r });
      }),
      (r.prototype.renderInner = function (t) {
        var n = this.get('render');
        U(n) && n(t);
      }),
      r
    );
  })(re),
  hh = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          container: null,
          containerTpl: '<div></div>',
          updateAutoRender: !0,
          containerClassName: '',
          parent: null,
        });
      }),
      (r.prototype.getContainer = function () {
        return this.get('container');
      }),
      (r.prototype.show = function () {
        var t = this.get('container');
        (t.style.display = ''), this.set('visible', !0);
      }),
      (r.prototype.hide = function () {
        var t = this.get('container');
        (t.style.display = 'none'), this.set('visible', !1);
      }),
      (r.prototype.setCapture = function (t) {
        var n = this.getContainer(),
          i = t ? 'auto' : 'none';
        (n.style.pointerEvents = i), this.set('capture', t);
      }),
      (r.prototype.getBBox = function () {
        var t = this.getContainer(),
          n = parseFloat(t.style.left) || 0,
          i = parseFloat(t.style.top) || 0;
        return sl(n, i, t.clientWidth, t.clientHeight);
      }),
      (r.prototype.clear = function () {
        var t = this.get('container');
        ch(t);
      }),
      (r.prototype.destroy = function () {
        this.removeEvent(), this.removeDom(), e.prototype.destroy.call(this);
      }),
      (r.prototype.init = function () {
        e.prototype.init.call(this),
          this.initContainer(),
          this.initDom(),
          this.resetStyles(),
          this.applyStyles(),
          this.initEvent(),
          this.initCapture(),
          this.initVisible();
      }),
      (r.prototype.initCapture = function () {
        this.setCapture(this.get('capture'));
      }),
      (r.prototype.initVisible = function () {
        this.get('visible') ? this.show() : this.hide();
      }),
      (r.prototype.initDom = function () {}),
      (r.prototype.initContainer = function () {
        var t = this.get('container');
        if ($(t)) {
          t = this.createDom();
          var n = this.get('parent');
          et(n) && ((n = document.getElementById(n)), this.set('parent', n)),
            n.appendChild(t),
            this.get('containerId') && t.setAttribute('id', this.get('containerId')),
            this.set('container', t);
        } else et(t) && ((t = document.getElementById(t)), this.set('container', t));
        this.get('parent') || this.set('parent', t.parentNode);
      }),
      (r.prototype.resetStyles = function () {
        var t = this.get('domStyles'),
          n = this.get('defaultStyles');
        t ? (t = _({}, n, t)) : (t = n), this.set('domStyles', t);
      }),
      (r.prototype.applyStyles = function () {
        var t = this.get('domStyles');
        if (t) {
          var n = this.getContainer();
          this.applyChildrenStyles(n, t);
          var i = this.get('containerClassName');
          if (i && k2(n, i)) {
            var a = t[i];
            ne(n, a);
          }
        }
      }),
      (r.prototype.applyChildrenStyles = function (t, n) {
        M(n, function (i, a) {
          var o = t.getElementsByClassName(a);
          M(o, function (s) {
            ne(s, i);
          });
        });
      }),
      (r.prototype.applyStyle = function (t, n) {
        var i = this.get('domStyles');
        ne(n, i[t]);
      }),
      (r.prototype.createDom = function () {
        var t = this.get('containerTpl');
        return Vr(t);
      }),
      (r.prototype.initEvent = function () {}),
      (r.prototype.removeDom = function () {
        var t = this.get('container');
        t && t.parentNode && t.parentNode.removeChild(t);
      }),
      (r.prototype.removeEvent = function () {}),
      (r.prototype.updateInner = function (t) {
        _r(t, 'domStyles') && (this.resetStyles(), this.applyStyles()), this.resetPosition();
      }),
      (r.prototype.resetPosition = function () {}),
      r
    );
  })(am),
  J2 = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'annotation',
          type: 'html',
          locationType: 'point',
          x: 0,
          y: 0,
          containerTpl: '<div class="g2-html-annotation" style="position:absolute"></div>',
          alignX: 'left',
          alignY: 'top',
          html: '',
          zIndex: 7,
        });
      }),
      (r.prototype.render = function () {
        var t = this.getContainer(),
          n = this.get('html');
        ch(t);
        var i = U(n) ? n(t) : n;
        if (Dg(i)) t.appendChild(i);
        else if (et(i) || at(i)) {
          var a = Vr('' + i);
          a && t.appendChild(a);
        }
        this.resetPosition();
      }),
      (r.prototype.resetPosition = function () {
        var t = this.getContainer(),
          n = this.getLocation(),
          i = n.x,
          a = n.y,
          o = this.get('alignX'),
          s = this.get('alignY'),
          l = this.get('offsetX'),
          u = this.get('offsetY'),
          c = xC(t),
          h = yC(t),
          f = { x: i, y: a };
        o === 'middle' ? (f.x -= Math.round(c / 2)) : o === 'right' && (f.x -= Math.round(c)),
          s === 'middle' ? (f.y -= Math.round(h / 2)) : s === 'bottom' && (f.y -= Math.round(h)),
          l && (f.x += l),
          u && (f.y += u),
          ne(t, {
            position: 'absolute',
            left: f.x + 'px',
            top: f.y + 'px',
            zIndex: this.get('zIndex'),
          });
      }),
      r
    );
  })(hh);
const tE = Object.freeze(
  Object.defineProperty(
    {
      __proto__: null,
      Arc: _2,
      DataMarker: q2,
      DataRegion: Z2,
      Html: J2,
      Image: U2,
      Line: W2,
      Region: j2,
      RegionFilter: K2,
      Shape: Q2,
      Text: X2,
    },
    Symbol.toStringTag,
    { value: 'Module' },
  ),
);
function Ji(e, r, t) {
  var n = r + 'Style',
    i = null;
  return (
    M(t, function (a, o) {
      e[o] && a[n] && (i || (i = {}), bt(i, a[n]));
    }),
    i
  );
}
var om = (function (e) {
  k(r, e);
  function r() {
    return (e !== null && e.apply(this, arguments)) || this;
  }
  return (
    (r.prototype.getDefaultCfg = function () {
      var t = e.prototype.getDefaultCfg.call(this);
      return x(x({}, t), {
        name: 'axis',
        ticks: [],
        line: {},
        tickLine: {},
        subTickLine: null,
        title: null,
        label: {},
        verticalFactor: 1,
        verticalLimitLength: null,
        overlapOrder: ['autoRotate', 'autoEllipsis', 'autoHide'],
        tickStates: {},
        optimize: {},
        defaultCfg: {
          line: { style: { lineWidth: 1, stroke: ht.lineColor } },
          tickLine: {
            style: { lineWidth: 1, stroke: ht.lineColor },
            alignTick: !0,
            length: 5,
            displayWithLabel: !0,
          },
          subTickLine: { style: { lineWidth: 1, stroke: ht.lineColor }, count: 4, length: 2 },
          label: {
            autoRotate: !0,
            autoHide: !1,
            autoEllipsis: !1,
            style: {
              fontSize: 12,
              fill: ht.textColor,
              fontFamily: ht.fontFamily,
              fontWeight: 'normal',
            },
            offset: 10,
            offsetX: 0,
            offsetY: 0,
          },
          title: {
            autoRotate: !0,
            spacing: 5,
            position: 'center',
            style: {
              fontSize: 12,
              fill: ht.textColor,
              textBaseline: 'middle',
              fontFamily: ht.fontFamily,
              textAlign: 'center',
            },
            iconStyle: { fill: ht.descriptionIconFill, stroke: ht.descriptionIconStroke },
            description: '',
          },
          tickStates: {
            active: { labelStyle: { fontWeight: 500 }, tickLineStyle: { lineWidth: 2 } },
            inactive: { labelStyle: { fill: ht.uncheckedColor } },
          },
          optimize: { enable: !0, threshold: 400 },
        },
        theme: {},
      });
    }),
    (r.prototype.renderInner = function (t) {
      this.get('line') && this.drawLine(t),
        this.drawTicks(t),
        this.get('title') && this.drawTitle(t);
    }),
    (r.prototype.isList = function () {
      return !0;
    }),
    (r.prototype.getItems = function () {
      return this.get('ticks');
    }),
    (r.prototype.setItems = function (t) {
      this.update({ ticks: t });
    }),
    (r.prototype.updateItem = function (t, n) {
      bt(t, n), this.clear(), this.render();
    }),
    (r.prototype.clearItems = function () {
      var t = this.getElementByLocalId('label-group');
      t && t.clear();
    }),
    (r.prototype.setItemState = function (t, n, i) {
      (t[n] = i), this.updateTickStates(t);
    }),
    (r.prototype.hasState = function (t, n) {
      return !!t[n];
    }),
    (r.prototype.getItemStates = function (t) {
      var n = this.get('tickStates'),
        i = [];
      return (
        M(n, function (a, o) {
          t[o] && i.push(o);
        }),
        i
      );
    }),
    (r.prototype.clearItemsState = function (t) {
      var n = this,
        i = this.getItemsByState(t);
      M(i, function (a) {
        n.setItemState(a, t, !1);
      });
    }),
    (r.prototype.getItemsByState = function (t) {
      var n = this,
        i = this.getItems();
      return Jt(i, function (a) {
        return n.hasState(a, t);
      });
    }),
    (r.prototype.getSidePoint = function (t, n) {
      var i = this,
        a = i.getSideVector(n, t);
      return { x: t.x + a[0], y: t.y + a[1] };
    }),
    (r.prototype.getTextAnchor = function (t) {
      var n;
      return Zt(t[0], 0) ? (n = 'center') : t[0] > 0 ? (n = 'start') : t[0] < 0 && (n = 'end'), n;
    }),
    (r.prototype.getTextBaseline = function (t) {
      var n;
      return Zt(t[1], 0) ? (n = 'middle') : t[1] > 0 ? (n = 'top') : t[1] < 0 && (n = 'bottom'), n;
    }),
    (r.prototype.processOverlap = function (t) {}),
    (r.prototype.drawLine = function (t) {
      var n = this.getLinePath(),
        i = this.get('line');
      this.addShape(t, {
        type: 'path',
        id: this.getElementId('line'),
        name: 'axis-line',
        attrs: bt({ path: n }, i.style),
      });
    }),
    (r.prototype.getTickLineItems = function (t) {
      var n = this,
        i = [],
        a = this.get('tickLine'),
        o = a.alignTick,
        s = a.length,
        l = 1,
        u = t.length;
      return (
        u >= 2 && (l = t[1].value - t[0].value),
        M(t, function (c) {
          var h = c.point;
          o || (h = n.getTickPoint(c.value - l / 2));
          var f = n.getSidePoint(h, s);
          i.push({
            startPoint: h,
            tickValue: c.value,
            endPoint: f,
            tickId: c.id,
            id: 'tickline-' + c.id,
          });
        }),
        i
      );
    }),
    (r.prototype.getSubTickLineItems = function (t) {
      var n = [],
        i = this.get('subTickLine'),
        a = i.count,
        o = t.length;
      if (o >= 2)
        for (var s = 0; s < o - 1; s++)
          for (var l = t[s], u = t[s + 1], c = 0; c < a; c++) {
            var h = (c + 1) / (a + 1),
              f = (1 - h) * l.tickValue + h * u.tickValue,
              v = this.getTickPoint(f),
              d = this.getSidePoint(v, i.length);
            n.push({ startPoint: v, endPoint: d, tickValue: f, id: 'sub-' + l.id + '-' + c });
          }
      return n;
    }),
    (r.prototype.getTickLineAttrs = function (t, n, i, a) {
      var o = this.get(n).style,
        s = { points: [t.startPoint, t.endPoint] },
        l = A(this.get('theme'), ['tickLine', 'style'], {});
      o = U(o) ? bt({}, l, o(s, i, a)) : o;
      var u = t.startPoint,
        c = t.endPoint;
      return x({ x1: u.x, y1: u.y, x2: c.x, y2: c.y }, o);
    }),
    (r.prototype.drawTick = function (t, n, i, a, o) {
      this.addShape(n, {
        type: 'line',
        id: this.getElementId(t.id),
        name: 'axis-' + i,
        attrs: this.getTickLineAttrs(t, i, a, o),
      });
    }),
    (r.prototype.drawTickLines = function (t) {
      var n = this,
        i = this.get('ticks'),
        a = this.get('subTickLine'),
        o = this.getTickLineItems(i),
        s = this.addGroup(t, {
          name: 'axis-tickline-group',
          id: this.getElementId('tickline-group'),
        }),
        l = this.get('tickLine');
      if (
        (M(o, function (c, h) {
          if (l.displayWithLabel) {
            var f = n.getElementId('label-' + c.tickId);
            t.findById(f) && n.drawTick(c, s, 'tickLine', h, o);
          } else n.drawTick(c, s, 'tickLine', h, o);
        }),
        a)
      ) {
        var u = this.getSubTickLineItems(o);
        M(u, function (c, h) {
          n.drawTick(c, s, 'subTickLine', h, u);
        });
      }
    }),
    (r.prototype.processTicks = function () {
      var t = this,
        n = this.get('ticks');
      M(n, function (i) {
        (i.point = t.getTickPoint(i.value)), $(i.id) && (i.id = i.name);
      });
    }),
    (r.prototype.drawTicks = function (t) {
      var n = this;
      this.optimizeTicks(),
        this.processTicks(),
        this.get('label') && this.drawLabels(t),
        this.get('tickLine') && this.drawTickLines(t);
      var i = this.get('ticks');
      M(i, function (a) {
        n.applyTickStates(a, t);
      });
    }),
    (r.prototype.optimizeTicks = function () {
      var t = this.get('optimize'),
        n = this.get('ticks');
      if (t && t.enable && t.threshold > 0) {
        var i = _t(n);
        if (i > t.threshold) {
          var a = Math.ceil(i / t.threshold),
            o = n.filter(function (s, l) {
              return l % a === 0;
            });
          this.set('ticks', o), this.set('originalTicks', n);
        }
      }
    }),
    (r.prototype.getLabelAttrs = function (t, n, i) {
      var a = this.get('label'),
        o = a.offset,
        s = a.offsetX,
        l = a.offsetY,
        u = a.rotate,
        c = a.formatter,
        h = this.getSidePoint(t.point, o),
        f = this.getSideVector(o, h),
        v = c ? c(t.name, t, n) : t.name,
        d = a.style;
      d = U(d) ? A(this.get('theme'), ['label', 'style'], {}) : d;
      var p = bt(
        {
          x: h.x + s,
          y: h.y + l,
          text: v,
          textAlign: this.getTextAnchor(f),
          textBaseline: this.getTextBaseline(f),
        },
        d,
      );
      return u && (p.matrix = Pn(h, u)), p;
    }),
    (r.prototype.drawLabels = function (t) {
      var n = this,
        i = this.get('ticks'),
        a = this.addGroup(t, { name: 'axis-label-group', id: this.getElementId('label-group') });
      M(i, function (f, v) {
        n.addShape(a, {
          type: 'text',
          name: 'axis-label',
          id: n.getElementId('label-' + f.id),
          attrs: n.getLabelAttrs(f, v, i),
          delegateObject: { tick: f, item: f, index: v },
        });
      }),
        this.processOverlap(a);
      var o = a.getChildren(),
        s = A(this.get('theme'), ['label', 'style'], {}),
        l = this.get('label'),
        u = l.style,
        c = l.formatter;
      if (U(u)) {
        var h = o.map(function (f) {
          return A(f.get('delegateObject'), 'tick');
        });
        M(o, function (f, v) {
          var d = f.get('delegateObject').tick,
            p = c ? c(d.name, d, v) : d.name,
            g = bt({}, s, u(p, v, h));
          f.attr(g);
        });
      }
    }),
    (r.prototype.getTitleAttrs = function () {
      var t = this.get('title'),
        n = t.style,
        i = t.position,
        a = t.offset,
        o = t.spacing,
        s = o === void 0 ? 0 : o,
        l = t.autoRotate,
        u = n.fontSize,
        c = 0.5;
      i === 'start' ? (c = 0) : i === 'end' && (c = 1);
      var h = this.getTickPoint(c),
        f = this.getSidePoint(h, a || s + u / 2),
        v = bt({ x: f.x, y: f.y, text: t.text }, n),
        d = t.rotate,
        p = d;
      if ($(d) && l) {
        var g = this.getAxisVector(h),
          y = [1, 0];
        p = qc(g, y, !0);
      }
      if (p) {
        var m = Pn(f, p);
        v.matrix = m;
      }
      return v;
    }),
    (r.prototype.drawTitle = function (t) {
      var n,
        i = this.getTitleAttrs(),
        a = this.addShape(t, {
          type: 'text',
          id: this.getElementId('title'),
          name: 'axis-title',
          attrs: i,
        });
      !((n = this.get('title')) === null || n === void 0) &&
        n.description &&
        this.drawDescriptionIcon(t, a, i.matrix);
    }),
    (r.prototype.drawDescriptionIcon = function (t, n, i) {
      var a = this.addGroup(t, {
          name: 'axis-description',
          id: this.getElementById('description'),
        }),
        o = n.getBBox(),
        s = o.maxX,
        l = o.maxY,
        u = o.height,
        c = this.get('title').iconStyle,
        h = 4,
        f = u / 2,
        v = f / 6,
        d = s + h,
        p = l - u / 2,
        g = [d + f, p - f],
        y = g[0],
        m = g[1],
        b = [y + f, m + f],
        w = b[0],
        S = b[1],
        C = [y, S + f],
        F = C[0],
        E = C[1],
        I = [d, m + f],
        T = I[0],
        P = I[1],
        R = [d + f, p - u / 4],
        B = R[0],
        G = R[1],
        j = [B, G + v],
        D = j[0],
        z = j[1],
        X = [D, z + v],
        Y = X[0],
        V = X[1],
        W = [Y, V + (f * 3) / 4],
        tt = W[0],
        rt = W[1];
      this.addShape(a, {
        type: 'path',
        id: this.getElementId('title-description-icon'),
        name: 'axis-title-description-icon',
        attrs: x(
          {
            path: [
              ['M', y, m],
              ['A', f, f, 0, 0, 1, w, S],
              ['A', f, f, 0, 0, 1, F, E],
              ['A', f, f, 0, 0, 1, T, P],
              ['A', f, f, 0, 0, 1, y, m],
              ['M', B, G],
              ['L', D, z],
              ['M', Y, V],
              ['L', tt, rt],
            ],
            lineWidth: v,
            matrix: i,
          },
          c,
        ),
      }),
        this.addShape(a, {
          type: 'rect',
          id: this.getElementId('title-description-rect'),
          name: 'axis-title-description-rect',
          attrs: {
            x: d,
            y: p - u / 2,
            width: u,
            height: u,
            stroke: '#000',
            fill: '#000',
            opacity: 0,
            matrix: i,
            cursor: 'pointer',
          },
        });
    }),
    (r.prototype.applyTickStates = function (t, n) {
      var i = this.getItemStates(t);
      if (i.length) {
        var a = this.get('tickStates'),
          o = this.getElementId('label-' + t.id),
          s = n.findById(o);
        if (s) {
          var l = Ji(t, 'label', a);
          l && s.attr(l);
        }
        var u = this.getElementId('tickline-' + t.id),
          c = n.findById(u);
        if (c) {
          var h = Ji(t, 'tickLine', a);
          h && c.attr(h);
        }
      }
    }),
    (r.prototype.updateTickStates = function (t) {
      var n = this.getItemStates(t),
        i = this.get('tickStates'),
        a = this.get('label'),
        o = this.getElementByLocalId('label-' + t.id),
        s = this.get('tickLine'),
        l = this.getElementByLocalId('tickline-' + t.id);
      if (n.length) {
        if (o) {
          var u = Ji(t, 'label', i);
          u && o.attr(u);
        }
        if (l) {
          var c = Ji(t, 'tickLine', i);
          c && l.attr(c);
        }
      } else o && o.attr(a.style), l && l.attr(s.style);
    }),
    r
  );
})(re);
function fh(e, r, t, n) {
  var i = r.getChildren(),
    a = !1;
  return (
    M(i, function (o) {
      var s = ua(e, o, t, n);
      a = a || s;
    }),
    a
  );
}
function eE() {
  return sm;
}
function rE(e, r, t) {
  return fh(e, r, t, 'head');
}
function sm(e, r, t) {
  return fh(e, r, t, 'tail');
}
function nE(e, r, t) {
  return fh(e, r, t, 'middle');
}
const iE = Object.freeze(
  Object.defineProperty(
    { __proto__: null, ellipsisHead: rE, ellipsisMiddle: nE, ellipsisTail: sm, getDefault: eE },
    Symbol.toStringTag,
    { value: 'Module' },
  ),
);
function aE(e) {
  var r = e.attr('matrix');
  return r && r[0] !== 1;
}
function lm(e) {
  var r = aE(e) ? E2(e.attr('matrix')) : 0;
  return r % 360;
}
function oc(e, r, t, n) {
  var i = !1,
    a = lm(r),
    o = Math.abs(e ? t.attr('y') - r.attr('y') : t.attr('x') - r.attr('x')),
    s = (e ? t.attr('y') > r.attr('y') : t.attr('x') > r.attr('x')) ? r.getBBox() : t.getBBox();
  if (e) {
    var l = Math.abs(Math.cos(a));
    ms(l, 0, Math.PI / 180) ? (i = s.width + n > o) : (i = s.height / l + n > o);
  } else {
    var l = Math.abs(Math.sin(a));
    ms(l, 0, Math.PI / 180) ? (i = s.width + n > o) : (i = s.height / l + n > o);
  }
  return i;
}
function Aa(e, r, t, n) {
  var i = (n == null ? void 0 : n.minGap) || 0,
    a = r
      .getChildren()
      .slice()
      .filter(function (v) {
        return v.get('visible');
      });
  if (!a.length) return !1;
  var o = !1;
  t && a.reverse();
  for (var s = a.length, l = a[0], u = l, c = 1; c < s; c++) {
    var h = a[c];
    h.getBBox();
    var f = oc(e, u, h, i);
    f ? (h.hide(), (o = !0)) : (u = h);
  }
  return o;
}
function um(e, r, t) {
  var n = (t == null ? void 0 : t.minGap) || 0,
    i = r.getChildren().slice();
  if (i.length < 2) return !1;
  var a = !1,
    o = i[0],
    s = o.getBBox(),
    l = i[1],
    u = i.length,
    c = lm(o),
    h = Math.abs(e ? l.attr('y') - o.attr('y') : l.attr('x') - o.attr('x')),
    f = 0;
  if (e) {
    var v = Math.abs(Math.cos(c));
    if (ms(v, 0, Math.PI / 180)) {
      var d = ac(i);
      f = (d + n) / h;
    } else f = (s.height / v + n) / h;
  } else {
    var v = Math.abs(Math.sin(c));
    if (ms(v, 0, Math.PI / 180)) {
      var d = ac(i);
      f = (d + n) / h;
    } else f = (s.height / v + n) / h;
  }
  if (f > 1) {
    f = Math.ceil(f);
    for (var p = 0; p < u; p++) p % f !== 0 && (i[p].hide(), (a = !0));
  }
  return a;
}
function oE() {
  return cm;
}
function sE(e, r, t, n) {
  return Aa(e, r, !1, n);
}
function lE(e, r, t, n) {
  return Aa(e, r, !0, n);
}
function uE(e, r, t, n) {
  var i = (n == null ? void 0 : n.minGap) || 0,
    a = r.getChildren().slice();
  if (a.length <= 2) return !1;
  for (var o = !1, s = a.length, l = a[0], u = a[s - 1], c = l, h = 1; h < s - 1; h++) {
    var f = a[h];
    f.getBBox();
    var v = oc(e, c, f, i);
    v ? (f.hide(), (o = !0)) : (c = f);
  }
  var d = oc(e, c, u, i);
  return d && (c.hide(), (o = !0)), o;
}
function cm(e, r, t, n) {
  var i = um(e, r, n);
  return Aa(e, r, !1) && (i = !0), i;
}
function cE(e, r, t, n) {
  var i = r.getChildren().slice(),
    a = um(e, r, n);
  if (i.length > 2) {
    var o = i[0],
      s = i[i.length - 1];
    o.get('visible') || (o.show(), Aa(e, r, !1, n) && (a = !0)),
      s.get('visible') || (s.show(), Aa(e, r, !0, n) && (a = !0));
  }
  return a;
}
const hE = Object.freeze(
  Object.defineProperty(
    {
      __proto__: null,
      equidistance: cm,
      equidistanceWithReverseBoth: cE,
      getDefault: oE,
      reserveBoth: uE,
      reserveFirst: sE,
      reserveLast: lE,
    },
    Symbol.toStringTag,
    { value: 'Module' },
  ),
);
function fE(e, r) {
  M(e, function (t) {
    var n = t.attr('x'),
      i = t.attr('y'),
      a = Pn({ x: n, y: i }, r);
    t.attr('matrix', a);
  });
}
function hm(e, r, t, n) {
  var i = r.getChildren();
  if (!i.length || (!e && i.length < 2)) return !1;
  var a = ac(i),
    o = !1;
  if (e) o = !!t && a > t;
  else {
    var s = Math.abs(i[1].attr('x') - i[0].attr('x'));
    o = a > s;
  }
  if (o) {
    var l = n(t, a);
    fE(i, l);
  }
  return o;
}
function vE() {
  return fm;
}
function fm(e, r, t, n) {
  return hm(e, r, t, function () {
    return at(n) ? n : e ? ht.verticalAxisRotate : ht.horizontalAxisRotate;
  });
}
function dE(e, r, t) {
  return hm(e, r, t, function (n, i) {
    if (!n) return e ? ht.verticalAxisRotate : ht.horizontalAxisRotate;
    if (e) return -Math.acos(n / i);
    var a = 0;
    return (
      n > i ? (a = Math.PI / 4) : ((a = Math.asin(n / i)), a > Math.PI / 4 && (a = Math.PI / 4)), a
    );
  });
}
const pE = Object.freeze(
    Object.defineProperty(
      { __proto__: null, fixedAngle: fm, getDefault: vE, unfixedAngle: dE },
      Symbol.toStringTag,
      { value: 'Module' },
    ),
  ),
  vm = Object.freeze(
    Object.defineProperty(
      { __proto__: null, autoEllipsis: iE, autoHide: hE, autoRotate: pE },
      Symbol.toStringTag,
      { value: 'Module' },
    ),
  );
var gE = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), { type: 'line', locationType: 'region', start: null, end: null });
      }),
      (r.prototype.getLinePath = function () {
        var t = this.get('start'),
          n = this.get('end'),
          i = [];
        return i.push(['M', t.x, t.y]), i.push(['L', n.x, n.y]), i;
      }),
      (r.prototype.getInnerLayoutBBox = function () {
        var t = this.get('start'),
          n = this.get('end'),
          i = e.prototype.getInnerLayoutBBox.call(this),
          a = Math.min(t.x, n.x, i.x),
          o = Math.min(t.y, n.y, i.y),
          s = Math.max(t.x, n.x, i.maxX),
          l = Math.max(t.y, n.y, i.maxY);
        return { x: a, y: o, minX: a, minY: o, maxX: s, maxY: l, width: s - a, height: l - o };
      }),
      (r.prototype.isVertical = function () {
        var t = this.get('start'),
          n = this.get('end');
        return Zt(t.x, n.x);
      }),
      (r.prototype.isHorizontal = function () {
        var t = this.get('start'),
          n = this.get('end');
        return Zt(t.y, n.y);
      }),
      (r.prototype.getTickPoint = function (t) {
        var n = this,
          i = n.get('start'),
          a = n.get('end'),
          o = a.x - i.x,
          s = a.y - i.y;
        return { x: i.x + o * t, y: i.y + s * t };
      }),
      (r.prototype.getSideVector = function (t) {
        var n = this.getAxisVector(),
          i = Zg([0, 0], n),
          a = this.get('verticalFactor'),
          o = [i[1], i[0] * -1];
        return se([0, 0], o, t * a);
      }),
      (r.prototype.getAxisVector = function () {
        var t = this.get('start'),
          n = this.get('end');
        return [n.x - t.x, n.y - t.y];
      }),
      (r.prototype.processOverlap = function (t) {
        var n = this,
          i = this.isVertical(),
          a = this.isHorizontal();
        if (!(!i && !a)) {
          var o = this.get('label'),
            s = this.get('title'),
            l = this.get('verticalLimitLength'),
            u = o.offset,
            c = l,
            h = 0,
            f = 0;
          s && ((h = s.style.fontSize), (f = s.spacing)), c && (c = c - u - f - h);
          var v = this.get('overlapOrder');
          if (
            (M(v, function (g) {
              o[g] && n.canProcessOverlap(g) && n.autoProcessOverlap(g, o[g], t, c);
            }),
            s && $(s.offset))
          ) {
            var d = t.getCanvasBBox(),
              p = i ? d.width : d.height;
            s.offset = u + p + f + h / 2;
          }
        }
      }),
      (r.prototype.canProcessOverlap = function (t) {
        var n = this.get('label');
        return t === 'autoRotate' ? $(n.rotate) : !0;
      }),
      (r.prototype.autoProcessOverlap = function (t, n, i, a) {
        var o = this,
          s = this.isVertical(),
          l = !1,
          u = vm[t];
        if (n === !0) this.get('label'), (l = u.getDefault()(s, i, a));
        else if (U(n)) l = n(s, i, a);
        else if (xt(n)) {
          var c = n;
          u[c.type] && (l = u[c.type](s, i, a, c.cfg));
        } else u[n] && (l = u[n](s, i, a));
        if (t === 'autoRotate') {
          if (l) {
            var h = i.getChildren(),
              f = this.get('verticalFactor');
            M(h, function (d) {
              var p = d.attr('textAlign');
              if (p === 'center') {
                var g = f > 0 ? 'end' : 'start';
                d.attr('textAlign', g);
              }
            });
          }
        } else if (t === 'autoHide') {
          var v = i.getChildren().slice(0);
          M(v, function (d) {
            d.get('visible') || (o.get('isRegister') && o.unregisterElement(d), d.remove());
          });
        }
      }),
      r
    );
  })(om),
  yE = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          type: 'circle',
          locationType: 'circle',
          center: null,
          radius: null,
          startAngle: -Math.PI / 2,
          endAngle: (Math.PI * 3) / 2,
        });
      }),
      (r.prototype.getLinePath = function () {
        var t = this.get('center'),
          n = t.x,
          i = t.y,
          a = this.get('radius'),
          o = a,
          s = this.get('startAngle'),
          l = this.get('endAngle'),
          u = [];
        if (Math.abs(l - s) === Math.PI * 2)
          u = [
            ['M', n, i - o],
            ['A', a, o, 0, 1, 1, n, i + o],
            ['A', a, o, 0, 1, 1, n, i - o],
            ['Z'],
          ];
        else {
          var c = this.getCirclePoint(s),
            h = this.getCirclePoint(l),
            f = Math.abs(l - s) > Math.PI ? 1 : 0,
            v = s > l ? 0 : 1;
          u = [
            ['M', n, i],
            ['L', c.x, c.y],
            ['A', a, o, 0, f, v, h.x, h.y],
            ['L', n, i],
          ];
        }
        return u;
      }),
      (r.prototype.getTickPoint = function (t) {
        var n = this.get('startAngle'),
          i = this.get('endAngle'),
          a = n + (i - n) * t;
        return this.getCirclePoint(a);
      }),
      (r.prototype.getSideVector = function (t, n) {
        var i = this.get('center'),
          a = [n.x - i.x, n.y - i.y],
          o = this.get('verticalFactor'),
          s = Jn(a);
        return se(a, a, (o * t) / s), a;
      }),
      (r.prototype.getAxisVector = function (t) {
        var n = this.get('center'),
          i = [t.x - n.x, t.y - n.y];
        return [i[1], -1 * i[0]];
      }),
      (r.prototype.getCirclePoint = function (t, n) {
        var i = this.get('center');
        return (
          (n = n || this.get('radius')), { x: i.x + Math.cos(t) * n, y: i.y + Math.sin(t) * n }
        );
      }),
      (r.prototype.canProcessOverlap = function (t) {
        var n = this.get('label');
        return t === 'autoRotate' ? $(n.rotate) : !0;
      }),
      (r.prototype.processOverlap = function (t) {
        var n = this,
          i = this.get('label'),
          a = this.get('title'),
          o = this.get('verticalLimitLength'),
          s = i.offset,
          l = o,
          u = 0,
          c = 0;
        a && ((u = a.style.fontSize), (c = a.spacing)), l && (l = l - s - c - u);
        var h = this.get('overlapOrder');
        if (
          (M(h, function (v) {
            i[v] && n.canProcessOverlap(v) && n.autoProcessOverlap(v, i[v], t, l);
          }),
          a && $(a.offset))
        ) {
          var f = t.getCanvasBBox().height;
          a.offset = s + f + c + u / 2;
        }
      }),
      (r.prototype.autoProcessOverlap = function (t, n, i, a) {
        var o = this,
          s = !1,
          l = vm[t];
        if (a > 0)
          if (n === !0) s = l.getDefault()(!1, i, a);
          else if (U(n)) s = n(!1, i, a);
          else if (xt(n)) {
            var u = n;
            l[u.type] && (s = l[u.type](!1, i, a, u.cfg));
          } else l[n] && (s = l[n](!1, i, a));
        if (t === 'autoRotate') {
          if (s) {
            var c = i.getChildren(),
              h = this.get('verticalFactor');
            M(c, function (v) {
              var d = v.attr('textAlign');
              if (d === 'center') {
                var p = h > 0 ? 'end' : 'start';
                v.attr('textAlign', p);
              }
            });
          }
        } else if (t === 'autoHide') {
          var f = i.getChildren().slice(0);
          M(f, function (v) {
            v.get('visible') || (o.get('isRegister') && o.unregisterElement(v), v.remove());
          });
        }
      }),
      r
    );
  })(om),
  vh = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'crosshair',
          type: 'base',
          line: {},
          text: null,
          textBackground: {},
          capture: !1,
          defaultCfg: {
            line: { style: { lineWidth: 1, stroke: ht.lineColor } },
            text: {
              position: 'start',
              offset: 10,
              autoRotate: !1,
              content: null,
              style: {
                fill: ht.textColor,
                textAlign: 'center',
                textBaseline: 'middle',
                fontFamily: ht.fontFamily,
              },
            },
            textBackground: { padding: 5, style: { stroke: ht.lineColor } },
          },
        });
      }),
      (r.prototype.renderInner = function (t) {
        this.get('line') && this.renderLine(t),
          this.get('text') && (this.renderText(t), this.renderBackground(t));
      }),
      (r.prototype.renderText = function (t) {
        var n = this.get('text'),
          i = n.style,
          a = n.autoRotate,
          o = n.content;
        if (!$(o)) {
          var s = this.getTextPoint(),
            l = null;
          if (a) {
            var u = this.getRotateAngle();
            l = Pn(s, u);
          }
          this.addShape(t, {
            type: 'text',
            name: 'crosshair-text',
            id: this.getElementId('text'),
            attrs: x(x(x({}, s), { text: o, matrix: l }), i),
          });
        }
      }),
      (r.prototype.renderLine = function (t) {
        var n = this.getLinePath(),
          i = this.get('line'),
          a = i.style;
        this.addShape(t, {
          type: 'path',
          name: 'crosshair-line',
          id: this.getElementId('line'),
          attrs: x({ path: n }, a),
        });
      }),
      (r.prototype.renderBackground = function (t) {
        var n = this.getElementId('text'),
          i = t.findById(n),
          a = this.get('textBackground');
        if (a && i) {
          var o = i.getBBox(),
            s = ys(a.padding),
            l = a.style,
            u = this.addShape(t, {
              type: 'rect',
              name: 'crosshair-text-background',
              id: this.getElementId('text-background'),
              attrs: x(
                {
                  x: o.x - s[3],
                  y: o.y - s[0],
                  width: o.width + s[1] + s[3],
                  height: o.height + s[0] + s[2],
                  matrix: i.attr('matrix'),
                },
                l,
              ),
            });
          u.toBack();
        }
      }),
      r
    );
  })(re),
  dm = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), { type: 'line', locationType: 'region', start: null, end: null });
      }),
      (r.prototype.getRotateAngle = function () {
        var t = this.getLocation(),
          n = t.start,
          i = t.end,
          a = this.get('text').position,
          o = Math.atan2(i.y - n.y, i.x - n.x),
          s = a === 'start' ? o - Math.PI / 2 : o + Math.PI / 2;
        return s;
      }),
      (r.prototype.getTextPoint = function () {
        var t = this.getLocation(),
          n = t.start,
          i = t.end,
          a = this.get('text'),
          o = a.position,
          s = a.offset;
        return im(n, i, o, s);
      }),
      (r.prototype.getLinePath = function () {
        var t = this.getLocation(),
          n = t.start,
          i = t.end;
        return [
          ['M', n.x, n.y],
          ['L', i.x, i.y],
        ];
      }),
      r
    );
  })(vh),
  mE = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          type: 'circle',
          locationType: 'circle',
          center: null,
          radius: 100,
          startAngle: -Math.PI / 2,
          endAngle: (Math.PI * 3) / 2,
        });
      }),
      (r.prototype.getRotateAngle = function () {
        var t = this.getLocation(),
          n = t.startAngle,
          i = t.endAngle,
          a = this.get('text').position,
          o = a === 'start' ? n + Math.PI / 2 : i - Math.PI / 2;
        return o;
      }),
      (r.prototype.getTextPoint = function () {
        var t = this.get('text'),
          n = t.position,
          i = t.offset,
          a = this.getLocation(),
          o = a.center,
          s = a.radius,
          l = a.startAngle,
          u = a.endAngle,
          c = n === 'start' ? l : u,
          h = this.getRotateAngle() - Math.PI,
          f = ii(o, s, c),
          v = Math.cos(h) * i,
          d = Math.sin(h) * i;
        return { x: f.x + v, y: f.y + d };
      }),
      (r.prototype.getLinePath = function () {
        var t = this.getLocation(),
          n = t.center,
          i = t.radius,
          a = t.startAngle,
          o = t.endAngle,
          s = null;
        if (o - a === Math.PI * 2) {
          var l = n.x,
            u = n.y;
          s = [
            ['M', l, u - i],
            ['A', i, i, 0, 1, 1, l, u + i],
            ['A', i, i, 0, 1, 1, l, u - i],
            ['Z'],
          ];
        } else {
          var c = ii(n, i, a),
            h = ii(n, i, o),
            f = Math.abs(o - a) > Math.PI ? 1 : 0,
            v = a > o ? 0 : 1;
          s = [
            ['M', c.x, c.y],
            ['A', i, i, 0, f, v, h.x, h.y],
          ];
        }
        return s;
      }),
      r
    );
  })(vh),
  Fa = 'g2-crosshair',
  sc = Fa + '-line',
  lc = Fa + '-text',
  Vi;
const xE =
  ((Vi = {}),
  (Vi['' + Fa] = { position: 'relative' }),
  (Vi['' + sc] = { position: 'absolute', backgroundColor: 'rgba(0, 0, 0, 0.25)' }),
  (Vi['' + lc] = { position: 'absolute', color: ht.textColor, fontFamily: ht.fontFamily }),
  Vi);
var wE = (function (e) {
  k(r, e);
  function r() {
    return (e !== null && e.apply(this, arguments)) || this;
  }
  return (
    (r.prototype.getDefaultCfg = function () {
      var t = e.prototype.getDefaultCfg.call(this);
      return x(x({}, t), {
        name: 'crosshair',
        type: 'html',
        locationType: 'region',
        start: { x: 0, y: 0 },
        end: { x: 0, y: 0 },
        capture: !1,
        text: null,
        containerTpl: '<div class="' + Fa + '"></div>',
        crosshairTpl: '<div class="' + sc + '"></div>',
        textTpl: '<span class="' + lc + '">{content}</span>',
        domStyles: null,
        containerClassName: Fa,
        defaultStyles: xE,
        defaultCfg: { text: { position: 'start', content: null, align: 'center', offset: 10 } },
      });
    }),
    (r.prototype.render = function () {
      this.resetText(), this.resetPosition();
    }),
    (r.prototype.initCrossHair = function () {
      var t = this.getContainer(),
        n = this.get('crosshairTpl'),
        i = Vr(n);
      t.appendChild(i), this.applyStyle(sc, i), this.set('crosshairEl', i);
    }),
    (r.prototype.getTextPoint = function () {
      var t = this.getLocation(),
        n = t.start,
        i = t.end,
        a = this.get('text'),
        o = a.position,
        s = a.offset;
      return im(n, i, o, s);
    }),
    (r.prototype.resetText = function () {
      var t = this.get('text'),
        n = this.get('textEl');
      if (t) {
        var i = t.content;
        if (!n) {
          var a = this.getContainer(),
            o = Pg(this.get('textTpl'), t);
          (n = Vr(o)), a.appendChild(n), this.applyStyle(lc, n), this.set('textEl', n);
        }
        n.innerHTML = i;
      } else n && n.remove();
    }),
    (r.prototype.isVertical = function (t, n) {
      return t.x === n.x;
    }),
    (r.prototype.resetPosition = function () {
      var t = this.get('crosshairEl');
      t || (this.initCrossHair(), (t = this.get('crosshairEl')));
      var n = this.get('start'),
        i = this.get('end'),
        a = Math.min(n.x, i.x),
        o = Math.min(n.y, i.y);
      this.isVertical(n, i)
        ? ne(t, { width: '1px', height: fe(Math.abs(i.y - n.y)) })
        : ne(t, { height: '1px', width: fe(Math.abs(i.x - n.x)) }),
        ne(t, { top: fe(o), left: fe(a) }),
        this.alignText();
    }),
    (r.prototype.alignText = function () {
      var t = this.get('textEl');
      if (t) {
        var n = this.get('text').align,
          i = t.clientWidth,
          a = this.getTextPoint();
        switch (n) {
          case 'center':
            a.x = a.x - i / 2;
            break;
          case 'right':
            a.x = a.x - i;
        }
        ne(t, { top: fe(a.y), left: fe(a.x) });
      }
    }),
    (r.prototype.updateInner = function (t) {
      _r(t, 'text') && this.resetText(), e.prototype.updateInner.call(this, t);
    }),
    r
  );
})(hh);
const cd = Object.freeze(
  Object.defineProperty(
    { __proto__: null, Base: vh, Circle: mE, Html: wE, Line: dm },
    Symbol.toStringTag,
    { value: 'Module' },
  ),
);
var pm = (function (e) {
  k(r, e);
  function r() {
    return (e !== null && e.apply(this, arguments)) || this;
  }
  return (
    (r.prototype.getDefaultCfg = function () {
      var t = e.prototype.getDefaultCfg.call(this);
      return x(x({}, t), {
        name: 'grid',
        line: {},
        alternateColor: null,
        capture: !1,
        items: [],
        closed: !1,
        defaultCfg: { line: { type: 'line', style: { lineWidth: 1, stroke: ht.lineColor } } },
      });
    }),
    (r.prototype.getLineType = function () {
      var t = this.get('line') || this.get('defaultCfg').line;
      return t.type;
    }),
    (r.prototype.renderInner = function (t) {
      this.drawGrid(t);
    }),
    (r.prototype.getAlternatePath = function (t, n) {
      var i = this.getGridPath(t),
        a = n.slice(0).reverse(),
        o = this.getGridPath(a, !0),
        s = this.get('closed');
      return s ? (i = i.concat(o)) : ((o[0][0] = 'L'), (i = i.concat(o)), i.push(['Z'])), i;
    }),
    (r.prototype.getPathStyle = function () {
      return this.get('line').style;
    }),
    (r.prototype.drawGrid = function (t) {
      var n = this,
        i = this.get('line'),
        a = this.get('items'),
        o = this.get('alternateColor'),
        s = null;
      M(a, function (l, u) {
        var c = l.id || u;
        if (i) {
          var h = n.getPathStyle();
          h = U(h) ? h(l, u, a) : h;
          var f = n.getElementId('line-' + c),
            v = n.getGridPath(l.points);
          n.addShape(t, { type: 'path', name: 'grid-line', id: f, attrs: bt({ path: v }, h) });
        }
        if (o && u > 0) {
          var d = n.getElementId('region-' + c),
            p = u % 2 === 0;
          if (et(o)) p && n.drawAlternateRegion(d, t, s.points, l.points, o);
          else {
            var g = p ? o[1] : o[0];
            n.drawAlternateRegion(d, t, s.points, l.points, g);
          }
        }
        s = l;
      });
    }),
    (r.prototype.drawAlternateRegion = function (t, n, i, a, o) {
      var s = this.getAlternatePath(i, a);
      this.addShape(n, { type: 'path', id: t, name: 'grid-region', attrs: { path: s, fill: o } });
    }),
    r
  );
})(re);
function bE(e, r, t, n) {
  var i = t - e,
    a = n - r;
  return Math.sqrt(i * i + a * a);
}
var SE = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), { type: 'circle', center: null, closed: !0 });
      }),
      (r.prototype.getGridPath = function (t, n) {
        var i = this.getLineType(),
          a = this.get('closed'),
          o = [];
        if (t.length)
          if (i === 'circle') {
            var s = this.get('center'),
              l = t[0],
              u = bE(s.x, s.y, l.x, l.y),
              c = n ? 0 : 1;
            a
              ? (o.push(['M', s.x, s.y - u]),
                o.push(['A', u, u, 0, 0, c, s.x, s.y + u]),
                o.push(['A', u, u, 0, 0, c, s.x, s.y - u]),
                o.push(['Z']))
              : M(t, function (h, f) {
                  f === 0 ? o.push(['M', h.x, h.y]) : o.push(['A', u, u, 0, 0, c, h.x, h.y]);
                });
          } else
            M(t, function (h, f) {
              f === 0 ? o.push(['M', h.x, h.y]) : o.push(['L', h.x, h.y]);
            }),
              a && o.push(['Z']);
        return o;
      }),
      r
    );
  })(pm),
  CE = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), { type: 'line' });
      }),
      (r.prototype.getGridPath = function (t) {
        var n = [];
        return (
          M(t, function (i, a) {
            a === 0 ? n.push(['M', i.x, i.y]) : n.push(['L', i.x, i.y]);
          }),
          n
        );
      }),
      r
    );
  })(pm),
  gm = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'legend',
          layout: 'horizontal',
          locationType: 'point',
          x: 0,
          y: 0,
          offsetX: 0,
          offsetY: 0,
          title: null,
          background: null,
        });
      }),
      (r.prototype.getLayoutBBox = function () {
        var t = e.prototype.getLayoutBBox.call(this),
          n = this.get('maxWidth'),
          i = this.get('maxHeight'),
          a = t.width,
          o = t.height;
        return n && (a = Math.min(a, n)), i && (o = Math.min(o, i)), sl(t.minX, t.minY, a, o);
      }),
      (r.prototype.setLocation = function (t) {
        this.set('x', t.x), this.set('y', t.y), this.resetLocation();
      }),
      (r.prototype.resetLocation = function () {
        var t = this.get('x'),
          n = this.get('y'),
          i = this.get('offsetX'),
          a = this.get('offsetY');
        this.moveElementTo(this.get('group'), { x: t + i, y: n + a });
      }),
      (r.prototype.applyOffset = function () {
        this.resetLocation();
      }),
      (r.prototype.getDrawPoint = function () {
        return this.get('currentPoint');
      }),
      (r.prototype.setDrawPoint = function (t) {
        return this.set('currentPoint', t);
      }),
      (r.prototype.renderInner = function (t) {
        this.resetDraw(),
          this.get('title') && this.drawTitle(t),
          this.drawLegendContent(t),
          this.get('background') && this.drawBackground(t);
      }),
      (r.prototype.drawBackground = function (t) {
        var n = this.get('background'),
          i = t.getBBox(),
          a = ys(n.padding),
          o = x(
            { x: 0, y: 0, width: i.width + a[1] + a[3], height: i.height + a[0] + a[2] },
            n.style,
          ),
          s = this.addShape(t, {
            type: 'rect',
            id: this.getElementId('background'),
            name: 'legend-background',
            attrs: o,
          });
        s.toBack();
      }),
      (r.prototype.drawTitle = function (t) {
        var n = this.get('currentPoint'),
          i = this.get('title'),
          a = i.spacing,
          o = i.style,
          s = i.text,
          l = this.addShape(t, {
            type: 'text',
            id: this.getElementId('title'),
            name: 'legend-title',
            attrs: x({ text: s, x: n.x, y: n.y }, o),
          }),
          u = l.getBBox();
        this.set('currentPoint', { x: n.x, y: u.maxY + a });
      }),
      (r.prototype.resetDraw = function () {
        var t = this.get('background'),
          n = { x: 0, y: 0 };
        if (t) {
          var i = ys(t.padding);
          (n.x = i[3]), (n.y = i[0]);
        }
        this.set('currentPoint', n);
      }),
      r
    );
  })(re),
  au = {
    marker: {
      style: { inactiveFill: '#000', inactiveOpacity: 0.45, fill: '#000', opacity: 1, size: 12 },
    },
    text: { style: { fill: '#ccc', fontSize: 12 } },
  },
  So = {
    fill: ht.textColor,
    fontSize: 12,
    textAlign: 'start',
    textBaseline: 'middle',
    fontFamily: ht.fontFamily,
    fontWeight: 'normal',
    lineHeight: 12,
  },
  ou = 'navigation-arrow-right',
  su = 'navigation-arrow-left',
  hd = {
    right: (90 * Math.PI) / 180,
    left: (270 * Math.PI) / 180,
    up: 0,
    down: (180 * Math.PI) / 180,
  },
  ME = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (
        (t.currentPageIndex = 1),
        (t.totalPagesCnt = 1),
        (t.pageWidth = 0),
        (t.pageHeight = 0),
        (t.startX = 0),
        (t.startY = 0),
        (t.onNavigationBack = function () {
          var n = t.getElementByLocalId('item-group');
          if (t.currentPageIndex > 1) {
            (t.currentPageIndex -= 1), t.updateNavigation();
            var i = t.getCurrentNavigationMatrix();
            t.get('animate') ? n.animate({ matrix: i }, 100) : n.attr({ matrix: i });
          }
        }),
        (t.onNavigationAfter = function () {
          var n = t.getElementByLocalId('item-group');
          if (t.currentPageIndex < t.totalPagesCnt) {
            (t.currentPageIndex += 1), t.updateNavigation();
            var i = t.getCurrentNavigationMatrix();
            t.get('animate') ? n.animate({ matrix: i }, 100) : n.attr({ matrix: i });
          }
        }),
        t
      );
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'legend',
          type: 'category',
          itemSpacing: 24,
          itemMarginBottom: 8,
          maxItemWidth: null,
          itemWidth: null,
          itemHeight: null,
          itemName: {},
          itemValue: null,
          maxWidth: null,
          maxHeight: null,
          marker: {},
          radio: null,
          items: [],
          itemStates: {},
          itemBackground: {},
          pageNavigator: {},
          defaultCfg: {
            title: {
              spacing: 5,
              style: { fill: ht.textColor, fontSize: 12, textAlign: 'start', textBaseline: 'top' },
            },
            background: { padding: 5, style: { stroke: ht.lineColor } },
            itemBackground: { style: { opacity: 0, fill: '#fff' } },
            pageNavigator: au,
            itemName: { spacing: 16, style: So },
            marker: { spacing: 8, style: { r: 6, symbol: 'circle' } },
            itemValue: { alignRight: !1, formatter: null, style: So, spacing: 6 },
            itemStates: {
              active: { nameStyle: { opacity: 0.8 } },
              unchecked: {
                nameStyle: { fill: ht.uncheckedColor },
                markerStyle: { fill: ht.uncheckedColor, stroke: ht.uncheckedColor },
              },
              inactive: { nameStyle: { fill: ht.uncheckedColor }, markerStyle: { opacity: 0.2 } },
            },
          },
        });
      }),
      (r.prototype.isList = function () {
        return !0;
      }),
      (r.prototype.getItems = function () {
        return this.get('items');
      }),
      (r.prototype.setItems = function (t) {
        this.update({ items: t });
      }),
      (r.prototype.updateItem = function (t, n) {
        bt(t, n), this.clear(), this.render();
      }),
      (r.prototype.clearItems = function () {
        var t = this.getElementByLocalId('item-group');
        t && t.clear();
      }),
      (r.prototype.setItemState = function (t, n, i) {
        t[n] = i;
        var a = this.getElementByLocalId('item-' + t.id);
        if (a) {
          var o = this.getItems(),
            s = o.indexOf(t),
            l = this.createOffScreenGroup(),
            u = this.drawItem(t, s, this.getItemHeight(), l);
          this.updateElements(u, a), this.clearUpdateStatus(a);
        }
      }),
      (r.prototype.hasState = function (t, n) {
        return !!t[n];
      }),
      (r.prototype.getItemStates = function (t) {
        var n = this.get('itemStates'),
          i = [];
        return (
          M(n, function (a, o) {
            t[o] && i.push(o);
          }),
          i
        );
      }),
      (r.prototype.clearItemsState = function (t) {
        var n = this,
          i = this.getItemsByState(t);
        M(i, function (a) {
          n.setItemState(a, t, !1);
        });
      }),
      (r.prototype.getItemsByState = function (t) {
        var n = this,
          i = this.getItems();
        return Jt(i, function (a) {
          return n.hasState(a, t);
        });
      }),
      (r.prototype.drawLegendContent = function (t) {
        this.processItems(), this.drawItems(t);
      }),
      (r.prototype.processItems = function () {
        var t = this.get('items');
        M(t, function (n) {
          n.id || (n.id = n.name);
        });
      }),
      (r.prototype.drawItems = function (t) {
        var n = this,
          i = this.addGroup(t, {
            id: this.getElementId('item-container-group'),
            name: 'legend-item-container-group',
          }),
          a = this.addGroup(i, { id: this.getElementId('item-group'), name: 'legend-item-group' }),
          o = this.getItemHeight(),
          s = this.get('itemWidth'),
          l = this.get('itemSpacing'),
          u = this.get('itemMarginBottom'),
          c = this.get('currentPoint'),
          h = c.x,
          f = c.y,
          v = this.get('layout'),
          d = this.get('items'),
          p = !1,
          g = 0,
          y = this.get('maxWidth'),
          m = this.get('maxHeight');
        M(d, function (b, w) {
          var S = n.drawItem(b, w, o, a),
            C = S.getBBox(),
            F = s || C.width;
          F > g && (g = F),
            v === 'horizontal'
              ? (y && y < c.x + F - h && ((p = !0), (c.x = h), (c.y += o + u)),
                n.moveElementTo(S, c),
                (c.x += F + l))
              : (m && m < c.y + o + u - f && ((p = !0), (c.x += g + l), (c.y = f), (g = 0)),
                n.moveElementTo(S, c),
                (c.y += o + u));
        }),
          p &&
            this.get('flipPage') &&
            ((this.pageHeight = 0),
            (this.pageWidth = 0),
            (this.totalPagesCnt = 1),
            (this.startX = h),
            (this.startY = f),
            this.adjustNavigation(t, a));
      }),
      (r.prototype.getItemHeight = function () {
        var t = this.get('itemHeight');
        if (!t) {
          var n = (this.get('itemName') || {}).style;
          if (U(n)) {
            var i = this.getItems();
            i.forEach(function (a, o) {
              var s = x(x({}, So), n(a, o, i)).fontSize;
              t < s && (t = s);
            });
          } else n && (t = n.fontSize);
        }
        return t;
      }),
      (r.prototype.drawMarker = function (t, n, i, a) {
        var o = x(
            x(x({ x: 0, y: a / 2 }, n.style), { symbol: A(i.marker, 'symbol', 'circle') }),
            A(i.marker, 'style', {}),
          ),
          s = this.addShape(t, {
            type: 'marker',
            id: this.getElementId('item-' + i.id + '-marker'),
            name: 'legend-item-marker',
            attrs: o,
          }),
          l = s.getBBox();
        s.attr('x', l.width / 2);
        var u = s.attr(),
          c = u.stroke,
          h = u.fill;
        return c && s.set('isStroke', !0), h && s.set('isFill', !0), s;
      }),
      (r.prototype.drawItemText = function (t, n, i, a, o, s, l) {
        var u = i.formatter,
          c = i.style,
          h = x(
            x({ x: s, y: o / 2, text: u ? u(a[n], a, l) : a[n] }, So),
            U(c) ? c(a, l, this.getItems()) : c,
          );
        return this.addShape(t, {
          type: 'text',
          id: this.getElementId('item-' + a.id + '-' + n),
          name: 'legend-item-' + n,
          attrs: h,
        });
      }),
      (r.prototype.drawRadio = function (t, n, i, a, o) {
        var s,
          l,
          u = n.style || {},
          c = (s = u.r) !== null && s !== void 0 ? s : a / 2,
          h = (c * 3.6) / 8,
          f = [o + c, a / 2 - c],
          v = f[0],
          d = f[1],
          p = [v + c, d + c],
          g = p[0],
          y = p[1],
          m = [v, y + c],
          b = m[0],
          w = m[1],
          S = [o, d + c],
          C = S[0],
          F = S[1],
          E = i.showRadio,
          I = x(
            x(
              {
                path: [
                  ['M', v, d],
                  ['A', c, c, 0, 0, 1, g, y],
                  ['L', g - h, y],
                  ['L', g, y],
                  ['A', c, c, 0, 0, 1, b, w],
                  ['L', b, w - h],
                  ['L', b, w],
                  ['A', c, c, 0, 0, 1, C, F],
                  ['L', C + h, F],
                  ['L', C, F],
                  ['A', c, c, 0, 0, 1, v, d],
                  ['L', v, d + h],
                ],
                stroke: '#000000',
                fill: '#ffffff',
              },
              u,
            ),
            {
              opacity: E
                ? (l = u == null ? void 0 : u.opacity) !== null && l !== void 0
                  ? l
                  : 0.45
                : 0,
            },
          ),
          T = this.addShape(t, {
            type: 'path',
            id: this.getElementId('item-' + i.id + '-radio'),
            name: 'legend-item-radio',
            attrs: I,
          });
        return T.set('tip', n.tip), T;
      }),
      (r.prototype.drawItem = function (t, n, i, a) {
        var o = 'item-' + t.id,
          s = this.addGroup(a, {
            name: 'legend-item-container',
            id: this.getElementId('item-container-' + o),
            delegateObject: { item: t, index: n },
          }),
          l = this.addGroup(s, {
            name: 'legend-item',
            id: this.getElementId(o),
            delegateObject: { item: t, index: n },
          }),
          u = this.get('marker'),
          c = this.get('itemName'),
          h = this.get('itemValue'),
          f = this.get('itemBackground'),
          v = this.get('radio'),
          d = this.getLimitItemWidth(),
          p = 0;
        if (u) {
          var g = this.drawMarker(l, u, t, i),
            y = u.spacing,
            m = A(t, ['marker', 'spacing']);
          at(m) && (y = m), (p = g.getBBox().maxX + y);
        }
        if (c) {
          var b = this.drawItemText(l, 'name', c, t, i, p, n);
          d && ua(!0, b, Tt(d - p, 0, d)), (p = b.getBBox().maxX + c.spacing);
        }
        if (h) {
          var w = this.drawItemText(l, 'value', h, t, i, p, n);
          d &&
            (h.alignRight
              ? (w.attr({ textAlign: 'right', x: d }), ua(!0, w, Tt(d - p, 0, d), 'head'))
              : ua(!0, w, Tt(d - p, 0, d))),
            (p = w.getBBox().maxX + h.spacing);
        }
        if ((v && this.drawRadio(l, v, t, i, p), f)) {
          var S = l.getBBox(),
            C = this.addShape(l, {
              type: 'rect',
              name: 'legend-item-background',
              id: this.getElementId(o + '-background'),
              attrs: x({ x: 0, y: 0, width: S.width, height: i }, f.style),
            });
          C.toBack();
        }
        return this.applyItemStates(t, l), l;
      }),
      (r.prototype.adjustNavigation = function (t, n) {
        var i = this,
          a = this.startX,
          o = this.startY,
          s = this.get('layout'),
          l = n.findAll(function (R) {
            return R.get('name') === 'legend-item';
          }),
          u = this.get('maxWidth'),
          c = this.get('maxHeight'),
          h = this.get('itemWidth'),
          f = this.get('itemSpacing'),
          v = this.getItemHeight(),
          d = _({}, au, this.get('pageNavigator')),
          p = this.drawNavigation(t, s, '00/00', d),
          g = p.getBBox(),
          y = { x: a, y: o },
          m = 1,
          b = 0,
          w = 0,
          S = 0,
          C = this.get('itemMarginBottom');
        function F(R, B) {
          var G = R.getBBox(),
            j = h || G.width,
            D = B.x + j + f + g.width;
          return D > u;
        }
        if (s === 'horizontal') {
          var E = this.get('maxRow') || 1,
            I = v + (E === 1 ? 0 : C),
            T = u - f - g.width - g.minX;
          (this.pageHeight = I * E),
            (this.pageWidth = T),
            M(l, function (R) {
              var B = R.getBBox(),
                G = h || B.width;
              ((b && b < y.x + G + f) || F(R, y)) &&
                (m === 1 &&
                  ((b = y.x + f),
                  i.moveElementTo(p, { x: T, y: y.y + v / 2 - g.height / 2 - g.minY })),
                (m += 1),
                (y.x = a),
                (y.y += I)),
                i.moveElementTo(R, y),
                R.getParent().setClip({
                  type: 'rect',
                  attrs: { x: y.x, y: y.y, width: G + f, height: v },
                }),
                (y.x += G + f);
            });
        } else {
          M(l, function (R) {
            var B = R.getBBox();
            B.width > w && (w = B.width);
          }),
            (S = w),
            (w += f),
            u && ((w = Math.min(u, w)), (S = Math.min(u, S))),
            (this.pageWidth = w),
            (this.pageHeight = c - Math.max(g.height, v + C));
          var P = Math.floor(this.pageHeight / (v + C));
          M(l, function (R, B) {
            B !== 0 && B % P === 0 && ((m += 1), (y.x += w), (y.y = o)),
              i.moveElementTo(R, y),
              R.getParent().setClip({
                type: 'rect',
                attrs: { x: y.x, y: y.y, width: w, height: v },
              }),
              (y.y += v + C);
          }),
            (this.totalPagesCnt = m),
            this.moveElementTo(p, {
              x: a + S / 2 - g.width / 2 - g.minX,
              y: c - g.height - g.minY,
            });
        }
        this.pageHeight &&
          this.pageWidth &&
          n
            .getParent()
            .setClip({
              type: 'rect',
              attrs: {
                x: this.startX,
                y: this.startY,
                width: this.pageWidth,
                height: this.pageHeight,
              },
            }),
          s === 'horizontal' && this.get('maxRow')
            ? (this.totalPagesCnt = Math.ceil(m / this.get('maxRow')))
            : (this.totalPagesCnt = m),
          this.currentPageIndex > this.totalPagesCnt && (this.currentPageIndex = 1),
          this.updateNavigation(p),
          n.attr('matrix', this.getCurrentNavigationMatrix());
      }),
      (r.prototype.drawNavigation = function (t, n, i, a) {
        var o = { x: 0, y: 0 },
          s = this.addGroup(t, {
            id: this.getElementId('navigation-group'),
            name: 'legend-navigation',
          }),
          l = A(a.marker, 'style', {}),
          u = l.size,
          c = u === void 0 ? 12 : u,
          h = wt(l, ['size']),
          f = this.drawArrow(s, o, su, n === 'horizontal' ? 'up' : 'left', c, h);
        f.on('click', this.onNavigationBack);
        var v = f.getBBox();
        o.x += v.width + 2;
        var d = this.addShape(s, {
            type: 'text',
            id: this.getElementId('navigation-text'),
            name: 'navigation-text',
            attrs: x(
              { x: o.x, y: o.y + c / 2, text: i, textBaseline: 'middle' },
              A(a.text, 'style'),
            ),
          }),
          p = d.getBBox();
        o.x += p.width + 2;
        var g = this.drawArrow(s, o, ou, n === 'horizontal' ? 'down' : 'right', c, h);
        return g.on('click', this.onNavigationAfter), s;
      }),
      (r.prototype.updateNavigation = function (t) {
        var n = _({}, au, this.get('pageNavigator')),
          i = n.marker.style,
          a = i.fill,
          o = i.opacity,
          s = i.inactiveFill,
          l = i.inactiveOpacity,
          u = this.currentPageIndex + '/' + this.totalPagesCnt,
          c = t ? t.getChildren()[1] : this.getElementByLocalId('navigation-text'),
          h = t ? t.findById(this.getElementId(su)) : this.getElementByLocalId(su),
          f = t ? t.findById(this.getElementId(ou)) : this.getElementByLocalId(ou);
        c.attr('text', u),
          h.attr('opacity', this.currentPageIndex === 1 ? l : o),
          h.attr('fill', this.currentPageIndex === 1 ? s : a),
          h.attr('cursor', this.currentPageIndex === 1 ? 'not-allowed' : 'pointer'),
          f.attr('opacity', this.currentPageIndex === this.totalPagesCnt ? l : o),
          f.attr('fill', this.currentPageIndex === this.totalPagesCnt ? s : a),
          f.attr(
            'cursor',
            this.currentPageIndex === this.totalPagesCnt ? 'not-allowed' : 'pointer',
          );
        var v = h.getBBox().maxX + 2;
        c.attr('x', v), (v += c.getBBox().width + 2), this.updateArrowPath(f, { x: v, y: 0 });
      }),
      (r.prototype.drawArrow = function (t, n, i, a, o, s) {
        var l = n.x,
          u = n.y,
          c = this.addShape(t, {
            type: 'path',
            id: this.getElementId(i),
            name: i,
            attrs: x(
              {
                size: o,
                direction: a,
                path: [['M', l + o / 2, u], ['L', l, u + o], ['L', l + o, u + o], ['Z']],
                cursor: 'pointer',
              },
              s,
            ),
          });
        return c.attr('matrix', Pn({ x: l + o / 2, y: u + o / 2 }, hd[a])), c;
      }),
      (r.prototype.updateArrowPath = function (t, n) {
        var i = n.x,
          a = n.y,
          o = t.attr(),
          s = o.size,
          l = o.direction,
          u = Pn({ x: i + s / 2, y: a + s / 2 }, hd[l]);
        t.attr('path', [['M', i + s / 2, a], ['L', i, a + s], ['L', i + s, a + s], ['Z']]),
          t.attr('matrix', u);
      }),
      (r.prototype.getCurrentNavigationMatrix = function () {
        var t = this,
          n = t.currentPageIndex,
          i = t.pageWidth,
          a = t.pageHeight,
          o = this.get('layout'),
          s = o === 'horizontal' ? { x: 0, y: a * (1 - n) } : { x: i * (1 - n), y: 0 };
        return lh(s);
      }),
      (r.prototype.applyItemStates = function (t, n) {
        var i = this.getItemStates(t),
          a = i.length > 0;
        if (a) {
          var o = n.getChildren(),
            s = this.get('itemStates');
          M(o, function (l) {
            var u = l.get('name'),
              c = u.split('-')[2],
              h = Ji(t, c, s);
            h &&
              (l.attr(h),
              c === 'marker' &&
                !(l.get('isStroke') && l.get('isFill')) &&
                (l.get('isStroke') && l.attr('fill', null),
                l.get('isFill') && l.attr('stroke', null)));
          });
        }
      }),
      (r.prototype.getLimitItemWidth = function () {
        var t = this.get('itemWidth'),
          n = this.get('maxItemWidth');
        return n ? t && (n = t <= n ? t : n) : t && (n = t), n;
      }),
      r
    );
  })(gm),
  AE = 1.4,
  fd = 0.4,
  FE = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          type: 'continue',
          min: 0,
          max: 100,
          value: null,
          colors: [],
          track: {},
          rail: {},
          label: {},
          handler: {},
          slidable: !0,
          tip: null,
          step: null,
          maxWidth: null,
          maxHeight: null,
          defaultCfg: {
            label: {
              align: 'rail',
              spacing: 5,
              formatter: null,
              style: {
                fontSize: 12,
                fill: ht.textColor,
                textBaseline: 'middle',
                fontFamily: ht.fontFamily,
              },
            },
            handler: { size: 10, style: { fill: '#fff', stroke: '#333' } },
            track: {},
            rail: { type: 'color', size: 20, defaultLength: 100, style: { fill: '#DCDEE2' } },
            title: {
              spacing: 5,
              style: { fill: ht.textColor, fontSize: 12, textAlign: 'start', textBaseline: 'top' },
            },
          },
        });
      }),
      (r.prototype.isSlider = function () {
        return !0;
      }),
      (r.prototype.getValue = function () {
        return this.getCurrentValue();
      }),
      (r.prototype.getRange = function () {
        return { min: this.get('min'), max: this.get('max') };
      }),
      (r.prototype.setRange = function (t, n) {
        this.update({ min: t, max: n });
      }),
      (r.prototype.setValue = function (t) {
        var n = this.getValue();
        this.set('value', t);
        var i = this.get('group');
        this.resetTrackClip(),
          this.get('slidable') && this.resetHandlers(i),
          this.delegateEmit('valuechanged', { originValue: n, value: t });
      }),
      (r.prototype.initEvent = function () {
        var t = this.get('group');
        this.bindSliderEvent(t), this.bindRailEvent(t), this.bindTrackEvent(t);
      }),
      (r.prototype.drawLegendContent = function (t) {
        this.drawRail(t),
          this.drawLabels(t),
          this.fixedElements(t),
          this.resetTrack(t),
          this.resetTrackClip(t),
          this.get('slidable') && this.resetHandlers(t);
      }),
      (r.prototype.bindSliderEvent = function (t) {
        this.bindHandlersEvent(t);
      }),
      (r.prototype.bindHandlersEvent = function (t) {
        var n = this;
        t.on('legend-handler-min:drag', function (i) {
          var a = n.getValueByCanvasPoint(i.x, i.y),
            o = n.getCurrentValue(),
            s = o[1];
          s < a && (s = a), n.setValue([a, s]);
        }),
          t.on('legend-handler-max:drag', function (i) {
            var a = n.getValueByCanvasPoint(i.x, i.y),
              o = n.getCurrentValue(),
              s = o[0];
            s > a && (s = a), n.setValue([s, a]);
          });
      }),
      (r.prototype.bindRailEvent = function (t) {}),
      (r.prototype.bindTrackEvent = function (t) {
        var n = this,
          i = null;
        t.on('legend-track:dragstart', function (a) {
          i = { x: a.x, y: a.y };
        }),
          t.on('legend-track:drag', function (a) {
            if (i) {
              var o = n.getValueByCanvasPoint(i.x, i.y),
                s = n.getValueByCanvasPoint(a.x, a.y),
                l = n.getCurrentValue(),
                u = l[1] - l[0],
                c = n.getRange(),
                h = s - o;
              h < 0
                ? l[0] + h > c.min
                  ? n.setValue([l[0] + h, l[1] + h])
                  : n.setValue([c.min, c.min + u])
                : h > 0 &&
                  (h > 0 && l[1] + h < c.max
                    ? n.setValue([l[0] + h, l[1] + h])
                    : n.setValue([c.max - u, c.max])),
                (i = { x: a.x, y: a.y });
            }
          }),
          t.on('legend-track:dragend', function (a) {
            i = null;
          });
      }),
      (r.prototype.drawLabels = function (t) {
        this.drawLabel('min', t), this.drawLabel('max', t);
      }),
      (r.prototype.drawLabel = function (t, n) {
        var i = this.get('label'),
          a = i.style,
          o = i.align,
          s = i.formatter,
          l = this.get(t),
          u = this.getLabelAlignAttrs(t, o),
          c = 'label-' + t;
        this.addShape(n, {
          type: 'text',
          id: this.getElementId(c),
          name: 'legend-label-' + t,
          attrs: x(x({ x: 0, y: 0, text: U(s) ? s(l) : l }, a), u),
        });
      }),
      (r.prototype.getLabelAlignAttrs = function (t, n) {
        var i = this.isVertical(),
          a = 'center',
          o = 'middle';
        return (
          i
            ? ((a = 'start'),
              n !== 'rail' ? (t === 'min' ? (o = 'top') : (o = 'bottom')) : (o = 'top'))
            : n !== 'rail'
            ? ((o = 'top'), t === 'min' ? (a = 'start') : (a = 'end'))
            : ((a = 'start'), (o = 'middle')),
          { textAlign: a, textBaseline: o }
        );
      }),
      (r.prototype.getRailPath = function (t, n, i, a) {
        var o = this.get('rail'),
          s = o.size,
          l = o.defaultLength,
          u = o.type,
          c = this.isVertical(),
          h = l,
          f = i,
          v = a;
        f || (f = c ? s : h), v || (v = c ? h : s);
        var d = [];
        return (
          u === 'color'
            ? (d.push(['M', t, n]),
              d.push(['L', t + f, n]),
              d.push(['L', t + f, n + v]),
              d.push(['L', t, n + v]),
              d.push(['Z']))
            : (d.push(['M', t + f, n]),
              d.push(['L', t + f, n + v]),
              d.push(['L', t, n + v]),
              d.push(['Z'])),
          d
        );
      }),
      (r.prototype.drawRail = function (t) {
        var n = this.get('rail'),
          i = n.style;
        this.addShape(t, {
          type: 'path',
          id: this.getElementId('rail'),
          name: 'legend-rail',
          attrs: x({ path: this.getRailPath(0, 0) }, i),
        });
      }),
      (r.prototype.getTrackColor = function (t) {
        var n = t.length;
        if (!n) return null;
        if (n === 1) return t[0];
        var i;
        this.isVertical() ? (i = 'l(90)') : (i = 'l(0)');
        for (var a = 0; a < n; a++) {
          var o = a / (n - 1);
          i += ' ' + o + ':' + t[a];
        }
        return i;
      }),
      (r.prototype.getTrackPath = function (t) {
        var n = this.getRailShape(t),
          i = n.attr('path');
        return oe(i);
      }),
      (r.prototype.getClipTrackAttrs = function (t) {
        var n = this.getCurrentValue(),
          i = n[0],
          a = n[1],
          o = this.getRailBBox(t),
          s = this.getPointByValue(i, t),
          l = this.getPointByValue(a, t),
          u = this.isVertical(),
          c,
          h,
          f,
          v;
        return (
          u
            ? ((c = o.minX), (h = s.y), (f = o.width), (v = l.y - s.y))
            : ((c = s.x), (h = o.minY), (f = l.x - s.x), (v = o.height)),
          { x: c, y: h, width: f, height: v }
        );
      }),
      (r.prototype.getTrackAttrs = function (t) {
        var n = this.get('track'),
          i = this.get('colors'),
          a = this.getTrackPath(t);
        return bt({ path: a, fill: this.getTrackColor(i) }, n.style);
      }),
      (r.prototype.resetTrackClip = function (t) {
        var n = t || this.get('group'),
          i = this.getElementId('track'),
          a = n.findById(i),
          o = a.getClip(),
          s = this.getClipTrackAttrs(t);
        o ? o.attr(s) : a.setClip({ type: 'rect', attrs: s });
      }),
      (r.prototype.resetTrack = function (t) {
        var n = this.getElementId('track'),
          i = t.findById(n),
          a = this.getTrackAttrs(t);
        i
          ? i.attr(a)
          : this.addShape(t, {
              type: 'path',
              id: n,
              draggable: this.get('slidable'),
              name: 'legend-track',
              attrs: a,
            });
      }),
      (r.prototype.getPointByValue = function (t, n) {
        var i = this.getRange(),
          a = i.min,
          o = i.max,
          s = (t - a) / (o - a),
          l = this.getRailBBox(n),
          u = this.isVertical(),
          c = { x: 0, y: 0 };
        return (
          u
            ? ((c.x = l.minX + l.width / 2), (c.y = Fn(l.minY, l.maxY, s)))
            : ((c.x = Fn(l.minX, l.maxX, s)), (c.y = l.minY + l.height / 2)),
          c
        );
      }),
      (r.prototype.getRailShape = function (t) {
        var n = t || this.get('group');
        return n.findById(this.getElementId('rail'));
      }),
      (r.prototype.getRailBBox = function (t) {
        var n = this.getRailShape(t),
          i = n.getBBox();
        return i;
      }),
      (r.prototype.getRailCanvasBBox = function () {
        var t = this.get('group'),
          n = t.findById(this.getElementId('rail')),
          i = n.getCanvasBBox();
        return i;
      }),
      (r.prototype.isVertical = function () {
        return this.get('layout') === 'vertical';
      }),
      (r.prototype.getValueByCanvasPoint = function (t, n) {
        var i = this.getRange(),
          a = i.min,
          o = i.max,
          s = this.getRailCanvasBBox(),
          l = this.isVertical(),
          u = this.get('step'),
          c;
        l ? (c = (n - s.minY) / s.height) : (c = (t - s.minX) / s.width);
        var h = Fn(a, o, c);
        if (u) {
          var f = Math.round((h - a) / u);
          h = a + f * u;
        }
        return h > o && (h = o), h < a && (h = a), h;
      }),
      (r.prototype.getCurrentValue = function () {
        var t = this.get('value');
        if (!t) {
          var n = this.get('values');
          return n
            ? [
                Math.max(Math.min.apply(Math, da(n, [this.get('max')])), this.get('min')),
                Math.min(Math.max.apply(Math, da(n, [this.get('min')])), this.get('max')),
              ]
            : [this.get('min'), this.get('max')];
        }
        return t;
      }),
      (r.prototype.resetHandlers = function (t) {
        var n = this.getCurrentValue(),
          i = n[0],
          a = n[1];
        this.resetHandler(t, 'min', i), this.resetHandler(t, 'max', a);
      }),
      (r.prototype.getHandlerPath = function (t, n) {
        var i = this.isVertical(),
          a = [],
          o = t.size,
          s = n.x,
          l = n.y,
          u = o * AE,
          c = o / 2,
          h = o / 6;
        if (i) {
          var f = s + u * fd;
          a.push(['M', s, l]),
            a.push(['L', f, l + c]),
            a.push(['L', s + u, l + c]),
            a.push(['L', s + u, l - c]),
            a.push(['L', f, l - c]),
            a.push(['Z']),
            a.push(['M', f, l + h]),
            a.push(['L', s + u - 2, l + h]),
            a.push(['M', f, l - h]),
            a.push(['L', s + u - 2, l - h]);
        } else {
          var v = l + u * fd;
          a.push(['M', s, l]),
            a.push(['L', s - c, v]),
            a.push(['L', s - c, l + u]),
            a.push(['L', s + c, l + u]),
            a.push(['L', s + c, v]),
            a.push(['Z']),
            a.push(['M', s - h, v]),
            a.push(['L', s - h, l + u - 2]),
            a.push(['M', s + h, v]),
            a.push(['L', s + h, l + u - 2]);
        }
        return a;
      }),
      (r.prototype.resetHandler = function (t, n, i) {
        var a = this.getPointByValue(i, t),
          o = this.get('handler'),
          s = this.getHandlerPath(o, a),
          l = this.getElementId('handler-' + n),
          u = t.findById(l),
          c = this.isVertical();
        u
          ? u.attr('path', s)
          : this.addShape(t, {
              type: 'path',
              name: 'legend-handler-' + n,
              draggable: !0,
              id: l,
              attrs: x(x({ path: s }, o.style), { cursor: c ? 'ns-resize' : 'ew-resize' }),
            });
      }),
      (r.prototype.fixedElements = function (t) {
        var n = t.findById(this.getElementId('rail')),
          i = t.findById(this.getElementId('label-min')),
          a = t.findById(this.getElementId('label-max')),
          o = this.getDrawPoint();
        this.isVertical() ? this.fixedVertail(i, a, n, o) : this.fixedHorizontal(i, a, n, o);
      }),
      (r.prototype.fitRailLength = function (t, n, i, a) {
        var o = this.isVertical(),
          s = o ? 'height' : 'width',
          l = this.get('label'),
          u = l.align,
          c = l.spacing,
          h = this.get('max' + Nn(s));
        if (h) {
          var f = u === 'rail' ? i[s] + t[s] + n[s] + c * 2 : i[s],
            v = f - h;
          v > 0 && this.changeRailLength(a, s, i[s] - v);
        }
      }),
      (r.prototype.changeRailLength = function (t, n, i) {
        var a = t.getBBox(),
          o;
        n === 'height'
          ? (o = this.getRailPath(a.x, a.y, a.width, i))
          : (o = this.getRailPath(a.x, a.y, i, a.height)),
          t.attr('path', o);
      }),
      (r.prototype.changeRailPosition = function (t, n, i) {
        var a = t.getBBox(),
          o = this.getRailPath(n, i, a.width, a.height);
        t.attr('path', o);
      }),
      (r.prototype.fixedHorizontal = function (t, n, i, a) {
        var o = this.get('label'),
          s = o.align,
          l = o.spacing,
          u = i.getBBox(),
          c = t.getBBox(),
          h = n.getBBox(),
          f = u.height;
        this.fitRailLength(c, h, u, i),
          (u = i.getBBox()),
          s === 'rail'
            ? (t.attr({ x: a.x, y: a.y + f / 2 }),
              this.changeRailPosition(i, a.x + c.width + l, a.y),
              n.attr({ x: a.x + c.width + u.width + l * 2, y: a.y + f / 2 }))
            : s === 'top'
            ? (t.attr({ x: a.x, y: a.y }),
              n.attr({ x: a.x + u.width, y: a.y }),
              this.changeRailPosition(i, a.x, a.y + c.height + l))
            : (this.changeRailPosition(i, a.x, a.y),
              t.attr({ x: a.x, y: a.y + u.height + l }),
              n.attr({ x: a.x + u.width, y: a.y + u.height + l }));
      }),
      (r.prototype.fixedVertail = function (t, n, i, a) {
        var o = this.get('label'),
          s = o.align,
          l = o.spacing,
          u = i.getBBox(),
          c = t.getBBox(),
          h = n.getBBox();
        if ((this.fitRailLength(c, h, u, i), (u = i.getBBox()), s === 'rail'))
          t.attr({ x: a.x, y: a.y }),
            this.changeRailPosition(i, a.x, a.y + c.height + l),
            n.attr({ x: a.x, y: a.y + c.height + u.height + l * 2 });
        else if (s === 'right')
          t.attr({ x: a.x + u.width + l, y: a.y }),
            this.changeRailPosition(i, a.x, a.y),
            n.attr({ x: a.x + u.width + l, y: a.y + u.height });
        else {
          var f = Math.max(c.width, h.width);
          t.attr({ x: a.x, y: a.y }),
            this.changeRailPosition(i, a.x + f + l, a.y),
            n.attr({ x: a.x, y: a.y + u.height });
        }
      }),
      r
    );
  })(gm),
  Cr = 'g2-tooltip',
  Mr = 'g2-tooltip-title',
  Ea = 'g2-tooltip-list',
  ul = 'g2-tooltip-list-item',
  cl = 'g2-tooltip-marker',
  hl = 'g2-tooltip-value',
  ym = 'g2-tooltip-name',
  dh = 'g2-tooltip-crosshair-x',
  ph = 'g2-tooltip-crosshair-y';
const EE = Object.freeze(
  Object.defineProperty(
    {
      __proto__: null,
      CONTAINER_CLASS: Cr,
      CROSSHAIR_X: dh,
      CROSSHAIR_Y: ph,
      LIST_CLASS: Ea,
      LIST_ITEM_CLASS: ul,
      MARKER_CLASS: cl,
      NAME_CLASS: ym,
      TITLE_CLASS: Mr,
      VALUE_CLASS: hl,
    },
    Symbol.toStringTag,
    { value: 'Module' },
  ),
);
var Qe;
const TE =
  ((Qe = {}),
  (Qe['' + Cr] = {
    position: 'absolute',
    visibility: 'visible',
    zIndex: 8,
    transition:
      'visibility 0.2s cubic-bezier(0.23, 1, 0.32, 1), left 0.4s cubic-bezier(0.23, 1, 0.32, 1), top 0.4s cubic-bezier(0.23, 1, 0.32, 1)',
    backgroundColor: 'rgba(255, 255, 255, 0.9)',
    boxShadow: '0px 0px 10px #aeaeae',
    borderRadius: '3px',
    color: 'rgb(87, 87, 87)',
    fontSize: '12px',
    fontFamily: ht.fontFamily,
    lineHeight: '20px',
    padding: '10px 10px 6px 10px',
  }),
  (Qe['' + Mr] = { marginBottom: '4px' }),
  (Qe['' + Ea] = { margin: '0px', listStyleType: 'none', padding: '0px' }),
  (Qe['' + ul] = { listStyleType: 'none', marginBottom: '4px' }),
  (Qe['' + cl] = {
    width: '8px',
    height: '8px',
    borderRadius: '50%',
    display: 'inline-block',
    marginRight: '8px',
  }),
  (Qe['' + hl] = { display: 'inline-block', float: 'right', marginLeft: '30px' }),
  (Qe['' + dh] = { position: 'absolute', width: '1px', backgroundColor: 'rgba(0, 0, 0, 0.25)' }),
  (Qe['' + ph] = { position: 'absolute', height: '1px', backgroundColor: 'rgba(0, 0, 0, 0.25)' }),
  Qe);
function kE(e, r, t, n, i) {
  var a = {
    left: e < i.x,
    right: e + t > i.x + i.width,
    top: r < i.y,
    bottom: r + n > i.y + i.height,
  };
  return a;
}
function IE(e, r, t, n, i, a) {
  var o = e,
    s = r;
  switch (a) {
    case 'left':
      (o = e - n - t), (s = r - i / 2);
      break;
    case 'right':
      (o = e + t), (s = r - i / 2);
      break;
    case 'top':
      (o = e - n / 2), (s = r - i - t);
      break;
    case 'bottom':
      (o = e - n / 2), (s = r + t);
      break;
    default:
      (o = e + t), (s = r - i - t);
      break;
  }
  return { x: o, y: s };
}
function LE(e, r, t, n, i, a, o) {
  var s = IE(e, r, t, n, i, a);
  if (o) {
    var l = kE(s.x, s.y, n, i, o);
    a === 'auto'
      ? (l.right && (s.x = Math.max(0, e - n - t)), l.top && (s.y = Math.max(0, r - i - t)))
      : a === 'top' || a === 'bottom'
      ? (l.left && (s.x = o.x),
        l.right && (s.x = o.x + o.width - n),
        a === 'top' && l.top && (s.y = r + t),
        a === 'bottom' && l.bottom && (s.y = r - i - t))
      : (l.top && (s.y = o.y),
        l.bottom && (s.y = o.y + o.height - i),
        a === 'left' && l.left && (s.x = e + t),
        a === 'right' && l.right && (s.x = e - n - t));
  }
  return s;
}
function PE(e, r) {
  var t = !1;
  return (
    M(r, function (n) {
      if (_r(e, n)) return (t = !0), !1;
    }),
    t
  );
}
var OE = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'tooltip',
          type: 'html',
          x: 0,
          y: 0,
          items: [],
          customContent: null,
          containerTpl:
            '<div class="' +
            Cr +
            '"><div class="' +
            Mr +
            '"></div><ul class="' +
            Ea +
            '"></ul></div>',
          itemTpl:
            '<li class="' +
            ul +
            `" data-index={index}>
          <span class="` +
            cl +
            `" style="background:{color}"></span>
          <span class="` +
            ym +
            `">{name}</span>:
          <span class="` +
            hl +
            `">{value}</span>
        </li>`,
          xCrosshairTpl: '<div class="' + dh + '"></div>',
          yCrosshairTpl: '<div class="' + ph + '"></div>',
          title: null,
          showTitle: !0,
          region: null,
          crosshairsRegion: null,
          containerClassName: Cr,
          crosshairs: null,
          offset: 10,
          position: 'right',
          domStyles: null,
          defaultStyles: TE,
        });
      }),
      (r.prototype.render = function () {
        this.get('customContent')
          ? this.renderCustomContent()
          : (this.resetTitle(), this.renderItems()),
          this.resetPosition();
      }),
      (r.prototype.clear = function () {
        this.clearCrosshairs(), this.setTitle(''), this.clearItemDoms();
      }),
      (r.prototype.show = function () {
        var t = this.getContainer();
        !t ||
          this.destroyed ||
          (this.set('visible', !0),
          ne(t, { visibility: 'visible' }),
          this.setCrossHairsVisible(!0));
      }),
      (r.prototype.hide = function () {
        var t = this.getContainer();
        !t ||
          this.destroyed ||
          (this.set('visible', !1), ne(t, { visibility: 'hidden' }), this.setCrossHairsVisible(!1));
      }),
      (r.prototype.getLocation = function () {
        return { x: this.get('x'), y: this.get('y') };
      }),
      (r.prototype.setLocation = function (t) {
        this.set('x', t.x), this.set('y', t.y), this.resetPosition();
      }),
      (r.prototype.setCrossHairsVisible = function (t) {
        var n = t ? '' : 'none',
          i = this.get('xCrosshairDom'),
          a = this.get('yCrosshairDom');
        i && ne(i, { display: n }), a && ne(a, { display: n });
      }),
      (r.prototype.initContainer = function () {
        if ((e.prototype.initContainer.call(this), this.get('customContent'))) {
          this.get('container') && this.get('container').remove();
          var t = this.getHtmlContentNode();
          this.get('parent').appendChild(t),
            this.set('container', t),
            this.resetStyles(),
            this.applyStyles();
        }
      }),
      (r.prototype.updateInner = function (t) {
        this.get('customContent')
          ? this.renderCustomContent()
          : (PE(t, ['title', 'showTitle']) && this.resetTitle(),
            _r(t, 'items') && this.renderItems()),
          e.prototype.updateInner.call(this, t);
      }),
      (r.prototype.initDom = function () {
        this.cacheDoms();
      }),
      (r.prototype.removeDom = function () {
        e.prototype.removeDom.call(this), this.clearCrosshairs();
      }),
      (r.prototype.resetPosition = function () {
        var t = this.get('x'),
          n = this.get('y'),
          i = this.get('offset'),
          a = this.getOffset(),
          o = a.offsetX,
          s = a.offsetY,
          l = this.get('position'),
          u = this.get('region'),
          c = this.getContainer(),
          h = this.getBBox(),
          f = h.width,
          v = h.height,
          d;
        u && (d = Ma(u));
        var p = LE(t, n, i, f, v, l, d);
        ne(c, { left: fe(p.x + o), top: fe(p.y + s) }), this.resetCrosshairs();
      }),
      (r.prototype.renderCustomContent = function () {
        var t = this.getHtmlContentNode(),
          n = this.get('parent'),
          i = this.get('container');
        i && i.parentNode === n ? n.replaceChild(t, i) : n.appendChild(t),
          this.set('container', t),
          this.resetStyles(),
          this.applyStyles();
      }),
      (r.prototype.getHtmlContentNode = function () {
        var t,
          n = this.get('customContent');
        if (n) {
          var i = n(this.get('title'), this.get('items'));
          Dg(i) ? (t = i) : (t = Vr(i));
        }
        return t;
      }),
      (r.prototype.cacheDoms = function () {
        var t = this.getContainer(),
          n = t.getElementsByClassName(Mr)[0],
          i = t.getElementsByClassName(Ea)[0];
        this.set('titleDom', n), this.set('listDom', i);
      }),
      (r.prototype.resetTitle = function () {
        var t = this.get('title'),
          n = this.get('showTitle');
        n && t ? this.setTitle(t) : this.setTitle('');
      }),
      (r.prototype.setTitle = function (t) {
        var n = this.get('titleDom');
        n && (n.innerText = t);
      }),
      (r.prototype.resetCrosshairs = function () {
        var t = this.get('crosshairsRegion'),
          n = this.get('crosshairs');
        if (!t || !n) this.clearCrosshairs();
        else {
          var i = Ma(t),
            a = this.get('xCrosshairDom'),
            o = this.get('yCrosshairDom');
          n === 'x'
            ? (this.resetCrosshair('x', i), o && (o.remove(), this.set('yCrosshairDom', null)))
            : n === 'y'
            ? (this.resetCrosshair('y', i), a && (a.remove(), this.set('xCrosshairDom', null)))
            : (this.resetCrosshair('x', i), this.resetCrosshair('y', i)),
            this.setCrossHairsVisible(this.get('visible'));
        }
      }),
      (r.prototype.resetCrosshair = function (t, n) {
        var i = this.checkCrosshair(t),
          a = this.get(t);
        t === 'x'
          ? ne(i, { left: fe(a), top: fe(n.y), height: fe(n.height) })
          : ne(i, { top: fe(a), left: fe(n.x), width: fe(n.width) });
      }),
      (r.prototype.checkCrosshair = function (t) {
        var n = t + 'CrosshairDom',
          i = t + 'CrosshairTpl',
          a = 'CROSSHAIR_' + t.toUpperCase(),
          o = EE[a],
          s = this.get(n),
          l = this.get('parent');
        return (
          s || ((s = Vr(this.get(i))), this.applyStyle(o, s), l.appendChild(s), this.set(n, s)), s
        );
      }),
      (r.prototype.renderItems = function () {
        this.clearItemDoms();
        var t = this.get('items'),
          n = this.get('itemTpl'),
          i = this.get('listDom');
        i &&
          (M(t, function (a) {
            var o = Hr.toCSSGradient(a.color),
              s = x(x({}, a), { color: o }),
              l = Pg(n, s),
              u = Vr(l);
            i.appendChild(u);
          }),
          this.applyChildrenStyles(i, this.get('domStyles')));
      }),
      (r.prototype.clearItemDoms = function () {
        this.get('listDom') && ch(this.get('listDom'));
      }),
      (r.prototype.clearCrosshairs = function () {
        var t = this.get('xCrosshairDom'),
          n = this.get('yCrosshairDom');
        t && t.remove(),
          n && n.remove(),
          this.set('xCrosshairDom', null),
          this.set('yCrosshairDom', null);
      }),
      r
    );
  })(hh),
  DE = { opacity: 0 },
  BE = { stroke: '#C5C5C5', strokeOpacity: 0.85 },
  RE = { fill: '#CACED4', opacity: 0.85 };
function $E(e) {
  return kt(e, function (r, t) {
    var n = t === 0 ? 'M' : 'L',
      i = r[0],
      a = r[1];
    return [n, i, a];
  });
}
function mm(e) {
  return $E(e);
}
function NE(e) {
  if (e.length <= 2) return mm(e);
  var r = [];
  M(e, function (o) {
    Dt(o, r.slice(r.length - 2)) || r.push(o[0], o[1]);
  });
  var t = qA(r, !1),
    n = Me(e),
    i = n[0],
    a = n[1];
  return t.unshift(['M', i, a]), t;
}
function zE(e, r, t, n) {
  n === void 0 && (n = !0);
  var i = new al({ values: e }),
    a = new nl({
      values: kt(e, function (s, l) {
        return l;
      }),
    }),
    o = kt(e, function (s, l) {
      return [a.scale(l) * r, t - i.scale(s) * t];
    });
  return n ? NE(o) : mm(o);
}
function GE(e, r) {
  var t = new al({ values: e }),
    n = t.max < 0 ? t.max : Math.max(0, t.min);
  return r - t.scale(n) * r;
}
function VE(e, r, t, n) {
  var i = da(e),
    a = GE(n, t);
  return i.push(['L', r, a]), i.push(['L', 0, a]), i.push(['Z']), i;
}
var HE = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'trend',
          x: 0,
          y: 0,
          width: 200,
          height: 16,
          smooth: !0,
          isArea: !1,
          data: [],
          backgroundStyle: DE,
          lineStyle: BE,
          areaStyle: RE,
        });
      }),
      (r.prototype.renderInner = function (t) {
        var n = this.cfg,
          i = n.width,
          a = n.height,
          o = n.data,
          s = n.smooth,
          l = n.isArea,
          u = n.backgroundStyle,
          c = n.lineStyle,
          h = n.areaStyle;
        this.addShape(t, {
          id: this.getElementId('background'),
          type: 'rect',
          attrs: x({ x: 0, y: 0, width: i, height: a }, u),
        });
        var f = zE(o, i, a, s);
        if (
          (this.addShape(t, {
            id: this.getElementId('line'),
            type: 'path',
            attrs: x({ path: f }, c),
          }),
          l)
        ) {
          var v = VE(f, i, a, o);
          this.addShape(t, {
            id: this.getElementId('area'),
            type: 'path',
            attrs: x({ path: v }, h),
          });
        }
      }),
      (r.prototype.applyOffset = function () {
        var t = this.cfg,
          n = t.x,
          i = t.y;
        this.moveElementTo(this.get('group'), { x: n, y: i });
      }),
      r
    );
  })(re),
  xm = {
    fill: '#F7F7F7',
    stroke: '#BFBFBF',
    radius: 2,
    opacity: 1,
    cursor: 'ew-resize',
    highLightFill: '#FFF',
  },
  vd = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), { name: 'handler', x: 0, y: 0, width: 10, height: 24, style: xm });
      }),
      (r.prototype.renderInner = function (t) {
        var n = this.cfg,
          i = n.width,
          a = n.height,
          o = n.style,
          s = o.fill,
          l = o.stroke,
          u = o.radius,
          c = o.opacity,
          h = o.cursor;
        this.addShape(t, {
          type: 'rect',
          id: this.getElementId('background'),
          attrs: {
            x: 0,
            y: 0,
            width: i,
            height: a,
            fill: s,
            stroke: l,
            radius: u,
            opacity: c,
            cursor: h,
          },
        });
        var f = (1 / 3) * i,
          v = (2 / 3) * i,
          d = (1 / 4) * a,
          p = (3 / 4) * a;
        this.addShape(t, {
          id: this.getElementId('line-left'),
          type: 'line',
          attrs: { x1: f, y1: d, x2: f, y2: p, stroke: l, cursor: h },
        }),
          this.addShape(t, {
            id: this.getElementId('line-right'),
            type: 'line',
            attrs: { x1: v, y1: d, x2: v, y2: p, stroke: l, cursor: h },
          });
      }),
      (r.prototype.applyOffset = function () {
        this.moveElementTo(this.get('group'), { x: this.get('x'), y: this.get('y') });
      }),
      (r.prototype.initEvent = function () {
        this.bindEvents();
      }),
      (r.prototype.bindEvents = function () {
        var t = this;
        this.get('group').on('mouseenter', function () {
          var n = t.get('style').highLightFill;
          t.getElementByLocalId('background').attr('fill', n), t.draw();
        }),
          this.get('group').on('mouseleave', function () {
            var n = t.get('style').fill;
            t.getElementByLocalId('background').attr('fill', n), t.draw();
          });
      }),
      (r.prototype.draw = function () {
        var t = this.get('container').get('canvas');
        t && t.draw();
      }),
      r
    );
  })(re),
  YE = { fill: '#416180', opacity: 0.05 },
  WE = { fill: '#5B8FF9', opacity: 0.15, cursor: 'move' },
  qo = 10,
  XE = { width: qo, height: 24 },
  _E = { textBaseline: 'middle', fill: '#000', opacity: 0.45 },
  jE = 'sliderchange',
  UE = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (
        (t.onMouseDown = function (n) {
          return function (i) {
            t.currentTarget = n;
            var a = i.originalEvent;
            a.stopPropagation(),
              a.preventDefault(),
              (t.prevX = A(a, 'touches.0.pageX', a.pageX)),
              (t.prevY = A(a, 'touches.0.pageY', a.pageY));
            var o = t.getContainerDOM();
            o.addEventListener('mousemove', t.onMouseMove),
              o.addEventListener('mouseup', t.onMouseUp),
              o.addEventListener('mouseleave', t.onMouseUp),
              o.addEventListener('touchmove', t.onMouseMove),
              o.addEventListener('touchend', t.onMouseUp),
              o.addEventListener('touchcancel', t.onMouseUp);
          };
        }),
        (t.onMouseMove = function (n) {
          var i = t.cfg.width,
            a = [t.get('start'), t.get('end')];
          n.stopPropagation(), n.preventDefault();
          var o = A(n, 'touches.0.pageX', n.pageX),
            s = A(n, 'touches.0.pageY', n.pageY),
            l = o - t.prevX,
            u = t.adjustOffsetRange(l / i);
          t.updateStartEnd(u),
            t.updateUI(
              t.getElementByLocalId('foreground'),
              t.getElementByLocalId('minText'),
              t.getElementByLocalId('maxText'),
            ),
            (t.prevX = o),
            (t.prevY = s),
            t.draw(),
            t.emit(jE, [t.get('start'), t.get('end')].sort()),
            t.delegateEmit('valuechanged', {
              originValue: a,
              value: [t.get('start'), t.get('end')],
            });
        }),
        (t.onMouseUp = function () {
          t.currentTarget && (t.currentTarget = void 0);
          var n = t.getContainerDOM();
          n &&
            (n.removeEventListener('mousemove', t.onMouseMove),
            n.removeEventListener('mouseup', t.onMouseUp),
            n.removeEventListener('mouseleave', t.onMouseUp),
            n.removeEventListener('touchmove', t.onMouseMove),
            n.removeEventListener('touchend', t.onMouseUp),
            n.removeEventListener('touchcancel', t.onMouseUp));
        }),
        t
      );
    }
    return (
      (r.prototype.setRange = function (t, n) {
        this.set('minLimit', t), this.set('maxLimit', n);
        var i = this.get('start'),
          a = this.get('end'),
          o = Tt(i, t, n),
          s = Tt(a, t, n);
        !this.get('isInit') && (i !== o || a !== s) && this.setValue([o, s]);
      }),
      (r.prototype.getRange = function () {
        return { min: this.get('minLimit') || 0, max: this.get('maxLimit') || 1 };
      }),
      (r.prototype.setValue = function (t) {
        var n = this.getRange();
        if (N(t) && t.length === 2) {
          var i = [this.get('start'), this.get('end')];
          this.update({ start: Tt(t[0], n.min, n.max), end: Tt(t[1], n.min, n.max) }),
            this.get('updateAutoRender') || this.render(),
            this.delegateEmit('valuechanged', { originValue: i, value: t });
        }
      }),
      (r.prototype.getValue = function () {
        return [this.get('start'), this.get('end')];
      }),
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'slider',
          x: 0,
          y: 0,
          width: 100,
          height: 16,
          backgroundStyle: {},
          foregroundStyle: {},
          handlerStyle: {},
          textStyle: {},
          defaultCfg: { backgroundStyle: YE, foregroundStyle: WE, handlerStyle: XE, textStyle: _E },
        });
      }),
      (r.prototype.update = function (t) {
        var n = t.start,
          i = t.end,
          a = x({}, t);
        $(n) || (a.start = Tt(n, 0, 1)),
          $(i) || (a.end = Tt(i, 0, 1)),
          e.prototype.update.call(this, a),
          (this.minHandler = this.getChildComponentById(this.getElementId('minHandler'))),
          (this.maxHandler = this.getChildComponentById(this.getElementId('maxHandler'))),
          (this.trend = this.getChildComponentById(this.getElementId('trend')));
      }),
      (r.prototype.init = function () {
        this.set('start', Tt(this.get('start'), 0, 1)),
          this.set('end', Tt(this.get('end'), 0, 1)),
          e.prototype.init.call(this);
      }),
      (r.prototype.render = function () {
        e.prototype.render.call(this),
          this.updateUI(
            this.getElementByLocalId('foreground'),
            this.getElementByLocalId('minText'),
            this.getElementByLocalId('maxText'),
          );
      }),
      (r.prototype.renderInner = function (t) {
        var n = this.cfg;
        n.start, n.end;
        var i = n.width,
          a = n.height,
          o = n.trendCfg,
          s = o === void 0 ? {} : o,
          l = n.minText,
          u = n.maxText,
          c = n.backgroundStyle,
          h = c === void 0 ? {} : c,
          f = n.foregroundStyle,
          v = f === void 0 ? {} : f,
          d = n.textStyle,
          p = d === void 0 ? {} : d,
          g = _({}, xm, this.cfg.handlerStyle);
        _t(A(s, 'data')) &&
          (this.trend = this.addComponent(
            t,
            x(
              { component: HE, id: this.getElementId('trend'), x: 0, y: 0, width: i, height: a },
              s,
            ),
          )),
          this.addShape(t, {
            id: this.getElementId('background'),
            type: 'rect',
            attrs: x({ x: 0, y: 0, width: i, height: a }, h),
          }),
          this.addShape(t, {
            id: this.getElementId('minText'),
            type: 'text',
            attrs: x({ y: a / 2, textAlign: 'right', text: l, silent: !1 }, p),
          }),
          this.addShape(t, {
            id: this.getElementId('maxText'),
            type: 'text',
            attrs: x({ y: a / 2, textAlign: 'left', text: u, silent: !1 }, p),
          }),
          this.addShape(t, {
            id: this.getElementId('foreground'),
            name: 'foreground',
            type: 'rect',
            attrs: x({ y: 0, height: a }, v),
          });
        var y = A(g, 'width', qo),
          m = A(g, 'height', 24);
        (this.minHandler = this.addComponent(t, {
          component: vd,
          id: this.getElementId('minHandler'),
          name: 'handler-min',
          x: 0,
          y: (a - m) / 2,
          width: y,
          height: m,
          cursor: 'ew-resize',
          style: g,
        })),
          (this.maxHandler = this.addComponent(t, {
            component: vd,
            id: this.getElementId('maxHandler'),
            name: 'handler-max',
            x: 0,
            y: (a - m) / 2,
            width: y,
            height: m,
            cursor: 'ew-resize',
            style: g,
          }));
      }),
      (r.prototype.applyOffset = function () {
        this.moveElementTo(this.get('group'), { x: this.get('x'), y: this.get('y') });
      }),
      (r.prototype.initEvent = function () {
        this.bindEvents();
      }),
      (r.prototype.updateUI = function (t, n, i) {
        var a = this.cfg,
          o = a.start,
          s = a.end,
          l = a.width,
          u = a.minText,
          c = a.maxText,
          h = a.handlerStyle,
          f = a.height,
          v = o * l,
          d = s * l;
        this.trend &&
          (this.trend.update({ width: l, height: f }),
          this.get('updateAutoRender') || this.trend.render()),
          t.attr('x', v),
          t.attr('width', d - v);
        var p = A(h, 'width', qo);
        n.attr('text', u), i.attr('text', c);
        var g = this._dodgeText([v, d], n, i),
          y = g[0],
          m = g[1];
        this.minHandler &&
          (this.minHandler.update({ x: v - p / 2 }),
          this.get('updateAutoRender') || this.minHandler.render()),
          M(y, function (b, w) {
            return n.attr(w, b);
          }),
          this.maxHandler &&
            (this.maxHandler.update({ x: d - p / 2 }),
            this.get('updateAutoRender') || this.maxHandler.render()),
          M(m, function (b, w) {
            return i.attr(w, b);
          });
      }),
      (r.prototype.bindEvents = function () {
        var t = this.get('group');
        t.on('handler-min:mousedown', this.onMouseDown('minHandler')),
          t.on('handler-min:touchstart', this.onMouseDown('minHandler')),
          t.on('handler-max:mousedown', this.onMouseDown('maxHandler')),
          t.on('handler-max:touchstart', this.onMouseDown('maxHandler'));
        var n = t.findById(this.getElementId('foreground'));
        n.on('mousedown', this.onMouseDown('foreground')),
          n.on('touchstart', this.onMouseDown('foreground'));
      }),
      (r.prototype.adjustOffsetRange = function (t) {
        var n = this.cfg,
          i = n.start,
          a = n.end;
        switch (this.currentTarget) {
          case 'minHandler': {
            var o = 0 - i,
              s = 1 - i;
            return Math.min(s, Math.max(o, t));
          }
          case 'maxHandler': {
            var o = 0 - a,
              s = 1 - a;
            return Math.min(s, Math.max(o, t));
          }
          case 'foreground': {
            var o = 0 - i,
              s = 1 - a;
            return Math.min(s, Math.max(o, t));
          }
        }
      }),
      (r.prototype.updateStartEnd = function (t) {
        var n = this.cfg,
          i = n.start,
          a = n.end;
        switch (this.currentTarget) {
          case 'minHandler':
            i += t;
            break;
          case 'maxHandler':
            a += t;
            break;
          case 'foreground':
            (i += t), (a += t);
            break;
        }
        this.set('start', i), this.set('end', a);
      }),
      (r.prototype._dodgeText = function (t, n, i) {
        var a,
          o,
          s = this.cfg,
          l = s.handlerStyle,
          u = s.width,
          c = 2,
          h = A(l, 'width', qo),
          f = t[0],
          v = t[1],
          d = !1;
        f > v &&
          ((a = [v, f]), (f = a[0]), (v = a[1]), (o = [i, n]), (n = o[0]), (i = o[1]), (d = !0));
        var p = n.getBBox(),
          g = i.getBBox(),
          y =
            p.width > f - c
              ? { x: f + h / 2 + c, textAlign: 'left' }
              : { x: f - h / 2 - c, textAlign: 'right' },
          m =
            g.width > u - v - c
              ? { x: v - h / 2 - c, textAlign: 'right' }
              : { x: v + h / 2 + c, textAlign: 'left' };
        return d ? [m, y] : [y, m];
      }),
      (r.prototype.draw = function () {
        var t = this.get('container'),
          n = t && t.get('canvas');
        n && n.draw();
      }),
      (r.prototype.getContainerDOM = function () {
        var t = this.get('container'),
          n = t && t.get('canvas');
        return n && n.get('container');
      }),
      r
    );
  })(re),
  qE = { trackColor: 'rgba(0,0,0,0)', thumbColor: 'rgba(0,0,0,0.15)', size: 8, lineCap: 'round' },
  lu = { default: qE, hover: { thumbColor: 'rgba(0,0,0,0.2)' } },
  ZE = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (
        (t.clearEvents = $r),
        (t.onStartEvent = function (n) {
          return function (i) {
            (t.isMobile = n), i.originalEvent.preventDefault();
            var a = n ? A(i.originalEvent, 'touches.0.clientX') : i.clientX,
              o = n ? A(i.originalEvent, 'touches.0.clientY') : i.clientY;
            (t.startPos = t.cfg.isHorizontal ? a : o), t.bindLaterEvent();
          };
        }),
        (t.bindLaterEvent = function () {
          var n = t.getContainerDOM(),
            i = [];
          t.isMobile
            ? (i = [
                Wn(n, 'touchmove', t.onMouseMove),
                Wn(n, 'touchend', t.onMouseUp),
                Wn(n, 'touchcancel', t.onMouseUp),
              ])
            : (i = [
                Wn(n, 'mousemove', t.onMouseMove),
                Wn(n, 'mouseup', t.onMouseUp),
                Wn(n, 'mouseleave', t.onMouseUp),
              ]),
            (t.clearEvents = function () {
              i.forEach(function (a) {
                a.remove();
              });
            });
        }),
        (t.onMouseMove = function (n) {
          var i = t.cfg,
            a = i.isHorizontal,
            o = i.thumbOffset;
          n.preventDefault();
          var s = t.isMobile ? A(n, 'touches.0.clientX') : n.clientX,
            l = t.isMobile ? A(n, 'touches.0.clientY') : n.clientY,
            u = a ? s : l,
            c = u - t.startPos;
          (t.startPos = u), t.updateThumbOffset(o + c);
        }),
        (t.onMouseUp = function (n) {
          n.preventDefault(), t.clearEvents();
        }),
        (t.onTrackClick = function (n) {
          var i = t.cfg,
            a = i.isHorizontal,
            o = i.x,
            s = i.y,
            l = i.thumbLen,
            u = t.getContainerDOM(),
            c = u.getBoundingClientRect(),
            h = n.clientX,
            f = n.clientY,
            v = a ? h - c.left - o - l / 2 : f - c.top - s - l / 2,
            d = t.validateRange(v);
          t.updateThumbOffset(d);
        }),
        (t.onThumbMouseOver = function () {
          var n = t.cfg.theme.hover.thumbColor;
          t.getElementByLocalId('thumb').attr('stroke', n), t.draw();
        }),
        (t.onThumbMouseOut = function () {
          var n = t.cfg.theme.default.thumbColor;
          t.getElementByLocalId('thumb').attr('stroke', n), t.draw();
        }),
        t
      );
    }
    return (
      (r.prototype.setRange = function (t, n) {
        this.set('minLimit', t), this.set('maxLimit', n);
        var i = this.getValue(),
          a = Tt(i, t, n);
        i !== a && !this.get('isInit') && this.setValue(a);
      }),
      (r.prototype.getRange = function () {
        var t = this.get('minLimit') || 0,
          n = this.get('maxLimit') || 1;
        return { min: t, max: n };
      }),
      (r.prototype.setValue = function (t) {
        var n = this.getRange(),
          i = this.getValue();
        this.update({
          thumbOffset: (this.get('trackLen') - this.get('thumbLen')) * Tt(t, n.min, n.max),
        }),
          this.delegateEmit('valuechange', { originalValue: i, value: this.getValue() });
      }),
      (r.prototype.getValue = function () {
        return Tt(this.get('thumbOffset') / (this.get('trackLen') - this.get('thumbLen')), 0, 1);
      }),
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return x(x({}, t), {
          name: 'scrollbar',
          isHorizontal: !0,
          minThumbLen: 20,
          thumbOffset: 0,
          theme: lu,
        });
      }),
      (r.prototype.renderInner = function (t) {
        this.renderTrackShape(t), this.renderThumbShape(t);
      }),
      (r.prototype.applyOffset = function () {
        this.moveElementTo(this.get('group'), { x: this.get('x'), y: this.get('y') });
      }),
      (r.prototype.initEvent = function () {
        this.bindEvents();
      }),
      (r.prototype.renderTrackShape = function (t) {
        var n = this.cfg,
          i = n.trackLen,
          a = n.theme,
          o = a === void 0 ? { default: {} } : a,
          s = _({}, lu, o).default,
          l = s.lineCap,
          u = s.trackColor,
          c = s.size,
          h = A(this.cfg, 'size', c),
          f = this.get('isHorizontal')
            ? {
                x1: 0 + h / 2,
                y1: h / 2,
                x2: i - h / 2,
                y2: h / 2,
                lineWidth: h,
                stroke: u,
                lineCap: l,
              }
            : {
                x1: h / 2,
                y1: 0 + h / 2,
                x2: h / 2,
                y2: i - h / 2,
                lineWidth: h,
                stroke: u,
                lineCap: l,
              };
        return this.addShape(t, {
          id: this.getElementId('track'),
          name: 'track',
          type: 'line',
          attrs: f,
        });
      }),
      (r.prototype.renderThumbShape = function (t) {
        var n = this.cfg,
          i = n.thumbOffset,
          a = n.thumbLen,
          o = n.theme,
          s = _({}, lu, o).default,
          l = s.size,
          u = s.lineCap,
          c = s.thumbColor,
          h = A(this.cfg, 'size', l),
          f = this.get('isHorizontal')
            ? {
                x1: i + h / 2,
                y1: h / 2,
                x2: i + a - h / 2,
                y2: h / 2,
                lineWidth: h,
                stroke: c,
                lineCap: u,
                cursor: 'default',
              }
            : {
                x1: h / 2,
                y1: i + h / 2,
                x2: h / 2,
                y2: i + a - h / 2,
                lineWidth: h,
                stroke: c,
                lineCap: u,
                cursor: 'default',
              };
        return this.addShape(t, {
          id: this.getElementId('thumb'),
          name: 'thumb',
          type: 'line',
          attrs: f,
        });
      }),
      (r.prototype.bindEvents = function () {
        var t = this.get('group');
        t.on('mousedown', this.onStartEvent(!1)),
          t.on('mouseup', this.onMouseUp),
          t.on('touchstart', this.onStartEvent(!0)),
          t.on('touchend', this.onMouseUp);
        var n = t.findById(this.getElementId('track'));
        n.on('click', this.onTrackClick);
        var i = t.findById(this.getElementId('thumb'));
        i.on('mouseover', this.onThumbMouseOver), i.on('mouseout', this.onThumbMouseOut);
      }),
      (r.prototype.getContainerDOM = function () {
        var t = this.get('container'),
          n = t && t.get('canvas');
        return n && n.get('container');
      }),
      (r.prototype.validateRange = function (t) {
        var n = this.cfg,
          i = n.thumbLen,
          a = n.trackLen,
          o = t;
        return t + i > a ? (o = a - i) : t + i < i && (o = 0), o;
      }),
      (r.prototype.draw = function () {
        var t = this.get('container'),
          n = t && t.get('canvas');
        n && n.draw();
      }),
      (r.prototype.updateThumbOffset = function (t) {
        var n = this.cfg,
          i = n.thumbOffset,
          a = n.isHorizontal,
          o = n.thumbLen,
          s = n.size,
          l = this.validateRange(t);
        if (l !== i) {
          var u = this.getElementByLocalId('thumb');
          a
            ? u.attr({ x1: l + s / 2, x2: l + o - s / 2 })
            : u.attr({ y1: l + s / 2, y2: l + o - s / 2 }),
            this.emitOffsetChange(l);
        }
      }),
      (r.prototype.emitOffsetChange = function (t) {
        var n = this.cfg,
          i = n.thumbOffset,
          a = n.trackLen,
          o = n.thumbLen;
        (this.cfg.thumbOffset = t),
          this.emit('scrollchange', { thumbOffset: t, ratio: Tt(t / (a - o), 0, 1) }),
          this.delegateEmit('valuechange', { originalValue: i, value: t });
      }),
      r
    );
  })(re),
  KE = gE,
  QE = yE,
  JE = CE,
  tT = SE,
  dd = ME,
  eT = FE,
  fl = OE;
function rT(e) {
  if (ye(e)) return null;
  var r = e[0].x,
    t = e[0].x,
    n = e[0].y,
    i = e[0].y;
  return (
    M(e, function (a) {
      (r = r > a.x ? a.x : r),
        (t = t < a.x ? a.x : t),
        (n = n > a.y ? a.y : n),
        (i = i < a.y ? a.y : i);
    }),
    { minX: r, maxX: t, minY: n, maxY: i, centerX: (r + t) / 2, centerY: (n + i) / 2 }
  );
}
function pd(e) {
  return Array.from(new Set(e)).length === 1;
}
function gd(e) {
  return ($e(e) + Te(e)) / 2;
}
function zt(e, r, t, n) {
  return { x: e + t * Math.cos(n), y: r + t * Math.sin(n) };
}
function Yr(e, r, t, n, i, a) {
  a === void 0 && (a = 0);
  var o = zt(e, r, t, n),
    s = zt(e, r, t, i),
    l = zt(e, r, a, n),
    u = zt(e, r, a, i);
  if (i - n === Math.PI * 2) {
    var c = zt(e, r, t, n + Math.PI),
      h = zt(e, r, a, n + Math.PI),
      f = [
        ['M', o.x, o.y],
        ['A', t, t, 0, 1, 1, c.x, c.y],
        ['A', t, t, 0, 1, 1, s.x, s.y],
        ['M', l.x, l.y],
      ];
    return (
      a && (f.push(['A', a, a, 0, 1, 0, h.x, h.y]), f.push(['A', a, a, 0, 1, 0, u.x, u.y])),
      f.push(['M', o.x, o.y]),
      f.push(['Z']),
      f
    );
  }
  var v = i - n <= Math.PI ? 0 : 1,
    d = [
      ['M', o.x, o.y],
      ['A', t, t, 0, v, 1, s.x, s.y],
      ['L', u.x, u.y],
    ];
  return a && d.push(['A', a, a, 0, v, 0, l.x, l.y]), d.push(['L', o.x, o.y]), d.push(['Z']), d;
}
function wm(e, r, t, n, i) {
  var a = zt(e, r, t, n),
    o = zt(e, r, t, i);
  if (Zt(i - n, Math.PI * 2)) {
    var s = zt(e, r, t, n + Math.PI);
    return [
      ['M', a.x, a.y],
      ['A', t, t, 0, 1, 1, s.x, s.y],
      ['A', t, t, 0, 1, 1, a.x, a.y],
      ['A', t, t, 0, 1, 0, s.x, s.y],
      ['A', t, t, 0, 1, 0, a.x, a.y],
      ['Z'],
    ];
  }
  var l = i - n <= Math.PI ? 0 : 1;
  return [
    ['M', a.x, a.y],
    ['A', t, t, 0, l, 1, o.x, o.y],
  ];
}
function Ta(e, r) {
  var t = e.points,
    n = rT(t),
    i,
    a,
    o = r.startAngle,
    s = r.endAngle,
    l = s - o;
  return (
    r.isTransposed ? ((i = n.maxY * l), (a = n.minY * l)) : ((i = n.maxX * l), (a = n.minX * l)),
    (i += o),
    (a += o),
    { startAngle: a, endAngle: i }
  );
}
function nT(e, r) {
  if (at(e) && at(r)) return [e, r];
  if (((e = e), (r = r), pd(e) || pd(r))) return [gd(e), gd(r)];
  for (var t = -1, n = 0, i = 0, a, o = e.length - 1, s, l = 0; ++t < e.length; )
    (a = o),
      (o = t),
      (l += s = e[a] * r[o] - e[o] * r[a]),
      (n += (e[a] + e[o]) * s),
      (i += (r[a] + r[o]) * s);
  return (l *= 3), [n / l, i / l];
}
function bm(e, r) {
  var t = e.attr(),
    n = r.attr();
  return (
    M(t, function (i, a) {
      n[a] === void 0 && (n[a] = void 0);
    }),
    n
  );
}
function ti(e, r, t) {
  var n = Math.min(r, t),
    i = Math.max(r, t);
  return e >= n && e <= i;
}
function iT(e, r, t) {
  if (et(e)) return e.padEnd(r, t);
  if (N(e)) {
    var n = e.length;
    if (n < r) for (var i = r - n, a = 0; a < i; a++) e.push(t);
  }
  return e;
}
function ve(e, r) {
  return (
    typeof e == 'object' &&
      r.forEach(function (t) {
        delete e[t];
      }),
    e
  );
}
function Rr(e, r, t) {
  var n, i;
  r === void 0 && (r = []), t === void 0 && (t = new Map());
  try {
    for (var a = pt(e), o = a.next(); !o.done; o = a.next()) {
      var s = o.value;
      t.has(s) || (r.push(s), t.set(s, !0));
    }
  } catch (l) {
    n = { error: l };
  } finally {
    try {
      o && !o.done && (i = a.return) && i.call(a);
    } finally {
      if (n) throw n.error;
    }
  }
  return r;
}
var le = (function () {
  function e(r, t, n, i) {
    r === void 0 && (r = 0),
      t === void 0 && (t = 0),
      n === void 0 && (n = 0),
      i === void 0 && (i = 0),
      (this.x = r),
      (this.y = t),
      (this.height = i),
      (this.width = n);
  }
  return (
    (e.fromRange = function (r, t, n, i) {
      return new e(r, t, n - r, i - t);
    }),
    (e.fromObject = function (r) {
      return new e(r.minX, r.minY, r.width, r.height);
    }),
    Object.defineProperty(e.prototype, 'minX', {
      get: function () {
        return this.x;
      },
      enumerable: !1,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, 'maxX', {
      get: function () {
        return this.x + this.width;
      },
      enumerable: !1,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, 'minY', {
      get: function () {
        return this.y;
      },
      enumerable: !1,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, 'maxY', {
      get: function () {
        return this.y + this.height;
      },
      enumerable: !1,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, 'tl', {
      get: function () {
        return { x: this.x, y: this.y };
      },
      enumerable: !1,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, 'tr', {
      get: function () {
        return { x: this.maxX, y: this.y };
      },
      enumerable: !1,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, 'bl', {
      get: function () {
        return { x: this.x, y: this.maxY };
      },
      enumerable: !1,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, 'br', {
      get: function () {
        return { x: this.maxX, y: this.maxY };
      },
      enumerable: !1,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, 'top', {
      get: function () {
        return { x: this.x + this.width / 2, y: this.minY };
      },
      enumerable: !1,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, 'right', {
      get: function () {
        return { x: this.maxX, y: this.y + this.height / 2 };
      },
      enumerable: !1,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, 'bottom', {
      get: function () {
        return { x: this.x + this.width / 2, y: this.maxY };
      },
      enumerable: !1,
      configurable: !0,
    }),
    Object.defineProperty(e.prototype, 'left', {
      get: function () {
        return { x: this.minX, y: this.y + this.height / 2 };
      },
      enumerable: !1,
      configurable: !0,
    }),
    (e.prototype.isEqual = function (r) {
      return this.x === r.x && this.y === r.y && this.width === r.width && this.height === r.height;
    }),
    (e.prototype.contains = function (r) {
      return (
        r.minX >= this.minX && r.maxX <= this.maxX && r.minY >= this.minY && r.maxY <= this.maxY
      );
    }),
    (e.prototype.clone = function () {
      return new e(this.x, this.y, this.width, this.height);
    }),
    (e.prototype.add = function () {
      for (var r = [], t = 0; t < arguments.length; t++) r[t] = arguments[t];
      var n = this.clone();
      return (
        M(r, function (i) {
          (n.x = Math.min(i.x, n.x)),
            (n.y = Math.min(i.y, n.y)),
            (n.width = Math.max(i.maxX, n.maxX) - n.x),
            (n.height = Math.max(i.maxY, n.maxY) - n.y);
        }),
        n
      );
    }),
    (e.prototype.merge = function () {
      for (var r = [], t = 0; t < arguments.length; t++) r[t] = arguments[t];
      var n = this.clone();
      return (
        M(r, function (i) {
          (n.x = Math.max(i.x, n.x)),
            (n.y = Math.max(i.y, n.y)),
            (n.width = Math.min(i.maxX, n.maxX) - n.x),
            (n.height = Math.min(i.maxY, n.maxY) - n.y);
        }),
        n
      );
    }),
    (e.prototype.cut = function (r, t) {
      var n = r.width,
        i = r.height;
      switch (t) {
        case H.TOP:
        case H.TOP_LEFT:
        case H.TOP_RIGHT:
          return e.fromRange(this.minX, this.minY + i, this.maxX, this.maxY);
        case H.RIGHT:
        case H.RIGHT_TOP:
        case H.RIGHT_BOTTOM:
          return e.fromRange(this.minX, this.minY, this.maxX - n, this.maxY);
        case H.BOTTOM:
        case H.BOTTOM_LEFT:
        case H.BOTTOM_RIGHT:
          return e.fromRange(this.minX, this.minY, this.maxX, this.maxY - i);
        case H.LEFT:
        case H.LEFT_TOP:
        case H.LEFT_BOTTOM:
          return e.fromRange(this.minX + n, this.minY, this.maxX, this.maxY);
        default:
          return this;
      }
    }),
    (e.prototype.shrink = function (r) {
      var t = q(r, 4),
        n = t[0],
        i = t[1],
        a = t[2],
        o = t[3];
      return new e(this.x + o, this.y + n, this.width - o - i, this.height - n - a);
    }),
    (e.prototype.expand = function (r) {
      var t = q(r, 4),
        n = t[0],
        i = t[1],
        a = t[2],
        o = t[3];
      return new e(this.x - o, this.y - n, this.width + o + i, this.height + n + a);
    }),
    (e.prototype.exceed = function (r) {
      return [
        Math.max(-this.minY + r.minY, 0),
        Math.max(this.maxX - r.maxX, 0),
        Math.max(this.maxY - r.maxY, 0),
        Math.max(-this.minX + r.minX, 0),
      ];
    }),
    (e.prototype.collide = function (r) {
      return this.minX < r.maxX && this.maxX > r.minX && this.minY < r.maxY && this.maxY > r.minY;
    }),
    (e.prototype.size = function () {
      return this.width * this.height;
    }),
    (e.prototype.isPointIn = function (r) {
      return r.x >= this.minX && r.x <= this.maxX && r.y >= this.minY && r.y <= this.maxY;
    }),
    e
  );
})();
function aT(e) {
  return [
    [e.minX, e.minY],
    [e.maxX, e.minY],
    [e.maxX, e.maxY],
    [e.minX, e.maxY],
  ];
}
function Za(e) {
  if (e.isPolar && !e.isTransposed) return (e.endAngle - e.startAngle) * e.getRadius();
  var r = e.convert({ x: 0, y: 0 }),
    t = e.convert({ x: 1, y: 0 });
  return Math.sqrt(Math.pow(t.x - r.x, 2) + Math.pow(t.y - r.y, 2));
}
function oT(e) {
  if (e.isPolar) {
    var r = e.startAngle,
      t = e.endAngle;
    return t - r === Math.PI * 2;
  }
  return !1;
}
function vl(e, r) {
  var t = e.getCenter();
  return Math.sqrt(Math.pow(r.x - t.x, 2) + Math.pow(r.y - t.y, 2));
}
function sT(e, r) {
  var t = !1;
  if (e)
    if (e.type === 'theta') {
      var n = e.start,
        i = e.end;
      t = ti(r.x, n.x, i.x) && ti(r.y, n.y, i.y);
    } else {
      var a = e.invert(r);
      t = ti(a.x, 0, 1) && ti(a.y, 0, 1);
    }
  return t;
}
function vi(e, r) {
  var t = e.getCenter();
  return Math.atan2(r.y - t.y, r.x - t.x);
}
function gh(e, r) {
  r === void 0 && (r = 0);
  var t = e.start,
    n = e.end,
    i = e.getWidth(),
    a = e.getHeight();
  if (e.isPolar) {
    var o = e.startAngle,
      s = e.endAngle,
      l = e.getCenter(),
      u = e.getRadius();
    return {
      type: 'path',
      startState: { path: Yr(l.x, l.y, u + r, o, o) },
      endState: function (h) {
        var f = (s - o) * h + o,
          v = Yr(l.x, l.y, u + r, o, f);
        return { path: v };
      },
      attrs: { path: Yr(l.x, l.y, u + r, o, s) },
    };
  }
  var c;
  return (
    e.isTransposed ? (c = { height: a + r * 2 }) : (c = { width: i + r * 2 }),
    {
      type: 'rect',
      startState: {
        x: t.x - r,
        y: n.y - r,
        width: e.isTransposed ? i + r * 2 : 0,
        height: e.isTransposed ? 0 : a + r * 2,
      },
      endState: c,
      attrs: { x: t.x - r, y: n.y - r, width: i + r * 2, height: a + r * 2 },
    }
  );
}
function lT(e, r) {
  r === void 0 && (r = 0);
  var t = e.start,
    n = e.end,
    i = e.getWidth(),
    a = e.getHeight(),
    o = Math.min(t.x, n.x),
    s = Math.min(t.y, n.y);
  return le.fromRange(o - r, s - r, o + i + r, s + a + r);
}
var uT =
  /^(?:(?!0000)[0-9]{4}([-/.]+)(?:(?:0?[1-9]|1[0-2])\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\1(?:29|30)|(?:0?[13578]|1[02])\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-/.]+)0?2\2(?:29))(\s+([01]|([01][0-9]|2[0-3])):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9]))?$/;
function cT(e) {
  var r = 'linear';
  return uT.test(e) ? (r = 'timeCat') : et(e) && (r = 'cat'), r;
}
function Sm(e, r, t, n) {
  return (
    r === void 0 && (r = {}),
    r.type
      ? r.type
      : (e.type !== 'identity' && Kn.includes(t) && ['interval'].includes(n)) || e.isCategory
      ? 'cat'
      : e.type
  );
}
function hT(e, r, t) {
  var n = r || [];
  if (at(e) || ($(YS(n, e)) && ye(t))) {
    var i = nc('identity');
    return new i({ field: e.toString(), values: [e] });
  }
  var a = je(n, e),
    o = A(t, 'type', cT(a[0])),
    s = nc(o);
  return new s(x({ field: e, values: a }, t));
}
function fT(e, r) {
  if (e.type !== 'identity' && r.type !== 'identity') {
    var t = {};
    for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]);
    e.change(t);
  }
}
function ka(e) {
  return e.alias || e.field;
}
function Cm(e, r, t) {
  var n = e.values,
    i = n.length,
    a;
  if (i === 1) a = [0.5, 1];
  else {
    var o = 1,
      s = 0;
    oT(r)
      ? r.isTransposed
        ? ((o = A(t, 'widthRatio.multiplePie', 1 / 1.3)),
          (s = (1 / i) * o),
          (a = [s / 2, 1 - s / 2]))
        : (a = [0, 1 - 1 / i])
      : ((s = 1 / i / 2), (a = [s, 1 - s]));
  }
  return a;
}
function vT(e) {
  var r = e.values.filter(function (t) {
    return !$(t) && !isNaN(t);
  });
  return Math.max.apply(Math, J(J([], q(r), !1), [$(e.max) ? -1 / 0 : e.max], !1));
}
function dT(e) {
  var r, t;
  switch (e) {
    case H.TOP:
      (r = { x: 0, y: 1 }), (t = { x: 1, y: 1 });
      break;
    case H.RIGHT:
      (r = { x: 1, y: 0 }), (t = { x: 1, y: 1 });
      break;
    case H.BOTTOM:
      (r = { x: 0, y: 0 }), (t = { x: 1, y: 0 });
      break;
    case H.LEFT:
      (r = { x: 0, y: 0 }), (t = { x: 0, y: 1 });
      break;
    default:
      r = t = { x: 0, y: 0 };
  }
  return { start: r, end: t };
}
function pT(e) {
  var r, t;
  return (
    e.isTransposed
      ? ((r = { x: 0, y: 0 }), (t = { x: 1, y: 0 }))
      : ((r = { x: 0, y: 0 }), (t = { x: 0, y: 1 })),
    { start: r, end: t }
  );
}
function Co(e, r) {
  var t = { start: { x: 0, y: 0 }, end: { x: 0, y: 0 } };
  e.isRect ? (t = dT(r)) : e.isPolar && (t = pT(e));
  var n = t.start,
    i = t.end;
  return { start: e.convert(n), end: e.convert(i) };
}
function Mm(e) {
  var r = e.start,
    t = e.end;
  return r.x === t.x;
}
function yd(e, r) {
  var t = e.start,
    n = e.end,
    i = Mm(e);
  return i ? ((t.y - n.y) * (r.x - t.x) > 0 ? 1 : -1) : (n.x - t.x) * (t.y - r.y) > 0 ? -1 : 1;
}
function Mo(e, r) {
  var t = A(e, ['components', 'axis'], {});
  return _({}, A(t, ['common'], {}), _({}, A(t, [r], {})));
}
function md(e, r, t) {
  var n = A(e, ['components', 'axis'], {});
  return _({}, A(n, ['common', 'title'], {}), _({}, A(n, [r, 'title'], {})), t);
}
function uu(e) {
  var r = e.x,
    t = e.y,
    n = e.circleCenter,
    i = t.start > t.end,
    a = e.isTransposed ? e.convert({ x: i ? 0 : 1, y: 0 }) : e.convert({ x: 0, y: i ? 0 : 1 }),
    o = [a.x - n.x, a.y - n.y],
    s = [1, 0],
    l = a.y > n.y ? Wu(o, s) : Wu(o, s) * -1,
    u = l + (r.end - r.start),
    c = Math.sqrt(Math.pow(a.x - n.x, 2) + Math.pow(a.y - n.y, 2));
  return { center: n, radius: c, startAngle: l, endAngle: u };
}
function xs(e, r) {
  return ui(e) ? (e === !1 ? !1 : {}) : A(e, [r]);
}
function xd(e, r) {
  return A(e, 'position', r);
}
function wd(e, r) {
  return A(r, ['title', 'text'], ka(e));
}
var Ei = (function () {
    function e(r, t) {
      (this.destroyed = !1),
        (this.facets = []),
        (this.view = r),
        (this.cfg = _({}, this.getDefaultCfg(), t));
    }
    return (
      (e.prototype.init = function () {
        this.container || (this.container = this.createContainer());
        var r = this.view.getData();
        this.facets = this.generateFacets(r);
      }),
      (e.prototype.render = function () {
        this.renderViews();
      }),
      (e.prototype.update = function () {}),
      (e.prototype.clear = function () {
        this.clearFacetViews();
      }),
      (e.prototype.destroy = function () {
        this.clear(),
          this.container && (this.container.remove(!0), (this.container = void 0)),
          (this.destroyed = !0),
          (this.view = void 0),
          (this.facets = []);
      }),
      (e.prototype.facetToView = function (r) {
        var t = r.region,
          n = r.data,
          i = r.padding,
          a = i === void 0 ? this.cfg.padding : i,
          o = this.view.createView({ region: t, padding: a });
        o.data(n || []), (r.view = o), this.beforeEachView(o, r);
        var s = this.cfg.eachView;
        return s && s(o, r), this.afterEachView(o, r), o;
      }),
      (e.prototype.createContainer = function () {
        var r = this.view.getLayer($t.FORE);
        return r.addGroup();
      }),
      (e.prototype.renderViews = function () {
        this.createFacetViews();
      }),
      (e.prototype.createFacetViews = function () {
        var r = this;
        return this.facets.map(function (t) {
          return r.facetToView(t);
        });
      }),
      (e.prototype.clearFacetViews = function () {
        var r = this;
        M(this.facets, function (t) {
          t.view && (r.view.removeView(t.view), (t.view = void 0));
        });
      }),
      (e.prototype.parseSpacing = function () {
        var r = this.view.viewBBox,
          t = r.width,
          n = r.height,
          i = this.cfg.spacing;
        return i.map(function (a, o) {
          return at(a) ? a / (o === 0 ? t : n) : parseFloat(a) / 100;
        });
      }),
      (e.prototype.getFieldValues = function (r, t) {
        var n = [],
          i = {};
        return (
          M(r, function (a) {
            var o = a[t];
            !$(o) && !i[o] && (n.push(o), (i[o] = !0));
          }),
          n
        );
      }),
      (e.prototype.getRegion = function (r, t, n, i) {
        var a = q(this.parseSpacing(), 2),
          o = a[0],
          s = a[1],
          l = (1 + o) / (t === 0 ? 1 : t) - o,
          u = (1 + s) / (r === 0 ? 1 : r) - s,
          c = { x: (l + o) * n, y: (u + s) * i },
          h = { x: c.x + l, y: c.y + u };
        return { start: c, end: h };
      }),
      (e.prototype.getDefaultCfg = function () {
        return { eachView: void 0, showTitle: !0, spacing: [0, 0], padding: 10, fields: [] };
      }),
      (e.prototype.getDefaultTitleCfg = function () {
        var r = this.view.getTheme().fontFamily;
        return { style: { fontSize: 14, fill: '#666', fontFamily: r } };
      }),
      (e.prototype.processAxis = function (r, t) {
        var n = r.getOptions(),
          i = n.coordinate,
          a = r.geometries,
          o = A(i, 'type', 'rect');
        if (o === 'rect' && a.length) {
          $(n.axes) && (n.axes = {});
          var s = n.axes,
            l = q(a[0].getXYFields(), 2),
            u = l[0],
            c = l[1],
            h = xs(s, u),
            f = xs(s, c);
          h !== !1 && (n.axes[u] = this.getXAxisOption(u, s, h, t)),
            f !== !1 && (n.axes[c] = this.getYAxisOption(c, s, f, t));
        }
      }),
      (e.prototype.getFacetDataFilter = function (r) {
        return function (t) {
          return Gc(r, function (n) {
            var i = n.field,
              a = n.value;
            return !$(a) && i ? t[i] === a : !0;
          });
        };
      }),
      e
    );
  })(),
  Am = {},
  gT = function (e) {
    return Am[Mi(e)];
  },
  Ti = function (e, r) {
    Am[Mi(e)] = r;
  },
  Ft = (function () {
    function e(r, t) {
      (this.context = r), (this.cfg = t), r.addAction(this);
    }
    return (
      (e.prototype.applyCfg = function (r) {
        bt(this, r);
      }),
      (e.prototype.init = function () {
        this.applyCfg(this.cfg);
      }),
      (e.prototype.destroy = function () {
        this.context.removeAction(this), (this.context = null);
      }),
      e
    );
  })(),
  yT = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.execute = function () {
        this.callback && this.callback(this.context);
      }),
      (r.prototype.destroy = function () {
        e.prototype.destroy.call(this), (this.callback = null);
      }),
      r
    );
  })(Ft),
  yh = {};
function mT(e, r) {
  var t = yh[e],
    n = null;
  if (t) {
    var i = t.ActionClass,
      a = t.cfg;
    (n = new i(r, a)), (n.name = e), n.init();
  }
  return n;
}
function dl(e) {
  var r = yh[e];
  return A(r, 'ActionClass');
}
function Q(e, r, t) {
  yh[e] = { ActionClass: r, cfg: t };
}
function xT(e, r) {
  var t = new yT(r);
  return (t.callback = e), (t.name = 'callback'), t;
}
function wT(e, r) {
  var t = [];
  if (e.length) {
    t.push(['M', e[0].x, e[0].y]);
    for (var n = 1, i = e.length; n < i; n += 1) {
      var a = e[n];
      t.push(['L', a.x, a.y]);
    }
    r && t.push(['Z']);
  }
  return t;
}
function uc(e, r) {
  for (var t = [e[0]], n = 1, i = e.length; n < i; n = n + 2) {
    var a = r.convert({ x: e[n], y: e[n + 1] });
    t.push(a.x, a.y);
  }
  return t;
}
function Fm(e, r) {
  var t = r.isTransposed,
    n = e[1],
    i = e[6],
    a = e[7],
    o = r.convert({ x: i, y: a }),
    s = t ? 0 : 1;
  return ['A', n, n, 0, 0, s, o.x, o.y];
}
function bT(e, r, t) {
  var n = t.isTransposed,
    i = t.startAngle,
    a = t.endAngle,
    o = e[0].toLowerCase() === 'a' ? { x: e[6], y: e[7] } : { x: e[1], y: e[2] },
    s = { x: r[1], y: r[2] },
    l = [],
    u = n ? 'y' : 'x',
    c = Math.abs(s[u] - o[u]) * (a - i),
    h = s[u] >= o[u] ? 1 : 0,
    f = c > Math.PI ? 1 : 0,
    v = t.convert(s),
    d = vl(t, v);
  if (d >= 0.5)
    if (c === Math.PI * 2) {
      var p = { x: (s.x + o.x) / 2, y: (s.y + o.y) / 2 },
        g = t.convert(p);
      l.push(['A', d, d, 0, f, h, g.x, g.y]), l.push(['A', d, d, 0, f, h, v.x, v.y]);
    } else l.push(['A', d, d, 0, f, h, v.x, v.y]);
  return l;
}
function ST(e) {
  M(e, function (r, t) {
    var n = r;
    if (n[0].toLowerCase() === 'a') {
      var i = e[t - 1],
        a = e[t + 1];
      a && a[0].toLowerCase() === 'a'
        ? i && i[0].toLowerCase() === 'l' && (i[0] = 'M')
        : i && i[0].toLowerCase() === 'a' && a && a[0].toLowerCase() === 'l' && (a[0] = 'M');
    }
  });
}
var CT = function (e, r, t, n) {
  var i,
    a = [],
    o = !!n,
    s,
    l,
    u,
    c,
    h,
    f,
    v;
  if (o) {
    (i = q(n, 2)), (u = i[0]), (c = i[1]);
    for (var d = 0, p = e.length; d < p; d++) {
      var g = e[d];
      (u = Ut([0, 0], u, g)), (c = qt([0, 0], c, g));
    }
  }
  for (var d = 0, y = e.length; d < y; d++) {
    var g = e[d];
    if (d === 0 && !t) v = g;
    else if (d === y - 1 && !t) (f = g), a.push(v), a.push(f);
    else {
      (s = e[t ? (d ? d - 1 : y - 1) : d - 1]), (l = e[t ? (d + 1) % y : d + 1]);
      var m = [0, 0];
      (m = Sn(m, l, s)), (m = se(m, m, r));
      var b = ci(g, s),
        w = ci(g, l),
        S = b + w;
      S !== 0 && ((b /= S), (w /= S));
      var C = se([0, 0], m, -b),
        F = se([0, 0], m, w);
      (f = er([0, 0], g, C)),
        (h = er([0, 0], g, F)),
        (h = Ut([0, 0], h, qt([0, 0], l, g))),
        (h = qt([0, 0], h, Ut([0, 0], l, g))),
        (C = Sn([0, 0], h, g)),
        (C = se([0, 0], C, -b / w)),
        (f = er([0, 0], g, C)),
        (f = Ut([0, 0], f, qt([0, 0], s, g))),
        (f = qt([0, 0], f, Ut([0, 0], s, g))),
        (F = Sn([0, 0], g, f)),
        (F = se([0, 0], F, w / b)),
        (h = er([0, 0], g, F)),
        o &&
          ((f = qt([0, 0], f, u)),
          (f = Ut([0, 0], f, c)),
          (h = qt([0, 0], h, u)),
          (h = Ut([0, 0], h, c))),
        a.push(v),
        a.push(f),
        (v = h);
    }
  }
  return t && a.push(a.shift()), a;
};
function Em(e, r, t) {
  for (var n = !!r, i = [], a = 0, o = e.length; a < o; a += 2) i.push([e[a], e[a + 1]]);
  for (var s = CT(i, 0.4, n, t), l = i.length, u = [], c, h, f, a = 0; a < l - 1; a++)
    (c = s[a * 2]),
      (h = s[a * 2 + 1]),
      (f = i[a + 1]),
      u.push(['C', c[0], c[1], h[0], h[1], f[0], f[1]]);
  return (
    n &&
      ((c = s[l]), (h = s[l + 1]), (f = i[0]), u.push(['C', c[0], c[1], h[0], h[1], f[0], f[1]])),
    u
  );
}
function Ka(e, r) {
  return wT(e, r);
}
function ws(e, r, t) {
  var n = [],
    i = e[0],
    a = null;
  if (e.length <= 2) return Ka(e, r);
  for (var o = 0, s = e.length; o < s; o++) {
    var l = e[o];
    (!a || !(a.x === l.x && a.y === l.y)) && (n.push(l.x), n.push(l.y), (a = l));
  }
  var u = t || [
      [0, 0],
      [1, 1],
    ],
    c = Em(n, r, u);
  return c.unshift(['M', i.x, i.y]), c;
}
function MT(e, r) {
  var t = [];
  return (
    M(r, function (n) {
      var i = n[0];
      switch (i.toLowerCase()) {
        case 'm':
        case 'l':
        case 'c':
          t.push(uc(n, e));
          break;
        case 'a':
          t.push(Fm(n, e));
          break;
        case 'z':
        default:
          t.push(n);
          break;
      }
    }),
    t
  );
}
function AT(e, r) {
  var t = [],
    n,
    i,
    a,
    o;
  return (
    M(r, function (s, l) {
      var u = s[0];
      switch (u.toLowerCase()) {
        case 'm':
        case 'c':
        case 'q':
          t.push(uc(s, e));
          break;
        case 'l':
          (n = r[l - 1]),
            (i = s),
            (a = e.isTransposed),
            (o = a ? n[n.length - 2] === i[1] : n[n.length - 1] === i[2]),
            o ? (t = t.concat(bT(n, i, e))) : t.push(uc(s, e));
          break;
        case 'a':
          t.push(Fm(s, e));
          break;
        case 'z':
        default:
          t.push(s);
          break;
      }
    }),
    ST(t),
    t
  );
}
function Tm(e, r) {
  var t = e.event,
    n = t.target;
  return Im(n, r);
}
function km(e, r) {
  var t = e.getCanvasBBox(),
    n = t.width,
    i = t.height;
  return n > 0 && i > 0 && (n >= r || i >= r);
}
function Im(e, r) {
  var t = e.getCanvasBBox();
  return km(e, r) ? t : null;
}
function Lm(e, r) {
  var t = e.event.maskShapes;
  return t
    .map(function (n) {
      return Im(n, r);
    })
    .filter(function (n) {
      return !!n;
    });
}
function FT(e, r) {
  var t = e.event,
    n = t.target;
  return Pm(n, r);
}
function Pm(e, r) {
  return km(e, r) ? e.attr('path') : null;
}
function ET(e, r) {
  var t = e.event.maskShapes;
  return t.map(function (n) {
    return Pm(n, r);
  });
}
function qr(e) {
  var r = e.event,
    t,
    n = r.target;
  return n && (t = n.get('element')), t;
}
function On(e) {
  var r = e.event,
    t = r.target,
    n;
  return t && (n = t.get('delegateObject')), n;
}
function Om(e) {
  var r = e.event.gEvent;
  return !(
    r &&
    r.fromShape &&
    r.toShape &&
    r.fromShape.get('element') === r.toShape.get('element')
  );
}
function Ia(e) {
  return e && e.component && e.component.isList();
}
function Dm(e) {
  return e && e.component && e.component.isSlider();
}
function La(e) {
  var r = e.event,
    t = r.target;
  return (t && (t == null ? void 0 : t.get('name')) === 'mask') || pl(e);
}
function pl(e) {
  var r;
  return ((r = e.event.target) === null || r === void 0 ? void 0 : r.get('name')) === 'multi-mask';
}
function mh(e, r) {
  var t = e.event.target;
  if (pl(e)) return TT(e, r);
  if (t.get('type') === 'path') {
    var n = FT(e, r);
    return n ? Nm(e.view, n) : void 0;
  }
  var i = Tm(e, r);
  return i ? gl(e.view, i) : null;
}
function TT(e, r) {
  var t = e.event.target;
  if (t.get('type') === 'path') {
    var n = ET(e, r);
    return n.length > 0
      ? n.flatMap(function (a) {
          return Nm(e.view, a);
        })
      : null;
  }
  var i = Lm(e, r);
  return i.length > 0
    ? i.flatMap(function (a) {
        return gl(e.view, a);
      })
    : null;
}
function Bm(e, r, t) {
  if (pl(e)) return kT(e, r, t);
  var n = Tm(e, t);
  return n ? Rm(n, e, r) : null;
}
function Rm(e, r, t) {
  var n = r.view,
    i = cc(n, t, { x: e.x, y: e.y }),
    a = cc(n, t, { x: e.maxX, y: e.maxY }),
    o = { minX: i.x, minY: i.y, maxX: a.x, maxY: a.y };
  return gl(t, o);
}
function kT(e, r, t) {
  var n = Lm(e, t);
  return n.length > 0
    ? n.flatMap(function (i) {
        return Rm(i, e, r);
      })
    : null;
}
function Qt(e) {
  var r = e.geometries,
    t = [];
  return (
    M(r, function (n) {
      var i = n.elements;
      t = t.concat(i);
    }),
    e.views &&
      e.views.length &&
      M(e.views, function (n) {
        t = t.concat(Qt(n));
      }),
    t
  );
}
function IT(e, r, t) {
  var n = Qt(e);
  return n.filter(function (i) {
    return Ue(i, r) === t;
  });
}
function $m(e, r) {
  var t = e.geometries,
    n = [];
  return (
    M(t, function (i) {
      var a = i.getElementsBy(function (o) {
        return o.hasState(r);
      });
      n = n.concat(a);
    }),
    n
  );
}
function Ue(e, r) {
  var t = e.getModel(),
    n = t.data,
    i;
  return N(n) ? (i = n[0][r]) : (i = n[r]), i;
}
function LT(e, r) {
  return !(r.minX > e.maxX || r.maxX < e.minX || r.minY > e.maxY || r.maxY < e.minY);
}
function gl(e, r) {
  var t = Qt(e),
    n = [];
  return (
    M(t, function (i) {
      var a = i.shape,
        o = a.getCanvasBBox();
      LT(r, o) && n.push(i);
    }),
    n
  );
}
function bd(e) {
  var r = [];
  return (
    M(e, function (t) {
      var n = t[0];
      if (n !== 'A') for (var i = 1; i < t.length; i = i + 2) r.push([t[i], t[i + 1]]);
      else {
        var a = t.length;
        r.push([t[a - 2], t[a - 1]]);
      }
    }),
    r
  );
}
function Nm(e, r) {
  var t = Qt(e),
    n = bd(r),
    i = t.filter(function (a) {
      var o = a.shape,
        s;
      if (o.get('type') === 'path') s = bd(o.attr('path'));
      else {
        var l = o.getCanvasBBox();
        s = aT(l);
      }
      return aF(n, s);
    });
  return i;
}
function zm(e) {
  return e.getComponents().map(function (r) {
    return r.component;
  });
}
function xh(e, r) {
  var t = r.x - e.x,
    n = r.y - e.y;
  return Math.sqrt(t * t + n * n);
}
function PT(e, r) {
  if (e.length <= 2) return Ka(e, !1);
  var t = e[0],
    n = [];
  M(e, function (a) {
    n.push(a.x), n.push(a.y);
  });
  var i = Em(n, r, null);
  return i.unshift(['M', t.x, t.y]), i;
}
function Sd(e, r) {
  return e.x <= r.x && e.maxX >= r.x && e.y <= r.y && e.maxY > r.y;
}
function ar(e) {
  var r = e.parent,
    t = null;
  return (
    r &&
      (t = r.views.filter(function (n) {
        return n !== e;
      })),
    t
  );
}
function OT(e, r) {
  var t = e.getCoordinate();
  return t.invert(r);
}
function cc(e, r, t) {
  var n = OT(e, t);
  return r.getCoordinate().convert(n);
}
function Gm(e, r, t, n) {
  var i = !1;
  return (
    M(e, function (a) {
      if (a[t] === r[t] && a[n] === r[n]) return (i = !0), !1;
    }),
    i
  );
}
function di(e, r) {
  var t = e.getScaleByField(r);
  return (
    !t &&
      e.views &&
      M(e.views, function (n) {
        if (((t = di(n, r)), t)) return !1;
      }),
    t
  );
}
var DT = (function () {
    function e(r) {
      (this.actions = []), (this.event = null), (this.cacheMap = {}), (this.view = r);
    }
    return (
      (e.prototype.cache = function () {
        for (var r = [], t = 0; t < arguments.length; t++) r[t] = arguments[t];
        if (r.length === 1) return this.cacheMap[r[0]];
        r.length === 2 && (this.cacheMap[r[0]] = r[1]);
      }),
      (e.prototype.getAction = function (r) {
        return this.actions.find(function (t) {
          return t.name === r;
        });
      }),
      (e.prototype.addAction = function (r) {
        this.actions.push(r);
      }),
      (e.prototype.removeAction = function (r) {
        var t = this.actions,
          n = this.actions.indexOf(r);
        n >= 0 && t.splice(n, 1);
      }),
      (e.prototype.getCurrentPoint = function () {
        var r = this.event;
        if (r)
          if (r.target instanceof HTMLElement) {
            var t = this.view.getCanvas(),
              n = t.getPointByClient(r.clientX, r.clientY);
            return n;
          } else return { x: r.x, y: r.y };
        return null;
      }),
      (e.prototype.getCurrentShape = function () {
        return A(this.event, ['gEvent', 'shape']);
      }),
      (e.prototype.isInPlot = function () {
        var r = this.getCurrentPoint();
        return r ? this.view.isPointInPlot(r) : !1;
      }),
      (e.prototype.isInShape = function (r) {
        var t = this.getCurrentShape();
        return t ? t.get('name') === r : !1;
      }),
      (e.prototype.isInComponent = function (r) {
        var t = zm(this.view),
          n = this.getCurrentPoint();
        return n
          ? !!t.find(function (i) {
              var a = i.getBBox();
              return r ? i.get('name') === r && Sd(a, n) : Sd(a, n);
            })
          : !1;
      }),
      (e.prototype.destroy = function () {
        M(this.actions.slice(), function (r) {
          r.destroy();
        }),
          (this.view = null),
          (this.event = null),
          (this.actions = null),
          (this.cacheMap = null);
      }),
      e
    );
  })(),
  BT = (function () {
    function e(r, t) {
      (this.view = r), (this.cfg = t);
    }
    return (
      (e.prototype.init = function () {
        this.initEvents();
      }),
      (e.prototype.initEvents = function () {}),
      (e.prototype.clearEvents = function () {}),
      (e.prototype.destroy = function () {
        this.clearEvents();
      }),
      e
    );
  })();
function Cd(e, r, t) {
  var n = e.split(':'),
    i = n[0],
    a = r.getAction(i) || mT(i, r);
  if (!a) throw new Error('There is no action named '.concat(i));
  var o = n[1];
  return { action: a, methodName: o, arg: t };
}
function Md(e) {
  var r = e.action,
    t = e.methodName,
    n = e.arg;
  if (r[t]) r[t](n);
  else throw new Error('Action('.concat(r.name, ") doesn't have a method called ").concat(t));
}
var Ce = {
    START: 'start',
    SHOW_ENABLE: 'showEnable',
    END: 'end',
    ROLLBACK: 'rollback',
    PROCESSING: 'processing',
  },
  RT = (function (e) {
    k(r, e);
    function r(t, n) {
      var i = e.call(this, t, n) || this;
      return (i.callbackCaches = {}), (i.emitCaches = {}), (i.steps = n), i;
    }
    return (
      (r.prototype.init = function () {
        this.initContext(), e.prototype.init.call(this);
      }),
      (r.prototype.destroy = function () {
        e.prototype.destroy.call(this),
          (this.steps = null),
          this.context && (this.context.destroy(), (this.context = null)),
          (this.callbackCaches = null),
          (this.view = null);
      }),
      (r.prototype.initEvents = function () {
        var t = this;
        M(this.steps, function (n, i) {
          M(n, function (a) {
            var o = t.getActionCallback(i, a);
            o && t.bindEvent(a.trigger, o);
          });
        });
      }),
      (r.prototype.clearEvents = function () {
        var t = this;
        M(this.steps, function (n, i) {
          M(n, function (a) {
            var o = t.getActionCallback(i, a);
            o && t.offEvent(a.trigger, o);
          });
        });
      }),
      (r.prototype.initContext = function () {
        var t = this.view,
          n = new DT(t);
        this.context = n;
        var i = this.steps;
        M(i, function (a) {
          M(a, function (o) {
            if (U(o.action)) o.actionObject = { action: xT(o.action, n), methodName: 'execute' };
            else if (et(o.action)) o.actionObject = Cd(o.action, n, o.arg);
            else if (N(o.action)) {
              var s = o.action,
                l = N(o.arg) ? o.arg : [o.arg];
              (o.actionObject = []),
                M(s, function (u, c) {
                  o.actionObject.push(Cd(u, n, l[c]));
                });
            }
          });
        });
      }),
      (r.prototype.isAllowStep = function (t) {
        var n = this.currentStepName,
          i = this.steps;
        if (n === t || t === Ce.SHOW_ENABLE) return !0;
        if (t === Ce.PROCESSING) return n === Ce.START;
        if (t === Ce.START) return n !== Ce.PROCESSING;
        if (t === Ce.END) return n === Ce.PROCESSING || n === Ce.START;
        if (t === Ce.ROLLBACK) {
          if (i[Ce.END]) return n === Ce.END;
          if (n === Ce.START) return !0;
        }
        return !1;
      }),
      (r.prototype.isAllowExecute = function (t, n) {
        if (this.isAllowStep(t)) {
          var i = this.getKey(t, n);
          return n.once && this.emitCaches[i] ? !1 : n.isEnable ? n.isEnable(this.context) : !0;
        }
        return !1;
      }),
      (r.prototype.enterStep = function (t) {
        (this.currentStepName = t), (this.emitCaches = {});
      }),
      (r.prototype.afterExecute = function (t, n) {
        t !== Ce.SHOW_ENABLE && this.currentStepName !== t && this.enterStep(t);
        var i = this.getKey(t, n);
        this.emitCaches[i] = !0;
      }),
      (r.prototype.getKey = function (t, n) {
        return t + n.trigger + n.action;
      }),
      (r.prototype.getActionCallback = function (t, n) {
        var i = this,
          a = this.context,
          o = this.callbackCaches,
          s = n.actionObject;
        if (n.action && s) {
          var l = this.getKey(t, n);
          if (!o[l]) {
            var u = function (c) {
              (a.event = c),
                i.isAllowExecute(t, n)
                  ? (N(s)
                      ? M(s, function (h) {
                          (a.event = c), Md(h);
                        })
                      : ((a.event = c), Md(s)),
                    i.afterExecute(t, n),
                    n.callback && ((a.event = c), n.callback(a)))
                  : (a.event = null);
            };
            n.debounce
              ? (o[l] = Bg(u, n.debounce.wait, n.debounce.immediate))
              : n.throttle
              ? (o[l] = Wc(u, n.throttle.wait, {
                  leading: n.throttle.leading,
                  trailing: n.throttle.trailing,
                }))
              : (o[l] = u);
          }
          return o[l];
        }
        return null;
      }),
      (r.prototype.bindEvent = function (t, n) {
        var i = t.split(':');
        i[0] === 'window'
          ? window.addEventListener(i[1], n)
          : i[0] === 'document'
          ? document.addEventListener(i[1], n)
          : this.view.on(t, n);
      }),
      (r.prototype.offEvent = function (t, n) {
        var i = t.split(':');
        i[0] === 'window'
          ? window.removeEventListener(i[1], n)
          : i[0] === 'document'
          ? document.removeEventListener(i[1], n)
          : this.view.off(t, n);
      }),
      r
    );
  })(BT),
  Vm = {};
function $T(e) {
  return Vm[Mi(e)];
}
function ot(e, r) {
  Vm[Mi(e)] = r;
}
function NT(e, r, t) {
  var n = $T(e);
  if (!n) return null;
  if (nr(n)) {
    var i = bt(oe(n), t);
    return new RT(r, i);
  } else {
    var a = n;
    return new a(r, t);
  }
}
function zT(e) {
  return {
    title: {
      autoRotate: !0,
      position: 'center',
      spacing: e.axisTitleSpacing,
      style: {
        fill: e.axisTitleTextFillColor,
        fontSize: e.axisTitleTextFontSize,
        lineHeight: e.axisTitleTextLineHeight,
        textBaseline: 'middle',
        fontFamily: e.fontFamily,
      },
      iconStyle: { fill: e.axisDescriptionIconFillColor },
    },
    label: {
      autoRotate: !1,
      autoEllipsis: !1,
      autoHide: { type: 'equidistance', cfg: { minGap: 6 } },
      offset: e.axisLabelOffset,
      style: {
        fill: e.axisLabelFillColor,
        fontSize: e.axisLabelFontSize,
        lineHeight: e.axisLabelLineHeight,
        fontFamily: e.fontFamily,
      },
    },
    line: { style: { lineWidth: e.axisLineBorder, stroke: e.axisLineBorderColor } },
    grid: {
      line: {
        type: 'line',
        style: {
          stroke: e.axisGridBorderColor,
          lineWidth: e.axisGridBorder,
          lineDash: e.axisGridLineDash,
        },
      },
      alignTick: !0,
      animate: !0,
    },
    tickLine: {
      style: { lineWidth: e.axisTickLineBorder, stroke: e.axisTickLineBorderColor },
      alignTick: !0,
      length: e.axisTickLineLength,
    },
    subTickLine: null,
    animate: !0,
  };
}
function GT(e) {
  return {
    title: null,
    marker: {
      symbol: 'circle',
      spacing: e.legendMarkerSpacing,
      style: { r: e.legendCircleMarkerSize, fill: e.legendMarkerColor },
    },
    itemName: {
      spacing: 5,
      style: {
        fill: e.legendItemNameFillColor,
        fontFamily: e.fontFamily,
        fontSize: e.legendItemNameFontSize,
        lineHeight: e.legendItemNameLineHeight,
        fontWeight: e.legendItemNameFontWeight,
        textAlign: 'start',
        textBaseline: 'middle',
      },
    },
    itemStates: {
      active: { nameStyle: { opacity: 0.8 } },
      unchecked: {
        nameStyle: { fill: '#D8D8D8' },
        markerStyle: { fill: '#D8D8D8', stroke: '#D8D8D8' },
      },
      inactive: { nameStyle: { fill: '#D8D8D8' }, markerStyle: { opacity: 0.2 } },
    },
    flipPage: !0,
    pageNavigator: {
      marker: {
        style: {
          size: e.legendPageNavigatorMarkerSize,
          inactiveFill: e.legendPageNavigatorMarkerInactiveFillColor,
          inactiveOpacity: e.legendPageNavigatorMarkerInactiveFillOpacity,
          fill: e.legendPageNavigatorMarkerFillColor,
          opacity: e.legendPageNavigatorMarkerFillOpacity,
        },
      },
      text: {
        style: {
          fill: e.legendPageNavigatorTextFillColor,
          fontSize: e.legendPageNavigatorTextFontSize,
        },
      },
    },
    animate: !1,
    maxItemWidth: 200,
    itemSpacing: e.legendItemSpacing,
    itemMarginBottom: e.legendItemMarginBottom,
    padding: e.legendPadding,
  };
}
function Hm(e) {
  var r,
    t = {
      point: {
        default: {
          fill: e.pointFillColor,
          r: e.pointSize,
          stroke: e.pointBorderColor,
          lineWidth: e.pointBorder,
          fillOpacity: e.pointFillOpacity,
        },
        active: { stroke: e.pointActiveBorderColor, lineWidth: e.pointActiveBorder },
        selected: { stroke: e.pointSelectedBorderColor, lineWidth: e.pointSelectedBorder },
        inactive: {
          fillOpacity: e.pointInactiveFillOpacity,
          strokeOpacity: e.pointInactiveBorderOpacity,
        },
      },
      hollowPoint: {
        default: {
          fill: e.hollowPointFillColor,
          lineWidth: e.hollowPointBorder,
          stroke: e.hollowPointBorderColor,
          strokeOpacity: e.hollowPointBorderOpacity,
          r: e.hollowPointSize,
        },
        active: {
          stroke: e.hollowPointActiveBorderColor,
          strokeOpacity: e.hollowPointActiveBorderOpacity,
        },
        selected: {
          lineWidth: e.hollowPointSelectedBorder,
          stroke: e.hollowPointSelectedBorderColor,
          strokeOpacity: e.hollowPointSelectedBorderOpacity,
        },
        inactive: { strokeOpacity: e.hollowPointInactiveBorderOpacity },
      },
      area: {
        default: { fill: e.areaFillColor, fillOpacity: e.areaFillOpacity, stroke: null },
        active: { fillOpacity: e.areaActiveFillOpacity },
        selected: { fillOpacity: e.areaSelectedFillOpacity },
        inactive: { fillOpacity: e.areaInactiveFillOpacity },
      },
      hollowArea: {
        default: {
          fill: null,
          stroke: e.hollowAreaBorderColor,
          lineWidth: e.hollowAreaBorder,
          strokeOpacity: e.hollowAreaBorderOpacity,
        },
        active: { fill: null, lineWidth: e.hollowAreaActiveBorder },
        selected: { fill: null, lineWidth: e.hollowAreaSelectedBorder },
        inactive: { strokeOpacity: e.hollowAreaInactiveBorderOpacity },
      },
      interval: {
        default: { fill: e.intervalFillColor, fillOpacity: e.intervalFillOpacity },
        active: { stroke: e.intervalActiveBorderColor, lineWidth: e.intervalActiveBorder },
        selected: { stroke: e.intervalSelectedBorderColor, lineWidth: e.intervalSelectedBorder },
        inactive: {
          fillOpacity: e.intervalInactiveFillOpacity,
          strokeOpacity: e.intervalInactiveBorderOpacity,
        },
      },
      hollowInterval: {
        default: {
          fill: e.hollowIntervalFillColor,
          stroke: e.hollowIntervalBorderColor,
          lineWidth: e.hollowIntervalBorder,
          strokeOpacity: e.hollowIntervalBorderOpacity,
        },
        active: {
          stroke: e.hollowIntervalActiveBorderColor,
          lineWidth: e.hollowIntervalActiveBorder,
          strokeOpacity: e.hollowIntervalActiveBorderOpacity,
        },
        selected: {
          stroke: e.hollowIntervalSelectedBorderColor,
          lineWidth: e.hollowIntervalSelectedBorder,
          strokeOpacity: e.hollowIntervalSelectedBorderOpacity,
        },
        inactive: {
          stroke: e.hollowIntervalInactiveBorderColor,
          lineWidth: e.hollowIntervalInactiveBorder,
          strokeOpacity: e.hollowIntervalInactiveBorderOpacity,
        },
      },
      line: {
        default: {
          stroke: e.lineBorderColor,
          lineWidth: e.lineBorder,
          strokeOpacity: e.lineBorderOpacity,
          fill: null,
          lineAppendWidth: 10,
          lineCap: 'round',
          lineJoin: 'round',
        },
        active: { lineWidth: e.lineActiveBorder },
        selected: { lineWidth: e.lineSelectedBorder },
        inactive: { strokeOpacity: e.lineInactiveBorderOpacity },
      },
    },
    n = zT(e),
    i = GT(e);
  return {
    background: e.backgroundColor,
    defaultColor: e.brandColor,
    subColor: e.subColor,
    semanticRed: e.paletteSemanticRed,
    semanticGreen: e.paletteSemanticGreen,
    padding: 'auto',
    fontFamily: e.fontFamily,
    columnWidthRatio: 1 / 2,
    maxColumnWidth: null,
    minColumnWidth: null,
    roseWidthRatio: 0.9999999,
    multiplePieWidthRatio: 1 / 1.3,
    colors10: e.paletteQualitative10,
    colors20: e.paletteQualitative20,
    sequenceColors: e.paletteSequence,
    shapes: {
      point: [
        'hollow-circle',
        'hollow-square',
        'hollow-bowtie',
        'hollow-diamond',
        'hollow-hexagon',
        'hollow-triangle',
        'hollow-triangle-down',
        'circle',
        'square',
        'bowtie',
        'diamond',
        'hexagon',
        'triangle',
        'triangle-down',
        'cross',
        'tick',
        'plus',
        'hyphen',
        'line',
      ],
      line: ['line', 'dash', 'dot', 'smooth'],
      area: ['area', 'smooth', 'line', 'smooth-line'],
      interval: ['rect', 'hollow-rect', 'line', 'tick'],
    },
    sizes: [1, 10],
    geometries: {
      interval: {
        rect: {
          default: { style: t.interval.default },
          active: { style: t.interval.active },
          inactive: { style: t.interval.inactive },
          selected: {
            style: function (a) {
              var o = a.geometry.coordinate;
              if (o.isPolar && o.isTransposed) {
                var s = Ta(a.getModel(), o),
                  l = s.startAngle,
                  u = s.endAngle,
                  c = (l + u) / 2,
                  h = 7.5,
                  f = h * Math.cos(c),
                  v = h * Math.sin(c);
                return { matrix: Vt(null, [['t', f, v]]) };
              }
              return t.interval.selected;
            },
          },
        },
        'hollow-rect': {
          default: { style: t.hollowInterval.default },
          active: { style: t.hollowInterval.active },
          inactive: { style: t.hollowInterval.inactive },
          selected: { style: t.hollowInterval.selected },
        },
        line: {
          default: { style: t.hollowInterval.default },
          active: { style: t.hollowInterval.active },
          inactive: { style: t.hollowInterval.inactive },
          selected: { style: t.hollowInterval.selected },
        },
        tick: {
          default: { style: t.hollowInterval.default },
          active: { style: t.hollowInterval.active },
          inactive: { style: t.hollowInterval.inactive },
          selected: { style: t.hollowInterval.selected },
        },
        funnel: {
          default: { style: t.interval.default },
          active: { style: t.interval.active },
          inactive: { style: t.interval.inactive },
          selected: { style: t.interval.selected },
        },
        pyramid: {
          default: { style: t.interval.default },
          active: { style: t.interval.active },
          inactive: { style: t.interval.inactive },
          selected: { style: t.interval.selected },
        },
      },
      line: {
        line: {
          default: { style: t.line.default },
          active: { style: t.line.active },
          inactive: { style: t.line.inactive },
          selected: { style: t.line.selected },
        },
        dot: {
          default: { style: x(x({}, t.line.default), { lineCap: null, lineDash: [1, 1] }) },
          active: { style: x(x({}, t.line.active), { lineCap: null, lineDash: [1, 1] }) },
          inactive: { style: x(x({}, t.line.inactive), { lineCap: null, lineDash: [1, 1] }) },
          selected: { style: x(x({}, t.line.selected), { lineCap: null, lineDash: [1, 1] }) },
        },
        dash: {
          default: { style: x(x({}, t.line.default), { lineCap: null, lineDash: [5.5, 1] }) },
          active: { style: x(x({}, t.line.active), { lineCap: null, lineDash: [5.5, 1] }) },
          inactive: { style: x(x({}, t.line.inactive), { lineCap: null, lineDash: [5.5, 1] }) },
          selected: { style: x(x({}, t.line.selected), { lineCap: null, lineDash: [5.5, 1] }) },
        },
        smooth: {
          default: { style: t.line.default },
          active: { style: t.line.active },
          inactive: { style: t.line.inactive },
          selected: { style: t.line.selected },
        },
        hv: {
          default: { style: t.line.default },
          active: { style: t.line.active },
          inactive: { style: t.line.inactive },
          selected: { style: t.line.selected },
        },
        vh: {
          default: { style: t.line.default },
          active: { style: t.line.active },
          inactive: { style: t.line.inactive },
          selected: { style: t.line.selected },
        },
        hvh: {
          default: { style: t.line.default },
          active: { style: t.line.active },
          inactive: { style: t.line.inactive },
          selected: { style: t.line.selected },
        },
        vhv: {
          default: { style: t.line.default },
          active: { style: t.line.active },
          inactive: { style: t.line.inactive },
          selected: { style: t.line.selected },
        },
      },
      polygon: {
        polygon: {
          default: { style: t.interval.default },
          active: { style: t.interval.active },
          inactive: { style: t.interval.inactive },
          selected: { style: t.interval.selected },
        },
      },
      point: {
        circle: {
          default: { style: t.point.default },
          active: { style: t.point.active },
          inactive: { style: t.point.inactive },
          selected: { style: t.point.selected },
        },
        square: {
          default: { style: t.point.default },
          active: { style: t.point.active },
          inactive: { style: t.point.inactive },
          selected: { style: t.point.selected },
        },
        bowtie: {
          default: { style: t.point.default },
          active: { style: t.point.active },
          inactive: { style: t.point.inactive },
          selected: { style: t.point.selected },
        },
        diamond: {
          default: { style: t.point.default },
          active: { style: t.point.active },
          inactive: { style: t.point.inactive },
          selected: { style: t.point.selected },
        },
        hexagon: {
          default: { style: t.point.default },
          active: { style: t.point.active },
          inactive: { style: t.point.inactive },
          selected: { style: t.point.selected },
        },
        triangle: {
          default: { style: t.point.default },
          active: { style: t.point.active },
          inactive: { style: t.point.inactive },
          selected: { style: t.point.selected },
        },
        'triangle-down': {
          default: { style: t.point.default },
          active: { style: t.point.active },
          inactive: { style: t.point.inactive },
          selected: { style: t.point.selected },
        },
        'hollow-circle': {
          default: { style: t.hollowPoint.default },
          active: { style: t.hollowPoint.active },
          inactive: { style: t.hollowPoint.inactive },
          selected: { style: t.hollowPoint.selected },
        },
        'hollow-square': {
          default: { style: t.hollowPoint.default },
          active: { style: t.hollowPoint.active },
          inactive: { style: t.hollowPoint.inactive },
          selected: { style: t.hollowPoint.selected },
        },
        'hollow-bowtie': {
          default: { style: t.hollowPoint.default },
          active: { style: t.hollowPoint.active },
          inactive: { style: t.hollowPoint.inactive },
          selected: { style: t.hollowPoint.selected },
        },
        'hollow-diamond': {
          default: { style: t.hollowPoint.default },
          active: { style: t.hollowPoint.active },
          inactive: { style: t.hollowPoint.inactive },
          selected: { style: t.hollowPoint.selected },
        },
        'hollow-hexagon': {
          default: { style: t.hollowPoint.default },
          active: { style: t.hollowPoint.active },
          inactive: { style: t.hollowPoint.inactive },
          selected: { style: t.hollowPoint.selected },
        },
        'hollow-triangle': {
          default: { style: t.hollowPoint.default },
          active: { style: t.hollowPoint.active },
          inactive: { style: t.hollowPoint.inactive },
          selected: { style: t.hollowPoint.selected },
        },
        'hollow-triangle-down': {
          default: { style: t.hollowPoint.default },
          active: { style: t.hollowPoint.active },
          inactive: { style: t.hollowPoint.inactive },
          selected: { style: t.hollowPoint.selected },
        },
        cross: {
          default: { style: t.hollowPoint.default },
          active: { style: t.hollowPoint.active },
          inactive: { style: t.hollowPoint.inactive },
          selected: { style: t.hollowPoint.selected },
        },
        tick: {
          default: { style: t.hollowPoint.default },
          active: { style: t.hollowPoint.active },
          inactive: { style: t.hollowPoint.inactive },
          selected: { style: t.hollowPoint.selected },
        },
        plus: {
          default: { style: t.hollowPoint.default },
          active: { style: t.hollowPoint.active },
          inactive: { style: t.hollowPoint.inactive },
          selected: { style: t.hollowPoint.selected },
        },
        hyphen: {
          default: { style: t.hollowPoint.default },
          active: { style: t.hollowPoint.active },
          inactive: { style: t.hollowPoint.inactive },
          selected: { style: t.hollowPoint.selected },
        },
        line: {
          default: { style: t.hollowPoint.default },
          active: { style: t.hollowPoint.active },
          inactive: { style: t.hollowPoint.inactive },
          selected: { style: t.hollowPoint.selected },
        },
      },
      area: {
        area: {
          default: { style: t.area.default },
          active: { style: t.area.active },
          inactive: { style: t.area.inactive },
          selected: { style: t.area.selected },
        },
        smooth: {
          default: { style: t.area.default },
          active: { style: t.area.active },
          inactive: { style: t.area.inactive },
          selected: { style: t.area.selected },
        },
        line: {
          default: { style: t.hollowArea.default },
          active: { style: t.hollowArea.active },
          inactive: { style: t.hollowArea.inactive },
          selected: { style: t.hollowArea.selected },
        },
        'smooth-line': {
          default: { style: t.hollowArea.default },
          active: { style: t.hollowArea.active },
          inactive: { style: t.hollowArea.inactive },
          selected: { style: t.hollowArea.selected },
        },
      },
      schema: {
        candle: {
          default: { style: t.hollowInterval.default },
          active: { style: t.hollowInterval.active },
          inactive: { style: t.hollowInterval.inactive },
          selected: { style: t.hollowInterval.selected },
        },
        box: {
          default: { style: t.hollowInterval.default },
          active: { style: t.hollowInterval.active },
          inactive: { style: t.hollowInterval.inactive },
          selected: { style: t.hollowInterval.selected },
        },
      },
      edge: {
        line: {
          default: { style: t.line.default },
          active: { style: t.line.active },
          inactive: { style: t.line.inactive },
          selected: { style: t.line.selected },
        },
        vhv: {
          default: { style: t.line.default },
          active: { style: t.line.active },
          inactive: { style: t.line.inactive },
          selected: { style: t.line.selected },
        },
        smooth: {
          default: { style: t.line.default },
          active: { style: t.line.active },
          inactive: { style: t.line.inactive },
          selected: { style: t.line.selected },
        },
        arc: {
          default: { style: t.line.default },
          active: { style: t.line.active },
          inactive: { style: t.line.inactive },
          selected: { style: t.line.selected },
        },
      },
      violin: {
        violin: {
          default: { style: t.line.default },
          active: { style: t.line.active },
          inactive: { style: t.line.inactive },
          selected: { style: t.line.selected },
        },
        smooth: {
          default: { style: t.line.default },
          active: { style: t.line.active },
          inactive: { style: t.line.inactive },
          selected: { style: t.line.selected },
        },
        hollow: {
          default: { style: t.hollowArea.default },
          active: { style: t.hollowArea.active },
          inactive: { style: t.hollowArea.inactive },
          selected: { style: t.hollowArea.selected },
        },
        'hollow-smooth': {
          default: { style: t.hollowArea.default },
          active: { style: t.hollowArea.active },
          inactive: { style: t.hollowArea.inactive },
          selected: { style: t.hollowArea.selected },
        },
      },
    },
    components: {
      axis: {
        common: n,
        top: { position: 'top', grid: null, title: null, verticalLimitLength: 1 / 2 },
        bottom: { position: 'bottom', grid: null, title: null, verticalLimitLength: 1 / 2 },
        left: {
          position: 'left',
          title: null,
          line: null,
          tickLine: null,
          verticalLimitLength: 1 / 3,
        },
        right: {
          position: 'right',
          title: null,
          line: null,
          tickLine: null,
          verticalLimitLength: 1 / 3,
        },
        circle: { title: null, grid: _({}, n.grid, { line: { type: 'line' } }) },
        radius: { title: null, grid: _({}, n.grid, { line: { type: 'circle' } }) },
      },
      legend: {
        common: i,
        right: { layout: 'vertical', padding: e.legendVerticalPadding },
        left: { layout: 'vertical', padding: e.legendVerticalPadding },
        top: { layout: 'horizontal', padding: e.legendHorizontalPadding },
        bottom: { layout: 'horizontal', padding: e.legendHorizontalPadding },
        continuous: {
          title: null,
          background: null,
          track: {},
          rail: {
            type: 'color',
            size: e.sliderRailHeight,
            defaultLength: e.sliderRailWidth,
            style: {
              fill: e.sliderRailFillColor,
              stroke: e.sliderRailBorderColor,
              lineWidth: e.sliderRailBorder,
            },
          },
          label: {
            align: 'rail',
            spacing: 4,
            formatter: null,
            style: {
              fill: e.sliderLabelTextFillColor,
              fontSize: e.sliderLabelTextFontSize,
              lineHeight: e.sliderLabelTextLineHeight,
              textBaseline: 'middle',
              fontFamily: e.fontFamily,
            },
          },
          handler: {
            size: e.sliderHandlerWidth,
            style: { fill: e.sliderHandlerFillColor, stroke: e.sliderHandlerBorderColor },
          },
          slidable: !0,
          padding: i.padding,
        },
      },
      tooltip: {
        showContent: !0,
        follow: !0,
        showCrosshairs: !1,
        showMarkers: !0,
        shared: !1,
        enterable: !1,
        position: 'auto',
        marker: {
          symbol: 'circle',
          stroke: '#fff',
          shadowBlur: 10,
          shadowOffsetX: 0,
          shadowOffsetY: 0,
          shadowColor: 'rgba(0,0,0,0.09)',
          lineWidth: 2,
          r: 4,
        },
        crosshairs: {
          line: {
            style: { stroke: e.tooltipCrosshairsBorderColor, lineWidth: e.tooltipCrosshairsBorder },
          },
          text: null,
          textBackground: {
            padding: 2,
            style: { fill: 'rgba(0, 0, 0, 0.25)', lineWidth: 0, stroke: null },
          },
          follow: !1,
        },
        domStyles:
          ((r = {}),
          (r[''.concat(Cr)] = {
            position: 'absolute',
            visibility: 'hidden',
            zIndex: 8,
            transition:
              'left 0.4s cubic-bezier(0.23, 1, 0.32, 1) 0s, top 0.4s cubic-bezier(0.23, 1, 0.32, 1) 0s',
            backgroundColor: e.tooltipContainerFillColor,
            opacity: e.tooltipContainerFillOpacity,
            boxShadow: e.tooltipContainerShadow,
            borderRadius: ''.concat(e.tooltipContainerBorderRadius, 'px'),
            color: e.tooltipTextFillColor,
            fontSize: ''.concat(e.tooltipTextFontSize, 'px'),
            fontFamily: e.fontFamily,
            lineHeight: ''.concat(e.tooltipTextLineHeight, 'px'),
            padding: '0 12px 0 12px',
          }),
          (r[''.concat(Mr)] = { marginBottom: '12px', marginTop: '12px' }),
          (r[''.concat(Ea)] = { margin: 0, listStyleType: 'none', padding: 0 }),
          (r[''.concat(ul)] = {
            listStyleType: 'none',
            padding: 0,
            marginBottom: '12px',
            marginTop: '12px',
            marginLeft: 0,
            marginRight: 0,
          }),
          (r[''.concat(cl)] = {
            width: '8px',
            height: '8px',
            borderRadius: '50%',
            display: 'inline-block',
            marginRight: '8px',
          }),
          (r[''.concat(hl)] = { display: 'inline-block', float: 'right', marginLeft: '30px' }),
          r),
      },
      annotation: {
        arc: {
          style: { stroke: e.annotationArcBorderColor, lineWidth: e.annotationArcBorder },
          animate: !0,
        },
        line: {
          style: {
            stroke: e.annotationLineBorderColor,
            lineDash: e.annotationLineDash,
            lineWidth: e.annotationLineBorder,
          },
          text: {
            position: 'start',
            autoRotate: !0,
            style: {
              fill: e.annotationTextFillColor,
              stroke: e.annotationTextBorderColor,
              lineWidth: e.annotationTextBorder,
              fontSize: e.annotationTextFontSize,
              textAlign: 'start',
              fontFamily: e.fontFamily,
              textBaseline: 'bottom',
            },
          },
          animate: !0,
        },
        text: {
          style: {
            fill: e.annotationTextFillColor,
            stroke: e.annotationTextBorderColor,
            lineWidth: e.annotationTextBorder,
            fontSize: e.annotationTextFontSize,
            textBaseline: 'middle',
            textAlign: 'start',
            fontFamily: e.fontFamily,
          },
          animate: !0,
        },
        region: {
          top: !1,
          style: {
            lineWidth: e.annotationRegionBorder,
            stroke: e.annotationRegionBorderColor,
            fill: e.annotationRegionFillColor,
            fillOpacity: e.annotationRegionFillOpacity,
          },
          animate: !0,
        },
        image: { top: !1, animate: !0 },
        dataMarker: {
          top: !0,
          point: { style: { r: 3, stroke: e.brandColor, lineWidth: 2 } },
          line: {
            style: { stroke: e.annotationLineBorderColor, lineWidth: e.annotationLineBorder },
            length: e.annotationDataMarkerLineLength,
          },
          text: {
            style: {
              textAlign: 'start',
              fill: e.annotationTextFillColor,
              stroke: e.annotationTextBorderColor,
              lineWidth: e.annotationTextBorder,
              fontSize: e.annotationTextFontSize,
              fontFamily: e.fontFamily,
            },
          },
          direction: 'upward',
          autoAdjust: !0,
          animate: !0,
        },
        dataRegion: {
          style: {
            region: {
              fill: e.annotationRegionFillColor,
              fillOpacity: e.annotationRegionFillOpacity,
            },
            text: {
              textAlign: 'center',
              textBaseline: 'bottom',
              fill: e.annotationTextFillColor,
              stroke: e.annotationTextBorderColor,
              lineWidth: e.annotationTextBorder,
              fontSize: e.annotationTextFontSize,
              fontFamily: e.fontFamily,
            },
          },
          animate: !0,
        },
      },
      slider: {
        common: {
          padding: [8, 8, 8, 8],
          backgroundStyle: {
            fill: e.cSliderBackgroundFillColor,
            opacity: e.cSliderBackgroundFillOpacity,
          },
          foregroundStyle: {
            fill: e.cSliderForegroundFillColor,
            opacity: e.cSliderForegroundFillOpacity,
          },
          handlerStyle: {
            width: e.cSliderHandlerWidth,
            height: e.cSliderHandlerHeight,
            fill: e.cSliderHandlerFillColor,
            opacity: e.cSliderHandlerFillOpacity,
            stroke: e.cSliderHandlerBorderColor,
            lineWidth: e.cSliderHandlerBorder,
            radius: e.cSliderHandlerBorderRadius,
            highLightFill: e.cSliderHandlerHighlightFillColor,
          },
          textStyle: {
            fill: e.cSliderTextFillColor,
            opacity: e.cSliderTextFillOpacity,
            fontSize: e.cSliderTextFontSize,
            lineHeight: e.cSliderTextLineHeight,
            fontWeight: e.cSliderTextFontWeight,
            stroke: e.cSliderTextBorderColor,
            lineWidth: e.cSliderTextBorder,
          },
        },
      },
      scrollbar: {
        common: { padding: [8, 8, 8, 8] },
        default: {
          style: { trackColor: e.scrollbarTrackFillColor, thumbColor: e.scrollbarThumbFillColor },
        },
        hover: { style: { thumbColor: e.scrollbarThumbHighlightFillColor } },
      },
    },
    labels: {
      offset: 12,
      style: {
        fill: e.labelFillColor,
        fontSize: e.labelFontSize,
        fontFamily: e.fontFamily,
        stroke: e.labelBorderColor,
        lineWidth: e.labelBorder,
      },
      fillColorDark: e.labelFillColorDark,
      fillColorLight: e.labelFillColorLight,
      autoRotate: !0,
    },
    innerLabels: {
      style: {
        fill: e.innerLabelFillColor,
        fontSize: e.innerLabelFontSize,
        fontFamily: e.fontFamily,
        stroke: e.innerLabelBorderColor,
        lineWidth: e.innerLabelBorder,
      },
      autoRotate: !0,
    },
    overflowLabels: {
      style: {
        fill: e.overflowLabelFillColor,
        fontSize: e.overflowLabelFontSize,
        fontFamily: e.fontFamily,
        stroke: e.overflowLabelBorderColor,
        lineWidth: e.overflowLabelBorder,
      },
    },
    pieLabels: {
      labelHeight: 14,
      offset: 10,
      labelLine: { style: { lineWidth: e.labelLineBorder } },
      autoRotate: !0,
    },
  };
}
var yt = {
    100: '#000',
    95: '#0D0D0D',
    85: '#262626',
    65: '#595959',
    45: '#8C8C8C',
    25: '#BFBFBF',
    15: '#D9D9D9',
    6: '#F0F0F0',
  },
  Xn = {
    100: '#FFFFFF',
    95: '#F2F2F2',
    85: '#D9D9D9',
    65: '#A6A6A6',
    45: '#737373',
    25: '#404040',
    15: '#262626',
    6: '#0F0F0F',
  },
  VT = [
    '#5B8FF9',
    '#5AD8A6',
    '#5D7092',
    '#F6BD16',
    '#6F5EF9',
    '#6DC8EC',
    '#945FB9',
    '#FF9845',
    '#1E9493',
    '#FF99C3',
  ],
  HT = [
    '#5B8FF9',
    '#CDDDFD',
    '#5AD8A6',
    '#CDF3E4',
    '#5D7092',
    '#CED4DE',
    '#F6BD16',
    '#FCEBB9',
    '#6F5EF9',
    '#D3CEFD',
    '#6DC8EC',
    '#D3EEF9',
    '#945FB9',
    '#DECFEA',
    '#FF9845',
    '#FFE0C7',
    '#1E9493',
    '#BBDEDE',
    '#FF99C3',
    '#FFE0ED',
  ],
  YT = [
    '#B8E1FF',
    '#9AC5FF',
    '#7DAAFF',
    '#5B8FF9',
    '#3D76DD',
    '#085EC0',
    '#0047A5',
    '#00318A',
    '#001D70',
  ],
  Ym = function (e) {
    e === void 0 && (e = {});
    var r = e.paletteQualitative10,
      t = r === void 0 ? VT : r,
      n = e.paletteQualitative20,
      i = n === void 0 ? HT : n,
      a = e.brandColor,
      o = a === void 0 ? t[0] : a,
      s = {
        backgroundColor: 'transparent',
        brandColor: o,
        subColor: 'rgba(0,0,0,0.05)',
        paletteQualitative10: t,
        paletteQualitative20: i,
        paletteSemanticRed: '#F4664A',
        paletteSemanticGreen: '#30BF78',
        paletteSemanticYellow: '#FAAD14',
        paletteSequence: YT,
        fontFamily: `"Segoe UI", Roboto, "Helvetica Neue", Arial,
    "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"`,
        axisLineBorderColor: yt[25],
        axisLineBorder: 1,
        axisLineDash: null,
        axisTitleTextFillColor: yt[65],
        axisTitleTextFontSize: 12,
        axisTitleTextLineHeight: 12,
        axisTitleTextFontWeight: 'normal',
        axisTitleSpacing: 12,
        axisDescriptionIconFillColor: Xn[85],
        axisTickLineBorderColor: yt[25],
        axisTickLineLength: 4,
        axisTickLineBorder: 1,
        axisSubTickLineBorderColor: yt[15],
        axisSubTickLineLength: 2,
        axisSubTickLineBorder: 1,
        axisLabelFillColor: yt[45],
        axisLabelFontSize: 12,
        axisLabelLineHeight: 12,
        axisLabelFontWeight: 'normal',
        axisLabelOffset: 8,
        axisGridBorderColor: yt[15],
        axisGridBorder: 1,
        axisGridLineDash: null,
        legendTitleTextFillColor: yt[45],
        legendTitleTextFontSize: 12,
        legendTitleTextLineHeight: 21,
        legendTitleTextFontWeight: 'normal',
        legendMarkerColor: o,
        legendMarkerSpacing: 8,
        legendMarkerSize: 4,
        legendCircleMarkerSize: 4,
        legendSquareMarkerSize: 4,
        legendLineMarkerSize: 5,
        legendItemNameFillColor: yt[65],
        legendItemNameFontSize: 12,
        legendItemNameLineHeight: 12,
        legendItemNameFontWeight: 'normal',
        legendItemSpacing: 24,
        legendItemMarginBottom: 12,
        legendPadding: [8, 8, 8, 8],
        legendHorizontalPadding: [8, 0, 8, 0],
        legendVerticalPadding: [0, 8, 0, 8],
        legendPageNavigatorMarkerSize: 12,
        legendPageNavigatorMarkerInactiveFillColor: yt[100],
        legendPageNavigatorMarkerInactiveFillOpacity: 0.45,
        legendPageNavigatorMarkerFillColor: yt[100],
        legendPageNavigatorMarkerFillOpacity: 1,
        legendPageNavigatorTextFillColor: yt[45],
        legendPageNavigatorTextFontSize: 12,
        sliderRailFillColor: yt[15],
        sliderRailBorder: 0,
        sliderRailBorderColor: null,
        sliderRailWidth: 100,
        sliderRailHeight: 12,
        sliderLabelTextFillColor: yt[45],
        sliderLabelTextFontSize: 12,
        sliderLabelTextLineHeight: 12,
        sliderLabelTextFontWeight: 'normal',
        sliderHandlerFillColor: yt[6],
        sliderHandlerWidth: 10,
        sliderHandlerHeight: 14,
        sliderHandlerBorder: 1,
        sliderHandlerBorderColor: yt[25],
        annotationArcBorderColor: yt[15],
        annotationArcBorder: 1,
        annotationLineBorderColor: yt[25],
        annotationLineBorder: 1,
        annotationLineDash: null,
        annotationTextFillColor: yt[65],
        annotationTextFontSize: 12,
        annotationTextLineHeight: 12,
        annotationTextFontWeight: 'normal',
        annotationTextBorderColor: null,
        annotationTextBorder: 0,
        annotationRegionFillColor: yt[100],
        annotationRegionFillOpacity: 0.06,
        annotationRegionBorder: 0,
        annotationRegionBorderColor: null,
        annotationDataMarkerLineLength: 16,
        tooltipCrosshairsBorderColor: yt[25],
        tooltipCrosshairsBorder: 1,
        tooltipCrosshairsLineDash: null,
        tooltipContainerFillColor: 'rgb(255, 255, 255)',
        tooltipContainerFillOpacity: 0.95,
        tooltipContainerShadow: '0px 0px 10px #aeaeae',
        tooltipContainerBorderRadius: 3,
        tooltipTextFillColor: yt[65],
        tooltipTextFontSize: 12,
        tooltipTextLineHeight: 12,
        tooltipTextFontWeight: 'bold',
        labelFillColor: yt[65],
        labelFillColorDark: '#2c3542',
        labelFillColorLight: '#ffffff',
        labelFontSize: 12,
        labelLineHeight: 12,
        labelFontWeight: 'normal',
        labelBorderColor: null,
        labelBorder: 0,
        innerLabelFillColor: Xn[100],
        innerLabelFontSize: 12,
        innerLabelLineHeight: 12,
        innerLabelFontWeight: 'normal',
        innerLabelBorderColor: null,
        innerLabelBorder: 0,
        overflowLabelFillColor: yt[65],
        overflowLabelFontSize: 12,
        overflowLabelLineHeight: 12,
        overflowLabelFontWeight: 'normal',
        overflowLabelBorderColor: Xn[100],
        overflowLabelBorder: 1,
        labelLineBorder: 1,
        labelLineBorderColor: yt[25],
        cSliderRailHieght: 16,
        cSliderBackgroundFillColor: '#416180',
        cSliderBackgroundFillOpacity: 0.05,
        cSliderForegroundFillColor: '#5B8FF9',
        cSliderForegroundFillOpacity: 0.15,
        cSliderHandlerHeight: 24,
        cSliderHandlerWidth: 10,
        cSliderHandlerFillColor: '#F7F7F7',
        cSliderHandlerFillOpacity: 1,
        cSliderHandlerHighlightFillColor: '#FFF',
        cSliderHandlerBorderColor: '#BFBFBF',
        cSliderHandlerBorder: 1,
        cSliderHandlerBorderRadius: 2,
        cSliderTextFillColor: '#000',
        cSliderTextFillOpacity: 0.45,
        cSliderTextFontSize: 12,
        cSliderTextLineHeight: 12,
        cSliderTextFontWeight: 'normal',
        cSliderTextBorderColor: null,
        cSliderTextBorder: 0,
        scrollbarTrackFillColor: 'rgba(0,0,0,0)',
        scrollbarThumbFillColor: 'rgba(0,0,0,0.15)',
        scrollbarThumbHighlightFillColor: 'rgba(0,0,0,0.2)',
        pointFillColor: o,
        pointFillOpacity: 0.95,
        pointSize: 4,
        pointBorder: 1,
        pointBorderColor: Xn[100],
        pointBorderOpacity: 1,
        pointActiveBorderColor: yt[100],
        pointSelectedBorder: 2,
        pointSelectedBorderColor: yt[100],
        pointInactiveFillOpacity: 0.3,
        pointInactiveBorderOpacity: 0.3,
        hollowPointSize: 4,
        hollowPointBorder: 1,
        hollowPointBorderColor: o,
        hollowPointBorderOpacity: 0.95,
        hollowPointFillColor: Xn[100],
        hollowPointActiveBorder: 1,
        hollowPointActiveBorderColor: yt[100],
        hollowPointActiveBorderOpacity: 1,
        hollowPointSelectedBorder: 2,
        hollowPointSelectedBorderColor: yt[100],
        hollowPointSelectedBorderOpacity: 1,
        hollowPointInactiveBorderOpacity: 0.3,
        lineBorder: 2,
        lineBorderColor: o,
        lineBorderOpacity: 1,
        lineActiveBorder: 3,
        lineSelectedBorder: 3,
        lineInactiveBorderOpacity: 0.3,
        areaFillColor: o,
        areaFillOpacity: 0.25,
        areaActiveFillColor: o,
        areaActiveFillOpacity: 0.5,
        areaSelectedFillColor: o,
        areaSelectedFillOpacity: 0.5,
        areaInactiveFillOpacity: 0.3,
        hollowAreaBorderColor: o,
        hollowAreaBorder: 2,
        hollowAreaBorderOpacity: 1,
        hollowAreaActiveBorder: 3,
        hollowAreaActiveBorderColor: yt[100],
        hollowAreaSelectedBorder: 3,
        hollowAreaSelectedBorderColor: yt[100],
        hollowAreaInactiveBorderOpacity: 0.3,
        intervalFillColor: o,
        intervalFillOpacity: 0.95,
        intervalActiveBorder: 1,
        intervalActiveBorderColor: yt[100],
        intervalActiveBorderOpacity: 1,
        intervalSelectedBorder: 2,
        intervalSelectedBorderColor: yt[100],
        intervalSelectedBorderOpacity: 1,
        intervalInactiveBorderOpacity: 0.3,
        intervalInactiveFillOpacity: 0.3,
        hollowIntervalBorder: 2,
        hollowIntervalBorderColor: o,
        hollowIntervalBorderOpacity: 1,
        hollowIntervalFillColor: Xn[100],
        hollowIntervalActiveBorder: 2,
        hollowIntervalActiveBorderColor: yt[100],
        hollowIntervalSelectedBorder: 3,
        hollowIntervalSelectedBorderColor: yt[100],
        hollowIntervalSelectedBorderOpacity: 1,
        hollowIntervalInactiveBorderOpacity: 0.3,
      };
    return x(x({}, s), e);
  };
Ym();
function bs(e) {
  var r = e.styleSheet,
    t = r === void 0 ? {} : r,
    n = wt(e, ['styleSheet']),
    i = Ym(t);
  return _({}, Hm(i), n);
}
var WT = bs({}),
  hc = { default: WT };
function ca(e) {
  return A(hc, Mi(e), hc.default);
}
function XT(e, r) {
  hc[Mi(e)] = bs(r);
}
function Ad(e, r, t) {
  var n = t.translate(e),
    i = t.translate(r);
  return Zt(n, i);
}
function _T(e, r) {
  var t = r.coordinate,
    n = r.getXScale(),
    i = n.range,
    a = i[i.length - 1],
    o = i[0],
    s = t.invert(e),
    l = s.x;
  return t.isPolar && l > (1 + a) / 2 && (l = o), n.translate(n.invert(l));
}
function Fd(e, r, t) {
  var n = t.coordinate,
    i = t.getYScale(),
    a = i.field,
    o = n.invert(r),
    s = i.invert(o.y),
    l = Xe(e, function (u) {
      var c = u[Mt];
      return c[a][0] <= s && c[a][1] >= s;
    });
  return l || e[e.length - 1];
}
var jT = Ai(function (e) {
  if (e.isCategory) return 1;
  for (var r = e.values, t = r.length, n = e.translate(r[0]), i = n, a = 0; a < t; a++) {
    var o = r[a],
      s = e.translate(o);
    s < n && (n = s), s > i && (i = s);
  }
  return (i - n) / (t - 1);
});
function UT(e, r, t) {
  var n = r.getAttribute('position'),
    i = n.getFields(),
    a = r.scales,
    o = U(t) || !t ? i[0] : t,
    s = a[o],
    l = s ? s.getText(e[o]) : e[o] || o;
  return U(t) ? t(l, e) : l;
}
function qT(e) {
  var r = Gs(e.attributes);
  return Jt(r, function (t) {
    return fn(Kn, t.type);
  });
}
function Wm(e) {
  var r,
    t,
    n = qT(e),
    i;
  try {
    for (var a = pt(n), o = a.next(); !o.done; o = a.next()) {
      var s = o.value,
        l = s.getScale(s.type);
      if (l && l.isLinear) {
        var u = A(e.scaleDefs, l.field),
          c = Sm(l, u, s.type, e.type);
        if (c !== 'cat') {
          i = l;
          break;
        }
      }
    }
  } catch (v) {
    r = { error: v };
  } finally {
    try {
      o && !o.done && (t = a.return) && t.call(a);
    } finally {
      if (r) throw r.error;
    }
  }
  var h = e.getXScale(),
    f = e.getYScale();
  return i || f || h;
}
function ZT(e, r) {
  var t = r.field,
    n = e[t];
  if (N(n)) {
    var i = n.map(function (a) {
      return r.getText(a);
    });
    return i.join('-');
  }
  return r.getText(n);
}
function KT(e, r) {
  var t,
    n = r.getGroupScales();
  if ((n.length && (t = n[0]), t)) {
    var i = t.field;
    return t.getText(e[i]);
  }
  var a = Wm(r);
  return ka(a);
}
function Xm(e, r, t) {
  if (r.length === 0) return null;
  var n = t.type,
    i = t.getXScale(),
    a = t.getYScale(),
    o = i.field,
    s = a.field,
    l = null;
  if (n === 'heatmap' || n === 'point') {
    for (
      var u = t.coordinate, c = u.invert(e), h = i.invert(c.x), f = a.invert(c.y), v = 1 / 0, d = 0;
      d < r.length;
      d++
    ) {
      var p = r[d],
        g = p[Mt],
        y = Math.pow(g[o] - h, 2) + Math.pow(g[s] - f, 2);
      y < v && ((v = y), (l = p));
    }
    return l;
  }
  var m = r[0],
    b = r[r.length - 1],
    w = _T(e, t),
    S = m[Mt][o],
    C = m[Mt][s],
    F = b[Mt][o],
    E = a.isLinear && N(C);
  if (N(S)) {
    for (var d = 0; d < r.length; d++) {
      var I = r[d],
        g = I[Mt];
      if (i.translate(g[o][0]) <= w && i.translate(g[o][1]) >= w)
        if (E) N(l) || (l = []), l.push(I);
        else {
          l = I;
          break;
        }
    }
    N(l) && (l = Fd(l, e, t));
  } else {
    var T = void 0;
    if (!i.isLinear && i.type !== 'timeCat') {
      for (var d = 0; d < r.length; d++) {
        var I = r[d],
          g = I[Mt];
        if (Ad(g[o], w, i))
          if (E) N(l) || (l = []), l.push(I);
          else {
            l = I;
            break;
          }
        else i.translate(g[o]) <= w && ((b = I), (T = r[d + 1]));
      }
      N(l) && (l = Fd(l, e, t));
    } else {
      if ((w > i.translate(F) || w < i.translate(S)) && (w > i.max || w < i.min)) return null;
      for (var P = 0, R = r.length - 1, B = void 0; P <= R; ) {
        B = Math.floor((P + R) / 2);
        var G = r[B][Mt][o];
        if (Ad(G, w, i)) return r[B];
        i.translate(G) <= i.translate(w)
          ? ((P = B + 1), (b = r[B]), (T = r[B + 1]))
          : (R === 0 && (b = r[0]), (R = B - 1));
      }
    }
    b && T && Math.abs(i.translate(b[Mt][o]) - w) > Math.abs(i.translate(T[Mt][o]) - w) && (b = T);
  }
  var j = jT(t.getXScale());
  return !l && Math.abs(i.translate(b[Mt][o]) - w) <= j / 2 && (l = b), l;
}
function wh(e, r, t, n) {
  var i, a;
  t === void 0 && (t = ''), n === void 0 && (n = !1);
  var o = e[Mt],
    s = UT(o, r, t),
    l = r.tooltipOption,
    u = r.theme.defaultColor,
    c = [],
    h,
    f;
  function v(I, T) {
    if (n || (!$(T) && T !== '')) {
      var P = {
        title: s,
        data: o,
        mappingData: e,
        name: I,
        value: T,
        color: e.color || u,
        marker: !0,
      };
      c.push(P);
    }
  }
  if (xt(l)) {
    var d = l.fields,
      p = l.callback;
    if (p) {
      var g = d.map(function (I) {
          return e[Mt][I];
        }),
        y = p.apply(void 0, J([], q(g), !1)),
        m = x({ data: e[Mt], mappingData: e, title: s, color: e.color || u, marker: !0 }, y);
      c.push(m);
    } else {
      var b = r.scales;
      try {
        for (var w = pt(d), S = w.next(); !S.done; S = w.next()) {
          var C = S.value;
          if (!$(o[C])) {
            var F = b[C];
            (h = ka(F)), (f = F.getText(o[C])), v(h, f);
          }
        }
      } catch (I) {
        i = { error: I };
      } finally {
        try {
          S && !S.done && (a = w.return) && a.call(w);
        } finally {
          if (i) throw i.error;
        }
      }
    }
  } else {
    var E = Wm(r);
    (f = ZT(o, E)), (h = KT(o, r)), v(h, f);
  }
  return c;
}
function Ed(e, r, t, n) {
  var i,
    a,
    o = n.showNil,
    s = [],
    l = e.dataArray;
  if (!ye(l)) {
    e.sort(l);
    try {
      for (var u = pt(l), c = u.next(); !c.done; c = u.next()) {
        var h = c.value,
          f = Xm(r, h, e);
        if (f) {
          var v = e.getElementId(f),
            d = e.elementsMap[v];
          if (e.type === 'heatmap' || d.visible) {
            var p = wh(f, e, t, o);
            p.length && s.push(p);
          }
        }
      }
    } catch (g) {
      i = { error: g };
    } finally {
      try {
        c && !c.done && (a = u.return) && a.call(u);
      } finally {
        if (i) throw i.error;
      }
    }
  }
  return s;
}
function Td(e, r, t, n) {
  var i = n.showNil,
    a = [],
    o = e.container,
    s = o.getShape(r.x, r.y);
  if (s && s.get('visible') && s.get('origin')) {
    var l = s.get('origin').mappingData,
      u = wh(l, e, t, i);
    u.length && a.push(u);
  }
  return a;
}
function fc(e, r, t) {
  var n,
    i,
    a = [],
    o = e.geometries,
    s = t.shared,
    l = t.title,
    u = t.reversed;
  try {
    for (var c = pt(o), h = c.next(); !h.done; h = c.next()) {
      var f = h.value;
      if (f.visible && f.tooltipOption !== !1) {
        var v = f.type,
          d = void 0;
        ['point', 'edge', 'polygon'].includes(v)
          ? (d = Td(f, r, l, t))
          : ['area', 'line', 'path', 'heatmap'].includes(v) || s !== !1
          ? (d = Ed(f, r, l, t))
          : (d = Td(f, r, l, t)),
          d.length && (u && d.reverse(), a.push(d));
      }
    }
  } catch (p) {
    n = { error: p };
  } finally {
    try {
      h && !h.done && (i = c.return) && i.call(c);
    } finally {
      if (n) throw n.error;
    }
  }
  return a;
}
function QT(e, r, t) {
  var n,
    i,
    a = fc(e, r, t);
  try {
    for (var o = pt(e.views), s = o.next(); !s.done; s = o.next()) {
      var l = s.value;
      a = a.concat(fc(l, r, t));
    }
  } catch (u) {
    n = { error: u };
  } finally {
    try {
      s && !s.done && (i = o.return) && i.call(o);
    } finally {
      if (n) throw n.error;
    }
  }
  return a;
}
function JT(e) {
  return !at(e) && !N(e);
}
function bh(e) {
  e === void 0 && (e = 0);
  var r = N(e) ? e : [e];
  switch (r.length) {
    case 0:
      r = [0, 0, 0, 0];
      break;
    case 1:
      r = new Array(4).fill(r[0]);
      break;
    case 2:
      r = J(J([], q(r), !1), q(r), !1);
      break;
    case 3:
      r = J(J([], q(r), !1), [r[1]], !1);
      break;
    default:
      r = r.slice(0, 4);
      break;
  }
  return r;
}
var Sh = {};
function zn(e, r) {
  Sh[e] = r;
}
function tk() {
  return Object.keys(Sh);
}
function ek(e) {
  return Sh[e];
}
var rk = (function () {
    function e(r) {
      this.option = this.wrapperOption(r);
    }
    return (
      (e.prototype.update = function (r) {
        return (this.option = this.wrapperOption(r)), this;
      }),
      (e.prototype.hasAction = function (r) {
        var t = this.option.actions;
        return zs(t, function (n) {
          return n[0] === r;
        });
      }),
      (e.prototype.create = function (r, t) {
        var n = this.option,
          i = n.type,
          a = n.cfg,
          o = i === 'theta',
          s = x({ start: r, end: t }, a),
          l = F2(o ? 'polar' : i);
        return (
          (this.coordinate = new l(s)),
          (this.coordinate.type = i),
          o && (this.hasAction('transpose') || this.transpose()),
          this.execActions(),
          this.coordinate
        );
      }),
      (e.prototype.adjust = function (r, t) {
        return (
          this.coordinate.update({ start: r, end: t }),
          this.coordinate.resetMatrix(),
          this.execActions(['scale', 'rotate', 'translate']),
          this.coordinate
        );
      }),
      (e.prototype.rotate = function (r) {
        return this.option.actions.push(['rotate', r]), this;
      }),
      (e.prototype.reflect = function (r) {
        return this.option.actions.push(['reflect', r]), this;
      }),
      (e.prototype.scale = function (r, t) {
        return this.option.actions.push(['scale', r, t]), this;
      }),
      (e.prototype.transpose = function () {
        return this.option.actions.push(['transpose']), this;
      }),
      (e.prototype.getOption = function () {
        return this.option;
      }),
      (e.prototype.getCoordinate = function () {
        return this.coordinate;
      }),
      (e.prototype.wrapperOption = function (r) {
        return x({ type: 'rect', actions: [], cfg: {} }, r);
      }),
      (e.prototype.execActions = function (r) {
        var t = this,
          n = this.option.actions;
        M(n, function (i) {
          var a,
            o = q(i),
            s = o[0],
            l = o.slice(1),
            u = $(r) ? !0 : r.includes(s);
          u && (a = t.coordinate)[s].apply(a, J([], q(l), !1));
        });
      }),
      e
    );
  })(),
  Lt = (function () {
    function e(r, t, n) {
      (this.view = r), (this.gEvent = t), (this.data = n), (this.type = t.type);
    }
    return (
      (e.fromData = function (r, t, n) {
        return new e(r, new _a(t, {}), n);
      }),
      Object.defineProperty(e.prototype, 'target', {
        get: function () {
          return this.gEvent.target;
        },
        enumerable: !1,
        configurable: !0,
      }),
      Object.defineProperty(e.prototype, 'event', {
        get: function () {
          return this.gEvent.originalEvent;
        },
        enumerable: !1,
        configurable: !0,
      }),
      Object.defineProperty(e.prototype, 'x', {
        get: function () {
          return this.gEvent.x;
        },
        enumerable: !1,
        configurable: !0,
      }),
      Object.defineProperty(e.prototype, 'y', {
        get: function () {
          return this.gEvent.y;
        },
        enumerable: !1,
        configurable: !0,
      }),
      Object.defineProperty(e.prototype, 'clientX', {
        get: function () {
          return this.gEvent.clientX;
        },
        enumerable: !1,
        configurable: !0,
      }),
      Object.defineProperty(e.prototype, 'clientY', {
        get: function () {
          return this.gEvent.clientY;
        },
        enumerable: !1,
        configurable: !0,
      }),
      (e.prototype.toString = function () {
        return '[Event (type='.concat(this.type, ')]');
      }),
      (e.prototype.clone = function () {
        return new e(this.view, this.gEvent, this.data);
      }),
      e
    );
  })();
function nk(e) {
  var r = e.getController('axis'),
    t = e.getController('legend'),
    n = e.getController('annotation'),
    i = e.getController('slider'),
    a = e.getController('scrollbar');
  [r, i, a, t, n].forEach(function (o) {
    o && o.layout();
  });
}
var ik = (function () {
    function e() {
      (this.scales = new Map()), (this.syncScales = new Map());
    }
    return (
      (e.prototype.createScale = function (r, t, n, i) {
        var a = n,
          o = this.getScaleMeta(i);
        if (t.length === 0 && o) {
          var s = o.scale,
            l = { type: s.type };
          s.isCategory && (l.values = s.values), (a = _(l, o.scaleDef, n));
        }
        var u = hT(r, t, a);
        return this.cacheScale(u, n, i), u;
      }),
      (e.prototype.sync = function (r, t) {
        var n = this;
        this.syncScales.forEach(function (i, a) {
          var o = Number.MAX_SAFE_INTEGER,
            s = Number.MIN_SAFE_INTEGER,
            l = [];
          M(i, function (u) {
            var c = n.getScale(u);
            (s = at(c.max) ? Math.max(s, c.max) : s),
              (o = at(c.min) ? Math.min(o, c.min) : o),
              M(c.values, function (h) {
                l.includes(h) || l.push(h);
              });
          }),
            M(i, function (u) {
              var c = n.getScale(u);
              if (c.isContinuous) c.change({ min: o, max: s, values: l });
              else if (c.isCategory) {
                var h = c.range,
                  f = n.getScaleMeta(u);
                l && !A(f, ['scaleDef', 'range']) && (h = Cm(_({}, c, { values: l }), r, t)),
                  c.change({ values: l, range: h });
              }
            });
        });
      }),
      (e.prototype.cacheScale = function (r, t, n) {
        var i = this.getScaleMeta(n);
        i && i.scale.type === r.type
          ? (fT(i.scale, r), (i.scaleDef = t))
          : ((i = { key: n, scale: r, scaleDef: t }), this.scales.set(n, i));
        var a = this.getSyncKey(i);
        if (((i.syncKey = a), this.removeFromSyncScales(n), a)) {
          var o = this.syncScales.get(a);
          o || ((o = []), this.syncScales.set(a, o)), o.push(n);
        }
      }),
      (e.prototype.getScale = function (r) {
        var t = this.getScaleMeta(r);
        if (!t) {
          var n = Ht(r.split('-')),
            i = this.syncScales.get(n);
          i && i.length && (t = this.getScaleMeta(i[0]));
        }
        return t && t.scale;
      }),
      (e.prototype.deleteScale = function (r) {
        var t = this.getScaleMeta(r);
        if (t) {
          var n = t.syncKey,
            i = this.syncScales.get(n);
          if (i && i.length) {
            var a = i.indexOf(r);
            a !== -1 && i.splice(a, 1);
          }
        }
        this.scales.delete(r);
      }),
      (e.prototype.clear = function () {
        this.scales.clear(), this.syncScales.clear();
      }),
      (e.prototype.removeFromSyncScales = function (r) {
        var t = this;
        this.syncScales.forEach(function (n, i) {
          var a = n.indexOf(r);
          if (a !== -1) return n.splice(a, 1), n.length === 0 && t.syncScales.delete(i), !1;
        });
      }),
      (e.prototype.getSyncKey = function (r) {
        var t = r.scale,
          n = r.scaleDef,
          i = t.field,
          a = A(n, ['sync']);
        return a === !0 ? i : a === !1 ? void 0 : a;
      }),
      (e.prototype.getScaleMeta = function (r) {
        return this.scales.get(r);
      }),
      e
    );
  })(),
  Zo = (function () {
    function e(r, t, n, i) {
      r === void 0 && (r = 0),
        t === void 0 && (t = 0),
        n === void 0 && (n = 0),
        i === void 0 && (i = 0),
        (this.top = r),
        (this.right = t),
        (this.bottom = n),
        (this.left = i);
    }
    return (
      (e.instance = function (r, t, n, i) {
        return (
          r === void 0 && (r = 0),
          t === void 0 && (t = 0),
          n === void 0 && (n = 0),
          i === void 0 && (i = 0),
          new e(r, t, n, i)
        );
      }),
      (e.prototype.max = function (r) {
        var t = q(r, 4),
          n = t[0],
          i = t[1],
          a = t[2],
          o = t[3];
        return (
          (this.top = Math.max(this.top, n)),
          (this.right = Math.max(this.right, i)),
          (this.bottom = Math.max(this.bottom, a)),
          (this.left = Math.max(this.left, o)),
          this
        );
      }),
      (e.prototype.shrink = function (r) {
        var t = q(r, 4),
          n = t[0],
          i = t[1],
          a = t[2],
          o = t[3];
        return (this.top += n), (this.right += i), (this.bottom += a), (this.left += o), this;
      }),
      (e.prototype.inc = function (r, t) {
        var n = r.width,
          i = r.height;
        switch (t) {
          case H.TOP:
          case H.TOP_LEFT:
          case H.TOP_RIGHT:
            this.top += i;
            break;
          case H.RIGHT:
          case H.RIGHT_TOP:
          case H.RIGHT_BOTTOM:
            this.right += n;
            break;
          case H.BOTTOM:
          case H.BOTTOM_LEFT:
          case H.BOTTOM_RIGHT:
            this.bottom += i;
            break;
          case H.LEFT:
          case H.LEFT_TOP:
          case H.LEFT_BOTTOM:
            this.left += n;
            break;
        }
        return this;
      }),
      (e.prototype.getPadding = function () {
        return [this.top, this.right, this.bottom, this.left];
      }),
      (e.prototype.clone = function () {
        return new (e.bind.apply(e, J([void 0], q(this.getPadding()), !1)))();
      }),
      e
    );
  })();
function ak(e) {
  var r = e.padding;
  if (!JT(r)) return new (Zo.bind.apply(Zo, J([void 0], q(bh(r)), !1)))();
  var t = e.viewBBox,
    n = new Zo(),
    i = [],
    a = [],
    o = [];
  return (
    M(e.getComponents(), function (s) {
      var l = s.type;
      l === Xt.AXIS
        ? i.push(s)
        : [Xt.LEGEND, Xt.SLIDER, Xt.SCROLLBAR].includes(l)
        ? a.push(s)
        : l !== Xt.GRID && l !== Xt.TOOLTIP && o.push(s);
    }),
    M(i, function (s) {
      var l = s.component,
        u = l.getLayoutBBox(),
        c = new le(u.x, u.y, u.width, u.height),
        h = c.exceed(t);
      n.max(h);
    }),
    M(a, function (s) {
      var l = s.component,
        u = s.direction,
        c = l.getLayoutBBox(),
        h = l.get('padding'),
        f = new le(c.x, c.y, c.width, c.height).expand(h);
      n.inc(f, u);
    }),
    M(o, function (s) {
      var l = s.component,
        u = s.direction,
        c = l.getLayoutBBox(),
        h = new le(c.x, c.y, c.width, c.height);
      n.inc(h, u);
    }),
    n
  );
}
function ok(e, r, t) {
  var n = t.instance();
  r.forEach(function (i) {
    i.autoPadding = n.max(i.autoPadding.getPadding());
  });
}
var _m = (function (e) {
  k(r, e);
  function r(t) {
    var n = e.call(this, { visible: t.visible }) || this;
    (n.views = []),
      (n.geometries = []),
      (n.controllers = []),
      (n.interactions = {}),
      (n.limitInPlot = !1),
      (n.options = { data: [], animate: !0 }),
      (n.usedControllers = tk()),
      (n.scalePool = new ik()),
      (n.layoutFunc = nk),
      (n.isPreMouseInPlot = !1),
      (n.isDataChanged = !1),
      (n.isCoordinateChanged = !1),
      (n.createdScaleKeys = new Map()),
      (n.onCanvasEvent = function (b) {
        var w = b.name;
        if (!w.includes(':')) {
          var S = n.createViewEvent(b);
          n.doPlotEvent(S), n.emit(w, S);
        }
      }),
      (n.onDelegateEvents = function (b) {
        var w = b.name;
        if (w.includes(':')) {
          var S = n.createViewEvent(b);
          n.emit(w, S);
        }
      });
    var i = t.id,
      a = i === void 0 ? rn('view') : i,
      o = t.parent,
      s = t.canvas,
      l = t.backgroundGroup,
      u = t.middleGroup,
      c = t.foregroundGroup,
      h = t.region,
      f = h === void 0 ? { start: { x: 0, y: 0 }, end: { x: 1, y: 1 } } : h,
      v = t.padding,
      d = t.appendPadding,
      p = t.theme,
      g = t.options,
      y = t.limitInPlot,
      m = t.syncViewPadding;
    return (
      (n.parent = o),
      (n.canvas = s),
      (n.backgroundGroup = l),
      (n.middleGroup = u),
      (n.foregroundGroup = c),
      (n.region = f),
      (n.padding = v),
      (n.appendPadding = d),
      (n.options = x(x({}, n.options), g)),
      (n.limitInPlot = y),
      (n.id = a),
      (n.syncViewPadding = m),
      (n.themeObject = xt(p) ? _({}, ca('default'), bs(p)) : ca(p)),
      n.init(),
      n
    );
  }
  return (
    (r.prototype.setLayout = function (t) {
      this.layoutFunc = t;
    }),
    (r.prototype.init = function () {
      this.calculateViewBBox(),
        this.initEvents(),
        this.initComponentController(),
        this.initOptions();
    }),
    (r.prototype.render = function (t, n) {
      t === void 0 && (t = !1),
        this.emit(ut.BEFORE_RENDER, Lt.fromData(this, ut.BEFORE_RENDER, n)),
        this.paint(t),
        this.emit(ut.AFTER_RENDER, Lt.fromData(this, ut.AFTER_RENDER, n)),
        this.visible === !1 && this.changeVisible(!1);
    }),
    (r.prototype.clear = function () {
      var t = this;
      this.emit(ut.BEFORE_CLEAR),
        (this.filteredData = []),
        (this.coordinateInstance = void 0),
        (this.isDataChanged = !1),
        (this.isCoordinateChanged = !1);
      for (var n = this.geometries, i = 0; i < n.length; i++)
        n[i].clear(), n[i].container.remove(!0), n[i].labelsContainer.remove(!0);
      this.geometries = [];
      for (var a = this.controllers, i = 0; i < a.length; i++)
        a[i].name === 'annotation' ? a[i].clear(!0) : a[i].clear();
      this.createdScaleKeys.forEach(function (s, l) {
        t.getRootView().scalePool.deleteScale(l);
      }),
        this.createdScaleKeys.clear();
      for (var o = this.views, i = 0; i < o.length; i++) o[i].clear();
      this.emit(ut.AFTER_CLEAR);
    }),
    (r.prototype.destroy = function () {
      this.emit(ut.BEFORE_DESTROY);
      var t = this.interactions;
      M(t, function (s) {
        s && s.destroy();
      }),
        this.clear();
      for (var n = this.controllers, i = 0, a = n.length; i < a; i++) {
        var o = n[i];
        o.destroy();
      }
      this.backgroundGroup.remove(!0),
        this.middleGroup.remove(!0),
        this.foregroundGroup.remove(!0),
        e.prototype.destroy.call(this);
    }),
    (r.prototype.changeVisible = function (t) {
      e.prototype.changeVisible.call(this, t);
      for (var n = this.geometries, i = 0, a = n.length; i < a; i++) {
        var o = n[i];
        o.changeVisible(t);
      }
      for (var s = this.controllers, i = 0, a = s.length; i < a; i++) {
        var l = s[i];
        l.changeVisible(t);
      }
      return (
        this.foregroundGroup.set('visible', t),
        this.middleGroup.set('visible', t),
        this.backgroundGroup.set('visible', t),
        this.getCanvas().draw(),
        this
      );
    }),
    (r.prototype.data = function (t) {
      return Gt(this.options, 'data', t), (this.isDataChanged = !0), this;
    }),
    (r.prototype.source = function (t) {
      return (
        console.warn('This method will be removed at G2 V4.1. Please use chart.data() instead.'),
        this.data(t)
      );
    }),
    (r.prototype.filter = function (t, n) {
      return U(n)
        ? (Gt(this.options, ['filters', t], n), this)
        : (!n && A(this.options, ['filters', t]) && delete this.options.filters[t], this);
    }),
    (r.prototype.axis = function (t, n) {
      return ui(t) ? Gt(this.options, ['axes'], t) : Gt(this.options, ['axes', t], n), this;
    }),
    (r.prototype.legend = function (t, n) {
      return (
        ui(t)
          ? Gt(this.options, ['legends'], t)
          : et(t)
          ? (Gt(this.options, ['legends', t], n),
            nr(n) &&
              n != null &&
              n.selected &&
              Gt(this.options, ['filters', t], function (i) {
                var a;
                return (a = n == null ? void 0 : n.selected[i]) !== null && a !== void 0 ? a : !0;
              }))
          : Gt(this.options, ['legends'], t),
        this
      );
    }),
    (r.prototype.scale = function (t, n) {
      var i = this;
      return (
        et(t)
          ? Gt(this.options, ['scales', t], n)
          : xt(t) &&
            M(t, function (a, o) {
              Gt(i.options, ['scales', o], a);
            }),
        this
      );
    }),
    (r.prototype.tooltip = function (t) {
      return Gt(this.options, 'tooltip', t), this;
    }),
    (r.prototype.annotation = function () {
      return this.getController('annotation');
    }),
    (r.prototype.guide = function () {
      return (
        console.warn(
          'This method will be removed at G2 V4.1. Please use chart.annotation() instead.',
        ),
        this.annotation()
      );
    }),
    (r.prototype.coordinate = function (t, n) {
      return (
        et(t)
          ? Gt(this.options, 'coordinate', { type: t, cfg: n })
          : Gt(this.options, 'coordinate', t),
        this.coordinateController.update(this.options.coordinate),
        this.coordinateController
      );
    }),
    (r.prototype.coord = function (t, n) {
      return (
        console.warn(
          'This method will be removed at G2 V4.1. Please use chart.coordinate() instead.',
        ),
        this.coordinate(t, n)
      );
    }),
    (r.prototype.facet = function (t, n) {
      this.facetInstance && this.facetInstance.destroy();
      var i = gT(t);
      if (!i) throw new Error("facet '".concat(t, "' is not exist!"));
      return (this.facetInstance = new i(this, x(x({}, n), { type: t }))), this;
    }),
    (r.prototype.animate = function (t) {
      return Gt(this.options, 'animate', t), this;
    }),
    (r.prototype.updateOptions = function (t) {
      return (
        this.clear(),
        bt(this.options, t),
        this.views.forEach(function (n) {
          return n.destroy();
        }),
        (this.views = []),
        this.initOptions(),
        (this.coordinateBBox = this.viewBBox),
        this
      );
    }),
    (r.prototype.option = function (t, n) {
      if (r.prototype[t])
        throw new Error(
          `Can't use built in variable name "`.concat(t, '", please change another one.'),
        );
      return Gt(this.options, t, n), this;
    }),
    (r.prototype.theme = function (t) {
      return (this.themeObject = xt(t) ? _({}, this.themeObject, bs(t)) : ca(t)), this;
    }),
    (r.prototype.interaction = function (t, n) {
      var i = this.interactions[t];
      i && i.destroy();
      var a = NT(t, this, n);
      return a && (a.init(), (this.interactions[t] = a)), this;
    }),
    (r.prototype.removeInteraction = function (t) {
      var n = this.interactions[t];
      n && (n.destroy(), (this.interactions[t] = void 0));
    }),
    (r.prototype.changeData = function (t) {
      (this.isDataChanged = !0),
        this.emit(ut.BEFORE_CHANGE_DATA, Lt.fromData(this, ut.BEFORE_CHANGE_DATA, null)),
        this.data(t),
        this.paint(!0);
      for (var n = this.views, i = 0, a = n.length; i < a; i++) {
        var o = n[i];
        o.changeData(t);
      }
      this.emit(ut.AFTER_CHANGE_DATA, Lt.fromData(this, ut.AFTER_CHANGE_DATA, null));
    }),
    (r.prototype.createView = function (t) {
      this.parent &&
        this.parent.parent &&
        console.warn(
          'The view nesting recursive feature will be removed at G2 V4.1. Please avoid to use it.',
        );
      var n = {
          data: this.options.data,
          scales: oe(this.options.scales),
          axes: oe(this.options.axes),
          coordinate: oe(this.coordinateController.getOption()),
          tooltip: oe(this.options.tooltip),
          legends: oe(this.options.legends),
          animate: this.options.animate,
          visible: this.visible,
        },
        i = new r(
          x(
            x(
              {
                parent: this,
                canvas: this.canvas,
                backgroundGroup: this.backgroundGroup.addGroup({ zIndex: ri.BG }),
                middleGroup: this.middleGroup.addGroup({ zIndex: ri.MID }),
                foregroundGroup: this.foregroundGroup.addGroup({ zIndex: ri.FORE }),
                theme: this.themeObject,
                padding: this.padding,
              },
              t,
            ),
            { options: x(x({}, n), A(t, 'options', {})) },
          ),
        );
      return this.views.push(i), i;
    }),
    (r.prototype.view = function (t) {
      return (
        console.warn(
          'This method will be removed at G2 V4.1. Please use chart.createView() instead.',
        ),
        this.createView(t)
      );
    }),
    (r.prototype.removeView = function (t) {
      var n = _S(this.views, function (i) {
        return i === t;
      })[0];
      return n && n.destroy(), n;
    }),
    (r.prototype.getCoordinate = function () {
      return this.coordinateInstance;
    }),
    (r.prototype.getTheme = function () {
      return this.themeObject;
    }),
    (r.prototype.getXScale = function () {
      var t = this.geometries[0];
      return t ? t.getXScale() : null;
    }),
    (r.prototype.getYScales = function () {
      var t = {},
        n = [];
      return (
        this.geometries.forEach(function (i) {
          var a = i.getYScale(),
            o = a.field;
          t[o] || ((t[o] = !0), n.push(a));
        }),
        n
      );
    }),
    (r.prototype.getScalesByDim = function (t) {
      for (var n = this.geometries, i = {}, a = 0, o = n.length; a < o; a++) {
        var s = n[a],
          l = t === 'x' ? s.getXScale() : s.getYScale();
        l && !i[l.field] && (i[l.field] = l);
      }
      return i;
    }),
    (r.prototype.getScale = function (t, n) {
      var i = n || this.getScaleKey(t);
      return this.getRootView().scalePool.getScale(i);
    }),
    (r.prototype.getScaleByField = function (t, n) {
      return this.getScale(t, n);
    }),
    (r.prototype.getOptions = function () {
      return this.options;
    }),
    (r.prototype.getData = function () {
      return this.filteredData;
    }),
    (r.prototype.getOriginalData = function () {
      return this.options.data;
    }),
    (r.prototype.getPadding = function () {
      return this.autoPadding.getPadding();
    }),
    (r.prototype.getGeometries = function () {
      return this.geometries;
    }),
    (r.prototype.getElements = function () {
      return ie(
        this.geometries,
        function (t, n) {
          return t.concat(n.getElements());
        },
        [],
      );
    }),
    (r.prototype.getElementsBy = function (t) {
      return this.getElements().filter(function (n) {
        return t(n);
      });
    }),
    (r.prototype.getLayer = function (t) {
      return t === $t.BG
        ? this.backgroundGroup
        : t === $t.MID
        ? this.middleGroup
        : t === $t.FORE
        ? this.foregroundGroup
        : this.foregroundGroup;
    }),
    (r.prototype.isPointInPlot = function (t) {
      return sT(this.getCoordinate(), t);
    }),
    (r.prototype.getLegendAttributes = function () {
      return Ee(
        this.geometries.map(function (t) {
          return t.getGroupAttributes();
        }),
      );
    }),
    (r.prototype.getGroupScales = function () {
      var t = this.geometries.map(function (n) {
        return n.getGroupScales();
      });
      return Rr(Ee(t));
    }),
    (r.prototype.getCanvas = function () {
      return this.getRootView().canvas;
    }),
    (r.prototype.getRootView = function () {
      for (var t = this; ; ) {
        if (t.parent) {
          t = t.parent;
          continue;
        }
        break;
      }
      return t;
    }),
    (r.prototype.getXY = function (t) {
      var n = this.getCoordinate(),
        i = this.getScalesByDim('x'),
        a = this.getScalesByDim('y'),
        o,
        s;
      if (
        (M(t, function (l, u) {
          i[u] && (o = i[u].scale(l)), a[u] && (s = a[u].scale(l));
        }),
        !$(o) && !$(s))
      )
        return n.convert({ x: o, y: s });
    }),
    (r.prototype.getController = function (t) {
      return Xe(this.controllers, function (n) {
        return n.name === t;
      });
    }),
    (r.prototype.showTooltip = function (t) {
      var n = this.getController('tooltip');
      return n && n.showTooltip(t), this;
    }),
    (r.prototype.hideTooltip = function () {
      var t = this.getController('tooltip');
      return t && t.hideTooltip(), this;
    }),
    (r.prototype.lockTooltip = function () {
      var t = this.getController('tooltip');
      return t && t.lockTooltip(), this;
    }),
    (r.prototype.unlockTooltip = function () {
      var t = this.getController('tooltip');
      return t && t.unlockTooltip(), this;
    }),
    (r.prototype.isTooltipLocked = function () {
      var t = this.getController('tooltip');
      return t && t.isTooltipLocked();
    }),
    (r.prototype.getTooltipItems = function (t) {
      var n = this.getController('tooltip');
      return n ? n.getTooltipItems(t) : [];
    }),
    (r.prototype.getSnapRecords = function (t) {
      for (var n = this.geometries, i = [], a = 0, o = n.length; a < o; a++) {
        var s = n[a],
          l = s.dataArray;
        s.sort(l);
        for (var u = void 0, c = 0, h = l.length; c < h; c++) {
          var f = l[c];
          (u = Xm(t, f, s)), u && i.push(u);
        }
      }
      for (var v = this.views, a = 0, o = v.length; a < o; a++) {
        var d = v[a],
          p = d.getSnapRecords(t);
        i = i.concat(p);
      }
      return i;
    }),
    (r.prototype.getComponents = function () {
      for (var t = [], n = this.controllers, i = 0, a = n.length; i < a; i++) {
        var o = n[i];
        t = t.concat(o.getComponents());
      }
      return t;
    }),
    (r.prototype.filterData = function (t) {
      var n = this.options.filters;
      return _t(n) === 0
        ? t
        : Jt(t, function (i, a) {
            var o = Object.keys(n);
            return o.every(function (s) {
              var l = n[s];
              return l(i[s], i, a);
            });
          });
    }),
    (r.prototype.filterFieldData = function (t, n) {
      var i = this.options.filters,
        a = A(i, t);
      return pn(a)
        ? n
        : n.filter(function (o, s) {
            return a(o[t], o, s);
          });
    }),
    (r.prototype.adjustCoordinate = function () {
      var t = this.getCoordinate(),
        n = t.start,
        i = t.end,
        a = this.coordinateBBox.bl,
        o = this.coordinateBBox.tr;
      if (Dt(n, a) && Dt(i, o)) {
        this.isCoordinateChanged = !1;
        return;
      }
      (this.isCoordinateChanged = !0),
        (this.coordinateInstance = this.coordinateController.adjust(a, o));
    }),
    (r.prototype.paint = function (t) {
      this.renderDataRecursive(t),
        this.syncScale(),
        this.emit(ut.BEFORE_PAINT),
        this.renderPaddingRecursive(t),
        this.renderLayoutRecursive(t),
        this.renderBackgroundStyleShape(),
        this.renderPaintRecursive(t),
        this.emit(ut.AFTER_PAINT),
        (this.isDataChanged = !1);
    }),
    (r.prototype.renderBackgroundStyleShape = function () {
      if (!this.parent) {
        var t = A(this.themeObject, 'background');
        if (t) {
          this.backgroundStyleRectShape ||
            ((this.backgroundStyleRectShape = this.backgroundGroup.addShape('rect', {
              attrs: {},
              zIndex: -1,
              capture: !1,
            })),
            this.backgroundStyleRectShape.toBack());
          var n = this.viewBBox,
            i = n.x,
            a = n.y,
            o = n.width,
            s = n.height;
          this.backgroundStyleRectShape.attr({ fill: t, x: i, y: a, width: o, height: s });
        } else
          this.backgroundStyleRectShape &&
            (this.backgroundStyleRectShape.remove(!0), (this.backgroundStyleRectShape = void 0));
      }
    }),
    (r.prototype.renderPaddingRecursive = function (t) {
      this.calculateViewBBox(),
        this.adjustCoordinate(),
        this.initComponents(t),
        (this.autoPadding = ak(this).shrink(bh(this.appendPadding))),
        (this.coordinateBBox = this.viewBBox.shrink(this.autoPadding.getPadding())),
        this.adjustCoordinate();
      var n = this.controllers.find(function (l) {
        return l.name === 'tooltip';
      });
      n.update();
      for (var i = this.views, a = 0, o = i.length; a < o; a++) {
        var s = i[a];
        s.renderPaddingRecursive(t);
      }
    }),
    (r.prototype.renderLayoutRecursive = function (t) {
      var n =
        this.syncViewPadding === !0 ? ok : U(this.syncViewPadding) ? this.syncViewPadding : void 0;
      n &&
        (n(this, this.views, Zo),
        this.views.forEach(function (l) {
          (l.coordinateBBox = l.viewBBox.shrink(l.autoPadding.getPadding())), l.adjustCoordinate();
        })),
        this.doLayout();
      for (var i = this.views, a = 0, o = i.length; a < o; a++) {
        var s = i[a];
        s.renderLayoutRecursive(t);
      }
    }),
    (r.prototype.renderPaintRecursive = function (t) {
      var n = this.middleGroup;
      if (this.limitInPlot) {
        var i = gh(this.coordinateInstance),
          a = i.type,
          o = i.attrs;
        n.setClip({ type: a, attrs: o });
      } else n.setClip(void 0);
      this.paintGeometries(t), this.renderComponents(t);
      for (var s = this.views, l = 0, u = s.length; l < u; l++) {
        var c = s[l];
        c.renderPaintRecursive(t);
      }
    }),
    (r.prototype.createScale = function (t, n, i, a) {
      var o = A(this.options.scales, [t]),
        s = x(x({}, o), i);
      return this.parent
        ? this.parent.createScale(t, n, s, a)
        : this.scalePool.createScale(t, n, s, a);
    }),
    (r.prototype.renderDataRecursive = function (t) {
      this.doFilterData(), this.createCoordinate(), this.initGeometries(t), this.renderFacet(t);
      for (var n = this.views, i = 0, a = n.length; i < a; i++) {
        var o = n[i];
        o.renderDataRecursive(t);
      }
    }),
    (r.prototype.calculateViewBBox = function () {
      var t, n, i, a;
      if (this.parent) {
        var o = this.parent.coordinateBBox;
        (t = o.x), (n = o.y), (i = o.width), (a = o.height);
      } else (t = 0), (n = 0), (i = this.canvas.get('width')), (a = this.canvas.get('height'));
      var s = this.region,
        l = s.start,
        u = s.end,
        c = new le(t + i * l.x, n + a * l.y, i * (u.x - l.x), a * (u.y - l.y));
      (!this.viewBBox || !this.viewBBox.isEqual(c)) &&
        (this.viewBBox = new le(t + i * l.x, n + a * l.y, i * (u.x - l.x), a * (u.y - l.y))),
        (this.coordinateBBox = this.viewBBox);
    }),
    (r.prototype.initEvents = function () {
      this.foregroundGroup.on('*', this.onDelegateEvents),
        this.middleGroup.on('*', this.onDelegateEvents),
        this.backgroundGroup.on('*', this.onDelegateEvents),
        this.canvas.on('*', this.onCanvasEvent);
    }),
    (r.prototype.initComponentController = function () {
      for (var t = this.usedControllers, n = 0, i = t.length; n < i; n++) {
        var a = t[n],
          o = ek(a);
        o && this.controllers.push(new o(this));
      }
    }),
    (r.prototype.createViewEvent = function (t) {
      var n = t.shape,
        i = t.name,
        a = n ? n.get('origin') : null,
        o = new Lt(this, t, a);
      return (o.type = i), o;
    }),
    (r.prototype.doPlotEvent = function (t) {
      var n = t.type,
        i = t.x,
        a = t.y,
        o = { x: i, y: a },
        s = [
          'mousedown',
          'mouseup',
          'mousemove',
          'mouseleave',
          'mousewheel',
          'touchstart',
          'touchmove',
          'touchend',
          'touchcancel',
          'click',
          'dblclick',
          'contextmenu',
        ];
      if (s.includes(n)) {
        var l = this.isPointInPlot(o),
          u = t.clone();
        if (l) {
          var c = 'plot:'.concat(n);
          (u.type = c),
            this.emit(c, u),
            (n === 'mouseleave' || n === 'touchend') && (this.isPreMouseInPlot = !1);
        }
        n === 'mousemove' || n === 'touchmove'
          ? (this.isPreMouseInPlot && !l
              ? (n === 'mousemove' && ((u.type = ce.MOUSE_LEAVE), this.emit(ce.MOUSE_LEAVE, u)),
                (u.type = ce.LEAVE),
                this.emit(ce.LEAVE, u))
              : !this.isPreMouseInPlot &&
                l &&
                (n === 'mousemove' && ((u.type = ce.MOUSE_ENTER), this.emit(ce.MOUSE_ENTER, u)),
                (u.type = ce.ENTER),
                this.emit(ce.ENTER, u)),
            (this.isPreMouseInPlot = l))
          : (n === 'mouseleave' || n === 'touchend') &&
            this.isPreMouseInPlot &&
            (n === 'mouseleave' && ((u.type = ce.MOUSE_LEAVE), this.emit(ce.MOUSE_LEAVE, u)),
            (u.type = ce.LEAVE),
            this.emit(ce.LEAVE, u),
            (this.isPreMouseInPlot = !1));
      }
    }),
    (r.prototype.doFilterData = function () {
      var t = this.options.data;
      this.filteredData = this.filterData(t);
    }),
    (r.prototype.initGeometries = function (t) {
      this.createOrUpdateScales();
      for (
        var n = this.getCoordinate(),
          i = A(this.options, 'scales', {}),
          a = this.geometries,
          o = 0,
          s = a.length;
        o < s;
        o++
      ) {
        var l = a[o];
        l.scales = this.getGeometryScales();
        var u = {
          coordinate: n,
          scaleDefs: i,
          data: this.filteredData,
          theme: this.themeObject,
          isDataChanged: this.isDataChanged,
          isCoordinateChanged: this.isCoordinateChanged,
        };
        t ? l.update(u) : l.init(u);
      }
      this.adjustScales();
    }),
    (r.prototype.createOrUpdateScales = function () {
      for (
        var t = this.getScaleFields(),
          n = this.getGroupedFields(),
          i = this.getOptions(),
          a = i.data,
          o = i.scales,
          s = o === void 0 ? {} : o,
          l = this.filteredData,
          u = 0,
          c = t.length;
        u < c;
        u++
      ) {
        var h = t[u],
          f = s[h],
          v = this.getScaleKey(h);
        this.createScale(h, n.includes(h) ? a : l, f, v), this.createdScaleKeys.set(v, !0);
      }
    }),
    (r.prototype.syncScale = function () {
      this.getRootView().scalePool.sync(this.getCoordinate(), this.theme);
    }),
    (r.prototype.getGeometryScales = function () {
      for (var t = this.getScaleFields(), n = {}, i = 0; i < t.length; i++) {
        var a = t[i];
        n[a] = this.getScaleByField(a);
      }
      return n;
    }),
    (r.prototype.getScaleFields = function () {
      for (var t = [], n = new Map(), i = this.geometries, a = 0; a < i.length; a++) {
        var o = i[a],
          s = o.getScaleFields();
        Rr(s, t, n);
      }
      return t;
    }),
    (r.prototype.getGroupedFields = function () {
      for (var t = [], n = new Map(), i = this.geometries, a = 0; a < i.length; a++) {
        var o = i[a],
          s = o.getGroupFields();
        Rr(s, t, n);
      }
      return t;
    }),
    (r.prototype.adjustScales = function () {
      this.adjustCategoryScaleRange();
    }),
    (r.prototype.adjustCategoryScaleRange = function () {
      var t = this,
        n = J([this.getXScale()], q(this.getYScales()), !1).filter(function (o) {
          return !!o;
        }),
        i = this.getCoordinate(),
        a = this.options.scales;
      M(n, function (o) {
        var s = o.field,
          l = o.values,
          u = o.isCategory,
          c = o.isIdentity;
        (u || c) && l && !A(a, [s, 'range']) && (o.range = Cm(o, i, t.theme));
      });
    }),
    (r.prototype.initComponents = function (t) {
      for (var n = this.controllers, i = 0; i < n.length; i++) {
        var a = n[i];
        t ? a.update() : (a.clear(), a.render());
      }
    }),
    (r.prototype.doLayout = function () {
      this.layoutFunc(this);
    }),
    (r.prototype.createCoordinate = function () {
      var t = this.coordinateBBox.bl,
        n = this.coordinateBBox.tr;
      this.coordinateInstance = this.coordinateController.create(t, n);
    }),
    (r.prototype.paintGeometries = function (t) {
      for (
        var n = this.options.animate,
          i = this.getCoordinate(),
          a = {
            x: this.viewBBox.x,
            y: this.viewBBox.y,
            minX: this.viewBBox.minX,
            minY: this.viewBBox.minY,
            maxX: this.viewBBox.maxX,
            maxY: this.viewBBox.maxY,
            width: this.viewBBox.width,
            height: this.viewBBox.height,
          },
          o = this.geometries,
          s = 0;
        s < o.length;
        s++
      ) {
        var l = o[s];
        (l.coordinate = i), (l.canvasRegion = a), n || l.animate(!1), l.paint(t);
      }
    }),
    (r.prototype.renderComponents = function (t) {
      for (var n = this.getComponents(), i = 0; i < n.length; i++) {
        var a = n[i];
        a.component.render();
      }
    }),
    (r.prototype.renderFacet = function (t) {
      this.facetInstance &&
        (t
          ? this.facetInstance.update()
          : (this.facetInstance.clear(), this.facetInstance.init(), this.facetInstance.render()));
    }),
    (r.prototype.initOptions = function () {
      var t = this,
        n = this.options,
        i = n.geometries,
        a = i === void 0 ? [] : i,
        o = n.interactions,
        s = o === void 0 ? [] : o,
        l = n.views,
        u = l === void 0 ? [] : l,
        c = n.annotations,
        h = c === void 0 ? [] : c,
        f = n.coordinate,
        v = n.events,
        d = n.facets;
      this.coordinateController
        ? f && this.coordinateController.update(f)
        : (this.coordinateController = new rk(f));
      for (var p = 0; p < a.length; p++) {
        var g = a[p];
        this.createGeometry(g);
      }
      for (var y = 0; y < s.length; y++) {
        var m = s[y],
          b = m.type,
          w = m.cfg;
        this.interaction(b, w);
      }
      for (var S = 0; S < u.length; S++) {
        var C = u[S];
        this.createView(C);
      }
      for (var F = this.getController('annotation'), E = 0; E < h.length; E++) {
        var I = h[E];
        F.annotation(I);
      }
      v &&
        M(v, function (T, P) {
          t.on(P, T);
        }),
        d &&
          M(d, function (T) {
            var P = T.type,
              R = wt(T, ['type']);
            t.facet(P, R);
          });
    }),
    (r.prototype.createGeometry = function (t) {
      var n = t.type,
        i = t.cfg,
        a = i === void 0 ? {} : i;
      if (this[n]) {
        var o = this[n](a);
        M(t, function (s, l) {
          U(o[l]) && o[l](s);
        });
      }
    }),
    (r.prototype.getScaleKey = function (t) {
      return ''.concat(this.id, '-').concat(t);
    }),
    r
  );
})(_c);
function hr(e, r) {
  _m.prototype[e.toLowerCase()] = function (t) {
    t === void 0 && (t = {});
    var n = x(
        {
          container: this.middleGroup.addGroup(),
          labelsContainer: this.foregroundGroup.addGroup(),
        },
        t,
      ),
      i = new r(n);
    return this.geometries.push(i), i;
  };
}
var sk = (function (e) {
    k(r, e);
    function r(t) {
      var n = this,
        i = t.container,
        a = t.width,
        o = t.height,
        s = t.autoFit,
        l = s === void 0 ? !1 : s,
        u = t.padding,
        c = t.appendPadding,
        h = t.renderer,
        f = h === void 0 ? 'canvas' : h,
        v = t.pixelRatio,
        d = t.localRefresh,
        p = d === void 0 ? !0 : d,
        g = t.visible,
        y = g === void 0 ? !0 : g,
        m = t.supportCSSTransform,
        b = m === void 0 ? !1 : m,
        w = t.defaultInteractions,
        S =
          w === void 0
            ? [
                'tooltip',
                'legend-filter',
                'legend-active',
                'continuous-filter',
                'ellipsis-text',
                'axis-description',
              ]
            : w,
        C = t.options,
        F = t.limitInPlot,
        E = t.theme,
        I = t.syncViewPadding,
        T = et(i) ? document.getElementById(i) : i,
        P = Vr('<div style="position:relative;"></div>');
      T.appendChild(P);
      var R = qf(T, l, a, o),
        B = dC(f),
        G = new B.Canvas(
          x({ container: P, pixelRatio: v, localRefresh: p, supportCSSTransform: b }, R),
        );
      return (
        (n =
          e.call(this, {
            parent: null,
            canvas: G,
            backgroundGroup: G.addGroup({ zIndex: ri.BG }),
            middleGroup: G.addGroup({ zIndex: ri.MID }),
            foregroundGroup: G.addGroup({ zIndex: ri.FORE }),
            padding: u,
            appendPadding: c,
            visible: y,
            options: C,
            limitInPlot: F,
            theme: E,
            syncViewPadding: I,
          }) || this),
        (n.onResize = Bg(function () {
          n.forceFit();
        }, 300)),
        (n.ele = T),
        (n.canvas = G),
        (n.width = R.width),
        (n.height = R.height),
        (n.autoFit = l),
        (n.localRefresh = p),
        (n.renderer = f),
        (n.wrapperElement = P),
        n.updateCanvasStyle(),
        n.bindAutoFit(),
        n.initDefaultInteractions(S),
        n
      );
    }
    return (
      (r.prototype.initDefaultInteractions = function (t) {
        var n = this;
        M(t, function (i) {
          n.interaction(i);
        });
      }),
      (r.prototype.aria = function (t) {
        var n = 'aria-label';
        t === !1 ? this.ele.removeAttribute(n) : this.ele.setAttribute(n, t.label);
      }),
      (r.prototype.changeSize = function (t, n) {
        return this.width === t && this.height === n
          ? this
          : (this.emit(ut.BEFORE_CHANGE_SIZE),
            (this.width = t),
            (this.height = n),
            this.canvas.changeSize(t, n),
            this.render(!0),
            this.emit(ut.AFTER_CHANGE_SIZE),
            this);
      }),
      (r.prototype.clear = function () {
        e.prototype.clear.call(this), this.aria(!1);
      }),
      (r.prototype.destroy = function () {
        e.prototype.destroy.call(this),
          this.unbindAutoFit(),
          this.canvas.destroy(),
          bC(this.wrapperElement),
          (this.wrapperElement = null);
      }),
      (r.prototype.changeVisible = function (t) {
        return (
          e.prototype.changeVisible.call(this, t),
          (this.wrapperElement.style.display = t ? '' : 'none'),
          this
        );
      }),
      (r.prototype.forceFit = function () {
        if (!this.destroyed) {
          var t = qf(this.ele, !0, this.width, this.height),
            n = t.width,
            i = t.height;
          this.changeSize(n, i);
        }
      }),
      (r.prototype.updateCanvasStyle = function () {
        ne(this.canvas.get('el'), { display: 'inline-block', verticalAlign: 'middle' });
      }),
      (r.prototype.bindAutoFit = function () {
        this.autoFit && window.addEventListener('resize', this.onResize);
      }),
      (r.prototype.unbindAutoFit = function () {
        this.autoFit && window.removeEventListener('resize', this.onResize);
      }),
      r
    );
  })(_m),
  ki = (function () {
    function e(r) {
      (this.visible = !0), (this.components = []), (this.view = r);
    }
    return (
      (e.prototype.clear = function (r) {
        M(this.components, function (t) {
          t.component.destroy();
        }),
          (this.components = []);
      }),
      (e.prototype.destroy = function () {
        this.clear();
      }),
      (e.prototype.getComponents = function () {
        return this.components;
      }),
      (e.prototype.changeVisible = function (r) {
        this.visible !== r &&
          (this.components.forEach(function (t) {
            r ? t.component.show() : t.component.hide();
          }),
          (this.visible = r));
      }),
      e
    );
  })();
function lk(e) {
  for (
    var r = [],
      t = function (i) {
        var a = e[i],
          o = Xe(r, function (s) {
            return (
              s.color === a.color && s.name === a.name && s.value === a.value && s.title === a.title
            );
          });
        o || r.push(a);
      },
      n = 0;
    n < e.length;
    n++
  )
    t(n);
  return r;
}
var jm = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.isLocked = !1), t;
    }
    return (
      Object.defineProperty(r.prototype, 'name', {
        get: function () {
          return 'tooltip';
        },
        enumerable: !1,
        configurable: !0,
      }),
      (r.prototype.init = function () {}),
      (r.prototype.isVisible = function () {
        var t = this.view.getOptions().tooltip;
        return t !== !1;
      }),
      (r.prototype.render = function () {}),
      (r.prototype.showTooltip = function (t) {
        if (((this.point = t), !!this.isVisible())) {
          var n = this.view,
            i = this.getTooltipItems(t);
          if (!i.length) {
            this.hideTooltip();
            return;
          }
          var a = this.getTitle(i),
            o = { x: i[0].x, y: i[0].y };
          n.emit('tooltip:show', Lt.fromData(n, 'tooltip:show', x({ items: i, title: a }, t)));
          var s = this.getTooltipCfg(),
            l = s.follow,
            u = s.showMarkers,
            c = s.showCrosshairs,
            h = s.showContent,
            f = s.marker,
            v = this.items,
            d = this.title;
          if (
            (!Dt(d, a) || !Dt(v, i)
              ? (n.emit(
                  'tooltip:change',
                  Lt.fromData(n, 'tooltip:change', x({ items: i, title: a }, t)),
                ),
                (U(h) ? h(i) : h) &&
                  (this.tooltip || this.renderTooltip(),
                  this.tooltip.update(
                    bt({}, s, { items: this.getItemsAfterProcess(i), title: a }, l ? t : {}),
                  ),
                  this.tooltip.show()),
                u && this.renderTooltipMarkers(i, f))
              : (this.tooltip && l && (this.tooltip.update(t), this.tooltip.show()),
                this.tooltipMarkersGroup && this.tooltipMarkersGroup.show()),
            (this.items = i),
            (this.title = a),
            c)
          ) {
            var p = A(s, ['crosshairs', 'follow'], !1);
            this.renderCrosshairs(p ? t : o, s);
          }
        }
      }),
      (r.prototype.hideTooltip = function () {
        var t = this.getTooltipCfg().follow;
        if (!t) {
          this.point = null;
          return;
        }
        var n = this.tooltipMarkersGroup;
        n && n.hide();
        var i = this.xCrosshair,
          a = this.yCrosshair;
        i && i.hide(), a && a.hide();
        var o = this.tooltip;
        o && o.hide(),
          this.view.emit('tooltip:hide', Lt.fromData(this.view, 'tooltip:hide', {})),
          (this.point = null);
      }),
      (r.prototype.lockTooltip = function () {
        (this.isLocked = !0), this.tooltip && this.tooltip.setCapture(!0);
      }),
      (r.prototype.unlockTooltip = function () {
        this.isLocked = !1;
        var t = this.getTooltipCfg();
        this.tooltip && this.tooltip.setCapture(t.capture);
      }),
      (r.prototype.isTooltipLocked = function () {
        return this.isLocked;
      }),
      (r.prototype.clear = function () {
        var t = this,
          n = t.tooltip,
          i = t.xCrosshair,
          a = t.yCrosshair,
          o = t.tooltipMarkersGroup;
        n && (n.hide(), n.clear()),
          i && i.clear(),
          a && a.clear(),
          o && o.clear(),
          n != null && n.get('customContent') && (this.tooltip.destroy(), (this.tooltip = null)),
          (this.title = null),
          (this.items = null);
      }),
      (r.prototype.destroy = function () {
        this.tooltip && this.tooltip.destroy(),
          this.xCrosshair && this.xCrosshair.destroy(),
          this.yCrosshair && this.yCrosshair.destroy(),
          this.guideGroup && this.guideGroup.remove(!0),
          this.reset();
      }),
      (r.prototype.reset = function () {
        (this.items = null),
          (this.title = null),
          (this.tooltipMarkersGroup = null),
          (this.tooltipCrosshairsGroup = null),
          (this.xCrosshair = null),
          (this.yCrosshair = null),
          (this.tooltip = null),
          (this.guideGroup = null),
          (this.isLocked = !1),
          (this.point = null);
      }),
      (r.prototype.changeVisible = function (t) {
        if (this.visible !== t) {
          var n = this,
            i = n.tooltip,
            a = n.tooltipMarkersGroup,
            o = n.xCrosshair,
            s = n.yCrosshair;
          t
            ? (i && i.show(), a && a.show(), o && o.show(), s && s.show())
            : (i && i.hide(), a && a.hide(), o && o.hide(), s && s.hide()),
            (this.visible = t);
        }
      }),
      (r.prototype.getTooltipItems = function (t) {
        var n,
          i,
          a,
          o,
          s,
          l,
          u = this.findItemsFromView(this.view, t);
        if (u.length) {
          u = Ee(u);
          try {
            for (var c = pt(u), h = c.next(); !h.done; h = c.next()) {
              var f = h.value;
              try {
                for (var v = ((a = void 0), pt(f)), d = v.next(); !d.done; d = v.next()) {
                  var p = d.value,
                    g = p.mappingData,
                    y = g.x,
                    m = g.y;
                  (p.x = N(y) ? y[y.length - 1] : y), (p.y = N(m) ? m[m.length - 1] : m);
                }
              } catch (T) {
                a = { error: T };
              } finally {
                try {
                  d && !d.done && (o = v.return) && o.call(v);
                } finally {
                  if (a) throw a.error;
                }
              }
            }
          } catch (T) {
            n = { error: T };
          } finally {
            try {
              h && !h.done && (i = c.return) && i.call(c);
            } finally {
              if (n) throw n.error;
            }
          }
          var b = this.getTooltipCfg().shared;
          if (b === !1 && u.length > 1) {
            var w = u[0],
              S = Math.abs(t.y - w[0].y);
            try {
              for (var C = pt(u), F = C.next(); !F.done; F = C.next()) {
                var E = F.value,
                  I = Math.abs(t.y - E[0].y);
                I <= S && ((w = E), (S = I));
              }
            } catch (T) {
              s = { error: T };
            } finally {
              try {
                F && !F.done && (l = C.return) && l.call(C);
              } finally {
                if (s) throw s.error;
              }
            }
            u = [w];
          }
          return lk(Ee(u));
        }
        return [];
      }),
      (r.prototype.layout = function () {}),
      (r.prototype.update = function () {
        if ((this.point && this.showTooltip(this.point), this.tooltip)) {
          var t = this.view.getCanvas();
          this.tooltip.set('region', {
            start: { x: 0, y: 0 },
            end: { x: t.get('width'), y: t.get('height') },
          });
        }
      }),
      (r.prototype.isCursorEntered = function (t) {
        if (this.tooltip) {
          var n = this.tooltip.getContainer(),
            i = this.tooltip.get('capture');
          if (n && i) {
            var a = n.getBoundingClientRect(),
              o = a.x,
              s = a.y,
              l = a.width,
              u = a.height;
            return new le(o, s, l, u).isPointIn(t);
          }
        }
        return !1;
      }),
      (r.prototype.getTooltipCfg = function () {
        var t = this.view,
          n = t.getOptions().tooltip,
          i = this.processCustomContent(n),
          a = t.getTheme(),
          o = A(a, ['components', 'tooltip'], {}),
          s = A(i, 'enterable', o.enterable);
        return _({}, o, i, { capture: !!(s || this.isLocked) });
      }),
      (r.prototype.processCustomContent = function (t) {
        if (ui(t) || !A(t, 'customContent')) return t;
        var n = t.customContent,
          i = function (a, o) {
            var s = n(a, o) || '';
            return et(s) ? '<div class="g2-tooltip">' + s + '</div>' : s;
          };
        return x(x({}, t), { customContent: i });
      }),
      (r.prototype.getTitle = function (t) {
        var n = t[0].title || t[0].name;
        return (this.title = n), n;
      }),
      (r.prototype.renderTooltip = function () {
        var t = this.view.getCanvas(),
          n = { start: { x: 0, y: 0 }, end: { x: t.get('width'), y: t.get('height') } },
          i = this.getTooltipCfg(),
          a = new fl(
            x(x({ parent: t.get('el').parentNode, region: n }, i), {
              visible: !1,
              crosshairs: null,
            }),
          );
        a.init(), (this.tooltip = a);
      }),
      (r.prototype.renderTooltipMarkers = function (t, n) {
        var i,
          a,
          o = this.getTooltipMarkersGroup(),
          s = this.view.getRootView(),
          l = s.limitInPlot;
        try {
          for (var u = pt(t), c = u.next(); !c.done; c = u.next()) {
            var h = c.value,
              f = h.x,
              v = h.y;
            if (l || (o != null && o.getClip())) {
              var d = gh(s.getCoordinate()),
                p = d.type,
                g = d.attrs;
              o == null || o.setClip({ type: p, attrs: g });
            } else o == null || o.setClip(void 0);
            var y = this.view.getTheme(),
              m = A(y, ['components', 'tooltip', 'marker'], {}),
              b = x(
                x(
                  { fill: h.color, symbol: 'circle', shadowColor: h.color },
                  U(n) ? x(x({}, m), n(h)) : n,
                ),
                { x: f, y: v },
              );
            o.addShape('marker', { attrs: b });
          }
        } catch (w) {
          i = { error: w };
        } finally {
          try {
            c && !c.done && (a = u.return) && a.call(u);
          } finally {
            if (i) throw i.error;
          }
        }
      }),
      (r.prototype.renderCrosshairs = function (t, n) {
        var i = A(n, ['crosshairs', 'type'], 'x');
        i === 'x'
          ? (this.yCrosshair && this.yCrosshair.hide(), this.renderXCrosshairs(t, n))
          : i === 'y'
          ? (this.xCrosshair && this.xCrosshair.hide(), this.renderYCrosshairs(t, n))
          : i === 'xy' && (this.renderXCrosshairs(t, n), this.renderYCrosshairs(t, n));
      }),
      (r.prototype.renderXCrosshairs = function (t, n) {
        var i = this.getViewWithGeometry(this.view).getCoordinate(),
          a,
          o;
        if (i.isRect)
          i.isTransposed
            ? ((a = { x: i.start.x, y: t.y }), (o = { x: i.end.x, y: t.y }))
            : ((a = { x: t.x, y: i.end.y }), (o = { x: t.x, y: i.start.y }));
        else {
          var s = vi(i, t),
            l = i.getCenter(),
            u = i.getRadius();
          (o = zt(l.x, l.y, u, s)), (a = l);
        }
        var c = _(
          { start: a, end: o, container: this.getTooltipCrosshairsGroup() },
          A(n, 'crosshairs', {}),
          this.getCrosshairsText('x', t, n),
        );
        delete c.type;
        var h = this.xCrosshair;
        h ? h.update(c) : ((h = new dm(c)), h.init()), h.render(), h.show(), (this.xCrosshair = h);
      }),
      (r.prototype.renderYCrosshairs = function (t, n) {
        var i = this.getViewWithGeometry(this.view).getCoordinate(),
          a,
          o;
        if (i.isRect) {
          var s = void 0,
            l = void 0;
          i.isTransposed
            ? ((s = { x: t.x, y: i.end.y }), (l = { x: t.x, y: i.start.y }))
            : ((s = { x: i.start.x, y: t.y }), (l = { x: i.end.x, y: t.y })),
            (a = { start: s, end: l }),
            (o = 'Line');
        } else
          (a = {
            center: i.getCenter(),
            radius: vl(i, t),
            startAngle: i.startAngle,
            endAngle: i.endAngle,
          }),
            (o = 'Circle');
        (a = _(
          { container: this.getTooltipCrosshairsGroup() },
          a,
          A(n, 'crosshairs', {}),
          this.getCrosshairsText('y', t, n),
        )),
          delete a.type;
        var u = this.yCrosshair;
        u
          ? (i.isRect && u.get('type') === 'circle') || (!i.isRect && u.get('type') === 'line')
            ? ((u = new cd[o](a)), u.init())
            : u.update(a)
          : ((u = new cd[o](a)), u.init()),
          u.render(),
          u.show(),
          (this.yCrosshair = u);
      }),
      (r.prototype.getCrosshairsText = function (t, n, i) {
        var a = A(i, ['crosshairs', 'text']),
          o = A(i, ['crosshairs', 'follow']),
          s = this.items;
        if (a) {
          var l = this.getViewWithGeometry(this.view),
            u = s[0],
            c = l.getXScale(),
            h = l.getYScales()[0],
            f = void 0,
            v = void 0;
          if (o) {
            var d = this.view.getCoordinate().invert(n);
            (f = c.invert(d.x)), (v = h.invert(d.y));
          } else (f = u.data[c.field]), (v = u.data[h.field]);
          var p = t === 'x' ? f : v;
          return U(a) ? (a = a(t, p, s, n)) : (a.content = p), { text: a };
        }
      }),
      (r.prototype.getGuideGroup = function () {
        if (!this.guideGroup) {
          var t = this.view.foregroundGroup;
          this.guideGroup = t.addGroup({ name: 'tooltipGuide', capture: !1 });
        }
        return this.guideGroup;
      }),
      (r.prototype.getTooltipMarkersGroup = function () {
        var t = this.tooltipMarkersGroup;
        return (
          t && !t.destroyed
            ? (t.clear(), t.show())
            : ((t = this.getGuideGroup().addGroup({ name: 'tooltipMarkersGroup' })),
              t.toFront(),
              (this.tooltipMarkersGroup = t)),
          t
        );
      }),
      (r.prototype.getTooltipCrosshairsGroup = function () {
        var t = this.tooltipCrosshairsGroup;
        return (
          t ||
            ((t = this.getGuideGroup().addGroup({ name: 'tooltipCrosshairsGroup', capture: !1 })),
            t.toBack(),
            (this.tooltipCrosshairsGroup = t)),
          t
        );
      }),
      (r.prototype.findItemsFromView = function (t, n) {
        var i, a;
        if (t.getOptions().tooltip === !1) return [];
        var o = this.getTooltipCfg(),
          s = fc(t, n, o);
        try {
          for (var l = pt(t.views), u = l.next(); !u.done; u = l.next()) {
            var c = u.value;
            s = s.concat(this.findItemsFromView(c, n));
          }
        } catch (h) {
          i = { error: h };
        } finally {
          try {
            u && !u.done && (a = l.return) && a.call(l);
          } finally {
            if (i) throw i.error;
          }
        }
        return s;
      }),
      (r.prototype.getViewWithGeometry = function (t) {
        var n = this;
        return t.geometries.length
          ? t
          : Xe(t.views, function (i) {
              return n.getViewWithGeometry(i);
            });
      }),
      (r.prototype.getItemsAfterProcess = function (t) {
        var n = this.getTooltipCfg().customItems,
          i =
            n ||
            function (a) {
              return a;
            };
        return i(t);
      }),
      r
    );
  })(ki),
  Um = {};
function qm(e) {
  return Um[e.toLowerCase()];
}
function ke(e, r) {
  Um[e.toLowerCase()] = r;
}
var pi = {
    appear: { duration: 450, easing: 'easeQuadOut' },
    update: { duration: 400, easing: 'easeQuadInOut' },
    enter: { duration: 400, easing: 'easeQuadInOut' },
    leave: { duration: 350, easing: 'easeQuadIn' },
  },
  uk = {
    interval: function (e) {
      return {
        enter: { animation: e.isRect ? (e.isTransposed ? 'scale-in-x' : 'scale-in-y') : 'fade-in' },
        update: { animation: e.isPolar && e.isTransposed ? 'sector-path-update' : null },
        leave: { animation: 'fade-out' },
      };
    },
    line: { enter: { animation: 'fade-in' }, leave: { animation: 'fade-out' } },
    path: { enter: { animation: 'fade-in' }, leave: { animation: 'fade-out' } },
    point: {
      appear: { animation: 'zoom-in' },
      enter: { animation: 'zoom-in' },
      leave: { animation: 'zoom-out' },
    },
    area: { enter: { animation: 'fade-in' }, leave: { animation: 'fade-out' } },
    polygon: { enter: { animation: 'fade-in' }, leave: { animation: 'fade-out' } },
    schema: { enter: { animation: 'fade-in' }, leave: { animation: 'fade-out' } },
    edge: { enter: { animation: 'fade-in' }, leave: { animation: 'fade-out' } },
    label: {
      appear: { animation: 'fade-in', delay: 450 },
      enter: { animation: 'fade-in' },
      update: { animation: 'position-update' },
      leave: { animation: 'fade-out' },
    },
  },
  kd = {
    line: function () {
      return { animation: 'wave-in' };
    },
    area: function () {
      return { animation: 'wave-in' };
    },
    path: function () {
      return { animation: 'fade-in' };
    },
    interval: function (e) {
      var r;
      return (
        e.isRect
          ? (r = e.isTransposed ? 'grow-in-x' : 'grow-in-y')
          : ((r = 'grow-in-xy'), e.isPolar && e.isTransposed && (r = 'wave-in')),
        { animation: r }
      );
    },
    schema: function (e) {
      var r;
      return (
        e.isRect ? (r = e.isTransposed ? 'grow-in-x' : 'grow-in-y') : (r = 'grow-in-xy'),
        { animation: r }
      );
    },
    polygon: function () {
      return { animation: 'fade-in', duration: 500 };
    },
    edge: function () {
      return { animation: 'fade-in' };
    },
  };
function ck(e, r) {
  return {
    delay: U(e.delay) ? e.delay(r) : e.delay,
    easing: U(e.easing) ? e.easing(r) : e.easing,
    duration: U(e.duration) ? e.duration(r) : e.duration,
    callback: e.callback,
    repeat: e.repeat,
  };
}
function Zm(e, r, t) {
  var n = uk[e];
  return n && (U(n) && (n = n(r)), (n = _({}, pi, n)), t) ? n[t] : n;
}
function ai(e, r, t) {
  var n = A(e.get('origin'), 'data', Mt),
    i = r.animation,
    a = ck(r, n);
  if (i) {
    var o = qm(i);
    o && o(e, a, t);
  } else e.animate(t.toAttrs, a);
}
function hk(e, r, t, n, i) {
  if (kd[t]) {
    var a = kd[t](n),
      o = qm(A(a, 'animation', ''));
    if (o) {
      var s = x(x(x({}, pi.appear), a), r);
      e.stopAnimate(), o(e, s, { coordinate: n, minYPoint: i, toAttrs: null });
    }
  }
}
var Ch = 'element-background',
  Km = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      (n.labelShape = []), (n.states = []);
      var i = t.shapeFactory,
        a = t.container,
        o = t.offscreenGroup,
        s = t.elementIndex,
        l = t.visible,
        u = l === void 0 ? !0 : l;
      return (
        (n.shapeFactory = i),
        (n.container = a),
        (n.offscreenGroup = o),
        (n.visible = u),
        (n.elementIndex = s),
        n
      );
    }
    return (
      (r.prototype.draw = function (t, n) {
        n === void 0 && (n = !1),
          (this.model = t),
          (this.data = t.data),
          (this.shapeType = this.getShapeType(t)),
          this.drawShape(t, n),
          this.visible === !1 && this.changeVisible(!1);
      }),
      (r.prototype.update = function (t) {
        var n = this,
          i = n.shapeFactory,
          a = n.shape;
        if (a) {
          (this.model = t),
            (this.data = t.data),
            (this.shapeType = this.getShapeType(t)),
            this.setShapeInfo(a, t);
          var o = this.getOffscreenGroup(),
            s = i.drawShape(this.shapeType, t, o);
          (s.cfg.data = this.data),
            (s.cfg.origin = t),
            (s.cfg.element = this),
            this.syncShapeStyle(a, s, this.getStates(), this.getAnimateCfg('update'));
        }
      }),
      (r.prototype.destroy = function () {
        var t = this,
          n = t.shapeFactory,
          i = t.shape;
        if (i) {
          var a = this.getAnimateCfg('leave');
          a ? ai(i, a, { coordinate: n.coordinate, toAttrs: x({}, i.attr()) }) : i.remove(!0);
        }
        (this.states = []),
          (this.shapeFactory = void 0),
          (this.container = void 0),
          (this.shape = void 0),
          (this.animate = void 0),
          (this.geometry = void 0),
          (this.labelShape = []),
          (this.model = void 0),
          (this.data = void 0),
          (this.offscreenGroup = void 0),
          (this.statesStyle = void 0),
          e.prototype.destroy.call(this);
      }),
      (r.prototype.changeVisible = function (t) {
        e.prototype.changeVisible.call(this, t),
          t
            ? (this.shape && this.shape.show(),
              this.labelShape &&
                this.labelShape.forEach(function (n) {
                  n.show();
                }))
            : (this.shape && this.shape.hide(),
              this.labelShape &&
                this.labelShape.forEach(function (n) {
                  n.hide();
                }));
      }),
      (r.prototype.setState = function (t, n) {
        var i = this,
          a = i.states,
          o = i.shapeFactory,
          s = i.model,
          l = i.shape,
          u = i.shapeType,
          c = a.indexOf(t);
        if (n) {
          if (c > -1) return;
          a.push(t), (t === 'active' || t === 'selected') && (l == null || l.toFront());
        } else {
          if (c === -1) return;
          if ((a.splice(c, 1), t === 'active' || t === 'selected')) {
            var h = this.geometry,
              f = h.sortZIndex,
              v = h.zIndexReversed,
              d = v ? this.geometry.elements.length - this.elementIndex : this.elementIndex;
            f ? l.setZIndex(d) : l.set('zIndex', d);
          }
        }
        var p = o.drawShape(u, s, this.getOffscreenGroup());
        a.length ? this.syncShapeStyle(l, p, a, null) : this.syncShapeStyle(l, p, ['reset'], null),
          p.remove(!0);
        var g = { state: t, stateStatus: n, element: this, target: this.container };
        this.container.emit('statechange', g), tm(this.shape, 'statechange', g);
      }),
      (r.prototype.clearStates = function () {
        var t = this,
          n = this.states;
        M(n, function (i) {
          t.setState(i, !1);
        }),
          (this.states = []);
      }),
      (r.prototype.hasState = function (t) {
        return this.states.includes(t);
      }),
      (r.prototype.getStates = function () {
        return this.states;
      }),
      (r.prototype.getData = function () {
        return this.data;
      }),
      (r.prototype.getModel = function () {
        return this.model;
      }),
      (r.prototype.getBBox = function () {
        var t = this,
          n = t.shape,
          i = t.labelShape,
          a = { x: 0, y: 0, minX: 0, minY: 0, maxX: 0, maxY: 0, width: 0, height: 0 };
        return (
          n && (a = n.getCanvasBBox()),
          i &&
            i.forEach(function (o) {
              var s = o.getCanvasBBox();
              (a.x = Math.min(s.x, a.x)),
                (a.y = Math.min(s.y, a.y)),
                (a.minX = Math.min(s.minX, a.minX)),
                (a.minY = Math.min(s.minY, a.minY)),
                (a.maxX = Math.max(s.maxX, a.maxX)),
                (a.maxY = Math.max(s.maxY, a.maxY));
            }),
          (a.width = a.maxX - a.minX),
          (a.height = a.maxY - a.minY),
          a
        );
      }),
      (r.prototype.getStatesStyle = function () {
        if (!this.statesStyle) {
          var t = this,
            n = t.shapeType,
            i = t.geometry,
            a = t.shapeFactory,
            o = i.stateOption,
            s = a.defaultShapeType,
            l = a.theme[n] || a.theme[s];
          this.statesStyle = _({}, l, o);
        }
        return this.statesStyle;
      }),
      (r.prototype.getStateStyle = function (t, n) {
        var i = this.getStatesStyle(),
          a = A(i, [t, 'style'], {}),
          o = a[n] || a;
        return U(o) ? o(this) : o;
      }),
      (r.prototype.getAnimateCfg = function (t) {
        var n = this,
          i = this.animate;
        if (i) {
          var a = i[t];
          return (
            a &&
            x(x({}, a), {
              callback: function () {
                var o;
                U(a.callback) && a.callback(),
                  (o = n.geometry) === null || o === void 0 || o.emit(Gr.AFTER_DRAW_ANIMATE);
              },
            })
          );
        }
        return null;
      }),
      (r.prototype.drawShape = function (t, n) {
        var i;
        n === void 0 && (n = !1);
        var a = this,
          o = a.shapeFactory,
          s = a.container,
          l = a.shapeType;
        if (((this.shape = o.drawShape(l, t, s)), this.shape)) {
          this.setShapeInfo(this.shape, t);
          var u = this.shape.cfg.name;
          u
            ? et(u) && (this.shape.cfg.name = ['element', u])
            : (this.shape.cfg.name = ['element', this.shapeFactory.geometryType]);
          var c = n ? 'enter' : 'appear',
            h = this.getAnimateCfg(c);
          h &&
            ((i = this.geometry) === null || i === void 0 || i.emit(Gr.BEFORE_DRAW_ANIMATE),
            ai(this.shape, h, { coordinate: o.coordinate, toAttrs: x({}, this.shape.attr()) }));
        }
      }),
      (r.prototype.getOffscreenGroup = function () {
        if (!this.offscreenGroup) {
          var t = this.container.getGroupBase();
          this.offscreenGroup = new t({});
        }
        return this.offscreenGroup;
      }),
      (r.prototype.setShapeInfo = function (t, n) {
        var i = this;
        if (((t.cfg.origin = n), (t.cfg.element = this), t.isGroup())) {
          var a = t.get('children');
          a.forEach(function (o) {
            i.setShapeInfo(o, n);
          });
        }
      }),
      (r.prototype.syncShapeStyle = function (t, n, i, a, o) {
        var s = this,
          l;
        if ((i === void 0 && (i = []), o === void 0 && (o = 0), !(!t || !n))) {
          var u = t.get('clipShape'),
            c = n.get('clipShape');
          if ((this.syncShapeStyle(u, c, i, a), t.isGroup()))
            for (var h = t.get('children'), f = n.get('children'), v = 0; v < h.length; v++)
              this.syncShapeStyle(h[v], f[v], i, a, o + v);
          else {
            if (!ye(i) && !Dt(i, ['reset'])) {
              var d = t.get('name');
              N(d) && (d = d[1]),
                M(i, function (g) {
                  if (n.get('name') !== Ch) {
                    var y = s.getStateStyle(g, d || o);
                    n.attr(y);
                  }
                });
            }
            var p = bm(t, n);
            this.animate
              ? a
                ? ((l = this.geometry) === null || l === void 0 || l.emit(Gr.BEFORE_DRAW_ANIMATE),
                  ai(t, a, {
                    coordinate: this.shapeFactory.coordinate,
                    toAttrs: p,
                    shapeModel: this.model,
                  }))
                : ye(i)
                ? t.attr(p)
                : (t.stopAnimate(), t.animate(p, { duration: 300 }))
              : t.attr(p);
          }
        }
      }),
      (r.prototype.getShapeType = function (t) {
        var n = A(t, 'shape');
        return N(n) ? n[0] : n;
      }),
      r
    );
  })(_c),
  Qm = {},
  Jm = {};
function fk(e) {
  return Qm[e.toLowerCase()];
}
function Qa(e, r) {
  Qm[e.toLowerCase()] = r;
}
function vk(e) {
  return Jm[e.toLowerCase()];
}
function we(e, r) {
  Jm[e.toLowerCase()] = r;
}
var dk = {
    coordinate: null,
    defaultShapeType: null,
    theme: null,
    getShapePoints: function (e, r) {
      var t = this.getShape(e);
      return t.getPoints ? t.getPoints(r) : this.getDefaultPoints(r);
    },
    getShape: function (e) {
      var r = this[e] || this[this.defaultShapeType];
      return (r.coordinate = this.coordinate), r;
    },
    getDefaultPoints: function () {
      return [];
    },
    getDefaultStyle: function (e) {
      return A(e, [this.defaultShapeType, 'default', 'style'], {});
    },
    getMarker: function (e, r) {
      var t = this.getShape(e);
      if (!t.getMarker) {
        var n = this.defaultShapeType;
        t = this.getShape(n);
      }
      var i = this.theme,
        a = A(i, [e, 'default'], {}),
        o = t.getMarker(r);
      return _({}, a, o);
    },
    drawShape: function (e, r, t) {
      var n = this.getShape(e);
      return n.draw(r, t);
    },
  },
  pk = {
    coordinate: null,
    parsePath: function (e) {
      var r = this.coordinate,
        t = Ay(e);
      return r.isPolar ? (t = AT(r, t)) : (t = MT(r, t)), t;
    },
    parsePoint: function (e) {
      var r = this.coordinate;
      return r.convert(e);
    },
    parsePoints: function (e) {
      var r = this.coordinate;
      return e.map(function (t) {
        return r.convert(t);
      });
    },
    draw: function (e, r) {},
  },
  Mh = {};
function nn(e, r) {
  var t = Nn(e),
    n = x(x(x({}, dk), r), { geometryType: e });
  return (Mh[t] = n), n;
}
function gt(e, r, t) {
  var n = Nn(e),
    i = Mh[n],
    a = x(x({}, pk), t);
  return (i[r] = a), a;
}
function Id(e) {
  var r = Nn(e);
  return Mh[r];
}
function gk(e, r, t) {
  var n, i;
  if ((t === void 0 && (t = {}), !r)) return [e];
  var a = Ig(e, r),
    o = [];
  if (r.length === 1 && t[r[0]]) {
    var s = t[r[0]];
    try {
      for (var l = pt(s), u = l.next(); !u.done; u = l.next()) {
        var c = u.value,
          h = a['_'.concat(c)];
        h && o.push(h);
      }
    } catch (d) {
      n = { error: d };
    } finally {
      try {
        u && !u.done && (i = l.return) && i.call(l);
      } finally {
        if (n) throw n.error;
      }
    }
  } else
    for (var f in a)
      if (a.hasOwnProperty(f)) {
        var v = a[f];
        o.push(v);
      }
  return o;
}
function t0(e, r) {
  return zs(
    [
      'color',
      'shape',
      'size',
      'x',
      'y',
      'isInCircle',
      'data',
      'style',
      'defaultStyle',
      'points',
      'mappingData',
    ],
    function (t) {
      return !Dt(e[t], r[t]);
    },
  );
}
function Hi(e) {
  return N(e) ? e : e.split('*');
}
function e0(e, r) {
  for (var t = [], n = [], i = [], a = new Map(), o = 0; o < r.length; o++) {
    var s = r[o];
    e[s] ? n.push(s) : t.push(s), a.set(s, !0);
  }
  return (
    Object.keys(e).forEach(function (l) {
      a.has(l) || i.push(l);
    }),
    { added: t, updated: n, removed: i }
  );
}
var an = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      (n.type = 'base'),
        (n.attributes = {}),
        (n.elements = []),
        (n.elementsMap = {}),
        (n.animateOption = !0),
        (n.attributeOption = {}),
        (n.lastElementsMap = {}),
        (n.generatePoints = !1),
        (n.beforeMappingData = null),
        (n.adjusts = {}),
        (n.idFields = []),
        (n.hasSorted = !1),
        (n.isCoordinateChanged = !1);
      var i = t.container,
        a = t.labelsContainer,
        o = t.coordinate,
        s = t.data,
        l = t.sortable,
        u = l === void 0 ? !1 : l,
        c = t.visible,
        h = c === void 0 ? !0 : c,
        f = t.theme,
        v = t.scales,
        d = v === void 0 ? {} : v,
        p = t.scaleDefs,
        g = p === void 0 ? {} : p,
        y = t.intervalPadding,
        m = t.dodgePadding,
        b = t.maxColumnWidth,
        w = t.minColumnWidth,
        S = t.columnWidthRatio,
        C = t.roseWidthRatio,
        F = t.multiplePieWidthRatio,
        E = t.zIndexReversed,
        I = t.sortZIndex,
        T = t.useDeferredLabel;
      return (
        (n.container = i),
        (n.labelsContainer = a),
        (n.coordinate = o),
        (n.data = s),
        (n.sortable = u),
        (n.visible = h),
        (n.userTheme = f),
        (n.scales = d),
        (n.scaleDefs = g),
        (n.intervalPadding = y),
        (n.dodgePadding = m),
        (n.maxColumnWidth = b),
        (n.minColumnWidth = w),
        (n.columnWidthRatio = S),
        (n.roseWidthRatio = C),
        (n.multiplePieWidthRatio = F),
        (n.zIndexReversed = E),
        (n.sortZIndex = I),
        (n.useDeferredLabel = T ? (typeof T == 'number' ? T : 1 / 0) : null),
        n
      );
    }
    return (
      (r.prototype.position = function (t) {
        var n = t;
        nr(t) || (n = { fields: Hi(t) });
        var i = A(n, 'fields');
        return (
          i.length === 1 && (i.unshift('1'), Gt(n, 'fields', i)),
          Gt(this.attributeOption, 'position', n),
          this
        );
      }),
      (r.prototype.color = function (t, n) {
        return this.createAttrOption('color', t, n), this;
      }),
      (r.prototype.shape = function (t, n) {
        return this.createAttrOption('shape', t, n), this;
      }),
      (r.prototype.size = function (t, n) {
        return this.createAttrOption('size', t, n), this;
      }),
      (r.prototype.adjust = function (t) {
        var n = t;
        return (
          (et(t) || nr(t)) && (n = [t]),
          M(n, function (i, a) {
            xt(i) || (n[a] = { type: i });
          }),
          (this.adjustOption = n),
          this
        );
      }),
      (r.prototype.style = function (t, n) {
        if (et(t)) {
          var i = Hi(t);
          this.styleOption = { fields: i, callback: n };
        } else {
          var a = t,
            i = a.fields,
            o = a.callback,
            s = a.cfg;
          i || o || s ? (this.styleOption = t) : (this.styleOption = { cfg: t });
        }
        return this;
      }),
      (r.prototype.tooltip = function (t, n) {
        if (et(t)) {
          var i = Hi(t);
          this.tooltipOption = { fields: i, callback: n };
        } else this.tooltipOption = t;
        return this;
      }),
      (r.prototype.animate = function (t) {
        return (this.animateOption = t), this;
      }),
      (r.prototype.label = function (t, n, i) {
        if (et(t)) {
          var a = {},
            o = Hi(t);
          (a.fields = o),
            U(n) ? (a.callback = n) : nr(n) && (a.cfg = n),
            i && (a.cfg = i),
            (this.labelOption = a);
        } else this.labelOption = t;
        return this;
      }),
      (r.prototype.state = function (t) {
        return (this.stateOption = t), this;
      }),
      (r.prototype.customInfo = function (t) {
        return (this.customOption = t), this;
      }),
      (r.prototype.init = function (t) {
        t === void 0 && (t = {}),
          this.setCfg(t),
          this.initAttributes(),
          this.processData(this.data),
          this.adjustScale();
      }),
      (r.prototype.update = function (t) {
        t === void 0 && (t = {});
        var n = t.data,
          i = t.isDataChanged,
          a = t.isCoordinateChanged,
          o = this,
          s = o.attributeOption,
          l = o.lastAttributeOption;
        Dt(s, l)
          ? n && (i || !Dt(n, this.data))
            ? (this.setCfg(t), this.initAttributes(), this.processData(n))
            : this.setCfg(t)
          : this.init(t),
          this.adjustScale(),
          (this.isCoordinateChanged = a);
      }),
      (r.prototype.paint = function (t) {
        var n = this;
        t === void 0 && (t = !1),
          this.animateOption &&
            (this.animateOption = _({}, Zm(this.type, this.coordinate), this.animateOption)),
          (this.defaultSize = void 0),
          (this.elementsMap = {}),
          (this.elements = []);
        var i = this.getOffscreenGroup();
        i.clear();
        var a = this.beforeMappingData,
          o = this.beforeMapping(a);
        this.dataArray = new Array(o.length);
        for (var s = 0; s < o.length; s++) {
          var l = o[s];
          this.dataArray[s] = this.mapping(l);
        }
        if (
          (this.updateElements(this.dataArray, t),
          (this.lastElementsMap = this.elementsMap),
          this.canDoGroupAnimation(t))
        ) {
          var u = this.container,
            c = this.type,
            h = this.coordinate,
            f = A(this.animateOption, 'appear'),
            v = this.getYScale(),
            d = h.convert({ x: 0, y: v.scale(this.getYMinValue()) });
          hk(u, f, c, h, d);
        }
        if (this.labelOption) {
          var p = this.useDeferredLabel,
            g = function () {
              return n.renderLabels(Ee(n.dataArray), t);
            }.bind(this);
          if (typeof p == 'number') {
            var y = typeof p == 'number' && p !== 1 / 0 ? p : 0;
            if (!window.requestIdleCallback) setTimeout(g, y);
            else {
              var m = y && y !== 1 / 0 ? { timeout: y } : void 0;
              window.requestIdleCallback(g, m);
            }
          } else g();
        }
        (this.lastAttributeOption = x({}, this.attributeOption)),
          this.visible === !1 && this.changeVisible(!1);
      }),
      (r.prototype.clear = function () {
        var t = this,
          n = t.container,
          i = t.geometryLabel,
          a = t.offscreenGroup;
        n && n.clear(),
          i && i.clear(),
          a && a.clear(),
          (this.scaleDefs = void 0),
          (this.attributes = {}),
          (this.scales = {}),
          (this.elementsMap = {}),
          (this.lastElementsMap = {}),
          (this.elements = []),
          (this.adjusts = {}),
          (this.dataArray = null),
          (this.beforeMappingData = null),
          (this.lastAttributeOption = void 0),
          (this.defaultSize = void 0),
          (this.idFields = []),
          (this.groupScales = void 0),
          (this.hasSorted = !1),
          (this.isCoordinateChanged = !1);
      }),
      (r.prototype.destroy = function () {
        this.clear();
        var t = this.container;
        t.remove(!0),
          this.offscreenGroup && (this.offscreenGroup.remove(!0), (this.offscreenGroup = null)),
          this.geometryLabel && (this.geometryLabel.destroy(), (this.geometryLabel = null)),
          (this.theme = void 0),
          (this.shapeFactory = void 0),
          e.prototype.destroy.call(this);
      }),
      (r.prototype.getGroupScales = function () {
        return this.groupScales;
      }),
      (r.prototype.getAttribute = function (t) {
        return this.attributes[t];
      }),
      (r.prototype.getXScale = function () {
        return this.getAttribute('position').scales[0];
      }),
      (r.prototype.getYScale = function () {
        return this.getAttribute('position').scales[1];
      }),
      (r.prototype.getGroupAttributes = function () {
        var t = [];
        return (
          M(this.attributes, function (n) {
            Kn.includes(n.type) && t.push(n);
          }),
          t
        );
      }),
      (r.prototype.getDefaultValue = function (t) {
        var n,
          i = this.getAttribute(t);
        return i && ye(i.scales) && (n = i.values[0]), n;
      }),
      (r.prototype.getAttributeValues = function (t, n) {
        for (var i = [], a = t.scales, o = 0, s = a.length; o < s; o++) {
          var l = a[o],
            u = l.field;
          l.isIdentity ? i.push(l.values) : i.push(n[u]);
        }
        return t.mapping.apply(t, J([], q(i), !1));
      }),
      (r.prototype.getAdjust = function (t) {
        return this.adjusts[t];
      }),
      (r.prototype.getCoordinate = function () {
        return this.coordinate;
      }),
      (r.prototype.getData = function () {
        return this.data;
      }),
      (r.prototype.getShapeMarker = function (t, n) {
        var i = this.getShapeFactory();
        return i.getMarker(t, n);
      }),
      (r.prototype.getElementsBy = function (t) {
        return this.elements.filter(function (n) {
          return t(n);
        });
      }),
      (r.prototype.getElements = function () {
        return this.elements;
      }),
      (r.prototype.getElementId = function (t) {
        t = N(t) ? t[0] : t;
        var n = t[Mt];
        if (this.idFields.length) {
          for (var i = n[this.idFields[0]], a = 1; a < this.idFields.length; a++)
            i += '-' + n[this.idFields[a]];
          return i;
        }
        var o = this.type,
          s = this.getXScale(),
          l = this.getYScale(),
          u = s.field || 'x',
          c = l.field || 'y',
          h = n[c],
          f;
        s.type === 'identity' ? (f = s.values[0]) : (f = n[u]);
        var v;
        o === 'interval' || o === 'schema'
          ? (v = ''.concat(f))
          : o === 'line' || o === 'area' || o === 'path'
          ? (v = o)
          : (v = ''.concat(f, '-').concat(h));
        for (var d = this.groupScales, a = 0, p = d.length; a < p; a++) {
          var g = d[a],
            y = g.field;
          v = ''.concat(v, '-').concat(n[y]);
        }
        var m = this.getAdjust('dodge');
        if (m) {
          var b = m.dodgeBy;
          b && (v = ''.concat(v, '-').concat(n[b]));
        }
        return this.getAdjust('jitter') && (v = ''.concat(v, '-').concat(t.x, '-').concat(t.y)), v;
      }),
      (r.prototype.getScaleFields = function () {
        var t = [],
          n = new Map(),
          i = this,
          a = i.attributeOption,
          o = i.labelOption,
          s = i.tooltipOption;
        for (var l in a)
          if (a.hasOwnProperty(l)) {
            var u = a[l];
            u.fields ? Rr(u.fields, t, n) : u.values && Rr(u.values, t, n);
          }
        return o && o.fields && Rr(o.fields, t, n), xt(s) && s.fields && Rr(s.fields, t, n), t;
      }),
      (r.prototype.changeVisible = function (t) {
        e.prototype.changeVisible.call(this, t);
        for (var n = this.elements, i = 0, a = n.length; i < a; i++) {
          var o = n[i];
          o.changeVisible(t);
        }
        t
          ? (this.container && this.container.show(),
            this.labelsContainer && this.labelsContainer.show())
          : (this.container && this.container.hide(),
            this.labelsContainer && this.labelsContainer.hide());
      }),
      (r.prototype.getFields = function () {
        var t = new Map(),
          n = [];
        return (
          Object.values(this.attributeOption).forEach(function (i) {
            var a = (i == null ? void 0 : i.fields) || [];
            a.forEach(function (o) {
              t.has(o) || n.push(o), t.set(o, !0);
            });
          }, []),
          n
        );
      }),
      (r.prototype.getGroupFields = function () {
        for (var t = [], n = new Map(), i = 0, a = Kn.length; i < a; i++) {
          var o = Kn[i],
            s = this.attributeOption[o];
          s && s.fields && Rr(s.fields, t, n);
        }
        return t;
      }),
      (r.prototype.getXYFields = function () {
        var t = q(this.attributeOption.position.fields, 2),
          n = t[0],
          i = t[1];
        return [n, i];
      }),
      (r.prototype.getXField = function () {
        return A(this.getXYFields(), [0]);
      }),
      (r.prototype.getYField = function () {
        return A(this.getXYFields(), [1]);
      }),
      (r.prototype.getShapes = function () {
        return this.elements.map(function (t) {
          return t.shape;
        });
      }),
      (r.prototype.getOffscreenGroup = function () {
        if (!this.offscreenGroup) {
          var t = this.container.getGroupBase();
          this.offscreenGroup = new t({});
        }
        return this.offscreenGroup;
      }),
      (r.prototype.sort = function (t) {
        if (!this.hasSorted)
          for (var n = this.getXScale(), i = n.field, a = 0; a < t.length; a++) {
            var o = t[a];
            o.sort(function (s, l) {
              return n.translate(s[Mt][i]) - n.translate(l[Mt][i]);
            });
          }
        this.hasSorted = !0;
      }),
      (r.prototype.adjustScale = function () {
        var t = this.getYScale();
        t && this.getAdjust('stack') && this.updateStackRange(t, this.beforeMappingData);
      }),
      (r.prototype.getShapeFactory = function () {
        var t = this.shapeType;
        if (Id(t))
          return (
            this.shapeFactory || (this.shapeFactory = oe(Id(t))),
            (this.shapeFactory.coordinate = this.coordinate),
            (this.shapeFactory.theme = this.theme.geometries[t] || {}),
            this.shapeFactory
          );
      }),
      (r.prototype.createShapePointsCfg = function (t) {
        var n = this.getXScale(),
          i = this.getYScale(),
          a = this.normalizeValues(t[n.field], n),
          o;
        return (
          i ? (o = this.normalizeValues(t[i.field], i)) : (o = t.y ? t.y : 0.1),
          { x: a, y: o, y0: i ? i.scale(this.getYMinValue()) : void 0 }
        );
      }),
      (r.prototype.createElement = function (t, n, i) {
        i === void 0 && (i = !1);
        var a = this.container,
          o = this.getDrawCfg(t),
          s = this.getShapeFactory(),
          l = new Km({
            shapeFactory: s,
            container: a,
            offscreenGroup: this.getOffscreenGroup(),
            elementIndex: n,
          });
        return (l.animate = this.animateOption), (l.geometry = this), l.draw(o, i), l;
      }),
      (r.prototype.getDrawCfg = function (t) {
        var n = t[Mt],
          i = {
            mappingData: t,
            data: n,
            x: t.x,
            y: t.y,
            color: t.color,
            size: t.size,
            isInCircle: this.coordinate.isPolar,
            customInfo: this.customOption,
          },
          a = t.shape;
        !a && this.getShapeFactory() && (a = this.getShapeFactory().defaultShapeType),
          (i.shape = a);
        var o = this.theme.geometries[this.shapeType];
        (i.defaultStyle = A(o, [a, 'default'], {}).style),
          !i.defaultStyle &&
            this.getShapeFactory() &&
            (i.defaultStyle = this.getShapeFactory().getDefaultStyle(o));
        var s = this.styleOption;
        return (
          s && (i.style = this.getStyleCfg(s, n)),
          this.generatePoints && ((i.points = t.points), (i.nextPoints = t.nextPoints)),
          i
        );
      }),
      (r.prototype.updateElements = function (t, n) {
        var i, a, o, s, l, u;
        n === void 0 && (n = !1);
        for (var c = new Map(), h = [], f = new Map(), v = 0, d = 0; d < t.length; d++)
          for (var p = t[d], g = 0; g < p.length; g++) {
            var y = p[g],
              m = this.getElementId(y),
              b = c.has(m) ? ''.concat(m, '-').concat(d, '-').concat(g) : m;
            h.push(b), c.set(b, y), f.set(b, v), v++;
          }
        this.elements = new Array(v);
        var w = e0(this.lastElementsMap, h),
          S = w.added,
          C = w.updated,
          F = w.removed;
        try {
          for (var E = pt(S), I = E.next(); !I.done; I = E.next()) {
            var m = I.value,
              y = c.get(m),
              d = f.get(m),
              T = this.createElement(y, d, n);
            (this.elements[d] = T),
              (this.elementsMap[m] = T),
              T.shape && T.shape.set('zIndex', this.zIndexReversed ? this.elements.length - d : d);
          }
        } catch (z) {
          i = { error: z };
        } finally {
          try {
            I && !I.done && (a = E.return) && a.call(E);
          } finally {
            if (i) throw i.error;
          }
        }
        try {
          for (var P = pt(C), R = P.next(); !R.done; R = P.next()) {
            var m = R.value,
              T = this.lastElementsMap[m],
              y = c.get(m),
              B = this.getDrawCfg(y),
              G = T.getModel(),
              d = f.get(m);
            (this.isCoordinateChanged || t0(B, G)) &&
              ((T.animate = this.animateOption), T.update(B)),
              (this.elements[d] = T),
              (this.elementsMap[m] = T),
              T.shape && T.shape.set('zIndex', this.zIndexReversed ? this.elements.length - d : d);
          }
        } catch (z) {
          o = { error: z };
        } finally {
          try {
            R && !R.done && (s = P.return) && s.call(P);
          } finally {
            if (o) throw o.error;
          }
        }
        this.container && this.container.sort();
        try {
          for (var j = pt(F), D = j.next(); !D.done; D = j.next()) {
            var m = D.value,
              T = this.lastElementsMap[m];
            (T.animate = this.animateOption), T.destroy();
          }
        } catch (z) {
          l = { error: z };
        } finally {
          try {
            D && !D.done && (u = j.return) && u.call(j);
          } finally {
            if (l) throw l.error;
          }
        }
      }),
      (r.prototype.getLabelType = function () {
        var t = this,
          n = t.labelOption,
          i = t.coordinate,
          a = t.type,
          o = i.type,
          s = i.isTransposed,
          l = A(n, ['cfg', 'type']);
        return (
          l ||
            (o === 'polar'
              ? (l = s ? 'pie' : 'polar')
              : o === 'theta'
              ? (l = 'pie')
              : a === 'interval' || a === 'polygon'
              ? (l = 'interval')
              : (l = 'base')),
          l
        );
      }),
      (r.prototype.getYMinValue = function () {
        var t = this.getYScale(),
          n = t.min,
          i = t.max,
          a;
        return n >= 0 ? (a = n) : i <= 0 ? (a = i) : (a = 0), a;
      }),
      (r.prototype.createAttrOption = function (t, n, i) {
        if ($(n) || xt(n))
          xt(n) && Dt(Object.keys(n), ['values'])
            ? Gt(this.attributeOption, t, { fields: n.values })
            : Gt(this.attributeOption, t, n);
        else {
          var a = {};
          at(n) ? (a.values = [n]) : (a.fields = Hi(n)),
            i && (U(i) ? (a.callback = i) : (a.values = i)),
            Gt(this.attributeOption, t, a);
        }
      }),
      (r.prototype.initAttributes = function () {
        var t = this,
          n = this,
          i = n.attributes,
          a = n.attributeOption,
          o = n.theme,
          s = n.shapeType;
        this.groupScales = [];
        var l = {},
          u = function (f) {
            if (a.hasOwnProperty(f)) {
              var v = a[f];
              if (!v) return { value: void 0 };
              var d = x({}, v),
                p = d.callback,
                g = d.values,
                y = d.fields,
                m = y === void 0 ? [] : y,
                b = m.map(function (S) {
                  var C = t.scales[S];
                  if (!l[S] && Kn.includes(f)) {
                    var F = Sm(C, A(t.scaleDefs, S), f, t.type);
                    F === 'cat' && (t.groupScales.push(C), (l[S] = !0));
                  }
                  return C;
                });
              (d.scales = b),
                f !== 'position' && b.length === 1 && b[0].type === 'identity'
                  ? (d.values = b[0].values)
                  : !p &&
                    !g &&
                    (f === 'size'
                      ? (d.values = o.sizes)
                      : f === 'shape'
                      ? (d.values = o.shapes[s] || [])
                      : f === 'color' &&
                        (b.length
                          ? (d.values = b[0].values.length <= 10 ? o.colors10 : o.colors20)
                          : (d.values = o.colors10)));
              var w = Ky(f);
              i[f] = new w(d);
            }
          };
        for (var c in a) {
          var h = u(c);
          if (typeof h == 'object') return h.value;
        }
      }),
      (r.prototype.processData = function (t) {
        var n, i;
        this.hasSorted = !1;
        for (
          var a = this.getAttribute('position').scales,
            o = a.filter(function (F) {
              return F.isCategory;
            }),
            s = this.groupData(t),
            l = [],
            u = 0,
            c = s.length;
          u < c;
          u++
        ) {
          for (var h = s[u], f = [], v = 0, d = h.length; v < d; v++) {
            var p = h[v],
              g = {};
            for (var y in p) g[y] = p[y];
            g[Mt] = p;
            try {
              for (var m = ((n = void 0), pt(o)), b = m.next(); !b.done; b = m.next()) {
                var w = b.value,
                  S = w.field;
                g[S] = w.translate(g[S]);
              }
            } catch (F) {
              n = { error: F };
            } finally {
              try {
                b && !b.done && (i = m.return) && i.call(m);
              } finally {
                if (n) throw n.error;
              }
            }
            f.push(g);
          }
          l.push(f);
        }
        var C = this.adjustData(l);
        return (this.beforeMappingData = C), C;
      }),
      (r.prototype.adjustData = function (t) {
        var n = this.adjustOption,
          i = this,
          a = i.intervalPadding,
          o = i.dodgePadding,
          s = i.theme,
          l = this.maxColumnWidth || s.maxColumnWidth,
          u = this.minColumnWidth || s.minColumnWidth,
          c = this.columnWidthRatio || s.columnWidthRatio,
          h = t;
        if (n) {
          var f = this.getXScale(),
            v = this.getYScale(),
            d = f.field,
            p = v ? v.field : null,
            g = Za(this.coordinate),
            y = f.values.length,
            m = this.getAttribute('size'),
            b = void 0;
          m && (b = m.values[0]);
          for (var w = 0, S = n.length; w < S; w++) {
            var C = n[w],
              F = x(
                {
                  xField: d,
                  yField: p,
                  intervalPadding: a,
                  dodgePadding: o,
                  xDimensionLength: g,
                  groupNum: y,
                  defaultSize: b,
                  maxColumnWidth: l,
                  minColumnWidth: u,
                  columnWidthRatio: c,
                },
                C,
              ),
              E = C.type;
            if (E === 'dodge') {
              var I = [];
              if (f.isCategory || f.type === 'identity') I.push('x');
              else if (!v) I.push('y');
              else
                throw new Error(
                  'dodge is not support linear attribute, please use category attribute!',
                );
              (F.adjustNames = I), (F.dodgeRatio = c);
            } else if (E === 'stack') {
              var T = this.coordinate;
              if (!v) {
                F.height = T.getHeight();
                var P = this.getDefaultValue('size') || 3;
                F.size = P;
              }
              !T.isTransposed && $(F.reverseOrder) && (F.reverseOrder = !0);
            }
            var R = ky(E);
            (F.dimValuesMap = {}),
              f &&
                f.values &&
                (F.dimValuesMap[f.field] = f.values.map(function (G) {
                  return f.translate(G);
                }));
            var B = new R(F);
            (h = B.process(h)), (this.adjusts[E] = B);
          }
        }
        return h;
      }),
      (r.prototype.groupData = function (t) {
        for (
          var n = this.getGroupScales(), i = this.scaleDefs, a = {}, o = [], s = 0;
          s < n.length;
          s++
        ) {
          var l = n[s],
            u = l.field;
          o.push(u), A(i, [u, 'values']) && (a[u] = i[u].values);
        }
        return gk(t, o, a);
      }),
      (r.prototype.updateStackRange = function (t, n) {
        for (var i = Ee(n), a = t.field, o = t.min, s = t.max, l = 0; l < i.length; l++) {
          var u = i[l],
            c = Math.min.apply(null, u[a]),
            h = Math.max.apply(null, u[a]);
          c < o && (o = c), h > s && (s = h);
        }
        var f = this.scaleDefs,
          v = {};
        o < t.min && !A(f, [a, 'min']) && (v.min = o),
          s > t.max && !A(f, [a, 'max']) && (v.max = s),
          t.change(v);
      }),
      (r.prototype.beforeMapping = function (t) {
        var n = t;
        if ((this.sortable && this.sort(n), this.generatePoints))
          for (var i = 0, a = n.length; i < a; i++) {
            var o = n[i];
            this.generateShapePoints(o);
            var s = n[i + 1];
            s && (this.generateShapePoints(s), (o[0].nextPoints = s[0].points));
          }
        return n;
      }),
      (r.prototype.generateShapePoints = function (t) {
        for (
          var n = this.getShapeFactory(), i = this.getAttribute('shape'), a = 0;
          a < t.length;
          a++
        ) {
          var o = t[a],
            s = this.createShapePointsCfg(o),
            l = i ? this.getAttributeValues(i, o) : null,
            u = n.getShapePoints(l, s);
          o.points = u;
        }
      }),
      (r.prototype.normalizeValues = function (t, n) {
        var i = [];
        if (N(t))
          for (var a = 0; a < t.length; a++) {
            var o = t[a];
            i.push(n.scale(o));
          }
        else i = n.scale(t);
        return i;
      }),
      (r.prototype.mapping = function (t) {
        for (var n = this.attributes, i = [], a = 0; a < t.length; a++) {
          var o = t[a],
            s = { _origin: o[Mt], points: o.points, nextPoints: o.nextPoints };
          for (var l in n)
            if (n.hasOwnProperty(l)) {
              var u = n[l],
                c = u.names,
                h = this.getAttributeValues(u, o);
              if (c.length > 1)
                for (var f = 0; f < h.length; f += 1) {
                  var v = h[f],
                    d = c[f];
                  s[d] = N(v) && v.length === 1 ? v[0] : v;
                }
              else s[c[0]] = h.length === 1 ? h[0] : h;
            }
          this.convertPoint(s), i.push(s);
        }
        return i;
      }),
      (r.prototype.convertPoint = function (t) {
        var n = t.x,
          i = t.y,
          a,
          o,
          s,
          l = this.coordinate;
        if (N(n) && N(i)) {
          (a = []), (o = []);
          for (var u = 0, c = 0, h = n.length, f = i.length; u < h && c < f; u += 1, c += 1)
            (s = l.convert({ x: n[u], y: i[c] })), a.push(s.x), o.push(s.y);
        } else if (N(i)) {
          o = [];
          for (var v = 0; v < i.length; v++) {
            var d = i[v];
            (s = l.convert({ x: n, y: d })),
              a && a !== s.x ? (N(a) || (a = [a]), a.push(s.x)) : (a = s.x),
              o.push(s.y);
          }
        } else if (N(n)) {
          a = [];
          for (var v = 0; v < n.length; v++) {
            var p = n[v];
            (s = l.convert({ x: p, y: i })),
              o && o !== s.y ? (N(o) || (o = [o]), o.push(s.y)) : (o = s.y),
              a.push(s.x);
          }
        } else {
          var g = l.convert({ x: n, y: i });
          (a = g.x), (o = g.y);
        }
        (t.x = a), (t.y = o);
      }),
      (r.prototype.getStyleCfg = function (t, n) {
        var i = t.fields,
          a = i === void 0 ? [] : i,
          o = t.callback,
          s = t.cfg;
        if (s) return s;
        var l = a.map(function (u) {
          return n[u];
        });
        return o.apply(void 0, J([], q(l), !1));
      }),
      (r.prototype.setCfg = function (t) {
        var n = this,
          i = t.coordinate,
          a = t.data,
          o = t.theme,
          s = t.scaleDefs;
        i && (this.coordinate = i),
          a && (this.data = a),
          s &&
            ((this.scaleDefs = s),
            (this.idFields = []),
            M(s, function (l, u) {
              l && l.key && n.idFields.push(u);
            })),
          o && (this.theme = this.userTheme ? _({}, o, this.userTheme) : o);
      }),
      (r.prototype.renderLabels = function (t, n) {
        return (
          n === void 0 && (n = !1),
          pa(this, void 0, void 0, function () {
            var i,
              a,
              o,
              s,
              l,
              u,
              c,
              h,
              f,
              v,
              d,
              p,
              g = this;
            return ga(this, function (y) {
              switch (y.label) {
                case 0:
                  return (
                    (i = this.geometryLabel),
                    this.emit(Gr.BEFORE_RENDER_LABEL),
                    i ||
                      ((a = this.getLabelType()),
                      (o = fk(a)),
                      (i = new o(this)),
                      (this.geometryLabel = i)),
                    [4, i.render(t, n)]
                  );
                case 1:
                  y.sent(),
                    (s = i.labelsRenderer.shapesMap),
                    (l = new Map()),
                    M(s, function (m, b) {
                      for (var w = m.getChildren() || [], S = 0; S < w.length; S++) {
                        var C = w[S],
                          F = g.elementsMap[C.get('elementId') || b.split(' ')[0]];
                        if (F) {
                          (C.cfg.name = ['element', 'label']), (C.cfg.element = F);
                          var E = l.get(F) || new Set();
                          E.add(m), l.set(F, E);
                        }
                      }
                    });
                  try {
                    for (u = pt(l.entries()), c = u.next(); !c.done; c = u.next())
                      (h = q(c.value, 2)), (f = h[0]), (v = h[1]), (f.labelShape = J([], q(v), !1));
                  } catch (m) {
                    d = { error: m };
                  } finally {
                    try {
                      c && !c.done && (p = u.return) && p.call(u);
                    } finally {
                      if (d) throw d.error;
                    }
                  }
                  return this.emit(Gr.AFTER_RENDER_LABEL), [2];
              }
            });
          })
        );
      }),
      (r.prototype.canDoGroupAnimation = function (t) {
        return (
          !t &&
          this.animateOption &&
          (A(this.animateOption, 'appear') === void 0 ||
            (A(this.animateOption, 'appear') &&
              A(this.animateOption, ['appear', 'animation']) === void 0))
        );
      }),
      r
    );
  })(_c),
  yl = Vt;
function Ja(e, r, t) {
  var n = yl(e.getMatrix(), [['t', r, t]]);
  e.setMatrix(n);
}
function yk(e, r) {
  var t = e.attr(),
    n = t.x,
    i = t.y,
    a = yl(e.getMatrix(), [
      ['t', -n, -i],
      ['r', r],
      ['t', n, i],
    ]);
  return a;
}
function Ah(e, r) {
  var t = yk(e, r);
  e.setMatrix(t);
}
function mk(e, r) {
  var t = e.getBBox(),
    n = (t.minX + t.maxX) / 2,
    i = (t.minY + t.maxY) / 2;
  e.applyToMatrix([n, i, 1]);
  var a = yl(e.getMatrix(), [
    ['t', -n, -i],
    ['s', r, r],
    ['t', n, i],
  ]);
  e.setMatrix(a);
}
function Zr(e) {
  return e.find(function (r) {
    return r.get('type') === 'text';
  });
}
function r0(e, r, t) {
  t === void 0 && (t = [0, 0, 0, 0]);
  var n = e && e.getChildren()[0];
  if (n) {
    var i = n.clone();
    r != null && r.rotate && Ah(i, -r.rotate);
    var a = i.getCanvasBBox(),
      o = a.x,
      s = a.y,
      l = a.width,
      u = a.height;
    i.destroy();
    var c = t;
    return (
      $(c) ? (c = [2, 2, 2, 2]) : at(c) && (c = new Array(4).fill(c)),
      {
        x: o - c[3],
        y: s - c[0],
        width: l + c[1] + c[3],
        height: u + c[0] + c[2],
        rotation: (r == null ? void 0 : r.rotate) || 0,
      }
    );
  }
  return { x: 0, y: 0, width: 0, height: 0, rotation: 0 };
}
function xk(e, r, t) {
  t === void 0 && (t = 0);
  var n = Math.max(0, Math.min(e.x + e.width + t, r.x + r.width + t) - Math.max(e.x - t, r.x - t)),
    i = Math.max(0, Math.min(e.y + e.height + t, r.y + r.height + t) - Math.max(e.y - t, r.y - t));
  return n * i;
}
function wk(e, r) {
  var t = e.getBBox();
  return zs(r, function (n) {
    var i = n.getBBox();
    return xk(t, i, 2) > 0;
  });
}
function n0(e, r, t) {
  var n = t.data,
    i = t.origin,
    a = t.animateCfg,
    o = t.coordinate,
    s = A(a, 'update');
  e.set('data', n),
    e.set('origin', i),
    e.set('animateCfg', a),
    e.set('coordinate', o),
    e.set('visible', r.get('visible')),
    (e.getChildren() || []).forEach(function (l, u) {
      var c = r.getChildByIndex(u);
      if (!c) e.removeChild(l), l.remove(!0);
      else {
        l.set('data', n), l.set('origin', i), l.set('animateCfg', a), l.set('coordinate', o);
        var h = bm(l, c);
        s ? ai(l, s, { toAttrs: h, coordinate: o }) : l.attr(h), c.isGroup() && n0(l, c, t);
      }
    }),
    M(r.getChildren(), function (l, u) {
      u >= e.getCount() && (l.destroyed || e.add(l));
    });
}
var bk = (function () {
  function e(r) {
    this.shapesMap = {};
    var t = r.layout,
      n = r.container;
    (this.layout = t), (this.container = n);
  }
  return (
    (e.prototype.render = function (r, t, n) {
      return (
        n === void 0 && (n = !1),
        pa(this, void 0, void 0, function () {
          var i,
            a,
            o,
            s,
            l,
            u,
            c,
            h,
            f = this;
          return ga(this, function (v) {
            switch (v.label) {
              case 0:
                if (((i = {}), (a = this.createOffscreenGroup()), !r.length)) return [3, 2];
                try {
                  for (o = pt(r), s = o.next(); !s.done; s = o.next())
                    (l = s.value), l && (i[l.id] = this.renderLabel(l, a));
                } catch (d) {
                  c = { error: d };
                } finally {
                  try {
                    s && !s.done && (h = o.return) && h.call(o);
                  } finally {
                    if (c) throw c.error;
                  }
                }
                return [4, this.doLayout(r, t, i)];
              case 1:
                v.sent(),
                  this.renderLabelLine(r, i),
                  this.renderLabelBackground(r, i),
                  this.adjustLabel(r, i),
                  (v.label = 2);
              case 2:
                return (
                  (u = this.shapesMap),
                  M(i, function (d, p) {
                    if (d.destroyed) delete i[p];
                    else {
                      if (u[p]) {
                        var g = d.get('data'),
                          y = d.get('origin'),
                          m = d.get('coordinate'),
                          b = d.get('animateCfg'),
                          w = u[p];
                        n0(w, i[p], { data: g, origin: y, animateCfg: b, coordinate: m }),
                          (i[p] = w);
                      } else {
                        if (f.container.destroyed) return;
                        f.container.add(d);
                        var S = A(d.get('animateCfg'), n ? 'enter' : 'appear');
                        S &&
                          ai(d, S, { toAttrs: x({}, d.attr()), coordinate: d.get('coordinate') });
                      }
                      delete u[p];
                    }
                  }),
                  M(u, function (d) {
                    var p = A(d.get('animateCfg'), 'leave');
                    p ? ai(d, p, { toAttrs: null, coordinate: d.get('coordinate') }) : d.remove(!0);
                  }),
                  (this.shapesMap = i),
                  a.destroy(),
                  [2]
                );
            }
          });
        })
      );
    }),
    (e.prototype.clear = function () {
      this.container.clear(), (this.shapesMap = {});
    }),
    (e.prototype.destroy = function () {
      this.container.destroy(), (this.shapesMap = null);
    }),
    (e.prototype.renderLabel = function (r, t) {
      var n = r.id,
        i = r.elementId,
        a = r.data,
        o = r.mappingData,
        s = r.coordinate,
        l = r.animate,
        u = r.content,
        c = r.capture,
        h = {
          id: n,
          elementId: i,
          capture: c,
          data: a,
          origin: x(x({}, o), { data: o[Mt] }),
          coordinate: s,
        },
        f = t.addGroup(
          x(
            {
              name: 'label',
              animateCfg:
                this.animate === !1 || l === null || l === !1 ? !1 : _({}, this.animate, l),
            },
            h,
          ),
        ),
        v;
      if ((u.isGroup && u.isGroup()) || (u.isShape && u.isShape())) {
        var d = u.getCanvasBBox(),
          p = d.width,
          g = d.height,
          y = A(r, 'textAlign', 'left'),
          m = r.x,
          b = r.y - g / 2;
        y === 'center' ? (m = m - p / 2) : (y === 'right' || y === 'end') && (m = m - p),
          Ja(u, m, b),
          (v = u),
          f.add(u);
      } else {
        var w = A(r, ['style', 'fill']);
        v = f.addShape(
          'text',
          x(
            {
              attrs: x(
                x(
                  {
                    x: r.x,
                    y: r.y,
                    textAlign: r.textAlign,
                    textBaseline: A(r, 'textBaseline', 'middle'),
                    text: r.content,
                  },
                  r.style,
                ),
                { fill: eC(w) ? r.color : w },
              ),
            },
            h,
          ),
        );
      }
      return r.rotate && Ah(v, r.rotate), f;
    }),
    (e.prototype.doLayout = function (r, t, n) {
      return pa(this, void 0, void 0, function () {
        var i,
          a = this;
        return ga(this, function (o) {
          switch (o.label) {
            case 0:
              return this.layout
                ? ((i = N(this.layout) ? this.layout : [this.layout]),
                  [
                    4,
                    Promise.all(
                      i.map(function (s) {
                        var l = vk(A(s, 'type', ''));
                        if (l) {
                          var u = [],
                            c = [];
                          return (
                            M(n, function (h, f) {
                              u.push(h), c.push(t[h.get('elementId')]);
                            }),
                            l(r, u, c, a.region, s.cfg)
                          );
                        }
                      }),
                    ),
                  ])
                : [3, 2];
            case 1:
              o.sent(), (o.label = 2);
            case 2:
              return [2];
          }
        });
      });
    }),
    (e.prototype.renderLabelLine = function (r, t) {
      M(r, function (n) {
        var i = A(n, 'coordinate');
        if (!(!n || !i)) {
          var a = i.getCenter(),
            o = i.getRadius();
          if (n.labelLine) {
            var s = A(n, 'labelLine', {}),
              l = n.id,
              u = s.path;
            if (!u) {
              var c = zt(a.x, a.y, o, n.angle);
              u = [
                ['M', c.x, c.y],
                ['L', n.x, n.y],
              ];
            }
            var h = t[l];
            h.destroyed ||
              h.addShape('path', {
                capture: !1,
                attrs: x(
                  {
                    path: u,
                    stroke: n.color ? n.color : A(n, ['style', 'fill'], '#000'),
                    fill: null,
                  },
                  s.style,
                ),
                id: l,
                origin: n.mappingData,
                data: n.data,
                coordinate: n.coordinate,
              });
          }
        }
      });
    }),
    (e.prototype.renderLabelBackground = function (r, t) {
      M(r, function (n) {
        var i = A(n, 'coordinate'),
          a = A(n, 'background');
        if (!(!a || !i)) {
          var o = n.id,
            s = t[o];
          if (!s.destroyed) {
            var l = s.getChildren()[0];
            if (l) {
              var u = r0(s, n, a.padding),
                c = u.rotation,
                h = wt(u, ['rotation']),
                f = s.addShape('rect', {
                  attrs: x(x({}, h), a.style || {}),
                  id: o,
                  origin: n.mappingData,
                  data: n.data,
                  coordinate: n.coordinate,
                });
              if ((f.setZIndex(-1), c)) {
                var v = l.getMatrix();
                f.setMatrix(v);
              }
            }
          }
        }
      });
    }),
    (e.prototype.createOffscreenGroup = function () {
      var r = this.container,
        t = r.getGroupBase(),
        n = new t({});
      return n;
    }),
    (e.prototype.adjustLabel = function (r, t) {
      M(r, function (n) {
        if (n) {
          var i = n.id,
            a = t[i];
          if (!a.destroyed) {
            var o = a.findAll(function (s) {
              return s.get('type') !== 'path';
            });
            M(o, function (s) {
              s &&
                (n.offsetX && s.attr('x', s.attr('x') + n.offsetX),
                n.offsetY && s.attr('y', s.attr('y') + n.offsetY));
            });
          }
        }
      });
    }),
    e
  );
})();
function Ld(e) {
  var r = 0;
  return (
    M(e, function (t) {
      r += t;
    }),
    r / e.length
  );
}
var ml = (function () {
  function e(r) {
    this.geometry = r;
  }
  return (
    (e.prototype.getLabelItems = function (r) {
      var t = this,
        n = [],
        i = this.getLabelCfgs(r);
      return (
        M(r, function (a, o) {
          var s = i[o];
          if (!s || $(a.x) || $(a.y)) {
            n.push(null);
            return;
          }
          var l = N(s.content) ? s.content : [s.content];
          s.content = l;
          var u = l.length;
          M(l, function (c, h) {
            if ($(c) || c === '') {
              n.push(null);
              return;
            }
            var f = x(x({}, s), t.getLabelPoint(s, a, h));
            f.textAlign || (f.textAlign = t.getLabelAlign(f, h, u)),
              f.offset <= 0 && (f.labelLine = null),
              n.push(f);
          });
        }),
        n
      );
    }),
    (e.prototype.render = function (r, t) {
      return (
        t === void 0 && (t = !1),
        pa(this, void 0, void 0, function () {
          var n, i, a;
          return ga(this, function (o) {
            switch (o.label) {
              case 0:
                return (
                  (n = this.getLabelItems(r)),
                  (i = this.getLabelsRenderer()),
                  (a = this.getGeometryShapes()),
                  [4, i.render(n, a, t)]
                );
              case 1:
                return o.sent(), [2];
            }
          });
        })
      );
    }),
    (e.prototype.clear = function () {
      var r = this.labelsRenderer;
      r && r.clear();
    }),
    (e.prototype.destroy = function () {
      var r = this.labelsRenderer;
      r && r.destroy(), (this.labelsRenderer = null);
    }),
    (e.prototype.getCoordinate = function () {
      return this.geometry.coordinate;
    }),
    (e.prototype.getDefaultLabelCfg = function (r, t) {
      var n = this.geometry,
        i = n.type,
        a = n.theme;
      return i === 'polygon' ||
        (i === 'interval' && t === 'middle') ||
        (r < 0 && !['line', 'point', 'path'].includes(i))
        ? A(a, 'innerLabels', {})
        : A(a, 'labels', {});
    }),
    (e.prototype.getThemedLabelCfg = function (r) {
      var t = this.geometry,
        n = this.getDefaultLabelCfg(),
        i = t.type,
        a = t.theme,
        o;
      return (
        i === 'polygon' || (r.offset < 0 && !['line', 'point', 'path'].includes(i))
          ? (o = _({}, n, a.innerLabels, r))
          : (o = _({}, n, a.labels, r)),
        o
      );
    }),
    (e.prototype.setLabelPosition = function (r, t, n, i) {}),
    (e.prototype.getLabelOffset = function (r) {
      var t = this.getCoordinate(),
        n = this.getOffsetVector(r);
      return t.isTransposed ? n[0] : n[1];
    }),
    (e.prototype.getLabelOffsetPoint = function (r, t, n) {
      var i = r.offset,
        a = this.getCoordinate(),
        o = a.isTransposed,
        s = o ? 'x' : 'y',
        l = o ? 1 : -1,
        u = { x: 0, y: 0 };
      return t > 0 || n === 1 ? (u[s] = i * l) : (u[s] = i * l * -1), u;
    }),
    (e.prototype.getLabelPoint = function (r, t, n) {
      var i = this.getCoordinate(),
        a = r.content.length;
      function o(g, y, m) {
        m === void 0 && (m = !1);
        var b = g;
        return (
          N(b) &&
            (r.content.length === 1
              ? m
                ? (b = Ld(b))
                : b.length <= 2
                ? (b = b[g.length - 1])
                : (b = Ld(b))
              : (b = b[y])),
          b
        );
      }
      var s = { content: r.content[n], x: 0, y: 0, start: { x: 0, y: 0 }, color: '#fff' },
        l = N(t.shape) ? t.shape[0] : t.shape,
        u = l === 'funnel' || l === 'pyramid';
      if (this.geometry.type === 'polygon') {
        var c = nT(t.x, t.y);
        (s.x = c[0]), (s.y = c[1]);
      } else
        this.geometry.type === 'interval' && !u
          ? ((s.x = o(t.x, n, !0)), (s.y = o(t.y, n)))
          : ((s.x = o(t.x, n)), (s.y = o(t.y, n)));
      if (u) {
        var h = A(t, 'nextPoints'),
          f = A(t, 'points');
        if (h) {
          var v = i.convert(f[1]),
            d = i.convert(h[1]);
          (s.x = (v.x + d.x) / 2), (s.y = (v.y + d.y) / 2);
        } else if (l === 'pyramid') {
          var v = i.convert(f[1]),
            d = i.convert(f[2]);
          (s.x = (v.x + d.x) / 2), (s.y = (v.y + d.y) / 2);
        }
      }
      r.position && this.setLabelPosition(s, t, n, r.position);
      var p = this.getLabelOffsetPoint(r, n, a);
      return (s.start = { x: s.x, y: s.y }), (s.x += p.x), (s.y += p.y), (s.color = t.color), s;
    }),
    (e.prototype.getLabelAlign = function (r, t, n) {
      var i = 'center',
        a = this.getCoordinate();
      if (a.isTransposed) {
        var o = r.offset;
        o < 0 ? (i = 'right') : o === 0 ? (i = 'center') : (i = 'left'),
          n > 1 && t === 0 && (i === 'right' ? (i = 'left') : i === 'left' && (i = 'right'));
      }
      return i;
    }),
    (e.prototype.getLabelId = function (r) {
      var t = this.geometry,
        n = t.type,
        i = t.getXScale(),
        a = t.getYScale(),
        o = r[Mt],
        s = t.getElementId(r);
      return (
        n === 'line' || n === 'area'
          ? (s += ' '.concat(o[i.field]))
          : n === 'path' && (s += ' '.concat(o[i.field], '-').concat(o[a.field])),
        s
      );
    }),
    (e.prototype.getLabelsRenderer = function () {
      var r = this.geometry,
        t = r.labelsContainer,
        n = r.labelOption,
        i = r.canvasRegion,
        a = r.animateOption,
        o = this.geometry.coordinate,
        s = this.labelsRenderer;
      return (
        s ||
          ((s = new bk({
            container: t,
            layout: A(n, ['cfg', 'layout'], { type: this.defaultLayout }),
          })),
          (this.labelsRenderer = s)),
        (s.region = i),
        (s.animate = a ? Zm('label', o) : !1),
        s
      );
    }),
    (e.prototype.getLabelCfgs = function (r) {
      var t = this,
        n = this.geometry,
        i = n.labelOption,
        a = n.scales,
        o = n.coordinate,
        s = i,
        l = s.fields,
        u = s.callback,
        c = s.cfg,
        h = l.map(function (v) {
          return a[v];
        }),
        f = [];
      return (
        M(r, function (v, d) {
          var p = v[Mt],
            g = t.getLabelText(p, h),
            y;
          if (u) {
            var m = l.map(function (F) {
              return p[F];
            });
            if (((y = u.apply(void 0, J([], q(m), !1))), $(y))) {
              f.push(null);
              return;
            }
          }
          var b = x(
            x(
              {
                id: t.getLabelId(v),
                elementId: t.geometry.getElementId(v),
                data: p,
                mappingData: v,
                coordinate: o,
              },
              c,
            ),
            y,
          );
          U(b.position) && (b.position = b.position(p, v, d));
          var w = t.getLabelOffset(b.offset || 0),
            S = t.getDefaultLabelCfg(w, b.position);
          (b = _({}, S, b)), (b.offset = t.getLabelOffset(b.offset || 0));
          var C = b.content;
          U(C) ? (b.content = C(p, v, d)) : pn(C) && (b.content = g[0]), f.push(b);
        }),
        f
      );
    }),
    (e.prototype.getLabelText = function (r, t) {
      var n = [];
      return (
        M(t, function (i) {
          var a = r[i.field];
          N(a)
            ? (a = a.map(function (o) {
                return i.getText(o);
              }))
            : (a = i.getText(a)),
            $(a) || a === '' ? n.push(null) : n.push(a);
        }),
        n
      );
    }),
    (e.prototype.getOffsetVector = function (r) {
      r === void 0 && (r = 0);
      var t = this.getCoordinate(),
        n = 0;
      return at(r) && (n = r), t.isTransposed ? t.applyMatrix(n, 0) : t.applyMatrix(0, n);
    }),
    (e.prototype.getGeometryShapes = function () {
      var r = this.geometry,
        t = {};
      return (
        M(r.elementsMap, function (n, i) {
          t[i] = n.shape;
        }),
        M(r.getOffscreenGroup().getChildren(), function (n) {
          var i = r.getElementId(n.get('origin').mappingData);
          t[i] = n;
        }),
        t
      );
    }),
    e
  );
})();
function vc(e, r, t) {
  if (!e) return t;
  var n;
  if (e.callback && e.callback.length > 1) {
    var i = Array(e.callback.length - 1).fill('');
    n = e.mapping.apply(e, J([r], q(i), !1)).join('');
  } else n = e.mapping(r).join('');
  return n || t;
}
var Dn = {
    hexagon: function (e, r, t) {
      var n = (t / 2) * Math.sqrt(3);
      return [
        ['M', e, r - t],
        ['L', e + n, r - t / 2],
        ['L', e + n, r + t / 2],
        ['L', e, r + t],
        ['L', e - n, r + t / 2],
        ['L', e - n, r - t / 2],
        ['Z'],
      ];
    },
    bowtie: function (e, r, t) {
      var n = t - 1.5;
      return [
        ['M', e - t, r - n],
        ['L', e + t, r + n],
        ['L', e + t, r - n],
        ['L', e - t, r + n],
        ['Z'],
      ];
    },
    cross: function (e, r, t) {
      return [
        ['M', e - t, r - t],
        ['L', e + t, r + t],
        ['M', e + t, r - t],
        ['L', e - t, r + t],
      ];
    },
    tick: function (e, r, t) {
      return [
        ['M', e - t / 2, r - t],
        ['L', e + t / 2, r - t],
        ['M', e, r - t],
        ['L', e, r + t],
        ['M', e - t / 2, r + t],
        ['L', e + t / 2, r + t],
      ];
    },
    plus: function (e, r, t) {
      return [
        ['M', e - t, r],
        ['L', e + t, r],
        ['M', e, r - t],
        ['L', e, r + t],
      ];
    },
    hyphen: function (e, r, t) {
      return [
        ['M', e - t, r],
        ['L', e + t, r],
      ];
    },
    line: function (e, r, t) {
      return [
        ['M', e, r - t],
        ['L', e, r + t],
      ];
    },
  },
  Sk = ['line', 'cross', 'tick', 'plus', 'hyphen'];
function Ck(e, r) {
  return U(r) ? r(e) : _({}, e, r);
}
function Mk(e, r) {
  var t = e.symbol;
  if (et(t) && Sk.indexOf(t) !== -1) {
    var n = A(e, 'style', {}),
      i = A(n, 'lineWidth', 1),
      a = n.stroke || n.fill || r;
    e.style = _({}, e.style, { lineWidth: i, stroke: a, fill: null });
  }
}
function i0(e) {
  var r = e.symbol;
  et(r) && Dn[r] && (e.symbol = Dn[r]);
}
function cu(e) {
  return e.startsWith(H.LEFT) || e.startsWith(H.RIGHT) ? 'vertical' : 'horizontal';
}
function a0(e, r, t, n, i) {
  var a = t.getScale(t.type);
  if (a.isCategory) {
    var o = a.field,
      s = r.getAttribute('color'),
      l = r.getAttribute('shape'),
      u = e.getTheme().defaultColor,
      c = r.coordinate.isPolar;
    return a.getTicks().map(function (h, f) {
      var v,
        d = h.text,
        p = h.value,
        g = d,
        y = a.invert(p),
        m = e.filterFieldData(o, [((v = {}), (v[o] = y), v)]).length === 0;
      M(e.views, function (F) {
        var E;
        F.filterFieldData(o, [((E = {}), (E[o] = y), E)]).length || (m = !0);
      });
      var b = vc(s, y, u),
        w = vc(l, y, 'point'),
        S = r.getShapeMarker(w, { color: b, isInPolar: c }),
        C = i;
      return (
        U(C) && (C = C(g, f, x({ name: g, value: y }, _({}, n, S)))),
        (S = _({}, n, S, ve(x({}, C), ['style']))),
        Mk(S, b),
        C && C.style && (S.style = Ck(S.style, C.style)),
        i0(S),
        { id: y, name: g, value: y, marker: S, unchecked: m }
      );
    });
  }
  return [];
}
function Ak(e, r, t) {
  return t.map(function (n, i) {
    var a = r;
    U(a) && (a = a(n.name, i, _({}, e, n)));
    var o = U(n.marker) ? n.marker(n.name, i, _({}, e, n)) : n.marker,
      s = _({}, e, a, o);
    return i0(s), (n.marker = s), n;
  });
}
function Pd(e, r) {
  var t = A(e, ['components', 'legend'], {});
  return _({}, A(t, ['common'], {}), _({}, A(t, [r], {})));
}
function hu(e) {
  return e ? !1 : e == null || isNaN(e);
}
function Od(e) {
  if (N(e)) return hu(e[1].y);
  var r = e.y;
  return N(r) ? hu(r[0]) : hu(r);
}
function xl(e, r, t) {
  if ((r === void 0 && (r = !1), t === void 0 && (t = !0), !e.length || (e.length === 1 && !t)))
    return [];
  if (r) {
    for (var n = [], i = 0, a = e.length; i < a; i++) {
      var o = e[i];
      Od(o) || n.push(o);
    }
    return [n];
  }
  for (var s = [], l = [], i = 0, a = e.length; i < a; i++) {
    var o = e[i];
    Od(o) ? l.length && ((l.length === 1 && !t) || s.push(l), (l = [])) : l.push(o);
  }
  return l.length && s.push(l), s;
}
function o0(e) {
  for (var r = [], t = 0; t < e.length; t++) {
    var n = e[t];
    if (n) {
      var i = t === 0 ? 'M' : 'L';
      r.push([i, n.x, n.y]);
    }
  }
  var a = e[0];
  return a && (r.push(['L', a.x, a.y]), r.push(['z'])), r;
}
function s0(e) {
  for (var r = e.length / 2, t = [], n = [], i = 0; i < e.length; i++)
    i < r ? t.push(e[i]) : n.push(e[i]);
  var a = ws(t, !1),
    o = ws(n, !1);
  n.length && a.push(['L', n[0].x, n[0].y]), o.shift();
  var s = a.concat(o);
  return t.length && s.push(['L', t[0].x, t[0].y]), s.push(['z']), s;
}
function Nt(e, r, t, n) {
  n === void 0 && (n = '');
  var i = e.style,
    a = i === void 0 ? {} : i,
    o = e.defaultStyle,
    s = e.color,
    l = e.size,
    u = x(x({}, o), a);
  return (
    s && (r && (a.stroke || (u.stroke = s)), t && (a.fill || (u.fill = s))),
    n && $(a[n]) && !$(l) && (u[n] = l),
    u
  );
}
function l0(e) {
  return _({}, { fill: '#CCD6EC', fillOpacity: 0.3 }, A(e, ['background', 'style']));
}
function Fh(e) {
  var r = e.x,
    t = N(e.y) ? e.y : [e.y];
  return t.map(function (n, i) {
    return { x: N(r) ? r[i] : r, y: n };
  });
}
var Fk = {
  line: function (e, r, t) {
    return [
      ['M', e - t, r],
      ['L', e + t, r],
    ];
  },
  dot: function (e, r, t) {
    return [
      ['M', e - t, r],
      ['L', e + t, r],
    ];
  },
  dash: function (e, r, t) {
    return [
      ['M', e - t, r],
      ['L', e + t, r],
    ];
  },
  smooth: function (e, r, t) {
    return [
      ['M', e - t, r],
      ['A', t / 2, t / 2, 0, 1, 1, e, r],
      ['A', t / 2, t / 2, 0, 1, 0, e + t, r],
    ];
  },
  hv: function (e, r, t) {
    return [
      ['M', e - t - 1, r - 2.5],
      ['L', e, r - 2.5],
      ['L', e, r + 2.5],
      ['L', e + t + 1, r + 2.5],
    ];
  },
  vh: function (e, r, t) {
    return [
      ['M', e - t - 1, r + 2.5],
      ['L', e, r + 2.5],
      ['L', e, r - 2.5],
      ['L', e + t + 1, r - 2.5],
    ];
  },
  hvh: function (e, r, t) {
    return [
      ['M', e - (t + 1), r + 2.5],
      ['L', e - t / 2, r + 2.5],
      ['L', e - t / 2, r - 2.5],
      ['L', e + t / 2, r - 2.5],
      ['L', e + t / 2, r + 2.5],
      ['L', e + t + 1, r + 2.5],
    ];
  },
  vhv: function (e, r) {
    return [
      ['M', e - 5, r + 2.5],
      ['L', e - 5, r],
      ['L', e, r],
      ['L', e, r - 3],
      ['L', e, r + 3],
      ['L', e + 6.5, r + 3],
    ];
  },
};
function u0(e, r) {
  var t = e.color;
  return { symbol: Fk[r], style: { lineWidth: 2, r: 6, stroke: t } };
}
function Ek(e, r, t) {
  for (
    var n = e.isStack,
      i = e.connectNulls,
      a = e.isInCircle,
      o = e.showSinglePoint,
      s = Nt(e, !0, !1, 'lineWidth'),
      l = xl(e.points, i, o),
      u = [],
      c = 0,
      h = l.length;
    c < h;
    c++
  ) {
    var f = l[c];
    u = u.concat(c0(f, a, n, r, t, s));
  }
  return (s.path = u), s;
}
function dc(e, r, t, n, i) {
  if (e.length === 1)
    return [
      ['M', e[0].x, e[0].y - i.lineWidth / 2],
      ['L', e[0].x, e[0].y],
      ['L', e[0].x, e[0].y + i.lineWidth / 2],
    ];
  var a;
  return (
    t
      ? (r && e.length && e.push({ x: e[0].x, y: e[0].y }), (a = ws(e, !1, n)))
      : ((a = Ka(e, !1)), r && a.push(['Z'])),
    a
  );
}
function Tk(e, r, t, n, i, a) {
  var o = [],
    s = [];
  M(e, function (c) {
    var h = Fh(c);
    o.push(h[1]), s.push(h[0]);
  });
  var l = dc(o, r, n, i, a),
    u = dc(s, r, n, i, a);
  return t ? l : l.concat(u);
}
function c0(e, r, t, n, i, a) {
  if (e.length) {
    var o = e[0];
    return N(o.y) ? Tk(e, r, t, n, i, a) : dc(e, r, n, i, a);
  }
  return [];
}
nn('line', { defaultShapeType: 'line' });
M(['line', 'dot', 'dash', 'smooth'], function (e) {
  gt('line', e, {
    draw: function (r, t) {
      var n = e === 'smooth',
        i;
      if (n) {
        var a = this.coordinate,
          o = a.start,
          s = a.end;
        i = [
          [o.x, s.y],
          [s.x, o.y],
        ];
      }
      var l = Ek(r, n, i),
        u = t.addShape({ type: 'path', attrs: l, name: 'line', capture: !n });
      return u;
    },
    getMarker: function (r) {
      return u0(r, e);
    },
  });
});
var me = {
    getLegendItems: a0,
    translate: Ja,
    rotate: Ah,
    zoom: mk,
    transform: yl,
    getAngle: Ta,
    getSectorPath: Yr,
    polarToCartesian: zt,
    getDelegationObject: On,
    getTooltipItems: wh,
    getMappingValue: vc,
    getPath: c0,
    getPathPoints: xl,
  },
  Ir = {
    100: '#000',
    95: '#0D0D0D',
    85: '#262626',
    65: '#595959',
    45: '#8C8C8C',
    25: '#BFBFBF',
    15: '#D9D9D9',
    6: '#F0F0F0',
  },
  Ct = {
    100: '#FFFFFF',
    95: '#F2F2F2',
    85: '#D9D9D9',
    65: '#A6A6A6',
    45: '#737373',
    25: '#404040',
    15: '#262626',
    6: '#0F0F0F',
  },
  He = [
    '#5B8FF9',
    '#5AD8A6',
    '#5D7092',
    '#F6BD16',
    '#E86452',
    '#6DC8EC',
    '#945FB9',
    '#FF9845',
    '#1E9493',
    '#FF99C3',
  ],
  kk = [
    '#5B8FF9',
    '#CDDDFD',
    '#5AD8A6',
    '#CDF3E4',
    '#5D7092',
    '#CED4DE',
    '#F6BD16',
    '#FCEBB9',
    '#E86452',
    '#F8D0CB',
    '#6DC8EC',
    '#D3EEF9',
    '#945FB9',
    '#DECFEA',
    '#FF9845',
    '#FFE0C7',
    '#1E9493',
    '#BBDEDE',
    '#FF99C3',
    '#FFE0ED',
  ],
  Ik = [
    '#B8E1FF',
    '#9AC5FF',
    '#7DAAFF',
    '#5B8FF9',
    '#3D76DD',
    '#085EC0',
    '#0047A5',
    '#00318A',
    '#001D70',
  ],
  Lk = function (e) {
    e === void 0 && (e = {});
    var r = e.paletteQualitative10,
      t = r === void 0 ? He : r,
      n = e.paletteQualitative20,
      i = n === void 0 ? kk : n,
      a = e.brandColor,
      o = a === void 0 ? t[0] : a,
      s = {
        backgroundColor: '#141414',
        brandColor: o,
        subColor: 'rgba(255,255,255,0.05)',
        paletteQualitative10: t,
        paletteQualitative20: i,
        paletteSemanticRed: '#F4664A',
        paletteSemanticGreen: '#30BF78',
        paletteSemanticYellow: '#FAAD14',
        paletteSequence: Ik,
        fontFamily: `"Segoe UI", Roboto, "Helvetica Neue", Arial,
    "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"`,
        axisLineBorderColor: Ct[25],
        axisLineBorder: 1,
        axisLineDash: null,
        axisTitleTextFillColor: Ct[65],
        axisTitleTextFontSize: 12,
        axisTitleTextLineHeight: 12,
        axisTitleTextFontWeight: 'normal',
        axisTitleSpacing: 12,
        axisDescriptionIconFillColor: Ir[85],
        axisTickLineBorderColor: Ct[25],
        axisTickLineLength: 4,
        axisTickLineBorder: 1,
        axisSubTickLineBorderColor: Ct[15],
        axisSubTickLineLength: 2,
        axisSubTickLineBorder: 1,
        axisLabelFillColor: Ct[45],
        axisLabelFontSize: 12,
        axisLabelLineHeight: 12,
        axisLabelFontWeight: 'normal',
        axisLabelOffset: 8,
        axisGridBorderColor: Ct[15],
        axisGridBorder: 1,
        axisGridLineDash: null,
        legendTitleTextFillColor: Ct[45],
        legendTitleTextFontSize: 12,
        legendTitleTextLineHeight: 21,
        legendTitleTextFontWeight: 'normal',
        legendMarkerColor: He[0],
        legendMarkerSpacing: 8,
        legendMarkerSize: 4,
        legendCircleMarkerSize: 4,
        legendSquareMarkerSize: 4,
        legendLineMarkerSize: 5,
        legendItemNameFillColor: Ct[65],
        legendItemNameFontSize: 12,
        legendItemNameLineHeight: 12,
        legendItemNameFontWeight: 'normal',
        legendItemSpacing: 24,
        legendItemMarginBottom: 12,
        legendSpacing: 16,
        legendPadding: [8, 8, 8, 8],
        legendHorizontalPadding: [8, 0, 8, 0],
        legendVerticalPadding: [0, 8, 0, 8],
        legendPageNavigatorMarkerSize: 12,
        legendPageNavigatorMarkerInactiveFillColor: Ct[45],
        legendPageNavigatorMarkerInactiveFillOpacity: 0.45,
        legendPageNavigatorMarkerFillColor: Ct[45],
        legendPageNavigatorMarkerFillOpacity: 1,
        legendPageNavigatorTextFillColor: Ct[65],
        legendPageNavigatorTextFontSize: 12,
        sliderRailFillColor: Ct[15],
        sliderRailBorder: 0,
        sliderRailBorderColor: null,
        sliderRailWidth: 100,
        sliderRailHeight: 12,
        sliderLabelTextFillColor: Ct[45],
        sliderLabelTextFontSize: 12,
        sliderLabelTextLineHeight: 12,
        sliderLabelTextFontWeight: 'normal',
        sliderHandlerFillColor: Ir[6],
        sliderHandlerWidth: 10,
        sliderHandlerHeight: 14,
        sliderHandlerBorder: 1,
        sliderHandlerBorderColor: Ir[25],
        annotationArcBorderColor: Ct[15],
        annotationArcBorder: 1,
        annotationLineBorderColor: Ct[25],
        annotationLineBorder: 1,
        annotationLineDash: null,
        annotationTextFillColor: Ct[65],
        annotationTextFontSize: 12,
        annotationTextLineHeight: 12,
        annotationTextFontWeight: 'normal',
        annotationTextBorderColor: null,
        annotationTextBorder: 0,
        annotationRegionFillColor: Ct[100],
        annotationRegionFillOpacity: 0.06,
        annotationRegionBorder: 0,
        annotationRegionBorderColor: null,
        annotationDataMarkerLineLength: 16,
        tooltipCrosshairsBorderColor: Ct[25],
        tooltipCrosshairsBorder: 1,
        tooltipCrosshairsLineDash: null,
        tooltipContainerFillColor: '#1f1f1f',
        tooltipContainerFillOpacity: 0.95,
        tooltipContainerShadow: '0px 2px 4px rgba(0,0,0,.5)',
        tooltipContainerBorderRadius: 3,
        tooltipTextFillColor: Ct[65],
        tooltipTextFontSize: 12,
        tooltipTextLineHeight: 12,
        tooltipTextFontWeight: 'bold',
        labelFillColor: Ct[65],
        labelFillColorDark: '#2c3542',
        labelFillColorLight: '#ffffff',
        labelFontSize: 12,
        labelLineHeight: 12,
        labelFontWeight: 'normal',
        labelBorderColor: null,
        labelBorder: 0,
        innerLabelFillColor: Ir[100],
        innerLabelFontSize: 12,
        innerLabelLineHeight: 12,
        innerLabelFontWeight: 'normal',
        innerLabelBorderColor: null,
        innerLabelBorder: 0,
        overflowLabelFillColor: Ct[65],
        overflowLabelFillColorDark: '#2c3542',
        overflowLabelFillColorLight: '#ffffff',
        overflowLabelFontSize: 12,
        overflowLabelLineHeight: 12,
        overflowLabelFontWeight: 'normal',
        overflowLabelBorderColor: Ir[100],
        overflowLabelBorder: 1,
        labelLineBorder: 1,
        labelLineBorderColor: Ct[25],
        cSliderRailHieght: 16,
        cSliderBackgroundFillColor: '#416180',
        cSliderBackgroundFillOpacity: 0.05,
        cSliderForegroundFillColor: '#5B8FF9',
        cSliderForegroundFillOpacity: 0.15,
        cSliderHandlerHeight: 24,
        cSliderHandlerWidth: 10,
        cSliderHandlerFillColor: '#F7F7F7',
        cSliderHandlerFillOpacity: 1,
        cSliderHandlerHighlightFillColor: '#FFF',
        cSliderHandlerBorderColor: '#BFBFBF',
        cSliderHandlerBorder: 1,
        cSliderHandlerBorderRadius: 2,
        cSliderTextFillColor: '#fff',
        cSliderTextFillOpacity: 0.45,
        cSliderTextFontSize: 12,
        cSliderTextLineHeight: 12,
        cSliderTextFontWeight: 'normal',
        cSliderTextBorderColor: null,
        cSliderTextBorder: 0,
        scrollbarTrackFillColor: 'rgba(255,255,255,0.65)',
        scrollbarThumbFillColor: 'rgba(0,0,0,0.35)',
        scrollbarThumbHighlightFillColor: 'rgba(0,0,0,0.45)',
        pointFillColor: He[0],
        pointFillOpacity: 0.95,
        pointSize: 4,
        pointBorder: 1,
        pointBorderColor: Ir[100],
        pointBorderOpacity: 1,
        pointActiveBorderColor: Ct[100],
        pointSelectedBorder: 2,
        pointSelectedBorderColor: Ct[100],
        pointInactiveFillOpacity: 0.3,
        pointInactiveBorderOpacity: 0.3,
        hollowPointSize: 4,
        hollowPointBorder: 1,
        hollowPointBorderColor: He[0],
        hollowPointBorderOpacity: 0.95,
        hollowPointFillColor: Ir[100],
        hollowPointActiveBorder: 1,
        hollowPointActiveBorderColor: Ct[100],
        hollowPointActiveBorderOpacity: 1,
        hollowPointSelectedBorder: 2,
        hollowPointSelectedBorderColor: Ct[100],
        hollowPointSelectedBorderOpacity: 1,
        hollowPointInactiveBorderOpacity: 0.3,
        lineBorder: 2,
        lineBorderColor: He[0],
        lineBorderOpacity: 1,
        lineActiveBorder: 3,
        lineSelectedBorder: 3,
        lineInactiveBorderOpacity: 0.3,
        areaFillColor: He[0],
        areaFillOpacity: 0.25,
        areaActiveFillColor: He[0],
        areaActiveFillOpacity: 0.5,
        areaSelectedFillColor: He[0],
        areaSelectedFillOpacity: 0.5,
        areaInactiveFillOpacity: 0.3,
        hollowAreaBorderColor: He[0],
        hollowAreaBorder: 2,
        hollowAreaBorderOpacity: 1,
        hollowAreaActiveBorder: 3,
        hollowAreaActiveBorderColor: Ct[100],
        hollowAreaSelectedBorder: 3,
        hollowAreaSelectedBorderColor: Ct[100],
        hollowAreaInactiveBorderOpacity: 0.3,
        intervalFillColor: He[0],
        intervalFillOpacity: 0.95,
        intervalActiveBorder: 1,
        intervalActiveBorderColor: Ct[100],
        intervalActiveBorderOpacity: 1,
        intervalSelectedBorder: 2,
        intervalSelectedBorderColor: Ct[100],
        intervalSelectedBorderOpacity: 1,
        intervalInactiveBorderOpacity: 0.3,
        intervalInactiveFillOpacity: 0.3,
        hollowIntervalBorder: 2,
        hollowIntervalBorderColor: He[0],
        hollowIntervalBorderOpacity: 1,
        hollowIntervalFillColor: Ir[100],
        hollowIntervalActiveBorder: 2,
        hollowIntervalActiveBorderColor: Ct[100],
        hollowIntervalSelectedBorder: 3,
        hollowIntervalSelectedBorderColor: Ct[100],
        hollowIntervalSelectedBorderOpacity: 1,
        hollowIntervalInactiveBorderOpacity: 0.3,
      };
    return x(x({}, s), e);
  },
  Pk = Lk();
function Ok() {
  return window ? window.devicePixelRatio : 1;
}
function h0(e, r, t, n) {
  var i = e - t,
    a = r - n;
  return Math.sqrt(i * i + a * a);
}
function yn(e, r, t, n, i, a) {
  return i >= e && i <= e + t && a >= r && a <= r + n;
}
function Pa(e, r) {
  return !(r.minX > e.maxX || r.maxX < e.minX || r.minY > e.maxY || r.maxY < e.minY);
}
function Dk(e, r) {
  return !e || !r
    ? e || r
    : {
        minX: Math.min(e.minX, r.minX),
        minY: Math.min(e.minY, r.minY),
        maxX: Math.max(e.maxX, r.maxX),
        maxY: Math.max(e.maxY, r.maxY),
      };
}
function Dd(e, r) {
  return e[0] === r[0] && e[1] === r[1];
}
var Bk = /^l\s*\(\s*([\d.]+)\s*\)\s*(.*)/i,
  Rk = /^r\s*\(\s*([\d.]+)\s*,\s*([\d.]+)\s*,\s*([\d.]+)\s*\)\s*(.*)/i,
  $k = /^p\s*\(\s*([axyn])\s*\)\s*(.*)/i,
  f0 = /[\d.]+:(#[^\s]+|[^\)]+\))/gi;
function v0(e, r) {
  var t = e.match(f0);
  M(t, function (n) {
    var i = n.split(':');
    r.addColorStop(i[0], i[1]);
  });
}
function Nk(e, r, t) {
  var n = Bk.exec(t),
    i = (parseFloat(n[1]) % 360) * (Math.PI / 180),
    a = n[2],
    o = r.getBBox(),
    s,
    l;
  i >= 0 && i < (1 / 2) * Math.PI
    ? ((s = { x: o.minX, y: o.minY }), (l = { x: o.maxX, y: o.maxY }))
    : (1 / 2) * Math.PI <= i && i < Math.PI
    ? ((s = { x: o.maxX, y: o.minY }), (l = { x: o.minX, y: o.maxY }))
    : Math.PI <= i && i < (3 / 2) * Math.PI
    ? ((s = { x: o.maxX, y: o.maxY }), (l = { x: o.minX, y: o.minY }))
    : ((s = { x: o.minX, y: o.maxY }), (l = { x: o.maxX, y: o.minY }));
  var u = Math.tan(i),
    c = u * u,
    h = (l.x - s.x + u * (l.y - s.y)) / (c + 1) + s.x,
    f = (u * (l.x - s.x + u * (l.y - s.y))) / (c + 1) + s.y,
    v = e.createLinearGradient(s.x, s.y, h, f);
  return v0(a, v), v;
}
function zk(e, r, t) {
  var n = Rk.exec(t),
    i = parseFloat(n[1]),
    a = parseFloat(n[2]),
    o = parseFloat(n[3]),
    s = n[4];
  if (o === 0) {
    var l = s.match(f0);
    return l[l.length - 1].split(':')[1];
  }
  var u = r.getBBox(),
    c = u.maxX - u.minX,
    h = u.maxY - u.minY,
    f = Math.sqrt(c * c + h * h) / 2,
    v = e.createRadialGradient(
      u.minX + c * i,
      u.minY + h * a,
      0,
      u.minX + c / 2,
      u.minY + h / 2,
      o * f,
    );
  return v0(s, v), v;
}
function Gk(e, r, t) {
  if (r.get('patternSource') && r.get('patternSource') === t) return r.get('pattern');
  var n,
    i,
    a = $k.exec(t),
    o = a[1],
    s = a[2];
  function l() {
    (n = e.createPattern(i, o)), r.set('pattern', n), r.set('patternSource', t);
  }
  switch (o) {
    case 'a':
      o = 'repeat';
      break;
    case 'x':
      o = 'repeat-x';
      break;
    case 'y':
      o = 'repeat-y';
      break;
    case 'n':
      o = 'no-repeat';
      break;
    default:
      o = 'no-repeat';
  }
  return (
    (i = new Image()),
    s.match(/^data:/i) || (i.crossOrigin = 'Anonymous'),
    (i.src = s),
    i.complete ? l() : ((i.onload = l), (i.src = i.src)),
    n
  );
}
function Vk(e, r, t) {
  var n = r.getBBox();
  if (isNaN(n.x) || isNaN(n.y) || isNaN(n.width) || isNaN(n.height)) return t;
  if (et(t)) {
    if (t[1] === '(' || t[2] === '(') {
      if (t[0] === 'l') return Nk(e, r, t);
      if (t[0] === 'r') return zk(e, r, t);
      if (t[0] === 'p') return Gk(e, r, t);
    }
    return t;
  }
  if (t instanceof CanvasPattern) return t;
}
function Hk(e) {
  var r = 0,
    t = 0,
    n = 0,
    i = 0;
  return (
    N(e)
      ? e.length === 1
        ? (r = t = n = i = e[0])
        : e.length === 2
        ? ((r = n = e[0]), (t = i = e[1]))
        : e.length === 3
        ? ((r = e[0]), (t = i = e[1]), (n = e[2]))
        : ((r = e[0]), (t = e[1]), (n = e[2]), (i = e[3]))
      : (r = t = n = i = e),
    [r, t, n, i]
  );
}
function Ao(e) {
  return Math.sqrt(e[0] * e[0] + e[1] * e[1]);
}
function pc(e, r) {
  return Ao(e) * Ao(r) ? (e[0] * r[0] + e[1] * r[1]) / (Ao(e) * Ao(r)) : 1;
}
function Bd(e, r) {
  return (e[0] * r[1] < e[1] * r[0] ? -1 : 1) * Math.acos(pc(e, r));
}
function Ss(e, r) {
  var t = r[1],
    n = r[2],
    i = Vc(Hc(r[3]), Math.PI * 2),
    a = r[4],
    o = r[5],
    s = e[0],
    l = e[1],
    u = r[6],
    c = r[7],
    h = (Math.cos(i) * (s - u)) / 2 + (Math.sin(i) * (l - c)) / 2,
    f = (-1 * Math.sin(i) * (s - u)) / 2 + (Math.cos(i) * (l - c)) / 2,
    v = (h * h) / (t * t) + (f * f) / (n * n);
  v > 1 && ((t *= Math.sqrt(v)), (n *= Math.sqrt(v)));
  var d = t * t * (f * f) + n * n * (h * h),
    p = d ? Math.sqrt((t * t * (n * n) - d) / d) : 1;
  a === o && (p *= -1), isNaN(p) && (p = 0);
  var g = n ? (p * t * f) / n : 0,
    y = t ? (p * -n * h) / t : 0,
    m = (s + u) / 2 + Math.cos(i) * g - Math.sin(i) * y,
    b = (l + c) / 2 + Math.sin(i) * g + Math.cos(i) * y,
    w = [(h - g) / t, (f - y) / n],
    S = [(-1 * h - g) / t, (-1 * f - y) / n],
    C = Bd([1, 0], w),
    F = Bd(w, S);
  return (
    pc(w, S) <= -1 && (F = Math.PI),
    pc(w, S) >= 1 && (F = 0),
    o === 0 && F > 0 && (F = F - 2 * Math.PI),
    o === 1 && F < 0 && (F = F + 2 * Math.PI),
    {
      cx: m,
      cy: b,
      rx: Dd(e, [u, c]) ? 0 : t,
      ry: Dd(e, [u, c]) ? 0 : n,
      startAngle: C,
      endAngle: C + F,
      xRotation: i,
      arcFlag: a,
      sweepFlag: o,
    }
  );
}
var Cs = Math.sin,
  Ms = Math.cos,
  Eh = Math.atan2,
  Fo = Math.PI;
function d0(e, r, t, n, i, a, o) {
  var s = r.stroke,
    l = r.lineWidth,
    u = t - i,
    c = n - a,
    h = Eh(c, u),
    f = new Ph({
      type: 'path',
      canvas: e.get('canvas'),
      isArrowShape: !0,
      attrs: {
        path:
          'M' +
          10 * Ms(Fo / 6) +
          ',' +
          10 * Cs(Fo / 6) +
          ' L0,0 L' +
          10 * Ms(Fo / 6) +
          ',-' +
          10 * Cs(Fo / 6),
        stroke: s,
        lineWidth: l,
      },
    });
  f.translate(i, a), f.rotateAtPoint(i, a, h), e.set(o ? 'startArrowShape' : 'endArrowShape', f);
}
function p0(e, r, t, n, i, a, o) {
  var s = r.startArrow,
    l = r.endArrow,
    u = r.stroke,
    c = r.lineWidth,
    h = o ? s : l,
    f = h.d,
    v = h.fill,
    d = h.stroke,
    p = h.lineWidth,
    g = wt(h, ['d', 'fill', 'stroke', 'lineWidth']),
    y = t - i,
    m = n - a,
    b = Eh(m, y);
  f && ((i = i - Ms(b) * f), (a = a - Cs(b) * f));
  var w = new Ph({
    type: 'path',
    canvas: e.get('canvas'),
    isArrowShape: !0,
    attrs: x(x({}, g), { stroke: d || u, lineWidth: p || c, fill: v }),
  });
  w.translate(i, a), w.rotateAtPoint(i, a, b), e.set(o ? 'startArrowShape' : 'endArrowShape', w);
}
function En(e, r, t, n, i) {
  var a = Eh(n - r, t - e);
  return { dx: Ms(a) * i, dy: Cs(a) * i };
}
function Th(e, r, t, n, i, a) {
  typeof r.startArrow == 'object'
    ? p0(e, r, t, n, i, a, !0)
    : r.startArrow
    ? d0(e, r, t, n, i, a, !0)
    : e.set('startArrowShape', null);
}
function kh(e, r, t, n, i, a) {
  typeof r.endArrow == 'object'
    ? p0(e, r, t, n, i, a, !1)
    : r.endArrow
    ? d0(e, r, t, n, i, a, !1)
    : e.set('startArrowShape', null);
}
var Rd = { fill: 'fillStyle', stroke: 'strokeStyle', opacity: 'globalAlpha' };
function gi(e, r) {
  var t = r.attr();
  for (var n in t) {
    var i = t[n],
      a = Rd[n] ? Rd[n] : n;
    a === 'matrix' && i
      ? e.transform(i[0], i[1], i[3], i[4], i[6], i[7])
      : a === 'lineDash' && e.setLineDash
      ? N(i) && e.setLineDash(i)
      : (a === 'strokeStyle' || a === 'fillStyle'
          ? (i = Vk(e, r, i))
          : a === 'globalAlpha' && (i = i * e.globalAlpha),
        (e[a] = i));
  }
}
function gc(e, r, t) {
  for (var n = 0; n < r.length; n++) {
    var i = r[n];
    i.cfg.visible ? i.draw(e, t) : i.skipDraw();
  }
}
function Yk(e, r, t) {
  var n = e.get('refreshElements');
  M(n, function (i) {
    if (i !== e)
      for (var a = i.cfg.parent; a && a !== e && !a.cfg.refresh; )
        (a.cfg.refresh = !0), (a = a.cfg.parent);
  }),
    n[0] === e ? Ih(r) : yc(r, t);
}
function yc(e, r) {
  for (var t = 0; t < e.length; t++) {
    var n = e[t];
    if (n.cfg.visible)
      if (n.cfg.hasChanged) (n.cfg.refresh = !0), n.isGroup() && Ih(n.cfg.children);
      else if (n.cfg.refresh) n.isGroup() && yc(n.cfg.children, r);
      else {
        var i = Wk(n, r);
        (n.cfg.refresh = i), i && n.isGroup() && yc(n.cfg.children, r);
      }
  }
}
function g0(e) {
  for (var r = 0; r < e.length; r++) {
    var t = e[r];
    (t.cfg.hasChanged = !1), t.isGroup() && !t.destroyed && g0(t.cfg.children);
  }
}
function Ih(e, r) {
  for (var t = 0; t < e.length; t++) {
    var n = e[t];
    n.cfg.visible && ((n.cfg.refresh = !0), n.isGroup() && Ih(n.get('children')));
  }
}
function Wk(e, r) {
  var t = e.cfg.cacheCanvasBBox,
    n = e.cfg.isInView && t && Pa(t, r);
  return n;
}
function y0(e, r, t, n) {
  var i = t.path,
    a = t.startArrow,
    o = t.endArrow;
  if (i) {
    var s = [0, 0],
      l = [0, 0],
      u = { dx: 0, dy: 0 };
    r.beginPath();
    for (var c = 0; c < i.length; c++) {
      var h = i[c],
        f = h[0];
      if (c === 0 && a && a.d) {
        var v = e.getStartTangent();
        u = En(v[0][0], v[0][1], v[1][0], v[1][1], a.d);
      } else if (c === i.length - 2 && i[c + 1][0] === 'Z' && o && o.d) {
        var d = i[c + 1];
        if (d[0] === 'Z') {
          var v = e.getEndTangent();
          u = En(v[0][0], v[0][1], v[1][0], v[1][1], o.d);
        }
      } else if (c === i.length - 1 && o && o.d && i[0] !== 'Z') {
        var v = e.getEndTangent();
        u = En(v[0][0], v[0][1], v[1][0], v[1][1], o.d);
      }
      var p = u.dx,
        g = u.dy;
      switch (f) {
        case 'M':
          r.moveTo(h[1] - p, h[2] - g), (l = [h[1], h[2]]);
          break;
        case 'L':
          r.lineTo(h[1] - p, h[2] - g);
          break;
        case 'Q':
          r.quadraticCurveTo(h[1], h[2], h[3] - p, h[4] - g);
          break;
        case 'C':
          r.bezierCurveTo(h[1], h[2], h[3], h[4], h[5] - p, h[6] - g);
          break;
        case 'A': {
          var y = void 0;
          n ? ((y = n[c]), y || ((y = Ss(s, h)), (n[c] = y))) : (y = Ss(s, h));
          var m = y.cx,
            b = y.cy,
            w = y.rx,
            S = y.ry,
            C = y.startAngle,
            F = y.endAngle,
            E = y.xRotation,
            I = y.sweepFlag;
          if (r.ellipse) r.ellipse(m, b, w, S, E, C, F, 1 - I);
          else {
            var T = w > S ? w : S,
              P = w > S ? 1 : w / S,
              R = w > S ? S / w : 1;
            r.translate(m, b),
              r.rotate(E),
              r.scale(P, R),
              r.arc(0, 0, T, C, F, 1 - I),
              r.scale(1 / P, 1 / R),
              r.rotate(-E),
              r.translate(-m, -b);
          }
          break;
        }
        case 'Z':
          r.closePath();
          break;
      }
      if (f === 'Z') s = l;
      else {
        var B = h.length;
        s = [h[B - 2], h[B - 1]];
      }
    }
  }
}
function m0(e, r) {
  var t = e.get('canvas');
  t &&
    (r === 'remove' && (e._cacheCanvasBBox = e.get('cacheCanvasBBox')),
    e.get('hasChanged') ||
      (e.set('hasChanged', !0),
      (e.cfg.parent && e.cfg.parent.get('hasChanged')) ||
        (t.refreshElement(e, r, t), t.get('autoDraw') && t.draw())));
}
function Xk(e) {
  var r;
  if (e.destroyed) r = e._cacheCanvasBBox;
  else {
    var t = e.get('cacheCanvasBBox'),
      n = t && !!(t.width && t.height),
      i = e.getCanvasBBox(),
      a = i && !!(i.width && i.height);
    n && a ? (r = Dk(t, i)) : n ? (r = t) : a && (r = i);
  }
  return r;
}
function _k(e) {
  if (!e.length) return null;
  var r = [],
    t = [],
    n = [],
    i = [];
  return (
    M(e, function (a) {
      var o = Xk(a);
      o && (r.push(o.minX), t.push(o.minY), n.push(o.maxX), i.push(o.maxY));
    }),
    { minX: $e(r), minY: $e(t), maxX: Te(n), maxY: Te(i) }
  );
}
function jk(e, r) {
  return !e || !r || !Pa(e, r)
    ? null
    : {
        minX: Math.max(e.minX, r.minX),
        minY: Math.max(e.minY, r.minY),
        maxX: Math.min(e.maxX, r.maxX),
        maxY: Math.min(e.maxY, r.maxY),
      };
}
var Lh = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.onCanvasChange = function (t) {
        m0(this, t);
      }),
      (r.prototype.getShapeBase = function () {
        return Ds;
      }),
      (r.prototype.getGroupBase = function () {
        return r;
      }),
      (r.prototype._applyClip = function (t, n) {
        n && (t.save(), gi(t, n), n.createPath(t), t.restore(), t.clip(), n._afterDraw());
      }),
      (r.prototype.cacheCanvasBBox = function () {
        var t = this.cfg.children,
          n = [],
          i = [];
        M(t, function (f) {
          var v = f.cfg.cacheCanvasBBox;
          v && f.cfg.isInView && (n.push(v.minX, v.maxX), i.push(v.minY, v.maxY));
        });
        var a = null;
        if (n.length) {
          var o = $e(n),
            s = Te(n),
            l = $e(i),
            u = Te(i);
          a = { minX: o, minY: l, x: o, y: l, maxX: s, maxY: u, width: s - o, height: u - l };
          var c = this.cfg.canvas;
          if (c) {
            var h = c.getViewRange();
            this.set('isInView', Pa(a, h));
          }
        } else this.set('isInView', !1);
        this.set('cacheCanvasBBox', a);
      }),
      (r.prototype.draw = function (t, n) {
        var i = this.cfg.children,
          a = n ? this.cfg.refresh : !0;
        i.length &&
          a &&
          (t.save(),
          gi(t, this),
          this._applyClip(t, this.getClip()),
          gc(t, i, n),
          t.restore(),
          this.cacheCanvasBBox()),
          (this.cfg.refresh = null),
          this.set('hasChanged', !1);
      }),
      (r.prototype.skipDraw = function () {
        this.set('cacheCanvasBBox', null), this.set('hasChanged', !1);
      }),
      r
    );
  })(js),
  Ze = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultAttrs = function () {
        var t = e.prototype.getDefaultAttrs.call(this);
        return x(x({}, t), { lineWidth: 1, lineAppendWidth: 0, strokeOpacity: 1, fillOpacity: 1 });
      }),
      (r.prototype.getShapeBase = function () {
        return Ds;
      }),
      (r.prototype.getGroupBase = function () {
        return Lh;
      }),
      (r.prototype.onCanvasChange = function (t) {
        m0(this, t);
      }),
      (r.prototype.calculateBBox = function () {
        var t = this.get('type'),
          n = this.getHitLineWidth(),
          i = qs(t),
          a = i(this),
          o = n / 2,
          s = a.x - o,
          l = a.y - o,
          u = a.x + a.width + o,
          c = a.y + a.height + o;
        return {
          x: s,
          minX: s,
          y: l,
          minY: l,
          width: a.width + n,
          height: a.height + n,
          maxX: u,
          maxY: c,
        };
      }),
      (r.prototype.isFill = function () {
        return !!this.attrs.fill || this.isClipShape();
      }),
      (r.prototype.isStroke = function () {
        return !!this.attrs.stroke;
      }),
      (r.prototype._applyClip = function (t, n) {
        n && (t.save(), gi(t, n), n.createPath(t), t.restore(), t.clip(), n._afterDraw());
      }),
      (r.prototype.draw = function (t, n) {
        var i = this.cfg.clipShape;
        if (n) {
          if (this.cfg.refresh === !1) {
            this.set('hasChanged', !1);
            return;
          }
          var a = this.getCanvasBBox();
          if (!Pa(n, a)) {
            this.set('hasChanged', !1), this.cfg.isInView && this._afterDraw();
            return;
          }
        }
        t.save(),
          gi(t, this),
          this._applyClip(t, i),
          this.drawPath(t),
          t.restore(),
          this._afterDraw();
      }),
      (r.prototype.getCanvasViewBox = function () {
        var t = this.cfg.canvas;
        return t ? t.getViewRange() : null;
      }),
      (r.prototype.cacheCanvasBBox = function () {
        var t = this.getCanvasViewBox();
        if (t) {
          var n = this.getCanvasBBox(),
            i = Pa(n, t);
          this.set('isInView', i),
            i ? this.set('cacheCanvasBBox', n) : this.set('cacheCanvasBBox', null);
        }
      }),
      (r.prototype._afterDraw = function () {
        this.cacheCanvasBBox(), this.set('hasChanged', !1), this.set('refresh', null);
      }),
      (r.prototype.skipDraw = function () {
        this.set('cacheCanvasBBox', null), this.set('isInView', null), this.set('hasChanged', !1);
      }),
      (r.prototype.drawPath = function (t) {
        this.createPath(t), this.strokeAndFill(t), this.afterDrawPath(t);
      }),
      (r.prototype.fill = function (t) {
        t.fill();
      }),
      (r.prototype.stroke = function (t) {
        t.stroke();
      }),
      (r.prototype.strokeAndFill = function (t) {
        var n = this.attrs,
          i = n.lineWidth,
          a = n.opacity,
          o = n.strokeOpacity,
          s = n.fillOpacity;
        this.isFill() &&
          (!$(s) && s !== 1
            ? ((t.globalAlpha = s), this.fill(t), (t.globalAlpha = a))
            : this.fill(t)),
          this.isStroke() && i > 0 && (!$(o) && o !== 1 && (t.globalAlpha = o), this.stroke(t)),
          this.afterDrawPath(t);
      }),
      (r.prototype.createPath = function (t) {}),
      (r.prototype.afterDrawPath = function (t) {}),
      (r.prototype.isInShape = function (t, n) {
        var i = this.isStroke(),
          a = this.isFill(),
          o = this.getHitLineWidth();
        return this.isInStrokeOrPath(t, n, i, a, o);
      }),
      (r.prototype.isInStrokeOrPath = function (t, n, i, a, o) {
        return !1;
      }),
      (r.prototype.getHitLineWidth = function () {
        if (!this.isStroke()) return 0;
        var t = this.attrs;
        return t.lineWidth + t.lineAppendWidth;
      }),
      r
    );
  })(Us),
  Uk = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultAttrs = function () {
        var t = e.prototype.getDefaultAttrs.call(this);
        return x(x({}, t), { x: 0, y: 0, r: 0 });
      }),
      (r.prototype.isInStrokeOrPath = function (t, n, i, a, o) {
        var s = this.attr(),
          l = s.x,
          u = s.y,
          c = s.r,
          h = o / 2,
          f = h0(l, u, t, n);
        return a && i ? f <= c + h : a ? f <= c : i ? f >= c - h && f <= c + h : !1;
      }),
      (r.prototype.createPath = function (t) {
        var n = this.attr(),
          i = n.x,
          a = n.y,
          o = n.r;
        t.beginPath(), t.arc(i, a, o, 0, Math.PI * 2, !1), t.closePath();
      }),
      r
    );
  })(Ze);
function Eo(e, r, t, n) {
  return e / (t * t) + r / (n * n);
}
var qk = (function (e) {
  k(r, e);
  function r() {
    return (e !== null && e.apply(this, arguments)) || this;
  }
  return (
    (r.prototype.getDefaultAttrs = function () {
      var t = e.prototype.getDefaultAttrs.call(this);
      return x(x({}, t), { x: 0, y: 0, rx: 0, ry: 0 });
    }),
    (r.prototype.isInStrokeOrPath = function (t, n, i, a, o) {
      var s = this.attr(),
        l = o / 2,
        u = s.x,
        c = s.y,
        h = s.rx,
        f = s.ry,
        v = (t - u) * (t - u),
        d = (n - c) * (n - c);
      return a && i
        ? Eo(v, d, h + l, f + l) <= 1
        : a
        ? Eo(v, d, h, f) <= 1
        : i
        ? Eo(v, d, h - l, f - l) >= 1 && Eo(v, d, h + l, f + l) <= 1
        : !1;
    }),
    (r.prototype.createPath = function (t) {
      var n = this.attr(),
        i = n.x,
        a = n.y,
        o = n.rx,
        s = n.ry;
      if ((t.beginPath(), t.ellipse)) t.ellipse(i, a, o, s, 0, 0, Math.PI * 2, !1);
      else {
        var l = o > s ? o : s,
          u = o > s ? 1 : o / s,
          c = o > s ? s / o : 1;
        t.save(),
          t.translate(i, a),
          t.scale(u, c),
          t.arc(0, 0, l, 0, Math.PI * 2),
          t.restore(),
          t.closePath();
      }
    }),
    r
  );
})(Ze);
function $d(e) {
  return e instanceof HTMLElement && et(e.nodeName) && e.nodeName.toUpperCase() === 'CANVAS';
}
var Zk = (function (e) {
  k(r, e);
  function r() {
    return (e !== null && e.apply(this, arguments)) || this;
  }
  return (
    (r.prototype.getDefaultAttrs = function () {
      var t = e.prototype.getDefaultAttrs.call(this);
      return x(x({}, t), { x: 0, y: 0, width: 0, height: 0 });
    }),
    (r.prototype.initAttrs = function (t) {
      this._setImage(t.img);
    }),
    (r.prototype.isStroke = function () {
      return !1;
    }),
    (r.prototype.isOnlyHitBox = function () {
      return !0;
    }),
    (r.prototype._afterLoading = function () {
      if (this.get('toDraw') === !0) {
        var t = this.get('canvas');
        t ? t.draw() : this.createPath(this.get('context'));
      }
    }),
    (r.prototype._setImage = function (t) {
      var n = this,
        i = this.attrs;
      if (et(t)) {
        var a = new Image();
        (a.onload = function () {
          if (n.destroyed) return !1;
          n.attr('img', a), n.set('loading', !1), n._afterLoading();
          var o = n.get('callback');
          o && o.call(n);
        }),
          (a.crossOrigin = 'Anonymous'),
          (a.src = t),
          this.set('loading', !0);
      } else
        t instanceof Image
          ? (i.width || (i.width = t.width), i.height || (i.height = t.height))
          : $d(t) &&
            (i.width || (i.width = Number(t.getAttribute('width'))),
            i.height || (i.height, Number(t.getAttribute('height'))));
    }),
    (r.prototype.onAttrChange = function (t, n, i) {
      e.prototype.onAttrChange.call(this, t, n, i), t === 'img' && this._setImage(n);
    }),
    (r.prototype.createPath = function (t) {
      if (this.get('loading')) {
        this.set('toDraw', !0), this.set('context', t);
        return;
      }
      var n = this.attr(),
        i = n.x,
        a = n.y,
        o = n.width,
        s = n.height,
        l = n.sx,
        u = n.sy,
        c = n.swidth,
        h = n.sheight,
        f = n.img;
      (f instanceof Image || $d(f)) &&
        (!$(l) && !$(u) && !$(c) && !$(h)
          ? t.drawImage(f, l, u, c, h, i, a, o, s)
          : t.drawImage(f, i, a, o, s));
    }),
    r
  );
})(Ze);
function Nr(e, r, t, n, i, a, o) {
  var s = Math.min(e, t),
    l = Math.max(e, t),
    u = Math.min(r, n),
    c = Math.max(r, n),
    h = i / 2;
  return a >= s - h && a <= l + h && o >= u - h && o <= c + h
    ? Kt.pointToLine(e, r, t, n, a, o) <= i / 2
    : !1;
}
var Kk = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultAttrs = function () {
        var t = e.prototype.getDefaultAttrs.call(this);
        return x(x({}, t), { x1: 0, y1: 0, x2: 0, y2: 0, startArrow: !1, endArrow: !1 });
      }),
      (r.prototype.initAttrs = function (t) {
        this.setArrow();
      }),
      (r.prototype.onAttrChange = function (t, n, i) {
        e.prototype.onAttrChange.call(this, t, n, i), this.setArrow();
      }),
      (r.prototype.setArrow = function () {
        var t = this.attr(),
          n = t.x1,
          i = t.y1,
          a = t.x2,
          o = t.y2,
          s = t.startArrow,
          l = t.endArrow;
        s && Th(this, t, a, o, n, i), l && kh(this, t, n, i, a, o);
      }),
      (r.prototype.isInStrokeOrPath = function (t, n, i, a, o) {
        if (!i || !o) return !1;
        var s = this.attr(),
          l = s.x1,
          u = s.y1,
          c = s.x2,
          h = s.y2;
        return Nr(l, u, c, h, o, t, n);
      }),
      (r.prototype.createPath = function (t) {
        var n = this.attr(),
          i = n.x1,
          a = n.y1,
          o = n.x2,
          s = n.y2,
          l = n.startArrow,
          u = n.endArrow,
          c = { dx: 0, dy: 0 },
          h = { dx: 0, dy: 0 };
        l && l.d && (c = En(i, a, o, s, n.startArrow.d)),
          u && u.d && (h = En(i, a, o, s, n.endArrow.d)),
          t.beginPath(),
          t.moveTo(i + c.dx, a + c.dy),
          t.lineTo(o - h.dx, s - h.dy);
      }),
      (r.prototype.afterDrawPath = function (t) {
        var n = this.get('startArrowShape'),
          i = this.get('endArrowShape');
        n && n.draw(t), i && i.draw(t);
      }),
      (r.prototype.getTotalLength = function () {
        var t = this.attr(),
          n = t.x1,
          i = t.y1,
          a = t.x2,
          o = t.y2;
        return Kt.length(n, i, a, o);
      }),
      (r.prototype.getPoint = function (t) {
        var n = this.attr(),
          i = n.x1,
          a = n.y1,
          o = n.x2,
          s = n.y2;
        return Kt.pointAt(i, a, o, s, t);
      }),
      r
    );
  })(Ze),
  Qk = {
    circle: function (e, r, t) {
      return [
        ['M', e - t, r],
        ['A', t, t, 0, 1, 0, e + t, r],
        ['A', t, t, 0, 1, 0, e - t, r],
      ];
    },
    square: function (e, r, t) {
      return [
        ['M', e - t, r - t],
        ['L', e + t, r - t],
        ['L', e + t, r + t],
        ['L', e - t, r + t],
        ['Z'],
      ];
    },
    diamond: function (e, r, t) {
      return [['M', e - t, r], ['L', e, r - t], ['L', e + t, r], ['L', e, r + t], ['Z']];
    },
    triangle: function (e, r, t) {
      var n = t * Math.sin(0.3333333333333333 * Math.PI);
      return [['M', e - t, r + n], ['L', e, r - n], ['L', e + t, r + n], ['Z']];
    },
    'triangle-down': function (e, r, t) {
      var n = t * Math.sin(0.3333333333333333 * Math.PI);
      return [['M', e - t, r - n], ['L', e + t, r - n], ['L', e, r + n], ['Z']];
    },
  },
  Jk = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.initAttrs = function (t) {
        this._resetParamsCache();
      }),
      (r.prototype._resetParamsCache = function () {
        this.set('paramsCache', {});
      }),
      (r.prototype.onAttrChange = function (t, n, i) {
        e.prototype.onAttrChange.call(this, t, n, i),
          ['symbol', 'x', 'y', 'r', 'radius'].indexOf(t) !== -1 && this._resetParamsCache();
      }),
      (r.prototype.isOnlyHitBox = function () {
        return !0;
      }),
      (r.prototype._getR = function (t) {
        return $(t.r) ? t.radius : t.r;
      }),
      (r.prototype._getPath = function () {
        var t = this.attr(),
          n = t.x,
          i = t.y,
          a = t.symbol || 'circle',
          o = this._getR(t),
          s,
          l;
        if (U(a)) (s = a), (l = s(n, i, o)), (l = Fy(l));
        else {
          if (((s = r.Symbols[a]), !s)) return console.warn(a + ' marker is not supported.'), null;
          l = s(n, i, o);
        }
        return l;
      }),
      (r.prototype.createPath = function (t) {
        var n = this._getPath(),
          i = this.get('paramsCache');
        y0(this, t, { path: n }, i);
      }),
      (r.Symbols = Qk),
      r
    );
  })(Ze);
function x0(e, r, t) {
  var n = Ks();
  return e.createPath(n), n.isPointInPath(r, t);
}
var tI = 1e-6;
function fu(e) {
  return Math.abs(e) < tI ? 0 : e < 0 ? -1 : 1;
}
function eI(e, r, t) {
  return (
    (t[0] - e[0]) * (r[1] - e[1]) === (r[0] - e[0]) * (t[1] - e[1]) &&
    Math.min(e[0], r[0]) <= t[0] &&
    t[0] <= Math.max(e[0], r[0]) &&
    Math.min(e[1], r[1]) <= t[1] &&
    t[1] <= Math.max(e[1], r[1])
  );
}
function w0(e, r, t) {
  var n = !1,
    i = e.length;
  if (i <= 2) return !1;
  for (var a = 0; a < i; a++) {
    var o = e[a],
      s = e[(a + 1) % i];
    if (eI(o, s, [r, t])) return !0;
    fu(o[1] - t) > 0 != fu(s[1] - t) > 0 &&
      fu(r - ((t - o[1]) * (o[0] - s[0])) / (o[1] - s[1]) - o[0]) < 0 &&
      (n = !n);
  }
  return n;
}
function ta(e, r, t, n, i, a, o, s) {
  var l = (Math.atan2(s - r, o - e) + Math.PI * 2) % (Math.PI * 2);
  if (l < n || l > i) return !1;
  var u = { x: e + t * Math.cos(l), y: r + t * Math.sin(l) };
  return h0(u.x, u.y, o, s) <= a / 2;
}
var rI = Vt;
function nI(e) {
  for (var r = !1, t = e.length, n = 0; n < t; n++) {
    var i = e[n],
      a = i[0];
    if (a === 'C' || a === 'A' || a === 'Q') {
      r = !0;
      break;
    }
  }
  return r;
}
function iI(e, r, t, n, i) {
  for (var a = !1, o = r / 2, s = 0; s < e.length; s++) {
    var l = e[s],
      u = l.currentPoint,
      c = l.params,
      h = l.prePoint,
      f = l.box;
    if (!(f && !yn(f.x - o, f.y - o, f.width + r, f.height + r, t, n))) {
      switch (l.command) {
        case 'L':
        case 'Z':
          a = Nr(h[0], h[1], u[0], u[1], r, t, n);
          break;
        case 'Q':
          var v = by.pointDistance(h[0], h[1], c[1], c[2], c[3], c[4], t, n);
          a = v <= r / 2;
          break;
        case 'C':
          var d = aa.pointDistance(h[0], h[1], c[1], c[2], c[3], c[4], c[5], c[6], t, n, i);
          a = d <= r / 2;
          break;
        case 'A':
          var p = l.arcParams,
            g = p.cx,
            y = p.cy,
            m = p.rx,
            b = p.ry,
            w = p.startAngle,
            S = p.endAngle,
            C = p.xRotation,
            F = [t, n, 1],
            E = m > b ? m : b,
            I = m > b ? 1 : m / b,
            T = m > b ? b / m : 1,
            P = rI(null, [
              ['t', -g, -y],
              ['r', -C],
              ['s', 1 / I, 1 / T],
            ]);
          ma(F, F, P), (a = ta(0, 0, E, w, S, r, F[0], F[1]));
          break;
      }
      if (a) break;
    }
  }
  return a;
}
function aI(e) {
  for (var r = e.length, t = [], n = [], i = [], a = 0; a < r; a++) {
    var o = e[a],
      s = o[0];
    s === 'M'
      ? (i.length && (n.push(i), (i = [])), i.push([o[1], o[2]]))
      : s === 'Z'
      ? i.length && (t.push(i), (i = []))
      : i.push([o[1], o[2]]);
  }
  return i.length > 0 && n.push(i), { polygons: t, polylines: n };
}
const To = x({ hasArc: nI, extractPolygons: aI, isPointInStroke: iI }, jc);
function Nd(e, r, t) {
  for (var n = !1, i = 0; i < e.length; i++) {
    var a = e[i];
    if (((n = w0(a, r, t)), n)) break;
  }
  return n;
}
var Ph = (function (e) {
  k(r, e);
  function r() {
    return (e !== null && e.apply(this, arguments)) || this;
  }
  return (
    (r.prototype.getDefaultAttrs = function () {
      var t = e.prototype.getDefaultAttrs.call(this);
      return x(x({}, t), { startArrow: !1, endArrow: !1 });
    }),
    (r.prototype.initAttrs = function (t) {
      this._setPathArr(t.path), this.setArrow();
    }),
    (r.prototype.onAttrChange = function (t, n, i) {
      e.prototype.onAttrChange.call(this, t, n, i),
        t === 'path' && this._setPathArr(n),
        this.setArrow();
    }),
    (r.prototype._setPathArr = function (t) {
      this.attrs.path = Fy(t);
      var n = To.hasArc(t);
      this.set('hasArc', n),
        this.set('paramsCache', {}),
        this.set('segments', null),
        this.set('curve', null),
        this.set('tCache', null),
        this.set('totalLength', null);
    }),
    (r.prototype.getSegments = function () {
      var t = this.get('segements');
      return t || ((t = Ey(this.attr('path'))), this.set('segments', t)), t;
    }),
    (r.prototype.setArrow = function () {
      var t = this.attr(),
        n = t.startArrow,
        i = t.endArrow;
      if (n) {
        var a = this.getStartTangent();
        Th(this, t, a[0][0], a[0][1], a[1][0], a[1][1]);
      }
      if (i) {
        var a = this.getEndTangent();
        kh(this, t, a[0][0], a[0][1], a[1][0], a[1][1]);
      }
    }),
    (r.prototype.isInStrokeOrPath = function (t, n, i, a, o) {
      var s = this.getSegments(),
        l = this.get('hasArc'),
        u = !1;
      if (i) {
        var c = this.getTotalLength();
        u = To.isPointInStroke(s, o, t, n, c);
      }
      if (!u && a)
        if (l) u = x0(this, t, n);
        else {
          var h = this.attr('path'),
            f = To.extractPolygons(h);
          u = Nd(f.polygons, t, n) || Nd(f.polylines, t, n);
        }
      return u;
    }),
    (r.prototype.createPath = function (t) {
      var n = this.attr(),
        i = this.get('paramsCache');
      y0(this, t, n, i);
    }),
    (r.prototype.afterDrawPath = function (t) {
      var n = this.get('startArrowShape'),
        i = this.get('endArrowShape');
      n && n.draw(t), i && i.draw(t);
    }),
    (r.prototype.getTotalLength = function () {
      var t = this.get('totalLength');
      return $(t) ? (this._calculateCurve(), this._setTcache(), this.get('totalLength')) : t;
    }),
    (r.prototype.getPoint = function (t) {
      var n = this.get('tCache');
      n || (this._calculateCurve(), this._setTcache(), (n = this.get('tCache')));
      var i,
        a,
        o = this.get('curve');
      if (!n || n.length === 0) return o ? { x: o[0][1], y: o[0][2] } : null;
      M(n, function (c, h) {
        t >= c[0] && t <= c[1] && ((i = (t - c[0]) / (c[1] - c[0])), (a = h));
      });
      var s = o[a];
      if ($(s) || $(a)) return null;
      var l = s.length,
        u = o[a + 1];
      return aa.pointAt(s[l - 2], s[l - 1], u[1], u[2], u[3], u[4], u[5], u[6], i);
    }),
    (r.prototype._calculateCurve = function () {
      var t = this.attr().path;
      this.set('curve', To.pathToCurve(t));
    }),
    (r.prototype._setTcache = function () {
      var t = 0,
        n = 0,
        i = [],
        a,
        o,
        s,
        l,
        u = this.get('curve');
      if (u) {
        if (
          (M(u, function (c, h) {
            (s = u[h + 1]),
              (l = c.length),
              s && (t += aa.length(c[l - 2], c[l - 1], s[1], s[2], s[3], s[4], s[5], s[6]) || 0);
          }),
          this.set('totalLength', t),
          t === 0)
        ) {
          this.set('tCache', []);
          return;
        }
        M(u, function (c, h) {
          (s = u[h + 1]),
            (l = c.length),
            s &&
              ((a = []),
              (a[0] = n / t),
              (o = aa.length(c[l - 2], c[l - 1], s[1], s[2], s[3], s[4], s[5], s[6])),
              (n += o || 0),
              (a[1] = n / t),
              i.push(a));
        }),
          this.set('tCache', i);
      }
    }),
    (r.prototype.getStartTangent = function () {
      var t = this.getSegments(),
        n;
      if (t.length > 1) {
        var i = t[0].currentPoint,
          a = t[1].currentPoint,
          o = t[1].startTangent;
        (n = []),
          o
            ? (n.push([i[0] - o[0], i[1] - o[1]]), n.push([i[0], i[1]]))
            : (n.push([a[0], a[1]]), n.push([i[0], i[1]]));
      }
      return n;
    }),
    (r.prototype.getEndTangent = function () {
      var t = this.getSegments(),
        n = t.length,
        i;
      if (n > 1) {
        var a = t[n - 2].currentPoint,
          o = t[n - 1].currentPoint,
          s = t[n - 1].endTangent;
        (i = []),
          s
            ? (i.push([o[0] - s[0], o[1] - s[1]]), i.push([o[0], o[1]]))
            : (i.push([a[0], a[1]]), i.push([o[0], o[1]]));
      }
      return i;
    }),
    r
  );
})(Ze);
function b0(e, r, t, n, i) {
  var a = e.length;
  if (a < 2) return !1;
  for (var o = 0; o < a - 1; o++) {
    var s = e[o][0],
      l = e[o][1],
      u = e[o + 1][0],
      c = e[o + 1][1];
    if (Nr(s, l, u, c, r, t, n)) return !0;
  }
  if (i) {
    var h = e[0],
      f = e[a - 1];
    if (Nr(h[0], h[1], f[0], f[1], r, t, n)) return !0;
  }
  return !1;
}
var oI = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.isInStrokeOrPath = function (t, n, i, a, o) {
        var s = this.attr().points,
          l = !1;
        return i && (l = b0(s, o, t, n, !0)), !l && a && (l = w0(s, t, n)), l;
      }),
      (r.prototype.createPath = function (t) {
        var n = this.attr(),
          i = n.points;
        if (!(i.length < 2)) {
          t.beginPath();
          for (var a = 0; a < i.length; a++) {
            var o = i[a];
            a === 0 ? t.moveTo(o[0], o[1]) : t.lineTo(o[0], o[1]);
          }
          t.closePath();
        }
      }),
      r
    );
  })(Ze),
  sI = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultAttrs = function () {
        var t = e.prototype.getDefaultAttrs.call(this);
        return x(x({}, t), { startArrow: !1, endArrow: !1 });
      }),
      (r.prototype.initAttrs = function (t) {
        this.setArrow();
      }),
      (r.prototype.onAttrChange = function (t, n, i) {
        e.prototype.onAttrChange.call(this, t, n, i),
          this.setArrow(),
          ['points'].indexOf(t) !== -1 && this._resetCache();
      }),
      (r.prototype._resetCache = function () {
        this.set('totalLength', null), this.set('tCache', null);
      }),
      (r.prototype.setArrow = function () {
        var t = this.attr(),
          n = this.attrs,
          i = n.points,
          a = n.startArrow,
          o = n.endArrow,
          s = i.length,
          l = i[0][0],
          u = i[0][1],
          c = i[s - 1][0],
          h = i[s - 1][1];
        a && Th(this, t, i[1][0], i[1][1], l, u), o && kh(this, t, i[s - 2][0], i[s - 2][1], c, h);
      }),
      (r.prototype.isFill = function () {
        return !1;
      }),
      (r.prototype.isInStrokeOrPath = function (t, n, i, a, o) {
        if (!i || !o) return !1;
        var s = this.attr().points;
        return b0(s, o, t, n, !1);
      }),
      (r.prototype.isStroke = function () {
        return !0;
      }),
      (r.prototype.createPath = function (t) {
        var n = this.attr(),
          i = n.points,
          a = n.startArrow,
          o = n.endArrow,
          s = i.length;
        if (!(i.length < 2)) {
          var l = i[0][0],
            u = i[0][1],
            c = i[s - 1][0],
            h = i[s - 1][1];
          if (a && a.d) {
            var f = En(l, u, i[1][0], i[1][1], a.d);
            (l += f.dx), (u += f.dy);
          }
          if (o && o.d) {
            var f = En(i[s - 2][0], i[s - 2][1], c, h, o.d);
            (c -= f.dx), (h -= f.dy);
          }
          t.beginPath(), t.moveTo(l, u);
          for (var v = 0; v < s - 1; v++) {
            var d = i[v];
            t.lineTo(d[0], d[1]);
          }
          t.lineTo(c, h);
        }
      }),
      (r.prototype.afterDrawPath = function (t) {
        var n = this.get('startArrowShape'),
          i = this.get('endArrowShape');
        n && n.draw(t), i && i.draw(t);
      }),
      (r.prototype.getTotalLength = function () {
        var t = this.attr().points,
          n = this.get('totalLength');
        return $(n) ? (this.set('totalLength', My.length(t)), this.get('totalLength')) : n;
      }),
      (r.prototype.getPoint = function (t) {
        var n = this.attr().points,
          i = this.get('tCache');
        i || (this._setTcache(), (i = this.get('tCache')));
        var a, o;
        return (
          M(i, function (s, l) {
            t >= s[0] && t <= s[1] && ((a = (t - s[0]) / (s[1] - s[0])), (o = l));
          }),
          Kt.pointAt(n[o][0], n[o][1], n[o + 1][0], n[o + 1][1], a)
        );
      }),
      (r.prototype._setTcache = function () {
        var t = this.attr().points;
        if (!(!t || t.length === 0)) {
          var n = this.getTotalLength();
          if (!(n <= 0)) {
            var i = 0,
              a = [],
              o,
              s;
            M(t, function (l, u) {
              t[u + 1] &&
                ((o = []),
                (o[0] = i / n),
                (s = Kt.length(l[0], l[1], t[u + 1][0], t[u + 1][1])),
                (i += s),
                (o[1] = i / n),
                a.push(o));
            }),
              this.set('tCache', a);
          }
        }
      }),
      (r.prototype.getStartTangent = function () {
        var t = this.attr().points,
          n = [];
        return n.push([t[1][0], t[1][1]]), n.push([t[0][0], t[0][1]]), n;
      }),
      (r.prototype.getEndTangent = function () {
        var t = this.attr().points,
          n = t.length - 1,
          i = [];
        return i.push([t[n - 1][0], t[n - 1][1]]), i.push([t[n][0], t[n][1]]), i;
      }),
      r
    );
  })(Ze);
function lI(e, r, t, n, i, a, o) {
  var s = i / 2;
  return (
    yn(e - s, r - s, t, i, a, o) ||
    yn(e + t - s, r - s, i, n, a, o) ||
    yn(e + s, r + n - s, t, i, a, o) ||
    yn(e - s, r + s, i, n, a, o)
  );
}
function uI(e, r, t, n, i, a, o, s) {
  return (
    Nr(e + i, r, e + t - i, r, a, o, s) ||
    Nr(e + t, r + i, e + t, r + n - i, a, o, s) ||
    Nr(e + t - i, r + n, e + i, r + n, a, o, s) ||
    Nr(e, r + n - i, e, r + i, a, o, s) ||
    ta(e + t - i, r + i, i, 1.5 * Math.PI, 2 * Math.PI, a, o, s) ||
    ta(e + t - i, r + n - i, i, 0, 0.5 * Math.PI, a, o, s) ||
    ta(e + i, r + n - i, i, 0.5 * Math.PI, Math.PI, a, o, s) ||
    ta(e + i, r + i, i, Math.PI, 1.5 * Math.PI, a, o, s)
  );
}
var cI = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultAttrs = function () {
        var t = e.prototype.getDefaultAttrs.call(this);
        return x(x({}, t), { x: 0, y: 0, width: 0, height: 0, radius: 0 });
      }),
      (r.prototype.isInStrokeOrPath = function (t, n, i, a, o) {
        var s = this.attr(),
          l = s.x,
          u = s.y,
          c = s.width,
          h = s.height,
          f = s.radius;
        if (f) {
          var d = !1;
          return i && (d = uI(l, u, c, h, f, o, t, n)), !d && a && (d = x0(this, t, n)), d;
        } else {
          var v = o / 2;
          if (a && i) return yn(l - v, u - v, c + v, h + v, t, n);
          if (a) return yn(l, u, c, h, t, n);
          if (i) return lI(l, u, c, h, o, t, n);
        }
      }),
      (r.prototype.createPath = function (t) {
        var n = this.attr(),
          i = n.x,
          a = n.y,
          o = n.width,
          s = n.height,
          l = n.radius;
        if ((t.beginPath(), l === 0)) t.rect(i, a, o, s);
        else {
          var u = Hk(l),
            c = u[0],
            h = u[1],
            f = u[2],
            v = u[3];
          t.moveTo(i + c, a),
            t.lineTo(i + o - h, a),
            h !== 0 && t.arc(i + o - h, a + h, h, -Math.PI / 2, 0),
            t.lineTo(i + o, a + s - f),
            f !== 0 && t.arc(i + o - f, a + s - f, f, 0, Math.PI / 2),
            t.lineTo(i + v, a + s),
            v !== 0 && t.arc(i + v, a + s - v, v, Math.PI / 2, Math.PI),
            t.lineTo(i, a + c),
            c !== 0 && t.arc(i + c, a + c, c, Math.PI, Math.PI * 1.5),
            t.closePath();
        }
      }),
      r
    );
  })(Ze),
  hI = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultAttrs = function () {
        var t = e.prototype.getDefaultAttrs.call(this);
        return x(x({}, t), {
          x: 0,
          y: 0,
          text: null,
          fontSize: 12,
          fontFamily: 'sans-serif',
          fontStyle: 'normal',
          fontWeight: 'normal',
          fontVariant: 'normal',
          textAlign: 'start',
          textBaseline: 'bottom',
        });
      }),
      (r.prototype.isOnlyHitBox = function () {
        return !0;
      }),
      (r.prototype.initAttrs = function (t) {
        this._assembleFont(), t.text && this._setText(t.text);
      }),
      (r.prototype._assembleFont = function () {
        var t = this.attrs;
        t.font = Js(t);
      }),
      (r.prototype._setText = function (t) {
        var n = null;
        et(t) &&
          t.indexOf(`
`) !== -1 &&
          (n = t.split(`
`)),
          this.set('textArr', n);
      }),
      (r.prototype.onAttrChange = function (t, n, i) {
        e.prototype.onAttrChange.call(this, t, n, i),
          t.startsWith('font') && this._assembleFont(),
          t === 'text' && this._setText(n);
      }),
      (r.prototype._getSpaceingY = function () {
        var t = this.attrs,
          n = t.lineHeight,
          i = t.fontSize * 1;
        return n ? n - i : i * 0.14;
      }),
      (r.prototype._drawTextArr = function (t, n, i) {
        var a = this.attrs,
          o = a.textBaseline,
          s = a.x,
          l = a.y,
          u = a.fontSize * 1,
          c = this._getSpaceingY(),
          h = Qs(a.text, a.fontSize, a.lineHeight),
          f;
        M(n, function (v, d) {
          (f = l + d * (c + u) - h + u),
            o === 'middle' && (f += h - u - (h - u) / 2),
            o === 'top' && (f += h - u),
            $(v) || (i ? t.fillText(v, s, f) : t.strokeText(v, s, f));
        });
      }),
      (r.prototype._drawText = function (t, n) {
        var i = this.attr(),
          a = i.x,
          o = i.y,
          s = this.get('textArr');
        if (s) this._drawTextArr(t, s, n);
        else {
          var l = i.text;
          $(l) || (n ? t.fillText(l, a, o) : t.strokeText(l, a, o));
        }
      }),
      (r.prototype.strokeAndFill = function (t) {
        var n = this.attrs,
          i = n.lineWidth,
          a = n.opacity,
          o = n.strokeOpacity,
          s = n.fillOpacity;
        this.isStroke() && i > 0 && (!$(o) && o !== 1 && (t.globalAlpha = a), this.stroke(t)),
          this.isFill() &&
            (!$(s) && s !== 1
              ? ((t.globalAlpha = s), this.fill(t), (t.globalAlpha = a))
              : this.fill(t)),
          this.afterDrawPath(t);
      }),
      (r.prototype.fill = function (t) {
        this._drawText(t, !0);
      }),
      (r.prototype.stroke = function (t) {
        this._drawText(t, !1);
      }),
      r
    );
  })(Ze);
function fI(e, r) {
  if (r) {
    var t = Ws(r);
    return gr(t, e);
  }
  return e;
}
function S0(e, r, t) {
  var n = e.getTotalMatrix();
  if (n) {
    var i = fI([r, t, 1], n),
      a = i[0],
      o = i[1];
    return [a, o];
  }
  return [r, t];
}
function zd(e, r, t) {
  if (e.isCanvas && e.isCanvas()) return !0;
  if (!ya(e) || e.cfg.isInView === !1) return !1;
  if (e.cfg.clipShape) {
    var n = S0(e, r, t),
      i = n[0],
      a = n[1];
    if (e.isClipped(i, a)) return !1;
  }
  var o = e.cfg.cacheCanvasBBox || e.getCanvasBBox();
  return r >= o.minX && r <= o.maxX && t >= o.minY && t <= o.maxY;
}
function C0(e, r, t) {
  if (!zd(e, r, t)) return null;
  for (var n = null, i = e.getChildren(), a = i.length, o = a - 1; o >= 0; o--) {
    var s = i[o];
    if (s.isGroup()) n = C0(s, r, t);
    else if (zd(s, r, t)) {
      var l = s,
        u = S0(s, r, t),
        c = u[0],
        h = u[1];
      l.isInShape(c, h) && (n = s);
    }
    if (n) break;
  }
  return n;
}
var vI = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        var t = e.prototype.getDefaultCfg.call(this);
        return (
          (t.renderer = 'canvas'),
          (t.autoDraw = !0),
          (t.localRefresh = !0),
          (t.refreshElements = []),
          (t.clipView = !0),
          (t.quickHit = !1),
          t
        );
      }),
      (r.prototype.onCanvasChange = function (t) {
        (t === 'attr' || t === 'sort' || t === 'changeSize') &&
          (this.set('refreshElements', [this]), this.draw());
      }),
      (r.prototype.getShapeBase = function () {
        return Ds;
      }),
      (r.prototype.getGroupBase = function () {
        return Lh;
      }),
      (r.prototype.getPixelRatio = function () {
        var t = this.get('pixelRatio') || Ok();
        return t >= 1 ? Math.ceil(t) : 1;
      }),
      (r.prototype.getViewRange = function () {
        return { minX: 0, minY: 0, maxX: this.cfg.width, maxY: this.cfg.height };
      }),
      (r.prototype.createDom = function () {
        var t = document.createElement('canvas'),
          n = t.getContext('2d');
        return this.set('context', n), t;
      }),
      (r.prototype.setDOMSize = function (t, n) {
        e.prototype.setDOMSize.call(this, t, n);
        var i = this.get('context'),
          a = this.get('el'),
          o = this.getPixelRatio();
        (a.width = o * t), (a.height = o * n), o > 1 && i.scale(o, o);
      }),
      (r.prototype.clear = function () {
        e.prototype.clear.call(this), this._clearFrame();
        var t = this.get('context'),
          n = this.get('el');
        t.clearRect(0, 0, n.width, n.height);
      }),
      (r.prototype.getShape = function (t, n) {
        var i;
        return (
          this.get('quickHit')
            ? (i = C0(this, t, n))
            : (i = e.prototype.getShape.call(this, t, n, null)),
          i
        );
      }),
      (r.prototype._getRefreshRegion = function () {
        var t = this.get('refreshElements'),
          n = this.getViewRange(),
          i;
        if (t.length && t[0] === this) i = n;
        else if (((i = _k(t)), i)) {
          (i.minX = Math.floor(i.minX)),
            (i.minY = Math.floor(i.minY)),
            (i.maxX = Math.ceil(i.maxX)),
            (i.maxY = Math.ceil(i.maxY)),
            (i.maxY += 1);
          var a = this.get('clipView');
          a && (i = jk(i, n));
        }
        return i;
      }),
      (r.prototype.refreshElement = function (t) {
        var n = this.get('refreshElements');
        n.push(t);
      }),
      (r.prototype._clearFrame = function () {
        var t = this.get('drawFrame');
        t && (aC(t), this.set('drawFrame', null), this.set('refreshElements', []));
      }),
      (r.prototype.draw = function () {
        var t = this.get('drawFrame');
        (this.get('autoDraw') && t) || this._startDraw();
      }),
      (r.prototype._drawAll = function () {
        var t = this.get('context'),
          n = this.get('el'),
          i = this.getChildren();
        t.clearRect(0, 0, n.width, n.height),
          gi(t, this),
          gc(t, i),
          this.set('refreshElements', []);
      }),
      (r.prototype._drawRegion = function () {
        var t = this.get('context'),
          n = this.get('refreshElements'),
          i = this.getChildren(),
          a = this._getRefreshRegion();
        a
          ? (t.clearRect(a.minX, a.minY, a.maxX - a.minX, a.maxY - a.minY),
            t.save(),
            t.beginPath(),
            t.rect(a.minX, a.minY, a.maxX - a.minX, a.maxY - a.minY),
            t.clip(),
            gi(t, this),
            Yk(this, i, a),
            gc(t, i, a),
            t.restore())
          : n.length && g0(n),
          M(n, function (o) {
            o.get('hasChanged') && o.set('hasChanged', !1);
          }),
          this.set('refreshElements', []);
      }),
      (r.prototype._startDraw = function () {
        var t = this,
          n = this.get('drawFrame');
        n ||
          ((n = iC(function () {
            t.get('localRefresh') ? t._drawRegion() : t._drawAll(), t.set('drawFrame', null);
          })),
          this.set('drawFrame', n));
      }),
      (r.prototype.skipDraw = function () {}),
      (r.prototype.removeDom = function () {
        var t = this.get('el');
        (t.width = 0), (t.height = 0), t.parentNode.removeChild(t);
      }),
      r
    );
  })(_s),
  dI = '0.5.12';
const pI = Object.freeze(
  Object.defineProperty(
    {
      __proto__: null,
      AbstractCanvas: _s,
      AbstractGroup: js,
      AbstractShape: Us,
      Base: Hs,
      Canvas: vI,
      Event: _a,
      Group: Lh,
      PathUtil: jc,
      Shape: Ds,
      assembleFont: Js,
      getArcParams: Ss,
      getBBoxMethod: qs,
      getOffScreenContext: Ks,
      getTextHeight: Qs,
      invert: Ws,
      isAllowCapture: ya,
      multiplyVec2: gr,
      registerBBox: ze,
      registerEasing: py,
      version: dI,
    },
    Symbol.toStringTag,
    { value: 'Module' },
  ),
);
var mc = {
    rect: 'path',
    circle: 'circle',
    line: 'line',
    path: 'path',
    marker: 'path',
    text: 'text',
    polyline: 'polyline',
    polygon: 'polygon',
    image: 'image',
    ellipse: 'ellipse',
    dom: 'foreignObject',
  },
  dt = {
    opacity: 'opacity',
    fillStyle: 'fill',
    fill: 'fill',
    fillOpacity: 'fill-opacity',
    strokeStyle: 'stroke',
    strokeOpacity: 'stroke-opacity',
    stroke: 'stroke',
    x: 'x',
    y: 'y',
    r: 'r',
    rx: 'rx',
    ry: 'ry',
    width: 'width',
    height: 'height',
    x1: 'x1',
    x2: 'x2',
    y1: 'y1',
    y2: 'y2',
    lineCap: 'stroke-linecap',
    lineJoin: 'stroke-linejoin',
    lineWidth: 'stroke-width',
    lineDash: 'stroke-dasharray',
    lineDashOffset: 'stroke-dashoffset',
    miterLimit: 'stroke-miterlimit',
    font: 'font',
    fontSize: 'font-size',
    fontStyle: 'font-style',
    fontVariant: 'font-variant',
    fontWeight: 'font-weight',
    fontFamily: 'font-family',
    startArrow: 'marker-start',
    endArrow: 'marker-end',
    path: 'd',
    class: 'class',
    id: 'id',
    style: 'style',
    preserveAspectRatio: 'preserveAspectRatio',
  };
function Ne(e) {
  return document.createElementNS('http://www.w3.org/2000/svg', e);
}
function M0(e) {
  var r = mc[e.type],
    t = e.getParent();
  if (!r) throw new Error('the type ' + e.type + ' is not supported by svg');
  var n = Ne(r);
  if ((e.get('id') && (n.id = e.get('id')), e.set('el', n), e.set('attrs', {}), t)) {
    var i = t.get('el');
    i || ((i = t.createDom()), t.set('el', i)), i.appendChild(n);
  }
  return n;
}
function A0(e, r) {
  var t = e.get('el'),
    n = hC(t.children).sort(r),
    i = document.createDocumentFragment();
  n.forEach(function (a) {
    i.appendChild(a);
  }),
    t.appendChild(i);
}
function gI(e, r) {
  var t = e.parentNode,
    n = Array.from(t.childNodes).filter(function (s) {
      return s.nodeType === 1 && s.nodeName.toLowerCase() !== 'defs';
    }),
    i = n[r],
    a = n.indexOf(e);
  if (i) {
    if (a > r) t.insertBefore(e, i);
    else if (a < r) {
      var o = n[r + 1];
      o ? t.insertBefore(e, o) : t.appendChild(e);
    }
  } else t.appendChild(e);
}
function yI(e, r) {
  var t = e.cfg.el,
    n = e.attr(),
    i = { dx: n.shadowOffsetX, dy: n.shadowOffsetY, blur: n.shadowBlur, color: n.shadowColor };
  if (!i.dx && !i.dy && !i.blur && !i.color) t.removeAttribute('filter');
  else {
    var a = r.find('filter', i);
    a || (a = r.addShadow(i)), t.setAttribute('filter', 'url(#' + a + ')');
  }
}
function to(e) {
  var r = e.attr().matrix;
  if (r) {
    for (var t = e.cfg.el, n = [], i = 0; i < 9; i += 3) n.push(r[i] + ',' + r[i + 1]);
    (n = n.join(',')),
      n.indexOf('NaN') === -1
        ? t.setAttribute('transform', 'matrix(' + n + ')')
        : console.warn('invalid matrix:', r);
  }
}
function Oa(e, r) {
  var t = e.getClip(),
    n = e.get('el');
  if (!t) n.removeAttribute('clip-path');
  else if (t && !n.hasAttribute('clip-path')) {
    M0(t), t.createPath(r);
    var i = r.addClip(t);
    n.setAttribute('clip-path', 'url(#' + i + ')');
  }
}
function F0(e, r) {
  r.forEach(function (t) {
    t.draw(e);
  });
}
function E0(e, r) {
  var t = e.get('canvas');
  if (t && t.get('autoDraw')) {
    var n = t.get('context'),
      i = e.getParent(),
      a = i ? i.getChildren() : [t],
      o = e.get('el');
    if (r === 'remove') {
      var s = e.get('isClipShape');
      if (s) {
        var l = o && o.parentNode,
          u = l && l.parentNode;
        l && u && u.removeChild(l);
      } else o && o.parentNode && o.parentNode.removeChild(o);
    } else if (r === 'show') o.setAttribute('visibility', 'visible');
    else if (r === 'hide') o.setAttribute('visibility', 'hidden');
    else if (r === 'zIndex') gI(o, a.indexOf(e));
    else if (r === 'sort') {
      var c = e.get('children');
      c &&
        c.length &&
        A0(e, function (h, f) {
          return c.indexOf(h) - c.indexOf(f) ? 1 : 0;
        });
    } else
      r === 'clear'
        ? o && (o.innerHTML = '')
        : r === 'matrix'
        ? to(e)
        : r === 'clip'
        ? Oa(e, n)
        : r === 'attr' || (r === 'add' && e.draw(n));
  }
}
var Oh = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.isEntityGroup = function () {
        return !0;
      }),
      (r.prototype.createDom = function () {
        var t = Ne('g');
        this.set('el', t);
        var n = this.getParent();
        if (n) {
          var i = n.get('el');
          i || ((i = n.createDom()), n.set('el', i)), i.appendChild(t);
        }
        return t;
      }),
      (r.prototype.afterAttrsChange = function (t) {
        e.prototype.afterAttrsChange.call(this, t);
        var n = this.get('canvas');
        if (n && n.get('autoDraw')) {
          var i = n.get('context');
          this.createPath(i, t);
        }
      }),
      (r.prototype.onCanvasChange = function (t) {
        E0(this, t);
      }),
      (r.prototype.getShapeBase = function () {
        return Bs;
      }),
      (r.prototype.getGroupBase = function () {
        return r;
      }),
      (r.prototype.draw = function (t) {
        var n = this.getChildren(),
          i = this.get('el');
        this.get('destroyed')
          ? i && i.parentNode.removeChild(i)
          : (i || this.createDom(), Oa(this, t), this.createPath(t), n.length && F0(t, n));
      }),
      (r.prototype.createPath = function (t, n) {
        var i = this.attr(),
          a = this.get('el');
        M(n || i, function (o, s) {
          dt[s] && a.setAttribute(dt[s], o);
        }),
          to(this);
      }),
      r
    );
  })(js),
  Ge = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'svg'), (t.canFill = !1), (t.canStroke = !1), t;
    }
    return (
      (r.prototype.getDefaultAttrs = function () {
        var t = e.prototype.getDefaultAttrs.call(this);
        return x(x({}, t), { lineWidth: 1, lineAppendWidth: 0, strokeOpacity: 1, fillOpacity: 1 });
      }),
      (r.prototype.afterAttrsChange = function (t) {
        e.prototype.afterAttrsChange.call(this, t);
        var n = this.get('canvas');
        if (n && n.get('autoDraw')) {
          var i = n.get('context');
          this.draw(i, t);
        }
      }),
      (r.prototype.getShapeBase = function () {
        return Bs;
      }),
      (r.prototype.getGroupBase = function () {
        return Oh;
      }),
      (r.prototype.onCanvasChange = function (t) {
        E0(this, t);
      }),
      (r.prototype.calculateBBox = function () {
        var t = this.get('el'),
          n = null;
        if (t) n = t.getBBox();
        else {
          var i = qs(this.get('type'));
          i && (n = i(this));
        }
        if (n) {
          var a = n.x,
            o = n.y,
            s = n.width,
            l = n.height,
            u = this.getHitLineWidth(),
            c = u / 2,
            h = a - c,
            f = o - c,
            v = a + s + c,
            d = o + l + c;
          return { x: h, y: f, minX: h, minY: f, maxX: v, maxY: d, width: s + u, height: l + u };
        }
        return { x: 0, y: 0, minX: 0, minY: 0, maxX: 0, maxY: 0, width: 0, height: 0 };
      }),
      (r.prototype.isFill = function () {
        var t = this.attr(),
          n = t.fill,
          i = t.fillStyle;
        return (n || i || this.isClipShape()) && this.canFill;
      }),
      (r.prototype.isStroke = function () {
        var t = this.attr(),
          n = t.stroke,
          i = t.strokeStyle;
        return (n || i) && this.canStroke;
      }),
      (r.prototype.draw = function (t, n) {
        var i = this.get('el');
        this.get('destroyed')
          ? i && i.parentNode.removeChild(i)
          : (i || M0(this),
            Oa(this, t),
            this.createPath(t, n),
            this.shadow(t, n),
            this.strokeAndFill(t, n),
            this.transform(n));
      }),
      (r.prototype.createPath = function (t, n) {}),
      (r.prototype.strokeAndFill = function (t, n) {
        var i = n || this.attr(),
          a = i.fill,
          o = i.fillStyle,
          s = i.stroke,
          l = i.strokeStyle,
          u = i.fillOpacity,
          c = i.strokeOpacity,
          h = i.lineWidth,
          f = this.get('el');
        this.canFill &&
          (n
            ? 'fill' in i
              ? this._setColor(t, 'fill', a)
              : 'fillStyle' in i && this._setColor(t, 'fill', o)
            : this._setColor(t, 'fill', a || o),
          u && f.setAttribute(dt.fillOpacity, u)),
          this.canStroke &&
            h > 0 &&
            (n
              ? 'stroke' in i
                ? this._setColor(t, 'stroke', s)
                : 'strokeStyle' in i && this._setColor(t, 'stroke', l)
              : this._setColor(t, 'stroke', s || l),
            c && f.setAttribute(dt.strokeOpacity, c),
            h && f.setAttribute(dt.lineWidth, h));
      }),
      (r.prototype._setColor = function (t, n, i) {
        var a = this.get('el');
        if (!i) {
          a.setAttribute(dt[n], 'none');
          return;
        }
        if (((i = i.trim()), /^[r,R,L,l]{1}[\s]*\(/.test(i))) {
          var o = t.find('gradient', i);
          o || (o = t.addGradient(i)), a.setAttribute(dt[n], 'url(#' + o + ')');
        } else if (/^[p,P]{1}[\s]*\(/.test(i)) {
          var o = t.find('pattern', i);
          o || (o = t.addPattern(i)), a.setAttribute(dt[n], 'url(#' + o + ')');
        } else a.setAttribute(dt[n], i);
      }),
      (r.prototype.shadow = function (t, n) {
        var i = this.attr(),
          a = n || i,
          o = a.shadowOffsetX,
          s = a.shadowOffsetY,
          l = a.shadowBlur,
          u = a.shadowColor;
        (o || s || l || u) && yI(this, t);
      }),
      (r.prototype.transform = function (t) {
        var n = this.attr(),
          i = (t || n).matrix;
        i && to(this);
      }),
      (r.prototype.isInShape = function (t, n) {
        return this.isPointInPath(t, n);
      }),
      (r.prototype.isPointInPath = function (t, n) {
        var i = this.get('el'),
          a = this.get('canvas'),
          o = a.get('el').getBoundingClientRect(),
          s = t + o.left,
          l = n + o.top,
          u = document.elementFromPoint(s, l);
        return !!(u && u.isEqualNode(i));
      }),
      (r.prototype.getHitLineWidth = function () {
        var t = this.attrs,
          n = t.lineWidth,
          i = t.lineAppendWidth;
        return this.isStroke() ? n + i : 0;
      }),
      r
    );
  })(Us),
  mI = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'circle'), (t.canFill = !0), (t.canStroke = !0), t;
    }
    return (
      (r.prototype.getDefaultAttrs = function () {
        var t = e.prototype.getDefaultAttrs.call(this);
        return x(x({}, t), { x: 0, y: 0, r: 0 });
      }),
      (r.prototype.createPath = function (t, n) {
        var i = this.attr(),
          a = this.get('el');
        M(n || i, function (o, s) {
          s === 'x' || s === 'y' ? a.setAttribute('c' + s, o) : dt[s] && a.setAttribute(dt[s], o);
        });
      }),
      r
    );
  })(Ge),
  xI = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'dom'), (t.canFill = !1), (t.canStroke = !1), t;
    }
    return (
      (r.prototype.createPath = function (t, n) {
        var i = this.attr(),
          a = this.get('el');
        if (
          (M(n || i, function (u, c) {
            dt[c] && a.setAttribute(dt[c], u);
          }),
          typeof i.html == 'function')
        ) {
          var o = i.html.call(this, i);
          if (o instanceof Element || o instanceof HTMLDocument) {
            for (var s = a.childNodes, l = s.length - 1; l >= 0; l--) a.removeChild(s[l]);
            a.appendChild(o);
          } else a.innerHTML = o;
        } else a.innerHTML = i.html;
      }),
      r
    );
  })(Ge),
  wI = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'ellipse'), (t.canFill = !0), (t.canStroke = !0), t;
    }
    return (
      (r.prototype.getDefaultAttrs = function () {
        var t = e.prototype.getDefaultAttrs.call(this);
        return x(x({}, t), { x: 0, y: 0, rx: 0, ry: 0 });
      }),
      (r.prototype.createPath = function (t, n) {
        var i = this.attr(),
          a = this.get('el');
        M(n || i, function (o, s) {
          s === 'x' || s === 'y' ? a.setAttribute('c' + s, o) : dt[s] && a.setAttribute(dt[s], o);
        });
      }),
      r
    );
  })(Ge),
  bI = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'image'), (t.canFill = !1), (t.canStroke = !1), t;
    }
    return (
      (r.prototype.getDefaultAttrs = function () {
        var t = e.prototype.getDefaultAttrs.call(this);
        return x(x({}, t), { x: 0, y: 0, width: 0, height: 0 });
      }),
      (r.prototype.createPath = function (t, n) {
        var i = this,
          a = this.attr(),
          o = this.get('el');
        M(n || a, function (s, l) {
          l === 'img' ? i._setImage(a.img) : dt[l] && o.setAttribute(dt[l], s);
        });
      }),
      (r.prototype.setAttr = function (t, n) {
        (this.attrs[t] = n), t === 'img' && this._setImage(n);
      }),
      (r.prototype._setImage = function (t) {
        var n = this.attr(),
          i = this.get('el');
        if (et(t)) i.setAttribute('href', t);
        else if (t instanceof window.Image)
          n.width || (i.setAttribute('width', t.width), this.attr('width', t.width)),
            n.height || (i.setAttribute('height', t.height), this.attr('height', t.height)),
            i.setAttribute('href', t.src);
        else if (
          t instanceof HTMLElement &&
          et(t.nodeName) &&
          t.nodeName.toUpperCase() === 'CANVAS'
        )
          i.setAttribute('href', t.toDataURL());
        else if (t instanceof ImageData) {
          var a = document.createElement('canvas');
          a.setAttribute('width', '' + t.width),
            a.setAttribute('height', '' + t.height),
            a.getContext('2d').putImageData(t, 0, 0),
            n.width || (i.setAttribute('width', '' + t.width), this.attr('width', t.width)),
            n.height || (i.setAttribute('height', '' + t.height), this.attr('height', t.height)),
            i.setAttribute('href', a.toDataURL());
        }
      }),
      r
    );
  })(Ge),
  SI = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'line'), (t.canFill = !1), (t.canStroke = !0), t;
    }
    return (
      (r.prototype.getDefaultAttrs = function () {
        var t = e.prototype.getDefaultAttrs.call(this);
        return x(x({}, t), { x1: 0, y1: 0, x2: 0, y2: 0, startArrow: !1, endArrow: !1 });
      }),
      (r.prototype.createPath = function (t, n) {
        var i = this.attr(),
          a = this.get('el');
        M(n || i, function (o, s) {
          if (s === 'startArrow' || s === 'endArrow')
            if (o) {
              var l = xt(o) ? t.addArrow(i, dt[s]) : t.getDefaultArrow(i, dt[s]);
              a.setAttribute(dt[s], 'url(#' + l + ')');
            } else a.removeAttribute(dt[s]);
          else dt[s] && a.setAttribute(dt[s], o);
        });
      }),
      (r.prototype.getTotalLength = function () {
        var t = this.attr(),
          n = t.x1,
          i = t.y1,
          a = t.x2,
          o = t.y2;
        return Kt.length(n, i, a, o);
      }),
      (r.prototype.getPoint = function (t) {
        var n = this.attr(),
          i = n.x1,
          a = n.y1,
          o = n.x2,
          s = n.y2;
        return Kt.pointAt(i, a, o, s, t);
      }),
      r
    );
  })(Ge),
  ko = {
    circle: function (e, r, t) {
      return [
        ['M', e, r],
        ['m', -t, 0],
        ['a', t, t, 0, 1, 0, t * 2, 0],
        ['a', t, t, 0, 1, 0, -t * 2, 0],
      ];
    },
    square: function (e, r, t) {
      return [
        ['M', e - t, r - t],
        ['L', e + t, r - t],
        ['L', e + t, r + t],
        ['L', e - t, r + t],
        ['Z'],
      ];
    },
    diamond: function (e, r, t) {
      return [['M', e - t, r], ['L', e, r - t], ['L', e + t, r], ['L', e, r + t], ['Z']];
    },
    triangle: function (e, r, t) {
      var n = t * Math.sin(0.3333333333333333 * Math.PI);
      return [['M', e - t, r + n], ['L', e, r - n], ['L', e + t, r + n], ['z']];
    },
    triangleDown: function (e, r, t) {
      var n = t * Math.sin(0.3333333333333333 * Math.PI);
      return [['M', e - t, r - n], ['L', e + t, r - n], ['L', e, r + n], ['Z']];
    },
  };
const Gd = {
  get: function (e) {
    return ko[e];
  },
  register: function (e, r) {
    ko[e] = r;
  },
  remove: function (e) {
    delete ko[e];
  },
  getAll: function () {
    return ko;
  },
};
var CI = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'marker'), (t.canFill = !0), (t.canStroke = !0), t;
    }
    return (
      (r.prototype.createPath = function (t) {
        var n = this.get('el');
        n.setAttribute('d', this._assembleMarker());
      }),
      (r.prototype._assembleMarker = function () {
        var t = this._getPath();
        return N(t)
          ? t
              .map(function (n) {
                return n.join(' ');
              })
              .join('')
          : t;
      }),
      (r.prototype._getPath = function () {
        var t = this.attr(),
          n = t.x,
          i = t.y,
          a = t.r || t.radius,
          o = t.symbol || 'circle',
          s;
        return (
          U(o) ? (s = o) : (s = Gd.get(o)),
          s ? s(n, i, a) : (console.warn(s + ' symbol is not exist.'), null)
        );
      }),
      (r.symbolsFactory = Gd),
      r
    );
  })(Ge),
  MI = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'path'), (t.canFill = !0), (t.canStroke = !0), t;
    }
    return (
      (r.prototype.getDefaultAttrs = function () {
        var t = e.prototype.getDefaultAttrs.call(this);
        return x(x({}, t), { startArrow: !1, endArrow: !1 });
      }),
      (r.prototype.createPath = function (t, n) {
        var i = this,
          a = this.attr(),
          o = this.get('el');
        M(n || a, function (s, l) {
          if (l === 'path' && N(s)) o.setAttribute('d', i._formatPath(s));
          else if (l === 'startArrow' || l === 'endArrow')
            if (s) {
              var u = xt(s) ? t.addArrow(a, dt[l]) : t.getDefaultArrow(a, dt[l]);
              o.setAttribute(dt[l], 'url(#' + u + ')');
            } else o.removeAttribute(dt[l]);
          else dt[l] && o.setAttribute(dt[l], s);
        });
      }),
      (r.prototype._formatPath = function (t) {
        var n = t
          .map(function (i) {
            return i.join(' ');
          })
          .join('');
        return ~n.indexOf('NaN') ? '' : n;
      }),
      (r.prototype.getTotalLength = function () {
        var t = this.get('el');
        return t ? t.getTotalLength() : null;
      }),
      (r.prototype.getPoint = function (t) {
        var n = this.get('el'),
          i = this.getTotalLength();
        if (i === 0) return null;
        var a = n ? n.getPointAtLength(t * i) : null;
        return a ? { x: a.x, y: a.y } : null;
      }),
      r
    );
  })(Ge),
  AI = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'polygon'), (t.canFill = !0), (t.canStroke = !0), t;
    }
    return (
      (r.prototype.createPath = function (t, n) {
        var i = this.attr(),
          a = this.get('el');
        M(n || i, function (o, s) {
          s === 'points' && N(o) && o.length >= 2
            ? a.setAttribute(
                'points',
                o
                  .map(function (l) {
                    return l[0] + ',' + l[1];
                  })
                  .join(' '),
              )
            : dt[s] && a.setAttribute(dt[s], o);
        });
      }),
      r
    );
  })(Ge),
  FI = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'polyline'), (t.canFill = !0), (t.canStroke = !0), t;
    }
    return (
      (r.prototype.getDefaultAttrs = function () {
        var t = e.prototype.getDefaultAttrs.call(this);
        return x(x({}, t), { startArrow: !1, endArrow: !1 });
      }),
      (r.prototype.onAttrChange = function (t, n, i) {
        e.prototype.onAttrChange.call(this, t, n, i),
          ['points'].indexOf(t) !== -1 && this._resetCache();
      }),
      (r.prototype._resetCache = function () {
        this.set('totalLength', null), this.set('tCache', null);
      }),
      (r.prototype.createPath = function (t, n) {
        var i = this.attr(),
          a = this.get('el');
        M(n || i, function (o, s) {
          s === 'points' && N(o) && o.length >= 2
            ? a.setAttribute(
                'points',
                o
                  .map(function (l) {
                    return l[0] + ',' + l[1];
                  })
                  .join(' '),
              )
            : dt[s] && a.setAttribute(dt[s], o);
        });
      }),
      (r.prototype.getTotalLength = function () {
        var t = this.attr().points,
          n = this.get('totalLength');
        return $(n) ? (this.set('totalLength', My.length(t)), this.get('totalLength')) : n;
      }),
      (r.prototype.getPoint = function (t) {
        var n = this.attr().points,
          i = this.get('tCache');
        i || (this._setTcache(), (i = this.get('tCache')));
        var a, o;
        return (
          M(i, function (s, l) {
            t >= s[0] && t <= s[1] && ((a = (t - s[0]) / (s[1] - s[0])), (o = l));
          }),
          Kt.pointAt(n[o][0], n[o][1], n[o + 1][0], n[o + 1][1], a)
        );
      }),
      (r.prototype._setTcache = function () {
        var t = this.attr().points;
        if (!(!t || t.length === 0)) {
          var n = this.getTotalLength();
          if (!(n <= 0)) {
            var i = 0,
              a = [],
              o,
              s;
            M(t, function (l, u) {
              t[u + 1] &&
                ((o = []),
                (o[0] = i / n),
                (s = Kt.length(l[0], l[1], t[u + 1][0], t[u + 1][1])),
                (i += s),
                (o[1] = i / n),
                a.push(o));
            }),
              this.set('tCache', a);
          }
        }
      }),
      (r.prototype.getStartTangent = function () {
        var t = this.attr().points,
          n = [];
        return n.push([t[1][0], t[1][1]]), n.push([t[0][0], t[0][1]]), n;
      }),
      (r.prototype.getEndTangent = function () {
        var t = this.attr().points,
          n = t.length - 1,
          i = [];
        return i.push([t[n - 1][0], t[n - 1][1]]), i.push([t[n][0], t[n][1]]), i;
      }),
      r
    );
  })(Ge);
function EI(e) {
  var r = 0,
    t = 0,
    n = 0,
    i = 0;
  return (
    N(e)
      ? e.length === 1
        ? (r = t = n = i = e[0])
        : e.length === 2
        ? ((r = n = e[0]), (t = i = e[1]))
        : e.length === 3
        ? ((r = e[0]), (t = i = e[1]), (n = e[2]))
        : ((r = e[0]), (t = e[1]), (n = e[2]), (i = e[3]))
      : (r = t = n = i = e),
    { r1: r, r2: t, r3: n, r4: i }
  );
}
var TI = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'rect'), (t.canFill = !0), (t.canStroke = !0), t;
    }
    return (
      (r.prototype.getDefaultAttrs = function () {
        var t = e.prototype.getDefaultAttrs.call(this);
        return x(x({}, t), { x: 0, y: 0, width: 0, height: 0, radius: 0 });
      }),
      (r.prototype.createPath = function (t, n) {
        var i = this,
          a = this.attr(),
          o = this.get('el'),
          s = !1,
          l = ['x', 'y', 'width', 'height', 'radius'];
        M(n || a, function (u, c) {
          l.indexOf(c) !== -1 && !s
            ? (o.setAttribute('d', i._assembleRect(a)), (s = !0))
            : l.indexOf(c) === -1 && dt[c] && o.setAttribute(dt[c], u);
        });
      }),
      (r.prototype._assembleRect = function (t) {
        var n = t.x,
          i = t.y,
          a = t.width,
          o = t.height,
          s = t.radius;
        if (!s) return 'M ' + n + ',' + i + ' l ' + a + ',0 l 0,' + o + ' l' + -a + ' 0 z';
        var l = EI(s);
        N(s)
          ? s.length === 1
            ? (l.r1 = l.r2 = l.r3 = l.r4 = s[0])
            : s.length === 2
            ? ((l.r1 = l.r3 = s[0]), (l.r2 = l.r4 = s[1]))
            : s.length === 3
            ? ((l.r1 = s[0]), (l.r2 = l.r4 = s[1]), (l.r3 = s[2]))
            : ((l.r1 = s[0]), (l.r2 = s[1]), (l.r3 = s[2]), (l.r4 = s[3]))
          : (l.r1 = l.r2 = l.r3 = l.r4 = s);
        var u = [
          ['M ' + (n + l.r1) + ',' + i],
          ['l ' + (a - l.r1 - l.r2) + ',0'],
          ['a ' + l.r2 + ',' + l.r2 + ',0,0,1,' + l.r2 + ',' + l.r2],
          ['l 0,' + (o - l.r2 - l.r3)],
          ['a ' + l.r3 + ',' + l.r3 + ',0,0,1,' + -l.r3 + ',' + l.r3],
          ['l ' + (l.r3 + l.r4 - a) + ',0'],
          ['a ' + l.r4 + ',' + l.r4 + ',0,0,1,' + -l.r4 + ',' + -l.r4],
          ['l 0,' + (l.r4 + l.r1 - o)],
          ['a ' + l.r1 + ',' + l.r1 + ',0,0,1,' + l.r1 + ',' + -l.r1],
          ['z'],
        ];
        return u.join(' ');
      }),
      r
    );
  })(Ge),
  Vd = 0.3,
  kI = {
    top: 'before-edge',
    middle: 'central',
    bottom: 'after-edge',
    alphabetic: 'baseline',
    hanging: 'hanging',
  },
  II = {
    top: 'text-before-edge',
    middle: 'central',
    bottom: 'text-after-edge',
    alphabetic: 'alphabetic',
    hanging: 'hanging',
  },
  LI = { left: 'left', start: 'left', center: 'middle', right: 'end', end: 'end' },
  PI = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'text'), (t.canFill = !0), (t.canStroke = !0), t;
    }
    return (
      (r.prototype.getDefaultAttrs = function () {
        var t = e.prototype.getDefaultAttrs.call(this);
        return x(x({}, t), {
          x: 0,
          y: 0,
          text: null,
          fontSize: 12,
          fontFamily: 'sans-serif',
          fontStyle: 'normal',
          fontWeight: 'normal',
          fontVariant: 'normal',
          textAlign: 'start',
          textBaseline: 'bottom',
        });
      }),
      (r.prototype.createPath = function (t, n) {
        var i = this,
          a = this.attr(),
          o = this.get('el');
        this._setFont(),
          M(n || a, function (s, l) {
            l === 'text'
              ? i._setText('' + s)
              : l === 'matrix' && s
              ? to(i)
              : dt[l] && o.setAttribute(dt[l], s);
          }),
          o.setAttribute('paint-order', 'stroke'),
          o.setAttribute('style', 'stroke-linecap:butt; stroke-linejoin:miter;');
      }),
      (r.prototype._setFont = function () {
        var t = this.get('el'),
          n = this.attr(),
          i = n.textBaseline,
          a = n.textAlign,
          o = Ug();
        o && o.name === 'firefox'
          ? t.setAttribute('dominant-baseline', II[i] || 'alphabetic')
          : t.setAttribute('alignment-baseline', kI[i] || 'baseline'),
          t.setAttribute('text-anchor', LI[a] || 'left');
      }),
      (r.prototype._setText = function (t) {
        var n = this.get('el'),
          i = this.attr(),
          a = i.x,
          o = i.textBaseline,
          s = o === void 0 ? 'bottom' : o;
        if (!t) n.innerHTML = '';
        else if (
          ~t.indexOf(`
`)
        ) {
          var l = t.split(`
`),
            u = l.length - 1,
            c = '';
          M(l, function (h, f) {
            f === 0
              ? s === 'alphabetic'
                ? (c += '<tspan x="' + a + '" dy="' + -u + 'em">' + h + '</tspan>')
                : s === 'top'
                ? (c += '<tspan x="' + a + '" dy="0.9em">' + h + '</tspan>')
                : s === 'middle'
                ? (c += '<tspan x="' + a + '" dy="' + -(u - 1) / 2 + 'em">' + h + '</tspan>')
                : s === 'bottom'
                ? (c += '<tspan x="' + a + '" dy="-' + (u + Vd) + 'em">' + h + '</tspan>')
                : s === 'hanging' &&
                  (c += '<tspan x="' + a + '" dy="' + (-(u - 1) - Vd) + 'em">' + h + '</tspan>')
              : (c += '<tspan x="' + a + '" dy="1em">' + h + '</tspan>');
          }),
            (n.innerHTML = c);
        } else n.innerHTML = t;
      }),
      r
    );
  })(Ge),
  OI = /^l\s*\(\s*([\d.]+)\s*\)\s*(.*)/i,
  DI = /^r\s*\(\s*([\d.]+)\s*,\s*([\d.]+)\s*,\s*([\d.]+)\s*\)\s*(.*)/i,
  BI = /[\d.]+:(#[^\s]+|[^)]+\))/gi;
function T0(e) {
  var r = e.match(BI);
  if (!r) return '';
  var t = '';
  return (
    r.sort(function (n, i) {
      return (n = n.split(':')), (i = i.split(':')), Number(n[0]) - Number(i[0]);
    }),
    M(r, function (n) {
      (n = n.split(':')), (t += '<stop offset="' + n[0] + '" stop-color="' + n[1] + '"></stop>');
    }),
    t
  );
}
function RI(e, r) {
  var t = OI.exec(e),
    n = Vc(Hc(parseFloat(t[1])), Math.PI * 2),
    i = t[2],
    a,
    o;
  n >= 0 && n < 0.5 * Math.PI
    ? ((a = { x: 0, y: 0 }), (o = { x: 1, y: 1 }))
    : 0.5 * Math.PI <= n && n < Math.PI
    ? ((a = { x: 1, y: 0 }), (o = { x: 0, y: 1 }))
    : Math.PI <= n && n < 1.5 * Math.PI
    ? ((a = { x: 1, y: 1 }), (o = { x: 0, y: 0 }))
    : ((a = { x: 0, y: 1 }), (o = { x: 1, y: 0 }));
  var s = Math.tan(n),
    l = s * s,
    u = (o.x - a.x + s * (o.y - a.y)) / (l + 1) + a.x,
    c = (s * (o.x - a.x + s * (o.y - a.y))) / (l + 1) + a.y;
  r.setAttribute('x1', a.x),
    r.setAttribute('y1', a.y),
    r.setAttribute('x2', u),
    r.setAttribute('y2', c),
    (r.innerHTML = T0(i));
}
function $I(e, r) {
  var t = DI.exec(e),
    n = parseFloat(t[1]),
    i = parseFloat(t[2]),
    a = parseFloat(t[3]),
    o = t[4];
  r.setAttribute('cx', n), r.setAttribute('cy', i), r.setAttribute('r', a), (r.innerHTML = T0(o));
}
var NI = (function () {
    function e(r) {
      this.cfg = {};
      var t = null,
        n = rn('gradient_');
      return (
        r.toLowerCase()[0] === 'l'
          ? ((t = Ne('linearGradient')), RI(r, t))
          : ((t = Ne('radialGradient')), $I(r, t)),
        t.setAttribute('id', n),
        (this.el = t),
        (this.id = n),
        (this.cfg = r),
        this
      );
    }
    return (
      (e.prototype.match = function (r, t) {
        return this.cfg === t;
      }),
      e
    );
  })(),
  zI = {
    shadowColor: 'color',
    shadowOpacity: 'opacity',
    shadowBlur: 'blur',
    shadowOffsetX: 'dx',
    shadowOffsetY: 'dy',
  },
  GI = { x: '-40%', y: '-40%', width: '200%', height: '200%' },
  VI = (function () {
    function e(r) {
      (this.type = 'filter'), (this.cfg = {}), (this.type = 'filter');
      var t = Ne('filter');
      return (
        M(GI, function (n, i) {
          t.setAttribute(i, n);
        }),
        (this.el = t),
        (this.id = rn('filter_')),
        (this.el.id = this.id),
        (this.cfg = r),
        this._parseShadow(r, t),
        this
      );
    }
    return (
      (e.prototype.match = function (r, t) {
        if (this.type !== r) return !1;
        var n = !0,
          i = this.cfg;
        return (
          M(Object.keys(i), function (a) {
            if (i[a] !== t[a]) return (n = !1), !1;
          }),
          n
        );
      }),
      (e.prototype.update = function (r, t) {
        var n = this.cfg;
        return (n[zI[r]] = t), this._parseShadow(n, this.el), this;
      }),
      (e.prototype._parseShadow = function (r, t) {
        var n =
          `<feDropShadow
      dx="` +
          (r.dx || 0) +
          `"
      dy="` +
          (r.dy || 0) +
          `"
      stdDeviation="` +
          (r.blur ? r.blur / 10 : 0) +
          `"
      flood-color="` +
          (r.color ? r.color : '#000') +
          `"
      flood-opacity="` +
          (r.opacity ? r.opacity : 1) +
          `"
      />`;
        t.innerHTML = n;
      }),
      e
    );
  })(),
  Hd = (function () {
    function e(r, t) {
      this.cfg = {};
      var n = Ne('marker'),
        i = rn('marker_');
      n.setAttribute('id', i);
      var a = Ne('path');
      a.setAttribute('stroke', r.stroke || 'none'),
        a.setAttribute('fill', r.fill || 'none'),
        n.appendChild(a),
        n.setAttribute('overflow', 'visible'),
        n.setAttribute('orient', 'auto-start-reverse'),
        (this.el = n),
        (this.child = a),
        (this.id = i);
      var o = r[t === 'marker-start' ? 'startArrow' : 'endArrow'];
      return (
        (this.stroke = r.stroke || '#000'),
        o === !0 ? this._setDefaultPath(t, a) : ((this.cfg = o), this._setMarker(r.lineWidth, a)),
        this
      );
    }
    return (
      (e.prototype.match = function () {
        return !1;
      }),
      (e.prototype._setDefaultPath = function (r, t) {
        var n = this.el;
        t.setAttribute('d', 'M0,0 L' + 10 * Math.cos(Math.PI / 6) + ',5 L0,10'),
          n.setAttribute('refX', '' + 10 * Math.cos(Math.PI / 6)),
          n.setAttribute('refY', '5');
      }),
      (e.prototype._setMarker = function (r, t) {
        var n = this.el,
          i = this.cfg.path,
          a = this.cfg.d;
        N(i) &&
          (i = i
            .map(function (o) {
              return o.join(' ');
            })
            .join('')),
          t.setAttribute('d', i),
          n.appendChild(t),
          a && n.setAttribute('refX', '' + a / r);
      }),
      (e.prototype.update = function (r) {
        var t = this.child;
        t.attr ? t.attr('fill', r) : t.setAttribute('fill', r);
      }),
      e
    );
  })(),
  HI = (function () {
    function e(r) {
      (this.type = 'clip'), (this.cfg = {});
      var t = Ne('clipPath');
      (this.el = t), (this.id = rn('clip_')), (t.id = this.id);
      var n = r.cfg.el;
      return t.appendChild(n), (this.cfg = r), this;
    }
    return (
      (e.prototype.match = function () {
        return !1;
      }),
      (e.prototype.remove = function () {
        var r = this.el;
        r.parentNode.removeChild(r);
      }),
      e
    );
  })(),
  YI = /^p\s*\(\s*([axyn])\s*\)\s*(.*)/i,
  WI = (function () {
    function e(r) {
      this.cfg = {};
      var t = Ne('pattern');
      t.setAttribute('patternUnits', 'userSpaceOnUse');
      var n = Ne('image');
      t.appendChild(n);
      var i = rn('pattern_');
      (t.id = i), (this.el = t), (this.id = i), (this.cfg = r);
      var a = YI.exec(r),
        o = a[2];
      n.setAttribute('href', o);
      var s = new Image();
      o.match(/^data:/i) || (s.crossOrigin = 'Anonymous'), (s.src = o);
      function l() {
        t.setAttribute('width', '' + s.width), t.setAttribute('height', '' + s.height);
      }
      return s.complete ? l() : ((s.onload = l), (s.src = s.src)), this;
    }
    return (
      (e.prototype.match = function (r, t) {
        return this.cfg === t;
      }),
      e
    );
  })(),
  XI = (function () {
    function e(r) {
      var t = Ne('defs'),
        n = rn('defs_');
      (t.id = n),
        r.appendChild(t),
        (this.children = []),
        (this.defaultArrow = {}),
        (this.el = t),
        (this.canvas = r);
    }
    return (
      (e.prototype.find = function (r, t) {
        for (var n = this.children, i = null, a = 0; a < n.length; a++)
          if (n[a].match(r, t)) {
            i = n[a].id;
            break;
          }
        return i;
      }),
      (e.prototype.findById = function (r) {
        for (var t = this.children, n = null, i = 0; i < t.length; i++)
          if (t[i].id === r) {
            n = t[i];
            break;
          }
        return n;
      }),
      (e.prototype.add = function (r) {
        this.children.push(r), (r.canvas = this.canvas), (r.parent = this);
      }),
      (e.prototype.getDefaultArrow = function (r, t) {
        var n = r.stroke || r.strokeStyle;
        if (this.defaultArrow[n]) return this.defaultArrow[n].id;
        var i = new Hd(r, t);
        return (this.defaultArrow[n] = i), this.el.appendChild(i.el), this.add(i), i.id;
      }),
      (e.prototype.addGradient = function (r) {
        var t = new NI(r);
        return this.el.appendChild(t.el), this.add(t), t.id;
      }),
      (e.prototype.addArrow = function (r, t) {
        var n = new Hd(r, t);
        return this.el.appendChild(n.el), this.add(n), n.id;
      }),
      (e.prototype.addShadow = function (r) {
        var t = new VI(r);
        return this.el.appendChild(t.el), this.add(t), t.id;
      }),
      (e.prototype.addPattern = function (r) {
        var t = new WI(r);
        return this.el.appendChild(t.el), this.add(t), t.id;
      }),
      (e.prototype.addClip = function (r) {
        var t = new HI(r);
        return this.el.appendChild(t.el), this.add(t), t.id;
      }),
      e
    );
  })(),
  _I = (function (e) {
    k(r, e);
    function r(t) {
      return e.call(this, x(x({}, t), { autoDraw: !0, renderer: 'svg' })) || this;
    }
    return (
      (r.prototype.getShapeBase = function () {
        return Bs;
      }),
      (r.prototype.getGroupBase = function () {
        return Oh;
      }),
      (r.prototype.getShape = function (t, n, i) {
        var a = i.target || i.srcElement;
        if (!mc[a.tagName]) {
          for (var o = a.parentNode; o && !mc[o.tagName]; ) o = o.parentNode;
          a = o;
        }
        return this.find(function (s) {
          return s.get('el') === a;
        });
      }),
      (r.prototype.createDom = function () {
        var t = Ne('svg'),
          n = new XI(t);
        return (
          t.setAttribute('width', '' + this.get('width')),
          t.setAttribute('height', '' + this.get('height')),
          this.set('context', n),
          t
        );
      }),
      (r.prototype.onCanvasChange = function (t) {
        var n = this.get('context'),
          i = this.get('el');
        if (t === 'sort') {
          var a = this.get('children');
          a &&
            a.length &&
            A0(this, function (s, l) {
              return a.indexOf(s) - a.indexOf(l) ? 1 : 0;
            });
        } else if (t === 'clear') {
          if (i) {
            i.innerHTML = '';
            var o = n.el;
            (o.innerHTML = ''), i.appendChild(o);
          }
        } else
          t === 'matrix'
            ? to(this)
            : t === 'clip'
            ? Oa(this, n)
            : t === 'changeSize' &&
              (i.setAttribute('width', '' + this.get('width')),
              i.setAttribute('height', '' + this.get('height')));
      }),
      (r.prototype.draw = function () {
        var t = this.get('context'),
          n = this.getChildren();
        Oa(this, t), n.length && F0(t, n);
      }),
      r
    );
  })(_s),
  jI = '0.5.6';
const UI = Object.freeze(
  Object.defineProperty(
    {
      __proto__: null,
      AbstractCanvas: _s,
      AbstractGroup: js,
      AbstractShape: Us,
      Base: Hs,
      Canvas: _I,
      Event: _a,
      Group: Oh,
      PathUtil: jc,
      Shape: Bs,
      assembleFont: Js,
      getBBoxMethod: qs,
      getOffScreenContext: Ks,
      getTextHeight: Qs,
      invert: Ws,
      isAllowCapture: ya,
      multiplyVec2: gr,
      registerBBox: ze,
      registerEasing: py,
      version: jI,
    },
    Symbol.toStringTag,
    { value: 'Module' },
  ),
);
var Dh = (function (e) {
  k(r, e);
  function r(t) {
    var n = e.call(this, t) || this;
    (n.type = 'path'), (n.shapeType = 'line');
    var i = t.connectNulls,
      a = i === void 0 ? !1 : i,
      o = t.showSinglePoint,
      s = o === void 0 ? !0 : o;
    return (n.connectNulls = a), (n.showSinglePoint = s), n;
  }
  return (
    (r.prototype.updateElements = function (t, n) {
      var i, a, o, s, l, u;
      n === void 0 && (n = !1);
      for (var c = new Map(), h = new Map(), f = [], v = 0, d = 0; d < t.length; d++) {
        var p = t[d],
          g = this.getElementId(p);
        f.push(g), c.set(g, p), h.set(g, v), v++;
      }
      this.elements = new Array(v);
      var y = e0(this.lastElementsMap, f),
        m = y.added,
        b = y.updated,
        w = y.removed;
      try {
        for (var S = pt(m), C = S.next(); !C.done; C = S.next()) {
          var g = C.value,
            p = c.get(g),
            F = this.getShapeFactory(),
            E = this.getShapeInfo(p),
            d = h.get(g),
            I = new Km({
              shapeFactory: F,
              container: this.container,
              offscreenGroup: this.getOffscreenGroup(),
              elementIndex: d,
            });
          (I.geometry = this),
            (I.animate = this.animateOption),
            I.draw(E, n),
            (this.elementsMap[g] = I),
            (this.elements[d] = I);
        }
      } catch (j) {
        i = { error: j };
      } finally {
        try {
          C && !C.done && (a = S.return) && a.call(S);
        } finally {
          if (i) throw i.error;
        }
      }
      try {
        for (var T = pt(b), P = T.next(); !P.done; P = T.next()) {
          var g = P.value,
            p = c.get(g),
            I = this.lastElementsMap[g],
            d = h.get(g),
            E = this.getShapeInfo(p),
            R = I.getModel();
          (this.isCoordinateChanged || t0(R, E)) && ((I.animate = this.animateOption), I.update(E)),
            (this.elementsMap[g] = I),
            (this.elements[d] = I);
        }
      } catch (j) {
        o = { error: j };
      } finally {
        try {
          P && !P.done && (s = T.return) && s.call(T);
        } finally {
          if (o) throw o.error;
        }
      }
      try {
        for (var B = pt(w), G = B.next(); !G.done; G = B.next()) {
          var g = G.value,
            I = this.lastElementsMap[g];
          (I.animate = this.animateOption), I.destroy();
        }
      } catch (j) {
        l = { error: j };
      } finally {
        try {
          G && !G.done && (u = B.return) && u.call(B);
        } finally {
          if (l) throw l.error;
        }
      }
    }),
    (r.prototype.getPointsAndData = function (t) {
      for (var n = [], i = [], a = 0, o = t.length; a < o; a++) {
        var s = t[a];
        n.push({ x: s.x, y: s.y }), i.push(s[Mt]);
      }
      return { points: n, data: i };
    }),
    (r.prototype.getShapeInfo = function (t) {
      var n = this.getDrawCfg(t[0]),
        i = this.getPointsAndData(t),
        a = i.points,
        o = i.data;
      return (
        (n.mappingData = t),
        (n.data = o),
        (n.isStack = !!this.getAdjust('stack')),
        (n.points = a),
        (n.connectNulls = this.connectNulls),
        (n.showSinglePoint = this.showSinglePoint),
        n
      );
    }),
    r
  );
})(an);
function qI(e, r, t, n, i) {
  var a = [];
  if (e.length) {
    for (var o = [], s = [], l = 0, u = e.length; l < u; l++) {
      var c = e[l];
      o.push(c[1]), s.push(c[0]);
    }
    (s = s.reverse()),
      M([o, s], function (h, f) {
        var v = [],
          d = n.parsePoints(h),
          p = d[0];
        o.length === 1 && s.length === 1
          ? (v =
              f === 0
                ? [
                    ['M', p.x - 0.5, p.y],
                    ['L', p.x + 0.5, p.y],
                  ]
                : [
                    ['L', p.x + 0.5, p.y],
                    ['L', p.x - 0.5, p.y],
                  ])
          : (r && d.push({ x: p.x, y: p.y }),
            t ? (v = ws(d, !1, i)) : (v = Ka(d, !1)),
            f > 0 && (v[0][0] = 'L')),
          (a = a.concat(v));
      }),
      a.push(['Z']);
  }
  return a;
}
function wl(e, r, t, n, i) {
  for (
    var a = Nt(e, r, !r, 'lineWidth'),
      o = e.connectNulls,
      s = e.isInCircle,
      l = e.points,
      u = e.showSinglePoint,
      c = xl(l, o, u),
      h = [],
      f = 0,
      v = c.length;
    f < v;
    f++
  ) {
    var d = c[f];
    h = h.concat(qI(d, s, t, n, i));
  }
  return (a.path = h), a;
}
function k0(e) {
  var r = e.start,
    t = e.end;
  return [
    [r.x, t.y],
    [t.x, r.y],
  ];
}
nn('area', {
  defaultShapeType: 'area',
  getDefaultPoints: function (e) {
    var r = e.x,
      t = e.y0,
      n = N(e.y) ? e.y : [t, e.y];
    return n.map(function (i) {
      return { x: r, y: i };
    });
  },
});
gt('area', 'area', {
  draw: function (e, r) {
    var t = wl(e, !1, !1, this),
      n = r.addShape({ type: 'path', attrs: t, name: 'area' });
    return n;
  },
  getMarker: function (e) {
    var r = e.color;
    return {
      symbol: function (t, n, i) {
        return (
          i === void 0 && (i = 5.5),
          [
            ['M', t - i, n - 4],
            ['L', t + i, n - 4],
            ['L', t + i, n + 4],
            ['L', t - i, n + 4],
            ['Z'],
          ]
        );
      },
      style: { r: 5, fill: r, fillOpacity: 1 },
    };
  },
});
var ZI = (function (e) {
  k(r, e);
  function r(t) {
    var n = e.call(this, t) || this;
    (n.type = 'area'), (n.shapeType = 'area'), (n.generatePoints = !0), (n.startOnZero = !0);
    var i = t.startOnZero,
      a = i === void 0 ? !0 : i,
      o = t.sortable,
      s = o === void 0 ? !1 : o,
      l = t.showSinglePoint,
      u = l === void 0 ? !1 : l;
    return (n.startOnZero = a), (n.sortable = s), (n.showSinglePoint = u), n;
  }
  return (
    (r.prototype.getPointsAndData = function (t) {
      for (var n = [], i = [], a = 0, o = t.length; a < o; a++) {
        var s = t[a];
        n.push(s.points), i.push(s[Mt]);
      }
      return { points: n, data: i };
    }),
    (r.prototype.getYMinValue = function () {
      if (this.startOnZero) return e.prototype.getYMinValue.call(this);
      var t = this.getYScale();
      return t.min;
    }),
    r
  );
})(Dh);
nn('edge', {
  defaultShapeType: 'line',
  getDefaultPoints: function (e) {
    return Fh(e);
  },
});
gt('edge', 'line', {
  draw: function (e, r) {
    var t = Nt(e, !0, !1, 'lineWidth'),
      n = Ka(this.parsePoints(e.points), this.coordinate.isPolar);
    return r.addShape('path', { attrs: x(x({}, t), { path: n }) });
  },
  getMarker: function (e) {
    return { symbol: 'circle', style: { r: 4.5, fill: e.color } };
  },
});
var KI = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'edge'), (t.shapeType = 'edge'), (t.generatePoints = !0), t;
    }
    return r;
  })(an),
  QI = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'heatmap'), (t.paletteCache = {}), t;
    }
    return (
      (r.prototype.updateElements = function (t, n) {
        for (var i = 0; i < t.length; i++) {
          var a = t[i],
            o = this.prepareRange(a),
            s = this.prepareSize(),
            l = A(this.styleOption, ['cfg', 'shadowBlur']);
          at(l) || (l = s / 2),
            this.prepareGreyScaleBlurredCircle(s, l),
            this.drawWithRange(a, o, s, l);
        }
      }),
      (r.prototype.color = function (t, n) {
        return this.createAttrOption('color', t, typeof n != 'function' ? n : ''), this;
      }),
      (r.prototype.clear = function () {
        e.prototype.clear.call(this), this.clearShadowCanvasCtx(), (this.paletteCache = {});
      }),
      (r.prototype.prepareRange = function (t) {
        var n = this.getAttribute('color'),
          i = n.getFields()[0],
          a = 1 / 0,
          o = -1 / 0;
        return (
          t.forEach(function (s) {
            var l = s[Mt][i];
            l > o && (o = l), l < a && (a = l);
          }),
          a === o && (a = o - 1),
          [a, o]
        );
      }),
      (r.prototype.prepareSize = function () {
        var t = this.getDefaultValue('size');
        return at(t) || (t = this.getDefaultSize()), t;
      }),
      (r.prototype.prepareGreyScaleBlurredCircle = function (t, n) {
        var i = this.getGrayScaleBlurredCanvas(),
          a = t + n,
          o = i.getContext('2d');
        (i.width = i.height = a * 2),
          o.clearRect(0, 0, i.width, i.height),
          (o.shadowOffsetX = o.shadowOffsetY = a * 2),
          (o.shadowBlur = n),
          (o.shadowColor = 'black'),
          o.beginPath(),
          o.arc(-a, -a, t, 0, Math.PI * 2, !0),
          o.closePath(),
          o.fill();
      }),
      (r.prototype.drawWithRange = function (t, n, i, a) {
        var o,
          s,
          l = this.coordinate,
          u = l.start,
          c = l.end,
          h = this.coordinate.getWidth(),
          f = this.coordinate.getHeight(),
          v = this.getAttribute('color'),
          d = v.getFields()[0];
        this.clearShadowCanvasCtx();
        var p = this.getShadowCanvasCtx();
        n &&
          (t = t.filter(function (T) {
            return T[Mt][d] <= n[1] && T[Mt][d] >= n[0];
          }));
        var g = this.scales[d];
        try {
          for (var y = pt(t), m = y.next(); !m.done; m = y.next()) {
            var b = m.value,
              w = this.getDrawCfg(b),
              S = w.x,
              C = w.y,
              F = g.scale(b[Mt][d]);
            this.drawGrayScaleBlurredCircle(S - u.x, C - c.y, i + a, F, p);
          }
        } catch (T) {
          o = { error: T };
        } finally {
          try {
            m && !m.done && (s = y.return) && s.call(y);
          } finally {
            if (o) throw o.error;
          }
        }
        var E = p.getImageData(0, 0, h, f);
        this.clearShadowCanvasCtx(), this.colorize(E), p.putImageData(E, 0, 0);
        var I = this.getImageShape();
        I.attr('x', u.x),
          I.attr('y', c.y),
          I.attr('width', h),
          I.attr('height', f),
          I.attr('img', p.canvas),
          I.set('origin', this.getShapeInfo(t));
      }),
      (r.prototype.getDefaultSize = function () {
        var t = this.getAttribute('position'),
          n = this.coordinate;
        return Math.min(
          n.getWidth() / (t.scales[0].ticks.length * 4),
          n.getHeight() / (t.scales[1].ticks.length * 4),
        );
      }),
      (r.prototype.clearShadowCanvasCtx = function () {
        var t = this.getShadowCanvasCtx();
        t.clearRect(0, 0, t.canvas.width, t.canvas.height);
      }),
      (r.prototype.getShadowCanvasCtx = function () {
        var t = this.shadowCanvas;
        return (
          t || ((t = document.createElement('canvas')), (this.shadowCanvas = t)),
          (t.width = this.coordinate.getWidth()),
          (t.height = this.coordinate.getHeight()),
          t.getContext('2d')
        );
      }),
      (r.prototype.getGrayScaleBlurredCanvas = function () {
        return (
          this.grayScaleBlurredCanvas ||
            (this.grayScaleBlurredCanvas = document.createElement('canvas')),
          this.grayScaleBlurredCanvas
        );
      }),
      (r.prototype.drawGrayScaleBlurredCircle = function (t, n, i, a, o) {
        var s = this.getGrayScaleBlurredCanvas();
        (o.globalAlpha = a), o.drawImage(s, t - i, n - i);
      }),
      (r.prototype.colorize = function (t) {
        for (
          var n = this.getAttribute('color'), i = t.data, a = this.paletteCache, o = 3;
          o < i.length;
          o += 4
        ) {
          var s = i[o];
          if (at(s)) {
            var l = a[s] ? a[s] : Hr.rgb2arr(n.gradient(s / 256));
            (i[o - 3] = l[0]), (i[o - 2] = l[1]), (i[o - 1] = l[2]), (i[o] = s);
          }
        }
      }),
      (r.prototype.getImageShape = function () {
        var t = this.imageShape;
        if (t) return t;
        var n = this.container;
        return (t = n.addShape({ type: 'image', attrs: {} })), (this.imageShape = t), t;
      }),
      (r.prototype.getShapeInfo = function (t) {
        var n = this.getDrawCfg(t[0]),
          i = t.map(function (a) {
            return a[Mt];
          });
        return x(x({}, n), { mappingData: t, data: i });
      }),
      r
    );
  })(an);
function Bh(e) {
  var r,
    t,
    n = e.x,
    i = e.y,
    a = e.y0,
    o = e.size,
    s,
    l;
  N(i) ? ((r = q(i, 2)), (s = r[0]), (l = r[1])) : ((s = a), (l = i));
  var u, c;
  N(n) ? ((t = q(n, 2)), (u = t[0]), (c = t[1])) : ((u = n - o / 2), (c = n + o / 2));
  var h = [
    { x: u, y: s },
    { x: u, y: l },
  ];
  return h.push({ x: c, y: l }, { x: c, y: s }), h;
}
function Rh(e, r) {
  r === void 0 && (r = !0);
  var t = [],
    n = e[0];
  t.push(['M', n.x, n.y]);
  for (var i = 1, a = e.length; i < a; i++) t.push(['L', e[i].x, e[i].y]);
  return r && (t.push(['L', n.x, n.y]), t.push(['z'])), t;
}
function I0(e, r) {
  var t = 0,
    n = 0,
    i = 0,
    a = 0;
  return (
    N(e)
      ? e.length === 1
        ? (t = n = i = a = e[0])
        : e.length === 2
        ? ((t = i = e[0]), (n = a = e[1]))
        : e.length === 3
        ? ((t = e[0]), (n = a = e[1]), (i = e[2]))
        : ((t = e[0]), (n = e[1]), (i = e[2]), (a = e[3]))
      : (t = n = i = a = e),
    t + n > r && ((t = t ? r / (1 + n / t) : 0), (n = r - t)),
    i + a > r && ((i = i ? r / (1 + a / i) : 0), (a = r - i)),
    [t || 0, n || 0, i || 0, a || 0]
  );
}
function L0(e, r, t) {
  var n = [];
  if (t.isRect) {
    var i = t.isTransposed ? { x: t.start.x, y: r[0].y } : { x: r[0].x, y: t.start.y },
      a = t.isTransposed ? { x: t.end.x, y: r[2].y } : { x: r[3].x, y: t.end.y },
      o = A(e, ['background', 'style', 'radius']);
    if (o) {
      var s = t.isTransposed ? Math.abs(r[0].y - r[2].y) : r[2].x - r[1].x,
        l = t.isTransposed ? t.getWidth() : t.getHeight(),
        u = q(I0(o, Math.min(s, l)), 4),
        c = u[0],
        h = u[1],
        f = u[2],
        v = u[3],
        d = t.isTransposed && t.isReflect('y'),
        p = d ? 0 : 1,
        g = function (C) {
          return d ? -C : C;
        };
      n.push(['M', i.x, a.y + g(c)]),
        c !== 0 && n.push(['A', c, c, 0, 0, p, i.x + c, a.y]),
        n.push(['L', a.x - h, a.y]),
        h !== 0 && n.push(['A', h, h, 0, 0, p, a.x, a.y + g(h)]),
        n.push(['L', a.x, i.y - g(f)]),
        f !== 0 && n.push(['A', f, f, 0, 0, p, a.x - f, i.y]),
        n.push(['L', i.x + v, i.y]),
        v !== 0 && n.push(['A', v, v, 0, 0, p, i.x, i.y - g(v)]);
    } else
      n.push(['M', i.x, i.y]),
        n.push(['L', a.x, i.y]),
        n.push(['L', a.x, a.y]),
        n.push(['L', i.x, a.y]),
        n.push(['L', i.x, i.y]);
    n.push(['z']);
  }
  if (t.isPolar) {
    var y = t.getCenter(),
      m = Ta(e, t),
      b = m.startAngle,
      w = m.endAngle;
    if (t.type !== 'theta' && !t.isTransposed) n = Yr(y.x, y.y, t.getRadius(), b, w);
    else {
      var S = function (E) {
          return Math.pow(E, 2);
        },
        c = Math.sqrt(S(y.x - r[0].x) + S(y.y - r[0].y)),
        h = Math.sqrt(S(y.x - r[2].x) + S(y.y - r[2].y));
      n = Yr(y.x, y.y, c, t.startAngle, t.endAngle, h);
    }
  }
  return n;
}
function JI(e, r, t) {
  var n = t.getWidth(),
    i = t.getHeight(),
    a = t.type === 'rect',
    o = [],
    s = (e[2].x - e[1].x) / 2,
    l = t.isTransposed ? (s * i) / n : (s * n) / i;
  return (
    r === 'round'
      ? (a
          ? (o.push(['M', e[0].x, e[0].y + l]),
            o.push(['L', e[1].x, e[1].y - l]),
            o.push(['A', s, s, 0, 0, 1, e[2].x, e[2].y - l]),
            o.push(['L', e[3].x, e[3].y + l]),
            o.push(['A', s, s, 0, 0, 1, e[0].x, e[0].y + l]))
          : (o.push(['M', e[0].x, e[0].y]),
            o.push(['L', e[1].x, e[1].y]),
            o.push(['A', s, s, 0, 0, 1, e[2].x, e[2].y]),
            o.push(['L', e[3].x, e[3].y]),
            o.push(['A', s, s, 0, 0, 1, e[0].x, e[0].y])),
        o.push(['z']))
      : (o = Rh(e)),
    o
  );
}
function P0(e, r, t) {
  var n = [];
  return (
    $(r)
      ? t
        ? n.push(
            ['M', e[0].x, e[0].y],
            ['L', e[1].x, e[1].y],
            ['L', (e[2].x + e[3].x) / 2, (e[2].y + e[3].y) / 2],
            ['Z'],
          )
        : n.push(
            ['M', e[0].x, e[0].y],
            ['L', e[1].x, e[1].y],
            ['L', e[2].x, e[2].y],
            ['L', e[3].x, e[3].y],
            ['Z'],
          )
      : n.push(
          ['M', e[0].x, e[0].y],
          ['L', e[1].x, e[1].y],
          ['L', r[1].x, r[1].y],
          ['L', r[0].x, r[0].y],
          ['Z'],
        ),
    n
  );
}
function Yi(e, r) {
  return [r, e];
}
function tL(e, r, t) {
  var n,
    i,
    a,
    o,
    s,
    l,
    u,
    c = q(J([], q(e), !1), 4),
    h = c[0],
    f = c[1],
    v = c[2],
    d = c[3],
    p = q(typeof t == 'number' ? Array(4).fill(t) : t, 4),
    g = p[0],
    y = p[1],
    m = p[2],
    b = p[3];
  r.isTransposed && ((n = q(Yi(f, d), 2)), (f = n[0]), (d = n[1])),
    r.isReflect('y') &&
      ((i = q(Yi(h, f), 2)), (h = i[0]), (f = i[1]), (a = q(Yi(v, d), 2)), (v = a[0]), (d = a[1])),
    r.isReflect('x') &&
      ((o = q(Yi(h, d), 2)), (h = o[0]), (d = o[1]), (s = q(Yi(f, v), 2)), (f = s[0]), (v = s[1]));
  var w = [],
    S = function (C) {
      return Math.abs(C);
    };
  return (
    (l = q(
      I0([g, y, m, b], Math.min(S(d.x - h.x), S(f.y - h.y))).map(function (C) {
        return S(C);
      }),
      4,
    )),
    (g = l[0]),
    (y = l[1]),
    (m = l[2]),
    (b = l[3]),
    r.isTransposed && ((u = q([b, g, y, m], 4)), (g = u[0]), (y = u[1]), (m = u[2]), (b = u[3])),
    h.y < f.y
      ? (w.push(['M', d.x, d.y + m]),
        m !== 0 && w.push(['A', m, m, 0, 0, 0, d.x - m, d.y]),
        w.push(['L', h.x + b, h.y]),
        b !== 0 && w.push(['A', b, b, 0, 0, 0, h.x, h.y + b]),
        w.push(['L', f.x, f.y - g]),
        g !== 0 && w.push(['A', g, g, 0, 0, 0, f.x + g, f.y]),
        w.push(['L', v.x - y, v.y]),
        y !== 0 && w.push(['A', y, y, 0, 0, 0, v.x, v.y - y]),
        w.push(['L', d.x, d.y + m]),
        w.push(['z']))
      : d.x < h.x
      ? (w.push(['M', v.x + y, v.y]),
        y !== 0 && w.push(['A', y, y, 0, 0, 0, v.x, v.y + y]),
        w.push(['L', d.x, d.y - m]),
        m !== 0 && w.push(['A', m, m, 0, 0, 0, d.x + m, d.y]),
        w.push(['L', h.x - b, h.y]),
        b !== 0 && w.push(['A', b, b, 0, 0, 0, h.x, h.y - b]),
        w.push(['L', f.x, f.y + g]),
        g !== 0 && w.push(['A', g, g, 0, 0, 0, f.x - g, f.y]),
        w.push(['L', v.x + y, v.y]),
        w.push(['z']))
      : (w.push(['M', f.x, f.y + g]),
        g !== 0 && w.push(['A', g, g, 0, 0, 1, f.x + g, f.y]),
        w.push(['L', v.x - y, v.y]),
        y !== 0 && w.push(['A', y, y, 0, 0, 1, v.x, v.y + y]),
        w.push(['L', d.x, d.y - m]),
        m !== 0 && w.push(['A', m, m, 0, 0, 1, d.x - m, d.y]),
        w.push(['L', h.x + b, h.y]),
        b !== 0 && w.push(['A', b, b, 0, 0, 1, h.x, h.y - b]),
        w.push(['L', f.x, f.y + g]),
        w.push(['z'])),
    w
  );
}
nn('interval', {
  defaultShapeType: 'rect',
  getDefaultPoints: function (e) {
    return Bh(e);
  },
});
gt('interval', 'rect', {
  draw: function (e, r) {
    var t = Nt(e, !1, !0),
      n = r,
      i = e == null ? void 0 : e.background;
    if (i) {
      n = r.addGroup({ name: 'interval-group' });
      var a = l0(e),
        o = L0(e, this.parsePoints(e.points), this.coordinate);
      n.addShape('path', { attrs: x(x({}, a), { path: o }), capture: !1, zIndex: -1, name: Ch });
    }
    var s;
    t.radius && this.coordinate.isRect
      ? (s = tL(this.parsePoints(e.points), this.coordinate, t.radius))
      : (s = this.parsePath(JI(e.points, t.lineCap, this.coordinate)));
    var l = n.addShape('path', { attrs: x(x({}, t), { path: s }), name: 'interval' });
    return i ? n : l;
  },
  getMarker: function (e) {
    var r = e.color,
      t = e.isInPolar;
    return t
      ? { symbol: 'circle', style: { r: 4.5, fill: r } }
      : { symbol: 'square', style: { r: 4, fill: r } };
  },
});
function eL(e, r) {
  var t = e.length,
    n = e;
  et(n[0]) &&
    (n = e.map(function (s) {
      return r.translate(s);
    }));
  for (var i = n[1] - n[0], a = 2; a < t; a++) {
    var o = n[a] - n[a - 1];
    i > o && (i = o);
  }
  return i;
}
function rL(e, r) {
  if (r) {
    var t = Ee(e),
      n = je(t, r);
    return n.length;
  }
  return e.length;
}
function $h(e) {
  var r = e.theme,
    t = e.coordinate,
    n = e.getXScale(),
    i = n.values,
    a = e.beforeMappingData,
    o = i.length,
    s = Za(e.coordinate),
    l = e.intervalPadding,
    u = e.dodgePadding,
    c = e.maxColumnWidth || r.maxColumnWidth,
    h = e.minColumnWidth || r.minColumnWidth,
    f = e.columnWidthRatio || r.columnWidthRatio,
    v = e.multiplePieWidthRatio || r.multiplePieWidthRatio,
    d = e.roseWidthRatio || r.roseWidthRatio;
  if (n.isLinear && i.length > 1) {
    i.sort();
    var p = eL(i, n);
    (o = (n.max - n.min) / p), i.length > o && (o = i.length);
  }
  var g = n.range,
    y = 1 / o,
    m = 1;
  if (
    (t.isPolar
      ? t.isTransposed && o > 1
        ? (m = v)
        : (m = d)
      : (n.isLinear && (y *= g[1] - g[0]), (m = f)),
    !$(l) && l >= 0)
  ) {
    var b = l / s;
    y = (1 - (o - 1) * b) / o;
  } else y *= m;
  if (e.getAdjust('dodge')) {
    var w = e.getAdjust('dodge'),
      S = w.dodgeBy,
      C = rL(a, S);
    if (!$(u) && u >= 0) {
      var F = u / s;
      y = (y - F * (C - 1)) / C;
    } else !$(l) && l >= 0 && (y *= m), (y = y / C);
    y = y >= 0 ? y : 0;
  }
  if (!$(c) && c >= 0) {
    var E = c / s;
    y > E && (y = E);
  }
  if (!$(h) && h >= 0) {
    var I = h / s;
    y < I && (y = I);
  }
  return y;
}
var nL = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      (n.type = 'interval'), (n.shapeType = 'interval'), (n.generatePoints = !0);
      var i = t.background;
      return (n.background = i), n;
    }
    return (
      (r.prototype.createShapePointsCfg = function (t) {
        var n = e.prototype.createShapePointsCfg.call(this, t),
          i,
          a = this.getAttribute('size');
        if (a) {
          i = this.getAttributeValues(a, t)[0];
          var o = this.coordinate,
            s = Za(o);
          i = i / s;
        } else this.defaultSize || (this.defaultSize = $h(this)), (i = this.defaultSize);
        return (n.size = i), n;
      }),
      (r.prototype.adjustScale = function () {
        e.prototype.adjustScale.call(this);
        var t = this.getYScale();
        if (this.coordinate.type === 'theta') t.change({ nice: !1, min: 0, max: vT(t) });
        else {
          var n = this.scaleDefs,
            i = t.field,
            a = t.min,
            o = t.max,
            s = t.type;
          s !== 'time' &&
            (a > 0 && !A(n, [i, 'min']) && t.change({ min: 0 }),
            o <= 0 && !A(n, [i, 'max']) && t.change({ max: 0 }));
        }
      }),
      (r.prototype.getDrawCfg = function (t) {
        var n = e.prototype.getDrawCfg.call(this, t);
        return (n.background = this.background), n;
      }),
      r
    );
  })(an),
  iL = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      n.type = 'line';
      var i = t.sortable,
        a = i === void 0 ? !1 : i;
      return (n.sortable = a), n;
    }
    return r;
  })(Dh),
  O0 = ['circle', 'square', 'bowtie', 'diamond', 'hexagon', 'triangle', 'triangle-down'],
  aL = ['cross', 'tick', 'plus', 'hyphen', 'line'];
function Nh(e, r, t, n, i) {
  var a,
    o,
    s = Nt(r, i, !i, 'r'),
    l = e.parsePoints(r.points),
    u = l[0];
  if (r.isStack) u = l[1];
  else if (l.length > 1) {
    var c = t.addGroup();
    try {
      for (var h = pt(l), f = h.next(); !f.done; f = h.next()) {
        var v = f.value;
        c.addShape({ type: 'marker', attrs: x(x(x({}, s), { symbol: Dn[n] || n }), v) });
      }
    } catch (d) {
      a = { error: d };
    } finally {
      try {
        f && !f.done && (o = h.return) && o.call(h);
      } finally {
        if (a) throw a.error;
      }
    }
    return c;
  }
  return t.addShape({ type: 'marker', attrs: x(x(x({}, s), { symbol: Dn[n] || n }), u) });
}
nn('point', {
  defaultShapeType: 'hollow-circle',
  getDefaultPoints: function (e) {
    return Fh(e);
  },
});
M(O0, function (e) {
  gt('point', 'hollow-'.concat(e), {
    draw: function (r, t) {
      return Nh(this, r, t, e, !0);
    },
    getMarker: function (r) {
      var t = r.color;
      return { symbol: Dn[e] || e, style: { r: 4.5, stroke: t, fill: null } };
    },
  });
});
var oL = (function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'point'), (t.shapeType = 'point'), (t.generatePoints = !0), t;
  }
  return (
    (r.prototype.getDrawCfg = function (t) {
      var n = e.prototype.getDrawCfg.call(this, t);
      return x(x({}, n), { isStack: !!this.getAdjust('stack') });
    }),
    r
  );
})(an);
function sL(e) {
  for (var r = e[0], t = 1, n = [['M', r.x, r.y]]; t < e.length; ) {
    var i = e[t];
    (i.x !== e[t - 1].x || i.y !== e[t - 1].y) &&
      (n.push(['L', i.x, i.y]),
      i.x === r.x &&
        i.y === r.y &&
        t < e.length - 1 &&
        ((r = e[t + 1]), n.push(['Z']), n.push(['M', r.x, r.y]), t++)),
      t++;
  }
  return Dt(Ht(n), r) || n.push(['L', r.x, r.y]), n.push(['Z']), n;
}
nn('polygon', {
  defaultShapeType: 'polygon',
  getDefaultPoints: function (e) {
    var r = [];
    return (
      M(e.x, function (t, n) {
        var i = e.y[n];
        r.push({ x: t, y: i });
      }),
      r
    );
  },
});
gt('polygon', 'polygon', {
  draw: function (e, r) {
    if (!ye(e.points)) {
      var t = Nt(e, !0, !0),
        n = this.parsePath(sL(e.points));
      return r.addShape('path', { attrs: x(x({}, t), { path: n }), name: 'polygon' });
    }
  },
  getMarker: function (e) {
    var r = e.color;
    return { symbol: 'square', style: { r: 4, fill: r } };
  },
});
var lL = (function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'polygon'), (t.shapeType = 'polygon'), (t.generatePoints = !0), t;
  }
  return (
    (r.prototype.createShapePointsCfg = function (t) {
      var n = e.prototype.createShapePointsCfg.call(this, t),
        i = n.x,
        a = n.y,
        o;
      if (!(N(i) && N(a))) {
        var s = this.getXScale(),
          l = this.getYScale(),
          u = s.values.length,
          c = l.values.length,
          h = (0.5 * 1) / u,
          f = (0.5 * 1) / c;
        s.isCategory && l.isCategory
          ? ((i = [i - h, i - h, i + h, i + h]), (a = [a - f, a + f, a + f, a - f]))
          : N(i)
          ? ((o = i),
            (i = [o[0], o[0], o[1], o[1]]),
            (a = [a - f / 2, a + f / 2, a + f / 2, a - f / 2]))
          : N(a) &&
            ((o = a),
            (a = [o[0], o[1], o[1], o[0]]),
            (i = [i - h / 2, i - h / 2, i + h / 2, i + h / 2])),
          (n.x = i),
          (n.y = a);
      }
      return n;
    }),
    r
  );
})(an);
nn('schema', { defaultShapeType: '' });
var uL = (function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'schema'), (t.shapeType = 'schema'), (t.generatePoints = !0), t;
  }
  return (
    (r.prototype.createShapePointsCfg = function (t) {
      var n = e.prototype.createShapePointsCfg.call(this, t),
        i,
        a = this.getAttribute('size');
      if (a) {
        i = this.getAttributeValues(a, t)[0];
        var o = this.coordinate,
          s = Za(o);
        i = i / s;
      } else this.defaultSize || (this.defaultSize = $h(this)), (i = this.defaultSize);
      return (n.size = i), n;
    }),
    r
  );
})(an);
function cL(e) {
  if (!N(e)) return [];
  var r = Te(e);
  return kt(e, function (t) {
    return t / r;
  });
}
nn('violin', {
  defaultShapeType: 'violin',
  getDefaultPoints: function (e) {
    var r = e.size / 2,
      t = [],
      n = cL(e._size);
    return (
      M(e.y, function (i, a) {
        var o = n[a] * r,
          s = a === 0,
          l = a === e.y.length - 1;
        t.push({ isMin: s, isMax: l, x: e.x - o, y: i }),
          t.unshift({ isMin: s, isMax: l, x: e.x + o, y: i });
      }),
      t
    );
  },
});
gt('violin', 'violin', {
  draw: function (e, r) {
    var t = Nt(e, !0, !0),
      n = this.parsePath(o0(e.points));
    return r.addShape('path', { attrs: x(x({}, t), { path: n }), name: 'violin' });
  },
  getMarker: function (e) {
    var r = e.color;
    return { symbol: 'circle', style: { r: 4, fill: r } };
  },
});
var hL = (function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'violin'), (t.shapeType = 'violin'), (t.generatePoints = !0), t;
  }
  return (
    (r.prototype.createShapePointsCfg = function (t) {
      var n = e.prototype.createShapePointsCfg.call(this, t),
        i,
        a = this.getAttribute('size');
      if (a) {
        i = this.getAttributeValues(a, t)[0];
        var o = this.coordinate,
          s = Za(o);
        i = i / s;
      } else this.defaultSize || (this.defaultSize = $h(this)), (i = this.defaultSize);
      return (n.size = i), (n._size = A(t[Mt], [this._sizeField])), n;
    }),
    (r.prototype.initAttributes = function () {
      var t = this.attributeOption,
        n = t.size ? t.size.fields[0] : this._sizeField ? this._sizeField : 'size';
      (this._sizeField = n), delete t.size, e.prototype.initAttributes.call(this);
    }),
    r
  );
})(an);
gt('area', 'line', {
  draw: function (e, r) {
    var t = wl(e, !0, !1, this),
      n = r.addShape({ type: 'path', attrs: t, name: 'area' });
    return n;
  },
  getMarker: function (e) {
    var r = e.color;
    return {
      symbol: function (t, n, i) {
        return (
          i === void 0 && (i = 5.5),
          [
            ['M', t - i, n - 4],
            ['L', t + i, n - 4],
            ['L', t + i, n + 4],
            ['L', t - i, n + 4],
            ['Z'],
          ]
        );
      },
      style: { r: 5, stroke: r, fill: null },
    };
  },
});
gt('area', 'smooth', {
  draw: function (e, r) {
    var t = this.coordinate,
      n = wl(e, !1, !0, this, k0(t)),
      i = r.addShape({ type: 'path', attrs: n, name: 'area' });
    return i;
  },
  getMarker: function (e) {
    var r = e.color;
    return {
      symbol: function (t, n, i) {
        return (
          i === void 0 && (i = 5.5),
          [
            ['M', t - i, n - 4],
            ['L', t + i, n - 4],
            ['L', t + i, n + 4],
            ['L', t - i, n + 4],
            ['Z'],
          ]
        );
      },
      style: { r: 5, fill: r, fillOpacity: 1 },
    };
  },
});
gt('area', 'smooth-line', {
  draw: function (e, r) {
    var t = this.coordinate,
      n = wl(e, !0, !0, this, k0(t)),
      i = r.addShape({ type: 'path', attrs: n, name: 'area' });
    return i;
  },
  getMarker: function (e) {
    var r = e.color;
    return {
      symbol: function (t, n, i) {
        return (
          i === void 0 && (i = 5.5),
          [
            ['M', t - i, n - 4],
            ['L', t + i, n - 4],
            ['L', t + i, n + 4],
            ['L', t - i, n + 4],
            ['Z'],
          ]
        );
      },
      style: { r: 5, stroke: r, fill: null },
    };
  },
});
function xc(e, r) {
  return ['C', (e.x * 1) / 2 + (r.x * 1) / 2, e.y, (e.x * 1) / 2 + (r.x * 1) / 2, r.y, r.x, r.y];
}
function wc(e, r) {
  var t = [];
  t.push({ x: r.x, y: r.y }), t.push(e);
  var n = ['Q'];
  return (
    M(t, function (i) {
      n.push(i.x, i.y);
    }),
    n
  );
}
function fL(e, r, t) {
  var n = wc(r, t),
    i = [['M', e.x, e.y]];
  return i.push(n), i;
}
function vL(e, r) {
  var t = wc(e[1], r),
    n = wc(e[3], r),
    i = [['M', e[0].x, e[0].y]];
  return (
    i.push(n),
    i.push(['L', e[3].x, e[3].y]),
    i.push(['L', e[2].x, e[2].y]),
    i.push(t),
    i.push(['L', e[1].x, e[1].y]),
    i.push(['L', e[0].x, e[0].y]),
    i.push(['Z']),
    i
  );
}
gt('edge', 'arc', {
  draw: function (e, r) {
    var t = Nt(e, !0, !1, 'lineWidth'),
      n = e.points,
      i = n.length > 2 ? 'weight' : 'normal',
      a;
    if (e.isInCircle) {
      var o = { x: 0, y: 1 };
      return (
        i === 'normal' ? (a = fL(n[0], n[1], o)) : ((t.fill = t.stroke), (a = vL(n, o))),
        (a = this.parsePath(a)),
        r.addShape('path', { attrs: x(x({}, t), { path: a }) })
      );
    } else {
      if (i === 'normal')
        return (
          (n = this.parsePoints(n)),
          (a = wm(
            (n[1].x + n[0].x) / 2,
            n[0].y,
            Math.abs(n[1].x - n[0].x) / 2,
            Math.PI,
            Math.PI * 2,
          )),
          r.addShape('path', { attrs: x(x({}, t), { path: a }) })
        );
      var s = xc(n[1], n[3]),
        l = xc(n[2], n[0]);
      return (
        (a = [
          ['M', n[0].x, n[0].y],
          ['L', n[1].x, n[1].y],
          s,
          ['L', n[3].x, n[3].y],
          ['L', n[2].x, n[2].y],
          l,
          ['Z'],
        ]),
        (a = this.parsePath(a)),
        (t.fill = t.stroke),
        r.addShape('path', { attrs: x(x({}, t), { path: a }) })
      );
    }
  },
  getMarker: function (e) {
    return { symbol: 'circle', style: { r: 4.5, fill: e.color } };
  },
});
function dL(e, r) {
  var t = xc(e, r),
    n = [['M', e.x, e.y]];
  return n.push(t), n;
}
gt('edge', 'smooth', {
  draw: function (e, r) {
    var t = Nt(e, !0, !1, 'lineWidth'),
      n = e.points,
      i = this.parsePath(dL(n[0], n[1]));
    return r.addShape('path', { attrs: x(x({}, t), { path: i }) });
  },
  getMarker: function (e) {
    return { symbol: 'circle', style: { r: 4.5, fill: e.color } };
  },
});
var Io = 1 / 3;
function pL(e, r) {
  var t = [];
  t.push({ x: e.x, y: e.y * (1 - Io) + r.y * Io }),
    t.push({ x: r.x, y: e.y * (1 - Io) + r.y * Io }),
    t.push(r);
  var n = [['M', e.x, e.y]];
  return (
    M(t, function (i) {
      n.push(['L', i.x, i.y]);
    }),
    n
  );
}
gt('edge', 'vhv', {
  draw: function (e, r) {
    var t = Nt(e, !0, !1, 'lineWidth'),
      n = e.points,
      i = this.parsePath(pL(n[0], n[1]));
    return r.addShape('path', { attrs: x(x({}, t), { path: i }) });
  },
  getMarker: function (e) {
    return { symbol: 'circle', style: { r: 4.5, fill: e.color } };
  },
});
gt('interval', 'funnel', {
  getPoints: function (e) {
    return (e.size = e.size * 2), Bh(e);
  },
  draw: function (e, r) {
    var t = Nt(e, !1, !0),
      n = this.parsePath(P0(e.points, e.nextPoints, !1)),
      i = r.addShape('path', { attrs: x(x({}, t), { path: n }), name: 'interval' });
    return i;
  },
  getMarker: function (e) {
    var r = e.color;
    return { symbol: 'square', style: { r: 4, fill: r } };
  },
});
gt('interval', 'hollow-rect', {
  draw: function (e, r) {
    var t = Nt(e, !0, !1),
      n = r,
      i = e == null ? void 0 : e.background;
    if (i) {
      n = r.addGroup();
      var a = l0(e),
        o = L0(e, this.parsePoints(e.points), this.coordinate);
      n.addShape('path', { attrs: x(x({}, a), { path: o }), capture: !1, zIndex: -1, name: Ch });
    }
    var s = this.parsePath(Rh(e.points)),
      l = n.addShape('path', { attrs: x(x({}, t), { path: s }), name: 'interval' });
    return i ? n : l;
  },
  getMarker: function (e) {
    var r = e.color,
      t = e.isInPolar;
    return t
      ? { symbol: 'circle', style: { r: 4.5, stroke: r, fill: null } }
      : { symbol: 'square', style: { r: 4, stroke: r, fill: null } };
  },
});
function gL(e) {
  var r = e.x,
    t = e.y,
    n = e.y0;
  return N(t)
    ? t.map(function (i, a) {
        return { x: N(r) ? r[a] : r, y: i };
      })
    : [
        { x: r, y: n },
        { x: r, y: t },
      ];
}
gt('interval', 'line', {
  getPoints: function (e) {
    return gL(e);
  },
  draw: function (e, r) {
    var t = Nt(e, !0, !1, 'lineWidth'),
      n = ve(x({}, t), ['fill']),
      i = this.parsePath(Rh(e.points, !1)),
      a = r.addShape('path', { attrs: x(x({}, n), { path: i }), name: 'interval' });
    return a;
  },
  getMarker: function (e) {
    var r = e.color;
    return {
      symbol: function (t, n, i) {
        return [
          ['M', t, n - i],
          ['L', t, n + i],
        ];
      },
      style: { r: 5, stroke: r },
    };
  },
});
gt('interval', 'pyramid', {
  getPoints: function (e) {
    return (e.size = e.size * 2), Bh(e);
  },
  draw: function (e, r) {
    var t = Nt(e, !1, !0),
      n = this.parsePath(P0(e.points, e.nextPoints, !0)),
      i = r.addShape('path', { attrs: x(x({}, t), { path: n }), name: 'interval' });
    return i;
  },
  getMarker: function (e) {
    var r = e.color;
    return { symbol: 'square', style: { r: 4, fill: r } };
  },
});
function yL(e) {
  var r,
    t = e.x,
    n = e.y,
    i = e.y0,
    a = e.size,
    o,
    s;
  N(n) ? ((r = q(n, 2)), (o = r[0]), (s = r[1])) : ((o = i), (s = n));
  var l = t + a / 2,
    u = t - a / 2;
  return [
    { x: t, y: o },
    { x: t, y: s },
    { x: u, y: o },
    { x: l, y: o },
    { x: u, y: s },
    { x: l, y: s },
  ];
}
function mL(e) {
  return [
    ['M', e[0].x, e[0].y],
    ['L', e[1].x, e[1].y],
    ['M', e[2].x, e[2].y],
    ['L', e[3].x, e[3].y],
    ['M', e[4].x, e[4].y],
    ['L', e[5].x, e[5].y],
  ];
}
gt('interval', 'tick', {
  getPoints: function (e) {
    return yL(e);
  },
  draw: function (e, r) {
    var t = Nt(e, !0, !1),
      n = this.parsePath(mL(e.points)),
      i = r.addShape('path', { attrs: x(x({}, t), { path: n }), name: 'interval' });
    return i;
  },
  getMarker: function (e) {
    var r = e.color;
    return {
      symbol: function (t, n, i) {
        return [
          ['M', t - i / 2, n - i],
          ['L', t + i / 2, n - i],
          ['M', t, n - i],
          ['L', t, n + i],
          ['M', t - i / 2, n + i],
          ['L', t + i / 2, n + i],
        ];
      },
      style: { r: 5, stroke: r },
    };
  },
});
var xL = function (e, r, t) {
  var n = e.x,
    i = e.y,
    a = r.x,
    o = r.y,
    s;
  switch (t) {
    case 'hv':
      s = [{ x: a, y: i }];
      break;
    case 'vh':
      s = [{ x: n, y: o }];
      break;
    case 'hvh':
      var l = (a + n) / 2;
      s = [
        { x: l, y: i },
        { x: l, y: o },
      ];
      break;
    case 'vhv':
      var u = (i + o) / 2;
      s = [
        { x: n, y: u },
        { x: a, y: u },
      ];
      break;
  }
  return s;
};
function wL(e, r) {
  var t = [];
  return (
    M(e, function (n, i) {
      var a = e[i + 1];
      if ((t.push(n), a)) {
        var o = xL(n, a, r);
        t = t.concat(o);
      }
    }),
    t
  );
}
function bL(e) {
  return e.map(function (r, t) {
    return t === 0 ? ['M', r.x, r.y] : ['L', r.x, r.y];
  });
}
function SL(e, r) {
  var t = xl(e.points, e.connectNulls, e.showSinglePoint),
    n = [];
  return (
    M(t, function (i) {
      var a = wL(i, r);
      n = n.concat(bL(a));
    }),
    x(x({}, Nt(e, !0, !1, 'lineWidth')), { path: n })
  );
}
M(['hv', 'vh', 'hvh', 'vhv'], function (e) {
  gt('line', e, {
    draw: function (r, t) {
      var n = SL(r, e),
        i = t.addShape({ type: 'path', attrs: n, name: 'line' });
      return i;
    },
    getMarker: function (r) {
      return u0(r, e);
    },
  });
});
M(aL, function (e) {
  gt('point', e, {
    draw: function (r, t) {
      return Nh(this, r, t, e, !0);
    },
    getMarker: function (r) {
      var t = r.color;
      return { symbol: Dn[e], style: { r: 4.5, stroke: t, fill: null } };
    },
  });
});
gt('point', 'image', {
  draw: function (e, r) {
    var t,
      n,
      i = Nt(e, !1, !1, 'r').r,
      a = this.parsePoints(e.points),
      o = a[0];
    if (e.isStack) o = a[1];
    else if (a.length > 1) {
      var s = r.addGroup();
      try {
        for (var l = pt(a), u = l.next(); !u.done; u = l.next()) {
          var c = u.value;
          s.addShape('image', {
            attrs: { x: c.x - i / 2, y: c.y - i, width: i, height: i, img: e.shape[1] },
          });
        }
      } catch (h) {
        t = { error: h };
      } finally {
        try {
          u && !u.done && (n = l.return) && n.call(l);
        } finally {
          if (t) throw t.error;
        }
      }
      return s;
    }
    return r.addShape('image', {
      attrs: { x: o.x - i / 2, y: o.y - i, width: i, height: i, img: e.shape[1] },
    });
  },
  getMarker: function (e) {
    var r = e.color;
    return { symbol: 'circle', style: { r: 4.5, fill: r } };
  },
});
M(O0, function (e) {
  gt('point', e, {
    draw: function (r, t) {
      return Nh(this, r, t, e, !1);
    },
    getMarker: function (r) {
      var t = r.color;
      return { symbol: Dn[e] || e, style: { r: 4.5, fill: t } };
    },
  });
});
function Yd(e) {
  var r = N(e) ? e : [e],
    t = r[0],
    n = r[r.length - 1],
    i = r.length > 1 ? r[1] : t,
    a = r.length > 3 ? r[3] : n,
    o = r.length > 2 ? r[2] : i;
  return { min: t, max: n, min1: i, max1: a, median: o };
}
function Wd(e, r, t) {
  var n = t / 2,
    i;
  if (N(r)) {
    var a = Yd(r),
      o = a.min,
      s = a.max,
      l = a.median,
      u = a.min1,
      c = a.max1,
      h = e - n,
      f = e + n;
    i = [
      [h, s],
      [f, s],
      [e, s],
      [e, c],
      [h, u],
      [h, c],
      [f, c],
      [f, u],
      [e, u],
      [e, o],
      [h, o],
      [f, o],
      [h, l],
      [f, l],
    ];
  } else {
    r = $(r) ? 0.5 : r;
    var v = Yd(e),
      o = v.min,
      s = v.max,
      l = v.median,
      u = v.min1,
      c = v.max1,
      d = r - n,
      p = r + n;
    i = [
      [o, d],
      [o, p],
      [o, r],
      [u, r],
      [u, d],
      [u, p],
      [c, p],
      [c, d],
      [c, r],
      [s, r],
      [s, d],
      [s, p],
      [l, d],
      [l, p],
    ];
  }
  return i.map(function (g) {
    return { x: g[0], y: g[1] };
  });
}
function CL(e) {
  return [
    ['M', e[0].x, e[0].y],
    ['L', e[1].x, e[1].y],
    ['M', e[2].x, e[2].y],
    ['L', e[3].x, e[3].y],
    ['M', e[4].x, e[4].y],
    ['L', e[5].x, e[5].y],
    ['L', e[6].x, e[6].y],
    ['L', e[7].x, e[7].y],
    ['L', e[4].x, e[4].y],
    ['Z'],
    ['M', e[8].x, e[8].y],
    ['L', e[9].x, e[9].y],
    ['M', e[10].x, e[10].y],
    ['L', e[11].x, e[11].y],
    ['M', e[12].x, e[12].y],
    ['L', e[13].x, e[13].y],
  ];
}
gt('schema', 'box', {
  getPoints: function (e) {
    var r = e.x,
      t = e.y,
      n = e.size;
    return Wd(r, t, n);
  },
  draw: function (e, r) {
    var t = Nt(e, !0, !1),
      n = this.parsePath(CL(e.points)),
      i = r.addShape('path', { attrs: x(x({}, t), { path: n, name: 'schema' }) });
    return i;
  },
  getMarker: function (e) {
    var r = e.color;
    return {
      symbol: function (t, n, i) {
        var a = [n - 6, n - 3, n, n + 3, n + 6],
          o = Wd(t, a, i);
        return [
          ['M', o[0].x + 1, o[0].y],
          ['L', o[1].x - 1, o[1].y],
          ['M', o[2].x, o[2].y],
          ['L', o[3].x, o[3].y],
          ['M', o[4].x, o[4].y],
          ['L', o[5].x, o[5].y],
          ['L', o[6].x, o[6].y],
          ['L', o[7].x, o[7].y],
          ['L', o[4].x, o[4].y],
          ['Z'],
          ['M', o[8].x, o[8].y],
          ['L', o[9].x, o[9].y],
          ['M', o[10].x + 1, o[10].y],
          ['L', o[11].x - 1, o[11].y],
          ['M', o[12].x, o[12].y],
          ['L', o[13].x, o[13].y],
        ];
      },
      style: { r: 6, lineWidth: 1, stroke: r },
    };
  },
});
function ML(e) {
  var r = N(e) ? e : [e],
    t = r.sort(function (n, i) {
      return i - n;
    });
  return iT(t, 4, t[t.length - 1]);
}
function Xd(e, r, t) {
  var n = ML(r);
  return [
    { x: e, y: n[0] },
    { x: e, y: n[1] },
    { x: e - t / 2, y: n[2] },
    { x: e - t / 2, y: n[1] },
    { x: e + t / 2, y: n[1] },
    { x: e + t / 2, y: n[2] },
    { x: e, y: n[2] },
    { x: e, y: n[3] },
  ];
}
function AL(e) {
  return [
    ['M', e[0].x, e[0].y],
    ['L', e[1].x, e[1].y],
    ['M', e[2].x, e[2].y],
    ['L', e[3].x, e[3].y],
    ['L', e[4].x, e[4].y],
    ['L', e[5].x, e[5].y],
    ['Z'],
    ['M', e[6].x, e[6].y],
    ['L', e[7].x, e[7].y],
  ];
}
gt('schema', 'candle', {
  getPoints: function (e) {
    var r = e.x,
      t = e.y,
      n = e.size;
    return Xd(r, t, n);
  },
  draw: function (e, r) {
    var t = Nt(e, !0, !0),
      n = this.parsePath(AL(e.points)),
      i = r.addShape('path', { attrs: x(x({}, t), { path: n, name: 'schema' }) });
    return i;
  },
  getMarker: function (e) {
    var r = e.color;
    return {
      symbol: function (t, n, i) {
        var a = [n + 7.5, n + 3, n - 3, n - 7.5],
          o = Xd(t, a, i);
        return [
          ['M', o[0].x, o[0].y],
          ['L', o[1].x, o[1].y],
          ['M', o[2].x, o[2].y],
          ['L', o[3].x, o[3].y],
          ['L', o[4].x, o[4].y],
          ['L', o[5].x, o[5].y],
          ['Z'],
          ['M', o[6].x, o[6].y],
          ['L', o[7].x, o[7].y],
        ];
      },
      style: { lineWidth: 1, stroke: r, fill: r, r: 6 },
    };
  },
});
function FL(e, r) {
  var t = Math.abs(e[0].x - e[2].x),
    n = Math.abs(e[0].y - e[2].y),
    i = Math.min(t, n);
  r && (i = Tt(r, 0, Math.min(t, n))), (i = i / 2);
  var a = (e[0].x + e[2].x) / 2,
    o = (e[0].y + e[2].y) / 2;
  return { x: a - i, y: o - i, width: i * 2, height: i * 2 };
}
gt('polygon', 'square', {
  draw: function (e, r) {
    if (!ye(e.points)) {
      var t = Nt(e, !0, !0),
        n = this.parsePoints(e.points);
      return r.addShape('rect', { attrs: x(x({}, t), FL(n, e.size)), name: 'polygon' });
    }
  },
  getMarker: function (e) {
    var r = e.color;
    return { symbol: 'square', style: { r: 4, fill: r } };
  },
});
gt('violin', 'smooth', {
  draw: function (e, r) {
    var t = Nt(e, !0, !0),
      n = this.parsePath(s0(e.points));
    return r.addShape('path', { attrs: x(x({}, t), { path: n }) });
  },
  getMarker: function (e) {
    var r = e.color;
    return { symbol: 'circle', style: { stroke: null, r: 4, fill: r } };
  },
});
gt('violin', 'hollow', {
  draw: function (e, r) {
    var t = Nt(e, !0, !1),
      n = this.parsePath(o0(e.points));
    return r.addShape('path', { attrs: x(x({}, t), { path: n }) });
  },
  getMarker: function (e) {
    var r = e.color;
    return { symbol: 'circle', style: { r: 4, fill: null, stroke: r } };
  },
});
gt('violin', 'hollow-smooth', {
  draw: function (e, r) {
    var t = Nt(e, !0, !1),
      n = this.parsePath(s0(e.points));
    return r.addShape('path', { attrs: x(x({}, t), { path: n }) });
  },
  getMarker: function (e) {
    var r = e.color;
    return { symbol: 'circle', style: { r: 4, fill: null, stroke: r } };
  },
});
var EL = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getLabelValueDir = function (t) {
        var n = 'y',
          i = t.points;
        return i[0][n] <= i[2][n] ? 1 : -1;
      }),
      (r.prototype.getLabelOffsetPoint = function (t, n, i, a) {
        var o,
          s = e.prototype.getLabelOffsetPoint.call(this, t, n, i),
          l = this.getCoordinate(),
          u = l.isTransposed,
          c = u ? 'x' : 'y',
          h = this.getLabelValueDir(t.mappingData);
        return (
          (s = x(x({}, s), ((o = {}), (o[c] = s[c] * h), o))),
          l.isReflect('x') && (s = x(x({}, s), { x: s.x * -1 })),
          l.isReflect('y') && (s = x(x({}, s), { y: s.y * -1 })),
          s
        );
      }),
      (r.prototype.getThemedLabelCfg = function (t) {
        var n = this.geometry,
          i = this.getDefaultLabelCfg(),
          a = n.theme;
        return _({}, i, a.labels, t.position === 'middle' ? { offset: 0 } : {}, t);
      }),
      (r.prototype.setLabelPosition = function (t, n, i, a) {
        var o = this.getCoordinate(),
          s = o.isTransposed,
          l = n.points,
          u = o.convert(l[0]),
          c = o.convert(l[2]),
          h = this.getLabelValueDir(n),
          f,
          v,
          d,
          p,
          g = N(n.shape) ? n.shape[0] : n.shape;
        if (g === 'funnel' || g === 'pyramid') {
          var y = A(n, 'nextPoints'),
            m = A(n, 'points');
          if (y) {
            var b = o.convert(m[0]),
              w = o.convert(m[1]),
              S = o.convert(y[0]),
              C = o.convert(y[1]);
            s
              ? ((f = Math.min(S.y, b.y)),
                (d = Math.max(S.y, b.y)),
                (v = (w.x + C.x) / 2),
                (p = (b.x + S.x) / 2))
              : ((f = Math.min((w.y + C.y) / 2, (b.y + S.y) / 2)),
                (d = Math.max((w.y + C.y) / 2, (b.y + S.y) / 2)),
                (v = C.x),
                (p = b.x));
          } else (f = Math.min(c.y, u.y)), (d = Math.max(c.y, u.y)), (v = c.x), (p = u.x);
        } else (f = Math.min(c.y, u.y)), (d = Math.max(c.y, u.y)), (v = c.x), (p = u.x);
        switch (a) {
          case 'right':
            (t.x = v),
              (t.y = (f + d) / 2),
              (t.textAlign = A(t, 'textAlign', h > 0 ? 'left' : 'right'));
            break;
          case 'left':
            (t.x = p),
              (t.y = (f + d) / 2),
              (t.textAlign = A(t, 'textAlign', h > 0 ? 'left' : 'right'));
            break;
          case 'bottom':
            s && (t.x = (v + p) / 2),
              (t.y = d),
              (t.textAlign = A(t, 'textAlign', 'center')),
              (t.textBaseline = A(t, 'textBaseline', h > 0 ? 'bottom' : 'top'));
            break;
          case 'middle':
            s && (t.x = (v + p) / 2),
              (t.y = (f + d) / 2),
              (t.textAlign = A(t, 'textAlign', 'center')),
              (t.textBaseline = A(t, 'textBaseline', 'middle'));
            break;
          case 'top':
            s && (t.x = (v + p) / 2),
              (t.y = f),
              (t.textAlign = A(t, 'textAlign', 'center')),
              (t.textBaseline = A(t, 'textBaseline', h > 0 ? 'bottom' : 'top'));
            break;
        }
      }),
      r
    );
  })(ml),
  Lo = Math.PI / 2,
  D0 = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getLabelOffset = function (t) {
        var n = this.getCoordinate(),
          i = 0;
        if (at(t)) i = t;
        else if (et(t) && t.indexOf('%') !== -1) {
          var a = n.getRadius();
          n.innerRadius > 0 && (a = a * (1 - n.innerRadius)), (i = parseFloat(t) * 0.01 * a);
        }
        return i;
      }),
      (r.prototype.getLabelItems = function (t) {
        var n = e.prototype.getLabelItems.call(this, t),
          i = this.geometry.getYScale();
        return kt(n, function (a) {
          if (a && i) {
            var o = i.scale(A(a.data, i.field));
            return x(x({}, a), { percent: o });
          }
          return a;
        });
      }),
      (r.prototype.getLabelAlign = function (t) {
        var n = this.getCoordinate(),
          i;
        if (t.labelEmit) i = t.angle <= Math.PI / 2 && t.angle >= -Math.PI / 2 ? 'left' : 'right';
        else if (!n.isTransposed) i = 'center';
        else {
          var a = n.getCenter(),
            o = t.offset;
          Math.abs(t.x - a.x) < 1
            ? (i = 'center')
            : t.angle > Math.PI || t.angle <= 0
            ? (i = o > 0 ? 'left' : 'right')
            : (i = o > 0 ? 'right' : 'left');
        }
        return i;
      }),
      (r.prototype.getLabelPoint = function (t, n, i) {
        var a = 1,
          o,
          s = t.content[i];
        this.isToMiddle(n)
          ? (o = this.getMiddlePoint(n.points))
          : (t.content.length === 1 && i === 0 ? (i = 1) : i === 0 && (a = -1),
            (o = this.getArcPoint(n, i)));
        var l = t.offset * a,
          u = this.getPointAngle(o),
          c = t.labelEmit,
          h = this.getCirclePoint(u, l, o, c);
        return (
          h.r === 0 ? (h.content = '') : ((h.content = s), (h.angle = u), (h.color = n.color)),
          (h.rotate = t.autoRotate ? this.getLabelRotate(u, l, c) : t.rotate),
          (h.start = { x: o.x, y: o.y }),
          h
        );
      }),
      (r.prototype.getArcPoint = function (t, n) {
        return (
          n === void 0 && (n = 0),
          !N(t.x) && !N(t.y)
            ? { x: t.x, y: t.y }
            : { x: N(t.x) ? t.x[n] : t.x, y: N(t.y) ? t.y[n] : t.y }
        );
      }),
      (r.prototype.getPointAngle = function (t) {
        return vi(this.getCoordinate(), t);
      }),
      (r.prototype.getCirclePoint = function (t, n, i, a) {
        var o = this.getCoordinate(),
          s = o.getCenter(),
          l = vl(o, i);
        if (l === 0) return x(x({}, s), { r: l });
        var u = t;
        if (o.isTransposed && l > n && !a) {
          var c = Math.asin(n / (2 * l));
          u = t + c * 2;
        } else l = l + n;
        return { x: s.x + l * Math.cos(u), y: s.y + l * Math.sin(u), r: l };
      }),
      (r.prototype.getLabelRotate = function (t, n, i) {
        var a = t + Lo;
        return i && (a -= Lo), a && (a > Lo ? (a = a - Math.PI) : a < -Lo && (a = a + Math.PI)), a;
      }),
      (r.prototype.getMiddlePoint = function (t) {
        var n = this.getCoordinate(),
          i = t.length,
          a = { x: 0, y: 0 };
        return (
          M(t, function (o) {
            (a.x += o.x), (a.y += o.y);
          }),
          (a.x /= i),
          (a.y /= i),
          (a = n.convert(a)),
          a
        );
      }),
      (r.prototype.isToMiddle = function (t) {
        return t.x.length > 2;
      }),
      r
    );
  })(ml),
  TL = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.defaultLayout = 'distribute'), t;
    }
    return (
      (r.prototype.getDefaultLabelCfg = function (t, n) {
        var i = e.prototype.getDefaultLabelCfg.call(this, t, n);
        return _({}, i, A(this.geometry.theme, 'pieLabels', {}));
      }),
      (r.prototype.getLabelOffset = function (t) {
        return e.prototype.getLabelOffset.call(this, t) || 0;
      }),
      (r.prototype.getLabelRotate = function (t, n, i) {
        var a;
        return (
          n < 0 &&
            ((a = t), a > Math.PI / 2 && (a = a - Math.PI), a < -Math.PI / 2 && (a = a + Math.PI)),
          a
        );
      }),
      (r.prototype.getLabelAlign = function (t) {
        var n = this.getCoordinate(),
          i = n.getCenter(),
          a;
        return (
          t.angle <= Math.PI / 2 && t.x >= i.x ? (a = 'left') : (a = 'right'),
          t.offset <= 0 && (a === 'right' ? (a = 'left') : (a = 'right')),
          a
        );
      }),
      (r.prototype.getArcPoint = function (t) {
        return t;
      }),
      (r.prototype.getPointAngle = function (t) {
        var n = this.getCoordinate(),
          i = { x: N(t.x) ? t.x[0] : t.x, y: t.y[0] },
          a = { x: N(t.x) ? t.x[1] : t.x, y: t.y[1] },
          o,
          s = vi(n, i);
        if (t.points && t.points[0].y === t.points[1].y) o = s;
        else {
          var l = vi(n, a);
          s >= l && (l = l + Math.PI * 2), (o = s + (l - s) / 2);
        }
        return o;
      }),
      (r.prototype.getCirclePoint = function (t, n) {
        var i = this.getCoordinate(),
          a = i.getCenter(),
          o = i.getRadius() + n;
        return x(x({}, zt(a.x, a.y, o, t)), { angle: t, r: o });
      }),
      r
    );
  })(D0),
  _d = 4;
function kL(e, r, t, n, i, a) {
  var o,
    s,
    l = !0,
    u = n.start,
    c = n.end,
    h = Math.min(u.y, c.y),
    f = Math.abs(u.y - c.y),
    v,
    d = 0,
    p = Number.MIN_VALUE,
    g = r.map(function (F) {
      return F.y > d && (d = F.y), F.y < p && (p = F.y), { size: t, targets: [F.y - h] };
    });
  for (p -= h, d - h > f && (f = d - h); l; )
    for (
      g.forEach(function (F) {
        var E = (Math.min.apply(p, F.targets) + Math.max.apply(p, F.targets)) / 2;
        F.pos = Math.min(Math.max(p, E - F.size / 2), f - F.size);
      }),
        l = !1,
        v = g.length;
      v--;

    )
      if (v > 0) {
        var y = g[v - 1],
          m = g[v];
        y.pos + y.size > m.pos &&
          ((y.size += m.size),
          (y.targets = y.targets.concat(m.targets)),
          y.pos + y.size > f && (y.pos = f - y.size),
          g.splice(v, 1),
          (l = !0));
      }
  (v = 0),
    g.forEach(function (F) {
      var E = h + t / 2;
      F.targets.forEach(function () {
        (r[v].y = F.pos + E), (E += t), v++;
      });
    });
  var b = {};
  try {
    for (var w = pt(e), S = w.next(); !S.done; S = w.next()) {
      var C = S.value;
      b[C.get('id')] = C;
    }
  } catch (F) {
    o = { error: F };
  } finally {
    try {
      S && !S.done && (s = w.return) && s.call(w);
    } finally {
      if (o) throw o.error;
    }
  }
  r.forEach(function (F) {
    var E = F.r * F.r,
      I = Math.pow(Math.abs(F.y - i.y), 2);
    if (E < I) F.x = i.x;
    else {
      var T = Math.sqrt(E - I);
      a ? (F.x = i.x + T) : (F.x = i.x - T);
    }
    var P = b[F.id];
    P.attr('x', F.x), P.attr('y', F.y);
    var R = Xe(P.getChildren(), function (B) {
      return B.get('type') === 'text';
    });
    R && (R.attr('y', F.y), R.attr('x', F.x));
  });
}
function IL(e, r, t, n) {
  if (!(!e.length || !r.length)) {
    var i = e[0] ? e[0].offset : 0,
      a = r[0].get('coordinate'),
      o = a.getRadius(),
      s = a.getCenter();
    if (i > 0) {
      var l = 14,
        u = o + i,
        c = u * 2 + l * 2,
        h = { start: a.start, end: a.end },
        f = [[], []];
      e.forEach(function (v) {
        v && (v.textAlign === 'right' ? f[0].push(v) : f[1].push(v));
      }),
        f.forEach(function (v, d) {
          var p = c / l;
          v.length > p &&
            (v.sort(function (g, y) {
              return y['..percent'] - g['..percent'];
            }),
            v.splice(p, v.length - p)),
            v.sort(function (g, y) {
              return g.y - y.y;
            }),
            kL(r, v, l, h, s, d);
        });
    }
    M(e, function (v) {
      if (v && v.labelLine) {
        var d = v.offset,
          p = v.angle,
          g = zt(s.x, s.y, o, p),
          y = zt(s.x, s.y, o + d / 2, p),
          m = v.x + A(v, 'offsetX', 0),
          b = v.y + A(v, 'offsetY', 0),
          w = { x: m - Math.cos(p) * _d, y: b - Math.sin(p) * _d };
        xt(v.labelLine) || (v.labelLine = {}),
          (v.labelLine.path = [
            'M '.concat(g.x),
            ''.concat(g.y, ' Q').concat(y.x),
            ''.concat(y.y, ' ').concat(w.x),
            w.y,
          ].join(','));
      }
    });
  }
}
function B0(e, r, t) {
  var n = e.filter(function (d) {
    return !d.invisible;
  });
  n.sort(function (d, p) {
    return d.y - p.y;
  });
  var i = !0,
    a = t.minY,
    o = t.maxY,
    s = Math.abs(a - o),
    l,
    u = 0,
    c = Number.MIN_VALUE,
    h = n.map(function (d) {
      return (
        d.y > u && (u = d.y),
        d.y < c && (c = d.y),
        { content: d.content, size: r, targets: [d.y - a], pos: null }
      );
    });
  for (c -= a, u - a > s && (s = u - a); i; )
    for (
      h.forEach(function (d) {
        var p = (Math.min.apply(c, d.targets) + Math.max.apply(c, d.targets)) / 2;
        (d.pos = Math.min(Math.max(c, p - d.size / 2), s - d.size)), (d.pos = Math.max(0, d.pos));
      }),
        i = !1,
        l = h.length;
      l--;

    )
      if (l > 0) {
        var f = h[l - 1],
          v = h[l];
        f.pos + f.size > v.pos &&
          ((f.size += v.size),
          (f.targets = f.targets.concat(v.targets)),
          f.pos + f.size > s && (f.pos = s - f.size),
          h.splice(l, 1),
          (i = !0));
      }
  (l = 0),
    h.forEach(function (d) {
      var p = a + r / 2;
      d.targets.forEach(function () {
        (n[l].y = d.pos + p), (p += r), l++;
      });
    });
}
var jd = 4;
function LL(e, r) {
  var t = r.getCenter(),
    n = r.getRadius();
  if (e && e.labelLine) {
    var i = e.angle,
      a = e.offset,
      o = zt(t.x, t.y, n, i),
      s = e.x + A(e, 'offsetX', 0) * (Math.cos(i) > 0 ? 1 : -1),
      l = e.y + A(e, 'offsetY', 0) * (Math.sin(i) > 0 ? 1 : -1),
      u = { x: s - Math.cos(i) * jd, y: l - Math.sin(i) * jd },
      c = e.labelLine.smooth,
      h = [],
      f = u.x - t.x,
      v = u.y - t.y,
      d = Math.atan(v / f);
    if ((f < 0 && (d += Math.PI), c === !1)) {
      xt(e.labelLine) || (e.labelLine = {});
      var p = 0;
      ((i < 0 && i > -Math.PI / 2) || i > Math.PI * 1.5) && u.y > o.y && (p = 1),
        i >= 0 && i < Math.PI / 2 && u.y > o.y && (p = 1),
        i >= Math.PI / 2 && i < Math.PI && o.y > u.y && (p = 1),
        (i < -Math.PI / 2 || (i >= Math.PI && i < Math.PI * 1.5)) && o.y > u.y && (p = 1);
      var g = a / 2 > 4 ? 4 : Math.max(a / 2 - 1, 0),
        y = zt(t.x, t.y, n + g, i),
        m = zt(t.x, t.y, n + a / 2, d),
        b = 0;
      h.push('M '.concat(o.x, ' ').concat(o.y)),
        h.push('L '.concat(y.x, ' ').concat(y.y)),
        h.push(
          'A '
            .concat(t.x, ' ')
            .concat(t.y, ' 0 ')
            .concat(b, ' ')
            .concat(p, ' ')
            .concat(m.x, ' ')
            .concat(m.y),
        ),
        h.push('L '.concat(u.x, ' ').concat(u.y));
    } else {
      var y = zt(t.x, t.y, n + (a / 2 > 4 ? 4 : Math.max(a / 2 - 1, 0)), i),
        w = o.x < t.x ? 1 : -1;
      h.push('M '.concat(u.x, ' ').concat(u.y));
      var S = (o.y - t.y) / (o.x - t.x),
        C = (u.y - t.y) / (u.x - t.x);
      Math.abs(S - C) > Math.pow(Math.E, -16) &&
        h.push.apply(h, ['C', u.x + w * 4, u.y, 2 * y.x - o.x, 2 * y.y - o.y, o.x, o.y]),
        h.push('L '.concat(o.x, ' ').concat(o.y));
    }
    e.labelLine.path = h.join(' ');
  }
}
function PL(e, r, t, n) {
  var i,
    a,
    o = Jt(e, function (E) {
      return !$(E);
    }),
    s = r[0] && r[0].get('coordinate');
  if (s) {
    var l = s.getCenter(),
      u = s.getRadius(),
      c = {};
    try {
      for (var h = pt(r), f = h.next(); !f.done; f = h.next()) {
        var v = f.value;
        c[v.get('id')] = v;
      }
    } catch (E) {
      i = { error: E };
    } finally {
      try {
        f && !f.done && (a = h.return) && a.call(h);
      } finally {
        if (i) throw i.error;
      }
    }
    var d = A(o[0], 'labelHeight', 14),
      p = A(o[0], 'offset', 0);
    if (!(p <= 0)) {
      var g = 'left',
        y = 'right',
        m = Ae(o, function (E) {
          return E.x < l.x ? g : y;
        }),
        b = s.start,
        w = s.end,
        S = Math.min((u + p + d) * 2, s.getHeight()),
        C = S / 2,
        F = { minX: b.x, maxX: w.x, minY: l.y - C, maxY: l.y + C };
      M(m, function (E, I) {
        var T = Math.floor(S / d);
        E.length > T &&
          (E.sort(function (P, R) {
            return R.percent - P.percent;
          }),
          M(E, function (P, R) {
            R + 1 > T && (c[P.id].set('visible', !1), (P.invisible = !0));
          })),
          B0(E, d, F);
      }),
        M(m, function (E, I) {
          M(E, function (T) {
            var P = I === y,
              R = c[T.id],
              B = R.getChildByIndex(0);
            if (B) {
              var G = u + p,
                j = T.y - l.y,
                D = Math.pow(G, 2),
                z = Math.pow(j, 2),
                X = D - z > 0 ? D - z : 0,
                Y = Math.sqrt(X),
                V = Math.abs(Math.cos(T.angle) * G);
              P ? (T.x = l.x + Math.max(Y, V)) : (T.x = l.x - Math.max(Y, V));
            }
            B && (B.attr('y', T.y), B.attr('x', T.x)), LL(T, s);
          });
        });
    }
  }
}
var bc = 4,
  OL = 4,
  Ud = 4;
function DL(e, r, t) {
  var n = r.getCenter(),
    i = r.getRadius(),
    a = { x: e.x - (t ? Ud : -Ud), y: e.y },
    o = zt(n.x, n.y, i + bc, e.angle),
    s = { x: a.x, y: a.y },
    l = { x: o.x, y: o.y },
    u = zt(n.x, n.y, i, e.angle),
    c = '';
  if (a.y !== o.y) {
    var h = t ? 4 : -4;
    (s.y = a.y),
      e.angle < 0 &&
        e.angle >= -Math.PI / 2 &&
        ((s.x = Math.max(o.x, a.x - h)),
        a.y < o.y ? (l.y = s.y) : ((l.y = o.y), (l.x = Math.max(l.x, s.x - h)))),
      e.angle > 0 &&
        e.angle < Math.PI / 2 &&
        ((s.x = Math.max(o.x, a.x - h)),
        a.y > o.y ? (l.y = s.y) : ((l.y = o.y), (l.x = Math.max(l.x, s.x - h)))),
      e.angle > Math.PI / 2 &&
        ((s.x = Math.min(o.x, a.x - h)),
        a.y > o.y ? (l.y = s.y) : ((l.y = o.y), (l.x = Math.min(l.x, s.x - h)))),
      e.angle < -Math.PI / 2 &&
        ((s.x = Math.min(o.x, a.x - h)),
        a.y < o.y ? (l.y = s.y) : ((l.y = o.y), (l.x = Math.min(l.x, s.x - h))));
  }
  (c = [
    'M '.concat(a.x, ',').concat(a.y),
    'L '.concat(s.x, ',').concat(s.y),
    'L '.concat(l.x, ',').concat(l.y),
    'L '.concat(o.x, ',').concat(o.y),
    'L '.concat(u.x, ',').concat(u.y),
  ].join(' ')),
    (e.labelLine = _({}, e.labelLine, { path: c }));
}
function BL(e, r, t, n) {
  var i,
    a,
    o = r[0] && r[0].get('coordinate');
  if (o) {
    var s = o.getCenter(),
      l = o.getRadius(),
      u = {};
    try {
      for (var c = pt(r), h = c.next(); !h.done; h = c.next()) {
        var f = h.value;
        u[f.get('id')] = f;
      }
    } catch (E) {
      i = { error: E };
    } finally {
      try {
        h && !h.done && (a = c.return) && a.call(c);
      } finally {
        if (i) throw i.error;
      }
    }
    var v = A(e[0], 'labelHeight', 14),
      d = Math.max(A(e[0], 'offset', 0), bc);
    M(e, function (E) {
      if (E) {
        var I = A(u, [E.id]);
        if (I) {
          var T = E.x > s.x || (E.x === s.x && E.y > s.y),
            P = $(E.offsetX) ? OL : E.offsetX,
            R = zt(s.x, s.y, l + bc, E.angle),
            B = d + P;
          (E.x = s.x + (T ? 1 : -1) * (l + B)), (E.y = R.y);
        }
      }
    });
    var p = o.start,
      g = o.end,
      y = 'left',
      m = 'right',
      b = Ae(e, function (E) {
        return E.x < s.x ? y : m;
      }),
      w = (l + d) * 2 + v;
    M(b, function (E) {
      var I = E.length * v;
      I > w && (w = Math.min(I, Math.abs(p.y - g.y)));
    });
    var S = { minX: p.x, maxX: g.x, minY: s.y - w / 2, maxY: s.y + w / 2 };
    M(b, function (E, I) {
      var T = w / v;
      E.length > T &&
        (E.sort(function (P, R) {
          return R.percent - P.percent;
        }),
        M(E, function (P, R) {
          R > T && (u[P.id].set('visible', !1), (P.invisible = !0));
        })),
        B0(E, v, S);
    });
    var C = S.minY,
      F = S.maxY;
    M(b, function (E, I) {
      var T = I === m;
      M(E, function (P) {
        var R = A(u, P && [P.id]);
        if (R) {
          if (P.y < C || P.y > F) {
            R.set('visible', !1);
            return;
          }
          var B = R.getChildByIndex(0),
            G = B.getCanvasBBox(),
            j = { x: T ? G.x : G.maxX, y: G.y + G.height / 2 };
          Ja(B, P.x - j.x, P.y - j.y), P.labelLine && DL(P, o, T);
        }
      });
    });
  }
}
function RL(e, r, t, n) {
  M(r, function (i) {
    var a = n.minX,
      o = n.minY,
      s = n.maxX,
      l = n.maxY,
      u = i.getCanvasBBox(),
      c = u.minX,
      h = u.minY,
      f = u.maxX,
      v = u.maxY,
      d = u.x,
      p = u.y,
      g = u.width,
      y = u.height,
      m = d,
      b = p;
    (c < a || f < a) && (m = a),
      (h < o || v < o) && (b = o),
      c > s ? (m = s - g) : f > s && (m = m - (f - s)),
      h > l ? (b = l - y) : v > l && (b = b - (v - l)),
      (m !== d || b !== p) && Ja(i, m - d, b - p);
  });
}
function $L(e, r, t, n) {
  M(r, function (i, a) {
    var o = i.getCanvasBBox(),
      s = t[a].getBBox();
    (o.minX < s.minX || o.minY < s.minY || o.maxX > s.maxX || o.maxY > s.maxY) && i.remove(!0);
  });
}
var NL = 100,
  R0 = (function () {
    function e(r) {
      r === void 0 && (r = {}), (this.bitmap = {});
      var t = r.xGap,
        n = t === void 0 ? 1 : t,
        i = r.yGap,
        a = i === void 0 ? 8 : i;
      (this.xGap = n), (this.yGap = a);
    }
    return (
      (e.prototype.hasGap = function (r) {
        for (
          var t = !0,
            n = this.bitmap,
            i = Math.round(r.minX),
            a = Math.round(r.maxX),
            o = Math.round(r.minY),
            s = Math.round(r.maxY),
            l = i;
          l <= a;
          l += 1
        ) {
          if (!n[l]) {
            n[l] = {};
            continue;
          }
          if (l === i || l === a) {
            for (var u = o; u <= s; u++)
              if (n[l][u]) {
                t = !1;
                break;
              }
          } else if (n[l][o] || n[l][s]) {
            t = !1;
            break;
          }
        }
        return t;
      }),
      (e.prototype.fillGap = function (r) {
        for (
          var t = this.bitmap,
            n = Math.round(r.minX),
            i = Math.round(r.maxX),
            a = Math.round(r.minY),
            o = Math.round(r.maxY),
            s = n;
          s <= i;
          s += 1
        )
          t[s] || (t[s] = {});
        for (var s = n; s <= i; s += this.xGap) {
          for (var l = a; l <= o; l += this.yGap) t[s][l] = !0;
          t[s][o] = !0;
        }
        if (this.yGap !== 1) for (var s = a; s <= o; s += 1) (t[n][s] = !0), (t[i][s] = !0);
        if (this.xGap !== 1) for (var s = n; s <= i; s += 1) (t[s][a] = !0), (t[s][o] = !0);
      }),
      (e.prototype.destroy = function () {
        this.bitmap = {};
      }),
      e
    );
  })();
function zL(e, r, t) {
  t === void 0 && (t = NL);
  var n = -1,
    i = e.attr(),
    a = i.x,
    o = i.y,
    s = e.getCanvasBBox(),
    l = Math.sqrt(s.width * s.width + s.height * s.height),
    u,
    c = -n,
    h = 0,
    f = 0,
    v = function (y) {
      var m = y * 0.1;
      return [m * Math.cos(m), m * Math.sin(m)];
    };
  if (r.hasGap(s)) return r.fillGap(s), !0;
  for (var d = !1, p = 0, g = {}; Math.min(Math.abs(h), Math.abs(f)) < l && p < t; )
    if (
      ((u = v((c += n))),
      (h = ~~u[0]),
      (f = ~~u[1]),
      !((!h && !f) || g[''.concat(h, '-').concat(f)]) &&
        (e.attr({ x: a + h, y: o + f }),
        h + f < 0 && e.attr('textAlign', 'right'),
        p++,
        r.hasGap(e.getCanvasBBox())))
    ) {
      r.fillGap(e.getCanvasBBox()), (d = !0), (g[''.concat(h, '-').concat(f)] = !0);
      break;
    }
  return d;
}
function GL(e, r, t, n) {
  var i = e.getCanvasBBox(),
    a = i.width,
    o = i.height,
    s = { x: r, y: t, textAlign: 'center' };
  switch (n) {
    case 0:
      (s.y -= o + 1), (s.x += 1), (s.textAlign = 'left');
      break;
    case 1:
      (s.y -= o + 1), (s.x -= 1), (s.textAlign = 'right');
      break;
    case 2:
      (s.y += o + 1), (s.x -= 1), (s.textAlign = 'right');
      break;
    case 3:
      (s.y += o + 1), (s.x += 1), (s.textAlign = 'left');
      break;
    case 5:
      s.y -= o * 2 + 2;
      break;
    case 6:
      s.y += o * 2 + 2;
      break;
    case 7:
      (s.x += a + 1), (s.textAlign = 'left');
      break;
    case 8:
      (s.x -= a + 1), (s.textAlign = 'right');
      break;
  }
  return e.attr(s), e.getCanvasBBox();
}
function VL(e, r, t, n) {
  var i = new R0();
  M(r, function (a) {
    var o = a.find(function (s) {
      return s.get('type') === 'text';
    });
    zL(o, i) || a.remove(!0);
  }),
    i.destroy();
}
function HL(e, r, t, n) {
  var i = new R0();
  M(r, function (a) {
    for (
      var o = a.find(function (v) {
          return v.get('type') === 'text';
        }),
        s = o.attr(),
        l = s.x,
        u = s.y,
        c = !1,
        h = 0;
      h <= 8;
      h++
    ) {
      var f = GL(o, l, u, h);
      if (i.hasGap(f)) {
        i.fillGap(f), (c = !0);
        break;
      }
    }
    c || a.remove(!0);
  }),
    i.destroy();
}
function YL(e, r) {
  return (e[0] || 0) * (r[0] || 0) + (e[1] || 0) * (r[1] || 0) + (e[2] || 0) * (r[2] || 0);
}
function qd(e) {
  if (e.length > 4) return [];
  var r = function (i, a) {
      return [a.x - i.x, a.y - i.y];
    },
    t = r(e[0], e[1]),
    n = r(e[1], e[2]);
  return [t, n];
}
function Po(e, r, t) {
  r === void 0 && (r = 0), t === void 0 && (t = { x: 0, y: 0 });
  var n = e.x,
    i = e.y;
  return {
    x: (n - t.x) * Math.cos(-r) + (i - t.y) * Math.sin(-r) + t.x,
    y: (t.x - n) * Math.sin(-r) + (i - t.y) * Math.cos(-r) + t.y,
  };
}
function Zd(e) {
  var r = [
      { x: e.x, y: e.y },
      { x: e.x + e.width, y: e.y },
      { x: e.x + e.width, y: e.y + e.height },
      { x: e.x, y: e.y + e.height },
    ],
    t = e.rotation;
  return t ? [Po(r[0], t, r[0]), Po(r[1], t, r[0]), Po(r[2], t, r[0]), Po(r[3], t, r[0])] : r;
}
function Kd(e, r) {
  if (e.length > 4) return { min: 0, max: 0 };
  var t = [];
  return (
    e.forEach(function (n) {
      t.push(YL([n.x, n.y], r));
    }),
    { min: Math.min.apply(Math, J([], q(t), !1)), max: Math.max.apply(Math, J([], q(t), !1)) }
  );
}
function WL(e, r) {
  return e.max > r.min && e.min < r.max;
}
function XL(e) {
  return typeof e == 'number' && !Number.isNaN(e) && e !== 1 / 0 && e !== -1 / 0;
}
function Qd(e) {
  return ['x', 'y', 'width', 'height'].every(function (r) {
    return XL(e[r]);
  });
}
function _L(e, r, t) {
  return (
    t === void 0 && (t = 0),
    !(
      r.x > e.x + e.width + t ||
      r.x + r.width < e.x - t ||
      r.y > e.y + e.height + t ||
      r.y + r.height < e.y - t
    )
  );
}
function jL(e, r, t) {
  if ((t === void 0 && (t = 0), !Qd(e) || !Qd(r))) return !1;
  if (!e.rotation && !r.rotation) return _L(e, r, t);
  for (var n = Zd(e), i = Zd(r), a = qd(n).concat(qd(i)), o = 0; o < a.length; o++) {
    var s = a[o],
      l = Kd(n, s),
      u = Kd(i, s);
    if (!WL(l, u)) return !1;
  }
  return !0;
}
var UL = (function () {
  function e(r) {
    var t = this;
    (this.queue = []),
      (this.worker = new Worker(r)),
      (this.worker.onmessage = function (n) {
        var i;
        (i = t.queue.shift()) === null || i === void 0 || i.resolve(n);
      }),
      (this.worker.onmessageerror = function (n) {
        var i;
        console.warn('[AntV G2] Web worker is not available'),
          (i = t.queue.shift()) === null || i === void 0 || i.reject(n);
      });
  }
  return (
    (e.prototype.post = function (r, t) {
      var n = this;
      return new Promise(function (i, a) {
        n.queue.push({ resolve: i, reject: a });
        try {
          n.worker.postMessage(r);
        } catch (o) {
          console.warn('[AntV G2] Web worker is not available'), U(t) && t();
        }
      });
    }),
    (e.prototype.destroy = function () {
      this.worker.terminate();
    }),
    e
  );
})();
function qL(e) {
  if (typeof window != 'undefined') {
    var r;
    try {
      r = new Blob([e.toString()], { type: 'application/javascript' });
    } catch (t) {
      (r = new window.BlobBuilder()), r.append(e.toString()), (r = r.getBlob());
    }
    return new UL(URL.createObjectURL(r));
  }
}
var ZL = function (e) {
    function r() {
      function u(b, w) {
        return (b[0] || 0) * (w[0] || 0) + (b[1] || 0) * (w[1] || 0) + (b[2] || 0) * (w[2] || 0);
      }
      function c(b) {
        if (b.length > 4) return [];
        var w = function (F, E) {
            return [E.x - F.x, E.y - F.y];
          },
          S = w(b[0], b[1]),
          C = w(b[1], b[2]);
        return [S, C];
      }
      function h(b, w, S) {
        w === void 0 && (w = 0), S === void 0 && (S = { x: 0, y: 0 });
        var C = b.x,
          F = b.y;
        return {
          x: (C - S.x) * Math.cos(-w) + (F - S.y) * Math.sin(-w) + S.x,
          y: (S.x - C) * Math.sin(-w) + (F - S.y) * Math.cos(-w) + S.y,
        };
      }
      function f(b) {
        var w = [
            { x: b.x, y: b.y },
            { x: b.x + b.width, y: b.y },
            { x: b.x + b.width, y: b.y + b.height },
            { x: b.x, y: b.y + b.height },
          ],
          S = b.rotation;
        return S ? [h(w[0], S, w[0]), h(w[1], S, w[0]), h(w[2], S, w[0]), h(w[3], S, w[0])] : w;
      }
      function v(b, w) {
        if (b.length > 4) return { min: 0, max: 0 };
        var S = [];
        return (
          b.forEach(function (C) {
            S.push(u([C.x, C.y], w));
          }),
          { min: Math.min.apply(null, S), max: Math.max.apply(null, S) }
        );
      }
      function d(b, w) {
        return b.max > w.min && b.min < w.max;
      }
      function p(b) {
        return typeof b == 'number' && !Number.isNaN(b) && b !== 1 / 0 && b !== -1 / 0;
      }
      function g(b) {
        return ['x', 'y', 'width', 'height'].every(function (w) {
          return p(b[w]);
        });
      }
      function y(b, w, S) {
        return (
          S === void 0 && (S = 0),
          !(
            w.x > b.x + b.width + S ||
            w.x + w.width < b.x - S ||
            w.y > b.y + b.height + S ||
            w.y + w.height < b.y - S
          )
        );
      }
      function m(b, w, S) {
        if ((S === void 0 && (S = 0), !g(b) || !g(w))) return !1;
        if (!b.rotation && !w.rotation) return y(b, w, S);
        for (var C = f(b), F = f(w), E = c(C).concat(c(F)), I = 0; I < E.length; I++) {
          var T = E[I],
            P = v(C, T),
            R = v(F, T);
          if (!d(P, R)) return !1;
        }
        return !0;
      }
      return { intersect: m };
    }
    var t = r().intersect;
    function n(u) {
      for (var c = u.slice(), h = 0; h < c.length; h++) {
        var f = c[h];
        if (f.visible)
          for (var v = h + 1; v < c.length; v++) {
            var d = c[v];
            f !== d && d.visible && t(f, d) && (d.visible = !1);
          }
      }
      return c;
    }
    var i = { 'hide-overlap': n };
    try {
      var a = JSON.parse(e.data);
      if (!a || !a.type || !i[a.type]) return;
      var o = a.type,
        s = a.items,
        l = i[o](s);
      self.postMessage(l);
    } catch (u) {
      throw u;
    }
  },
  KL = `
   self.onmessage = `.concat(
    ZL.toString(),
    `
`,
  ),
  vu = function (e) {
    for (var r = e.slice(), t = 0; t < r.length; t++) {
      var n = r[t];
      if (n.visible)
        for (var i = t + 1; i < r.length; i++) {
          var a = r[i];
          n !== a && a.visible && jL(n, a) && (a.visible = !1);
        }
    }
    return r;
  },
  du = new Map(),
  Jd = qL(KL);
function QL(e, r, t, n) {
  return pa(this, void 0, void 0, function () {
    var i, a, o, s, l, u;
    return ga(this, function (c) {
      switch (c.label) {
        case 0:
          return (
            (i = r.map(function (h, f) {
              return x(x({}, r0(h, e[f], A(e[f], 'background.padding'))), { visible: !0 });
            })),
            (a = JSON.stringify(i)),
            (o = function (h) {
              return (
                du.set(a, h),
                M(h, function (f, v) {
                  var d = f.visible,
                    p = r[v];
                  d ? p == null || p.show() : p == null || p.hide();
                }),
                h
              );
            }),
            du.get(a) ? (o(du.get(a)), [3, 7]) : [3, 1]
          );
        case 1:
          if (!Jd) return [3, 6];
          c.label = 2;
        case 2:
          return (
            c.trys.push([2, 4, , 5]),
            (s = JSON.stringify({ type: 'hide-overlap', items: i })),
            [
              4,
              Jd.post(s, function () {
                return o(vu(i));
              }),
            ]
          );
        case 3:
          return (l = c.sent()), o(Array.isArray(l.data) ? l.data : []), [3, 5];
        case 4:
          return (u = c.sent()), console.error(u), o(vu(i)), [3, 5];
        case 5:
          return [3, 7];
        case 6:
          o(vu(i)), (c.label = 7);
        case 7:
          return [2];
      }
    });
  });
}
var tp = { '#5B8FF9': !0 },
  JL = function (e) {
    var r = Hr.toRGB(e).toUpperCase();
    if (tp[r]) return tp[r];
    var t = q(Hr.rgb2arr(r), 3),
      n = t[0],
      i = t[1],
      a = t[2],
      o = (n * 299 + i * 587 + a * 114) / 1e3 < 128;
    return o;
  };
function tP(e, r, t) {
  if (t.length !== 0) {
    var n = t[0].get('element'),
      i = n.geometry.theme,
      a = i.labels || {},
      o = a.fillColorLight,
      s = a.fillColorDark;
    t.forEach(function (l, u) {
      var c = r[u],
        h = c.find(function (y) {
          return y.get('type') === 'text';
        }),
        f = le.fromObject(l.getBBox()),
        v = le.fromObject(h.getCanvasBBox()),
        d = !f.contains(v),
        p = l.attr('fill'),
        g = JL(p);
      d ? h.attr(i.overflowLabels.style) : g ? o && h.attr('fill', o) : s && h.attr('fill', s);
    });
  }
}
function eP(e, r, t) {
  var n = e.coordinate,
    i = Zr(r),
    a = le.fromObject(i.getCanvasBBox()),
    o = le.fromObject(t.getBBox());
  return n.isTransposed ? o.height >= a.height : o.width >= a.width;
}
function rP(e, r, t) {
  var n = !!e.getAdjust('stack');
  return (
    n ||
    r.every(function (i, a) {
      var o = t[a];
      return eP(e, i, o);
    })
  );
}
function nP(e, r, t) {
  var n = e.coordinate,
    i = le.fromObject(t.getBBox()),
    a = Zr(r);
  n.isTransposed
    ? a.attr({ x: i.minX + i.width / 2, textAlign: 'center' })
    : a.attr({ y: i.minY + i.height / 2, textBaseline: 'middle' });
}
function iP(e, r, t) {
  var n;
  if (t.length !== 0) {
    var i = (n = t[0]) === null || n === void 0 ? void 0 : n.get('element'),
      a = i == null ? void 0 : i.geometry;
    if (!(!a || a.type !== 'interval')) {
      var o = rP(a, r, t);
      o &&
        t.forEach(function (s, l) {
          var u = r[l];
          nP(a, u, s);
        });
    }
  }
}
function aP(e) {
  var r = 500,
    t = [],
    n = Math.max(Math.floor(e.length / r), 1);
  return (
    M(e, function (i, a) {
      a % n === 0 ? t.push(i) : i.set('visible', !1);
    }),
    t
  );
}
function oP(e, r, t) {
  var n;
  if (t.length !== 0) {
    var i = (n = t[0]) === null || n === void 0 ? void 0 : n.get('element'),
      a = i == null ? void 0 : i.geometry;
    if (!(!a || a.type !== 'interval')) {
      var o = aP(r),
        s = q(a.getXYFields(), 1),
        l = s[0],
        u = [],
        c = [],
        h = Ae(o, function (g) {
          return g.get('data')[l];
        }),
        f = In(
          kt(o, function (g) {
            return g.get('data')[l];
          }),
        ),
        v;
      o.forEach(function (g) {
        g.set('visible', !0);
      });
      var d = function (g) {
        g && (g.length && c.push(g.pop()), c.push.apply(c, J([], q(g), !1)));
      };
      for (
        _t(f) > 0 && ((v = f.shift()), d(h[v])),
          _t(f) > 0 && ((v = f.pop()), d(h[v])),
          M(f.reverse(), function (g) {
            d(h[g]);
          });
        c.length > 0;

      ) {
        var p = c.shift();
        p.get('visible') && (wk(p, u) ? p.set('visible', !1) : u.push(p));
      }
    }
  }
}
function sP(e, r) {
  var t = e.getXYFields()[1],
    n = [],
    i = r.sort(function (a, o) {
      return a.get('data')[t] - a.get('data')[t];
    });
  return (
    i.length > 0 && n.push(i.shift()),
    i.length > 0 && n.push(i.pop()),
    n.push.apply(n, J([], q(i), !1)),
    n
  );
}
function $0(e, r, t) {
  return e.some(function (n) {
    return t(n, r);
  });
}
function lP(e, r, t) {
  t === void 0 && (t = 0);
  var n = Math.max(0, Math.min(e.x + e.width + t, r.x + r.width + t) - Math.max(e.x - t, r.x - t)),
    i = Math.max(0, Math.min(e.y + e.height + t, r.y + r.height + t) - Math.max(e.y - t, r.y - t));
  return n * i;
}
function ep(e, r) {
  return $0(e, r, function (t, n) {
    var i = Zr(t),
      a = Zr(n);
    return lP(i.getCanvasBBox(), a.getCanvasBBox(), 2) > 0;
  });
}
function uP(e, r, t, n, i) {
  var a, o;
  if (t.length !== 0) {
    var s = (a = t[0]) === null || a === void 0 ? void 0 : a.get('element'),
      l = s == null ? void 0 : s.geometry;
    if (!(!l || l.type !== 'point')) {
      var u = q(l.getXYFields(), 2),
        c = u[0],
        h = u[1],
        f = Ae(r, function (p) {
          return p.get('data')[c];
        }),
        v = [],
        d = (i && i.offset) || ((o = e[0]) === null || o === void 0 ? void 0 : o.offset) || 12;
      kt(Ci(f).reverse(), function (p) {
        for (var g = sP(l, f[p]); g.length; ) {
          var y = g.shift(),
            m = Zr(y);
          if (
            $0(v, y, function (S, C) {
              return S.get('data')[c] === C.get('data')[c] && S.get('data')[h] === C.get('data')[h];
            })
          ) {
            m.set('visible', !1);
            continue;
          }
          var b = ep(v, y),
            w = !1;
          if ((b && (m.attr('y', m.attr('y') + 2 * d), (w = ep(v, y))), w)) {
            m.set('visible', !1);
            continue;
          }
          v.push(y);
        }
      });
    }
  }
}
function cP(e, r) {
  var t = e.getXYFields()[1],
    n = [],
    i = r.sort(function (a, o) {
      return a.get('data')[t] - a.get('data')[t];
    });
  return (
    i.length > 0 && n.push(i.shift()),
    i.length > 0 && n.push(i.pop()),
    n.push.apply(n, J([], q(i), !1)),
    n
  );
}
function N0(e, r, t) {
  return e.some(function (n) {
    return t(n, r);
  });
}
function hP(e, r, t) {
  t === void 0 && (t = 0);
  var n = Math.max(0, Math.min(e.x + e.width + t, r.x + r.width + t) - Math.max(e.x - t, r.x - t)),
    i = Math.max(0, Math.min(e.y + e.height + t, r.y + r.height + t) - Math.max(e.y - t, r.y - t));
  return n * i;
}
function rp(e, r) {
  return N0(e, r, function (t, n) {
    var i = Zr(t),
      a = Zr(n);
    return hP(i.getCanvasBBox(), a.getCanvasBBox(), 2) > 0;
  });
}
function fP(e, r, t, n, i) {
  var a, o;
  if (t.length !== 0) {
    var s = (a = t[0]) === null || a === void 0 ? void 0 : a.get('element'),
      l = s == null ? void 0 : s.geometry;
    if (!(!l || ['path', 'line', 'area'].indexOf(l.type) < 0)) {
      var u = q(l.getXYFields(), 2),
        c = u[0],
        h = u[1],
        f = Ae(r, function (p) {
          return p.get('data')[c];
        }),
        v = [],
        d = (i && i.offset) || ((o = e[0]) === null || o === void 0 ? void 0 : o.offset) || 12;
      kt(Ci(f).reverse(), function (p) {
        for (var g = cP(l, f[p]); g.length; ) {
          var y = g.shift(),
            m = Zr(y);
          if (
            N0(v, y, function (S, C) {
              return S.get('data')[c] === C.get('data')[c] && S.get('data')[h] === C.get('data')[h];
            })
          ) {
            m.set('visible', !1);
            continue;
          }
          var b = rp(v, y),
            w = !1;
          if ((b && (m.attr('y', m.attr('y') + 2 * d), (w = rp(v, y))), w)) {
            m.set('visible', !1);
            continue;
          }
          v.push(y);
        }
      });
    }
  }
}
var pu;
function vP() {
  return pu || (pu = document.createElement('canvas').getContext('2d')), pu;
}
var Oo = Ai(
    function (e, r) {
      r === void 0 && (r = {});
      var t = r.fontSize,
        n = r.fontFamily,
        i = r.fontWeight,
        a = r.fontStyle,
        o = r.fontVariant,
        s = vP();
      return (
        (s.font = [a, o, i, ''.concat(t, 'px'), n].join(' ')), s.measureText(et(e) ? e : '').width
      );
    },
    function (e, r) {
      return r === void 0 && (r = {}), J([e], q(Gs(r)), !1).join('');
    },
  ),
  dP = function (e, r, t) {
    var n = 16,
      i = Oo('...', t),
      a;
    et(e) ? (a = e) : (a = Xa(e));
    var o = r,
      s = [],
      l,
      u;
    if (Oo(e, t) <= r) return e;
    for (; (l = a.substr(0, n)), (u = Oo(l, t)), !(u + i > o && u > o); )
      if ((s.push(l), (o -= u), (a = a.substr(n)), !a)) return s.join('');
    for (; (l = a.substr(0, 1)), (u = Oo(l, t)), !(u + i > o); )
      if ((s.push(l), (o -= u), (a = a.substr(1)), !a)) return s.join('');
    return ''.concat(s.join(''), '...');
  };
function pP(e, r, t, n, i) {
  if (!(r.length <= 0)) {
    var a = (i == null ? void 0 : i.direction) || ['top', 'right', 'bottom', 'left'],
      o = (i == null ? void 0 : i.action) || 'translate',
      s = (i == null ? void 0 : i.margin) || 0,
      l = r[0].get('coordinate');
    if (l) {
      var u = lT(l, s),
        c = u.minX,
        h = u.minY,
        f = u.maxX,
        v = u.maxY;
      M(r, function (d) {
        var p = d.getCanvasBBox(),
          g = p.minX,
          y = p.minY,
          m = p.maxX,
          b = p.maxY,
          w = p.x,
          S = p.y,
          C = p.width,
          F = p.height,
          E = w,
          I = S;
        if (
          (a.indexOf('left') >= 0 && (g < c || m < c) && (E = c),
          a.indexOf('top') >= 0 && (y < h || b < h) && (I = h),
          a.indexOf('right') >= 0 && (g > f ? (E = f - C) : m > f && (E = E - (m - f))),
          a.indexOf('bottom') >= 0 && (y > v ? (I = v - F) : b > v && (I = I - (b - v))),
          E !== w || I !== S)
        ) {
          var T = E - w;
          if (o === 'translate') Ja(d, T, I - S);
          else if (o === 'ellipsis') {
            var P = d.findAll(function (R) {
              return R.get('type') === 'text';
            });
            P.forEach(function (R) {
              var B = Yc(R.attr(), [
                  'fontSize',
                  'fontFamily',
                  'fontWeight',
                  'fontStyle',
                  'fontVariant',
                ]),
                G = R.getCanvasBBox(),
                j = dP(R.attr('text'), G.width - Math.abs(T), B);
              R.attr('text', j);
            });
          } else d.hide();
        }
      });
    }
  }
}
function gP(e, r, t) {
  var n = {
    fillOpacity: $(e.attr('fillOpacity')) ? 1 : e.attr('fillOpacity'),
    strokeOpacity: $(e.attr('strokeOpacity')) ? 1 : e.attr('strokeOpacity'),
    opacity: $(e.attr('opacity')) ? 1 : e.attr('opacity'),
  };
  e.attr({ fillOpacity: 0, strokeOpacity: 0, opacity: 0 }), e.animate(n, r);
}
function yP(e, r, t) {
  var n = { fillOpacity: 0, strokeOpacity: 0, opacity: 0 },
    i = r.easing,
    a = r.duration,
    o = r.delay;
  e.animate(
    n,
    a,
    i,
    function () {
      e.remove(!0);
    },
    o,
  );
}
function mP(e, r, t) {
  var n,
    i = q(r, 2),
    a = i[0],
    o = i[1];
  return (
    e.applyToMatrix([a, o, 1]),
    t === 'x'
      ? (e.setMatrix(
          Vt(e.getMatrix(), [
            ['t', -a, -o],
            ['s', 0.01, 1],
            ['t', a, o],
          ]),
        ),
        (n = Vt(e.getMatrix(), [
          ['t', -a, -o],
          ['s', 100, 1],
          ['t', a, o],
        ])))
      : t === 'y'
      ? (e.setMatrix(
          Vt(e.getMatrix(), [
            ['t', -a, -o],
            ['s', 1, 0.01],
            ['t', a, o],
          ]),
        ),
        (n = Vt(e.getMatrix(), [
          ['t', -a, -o],
          ['s', 1, 100],
          ['t', a, o],
        ])))
      : t === 'xy' &&
        (e.setMatrix(
          Vt(e.getMatrix(), [
            ['t', -a, -o],
            ['s', 0.01, 0.01],
            ['t', a, o],
          ]),
        ),
        (n = Vt(e.getMatrix(), [
          ['t', -a, -o],
          ['s', 100, 100],
          ['t', a, o],
        ]))),
    n
  );
}
function zh(e, r, t, n, i) {
  var a = t.start,
    o = t.end,
    s = t.getWidth(),
    l = t.getHeight(),
    u,
    c;
  i === 'y'
    ? ((u = a.x + s / 2), (c = n.y < a.y ? n.y : a.y))
    : i === 'x'
    ? ((u = n.x > a.x ? n.x : a.x), (c = a.y + l / 2))
    : i === 'xy' &&
      (t.isPolar
        ? ((u = t.getCenter().x), (c = t.getCenter().y))
        : ((u = (a.x + o.x) / 2), (c = (a.y + o.y) / 2)));
  var h = mP(e, [u, c], i);
  e.animate({ matrix: h }, r);
}
function xP(e, r, t) {
  var n = t.coordinate,
    i = t.minYPoint;
  zh(e, r, n, i, 'x');
}
function wP(e, r, t) {
  var n = t.coordinate,
    i = t.minYPoint;
  zh(e, r, n, i, 'y');
}
function bP(e, r, t) {
  var n = t.coordinate,
    i = t.minYPoint;
  zh(e, r, n, i, 'xy');
}
function SP(e, r, t) {
  var n = e.getTotalLength();
  e.attr('lineDash', [n]),
    e.animate(function (i) {
      return { lineDashOffset: (1 - i) * n };
    }, r);
}
function CP(e, r, t) {
  var n = t.toAttrs,
    i = n.x,
    a = n.y;
  delete n.x, delete n.y, e.attr(n), e.animate({ x: i, y: a }, r);
}
function MP(e, r, t) {
  var n = e.getBBox(),
    i = e.get('origin').mappingData,
    a = i.points,
    o = a[0].y - a[1].y > 0 ? n.maxX : n.minX,
    s = (n.minY + n.maxY) / 2;
  e.applyToMatrix([o, s, 1]);
  var l = Vt(e.getMatrix(), [
    ['t', -o, -s],
    ['s', 0.01, 1],
    ['t', o, s],
  ]);
  e.setMatrix(l),
    e.animate(
      {
        matrix: Vt(e.getMatrix(), [
          ['t', -o, -s],
          ['s', 100, 1],
          ['t', o, s],
        ]),
      },
      r,
    );
}
function AP(e, r, t) {
  var n = e.getBBox(),
    i = e.get('origin').mappingData,
    a = (n.minX + n.maxX) / 2,
    o = i.points,
    s = o[0].y - o[1].y <= 0 ? n.maxY : n.minY;
  e.applyToMatrix([a, s, 1]);
  var l = Vt(e.getMatrix(), [
    ['t', -a, -s],
    ['s', 1, 0.01],
    ['t', a, s],
  ]);
  e.setMatrix(l),
    e.animate(
      {
        matrix: Vt(e.getMatrix(), [
          ['t', -a, -s],
          ['s', 1, 100],
          ['t', a, s],
        ]),
      },
      r,
    );
}
function np(e, r) {
  var t,
    n = Ss(e, r),
    i = n.startAngle,
    a = n.endAngle;
  return (
    !Zt(i, -Math.PI * 0.5) && i < -Math.PI * 0.5 && (i += Math.PI * 2),
    !Zt(a, -Math.PI * 0.5) && a < -Math.PI * 0.5 && (a += Math.PI * 2),
    r[5] === 0 && ((t = q([a, i], 2)), (i = t[0]), (a = t[1])),
    Zt(i, Math.PI * 1.5) && (i = Math.PI * -0.5),
    Zt(a, Math.PI * -0.5) && !Zt(i, a) && (a = Math.PI * 1.5),
    { startAngle: i, endAngle: a }
  );
}
function ip(e) {
  var r;
  return (
    e[0] === 'M' || e[0] === 'L'
      ? (r = [e[1], e[2]])
      : (e[0] === 'a' || e[0] === 'A' || e[0] === 'C') && (r = [e[e.length - 2], e[e.length - 1]]),
    r
  );
}
function ap(e) {
  var r,
    t,
    n,
    i = e.filter(function (b) {
      return b[0] === 'A' || b[0] === 'a';
    });
  if (i.length === 0) return { startAngle: 0, endAngle: 0, radius: 0, innerRadius: 0 };
  var a = i[0],
    o = i.length > 1 ? i[1] : i[0],
    s = e.indexOf(a),
    l = e.indexOf(o),
    u = ip(e[s - 1]),
    c = ip(e[l - 1]),
    h = np(u, a),
    f = h.startAngle,
    v = h.endAngle,
    d = np(c, o),
    p = d.startAngle,
    g = d.endAngle;
  Zt(f, p) && Zt(v, g) ? ((t = f), (n = v)) : ((t = Math.min(f, p)), (n = Math.max(v, g)));
  var y = a[1],
    m = i[i.length - 1][1];
  return (
    y < m ? ((r = q([m, y], 2)), (y = r[0]), (m = r[1])) : y === m && (m = 0),
    { startAngle: t, endAngle: n, radius: y, innerRadius: m }
  );
}
function FP(e, r, t) {
  var n = t.toAttrs,
    i = t.coordinate,
    a = n.path || [],
    o = a.map(function (m) {
      return m[0];
    });
  if (!(a.length < 1)) {
    var s = ap(a),
      l = s.startAngle,
      u = s.endAngle,
      c = s.radius,
      h = s.innerRadius,
      f = ap(e.attr('path')),
      v = f.startAngle,
      d = f.endAngle,
      p = i.getCenter(),
      g = l - v,
      y = u - d;
    if (g === 0 && y === 0) {
      e.attr('path', a);
      return;
    }
    e.animate(
      function (m) {
        var b = v + m * g,
          w = d + m * y;
        return x(x({}, n), {
          path: Dt(o, ['M', 'A', 'A', 'Z']) ? wm(p.x, p.y, c, b, w) : Yr(p.x, p.y, c, b, w, h),
        });
      },
      x(x({}, r), {
        callback: function () {
          e.attr('path', a), U(r.callback) && r.callback();
        },
      }),
    );
  }
}
function EP(e, r, t) {
  var n = gh(t.coordinate, 20),
    i = n.type,
    a = n.startState,
    o = n.endState,
    s = e.setClip({ type: i, attrs: a });
  t.toAttrs && e.attr(t.toAttrs),
    s.animate(
      o,
      x(x({}, r), {
        callback: function () {
          e && !e.get('destroyed') && e.set('clipShape', null),
            s.remove(!0),
            U(r.callback) && r.callback();
        },
      }),
    );
}
function Gh(e, r, t) {
  if (e.isGroup())
    M(e.getChildren(), function (s) {
      Gh(s, r, t);
    });
  else {
    var n = e.getBBox(),
      i = (n.minX + n.maxX) / 2,
      a = (n.minY + n.maxY) / 2;
    if ((e.applyToMatrix([i, a, 1]), t === 'zoomIn')) {
      var o = Vt(e.getMatrix(), [
        ['t', -i, -a],
        ['s', 0.01, 0.01],
        ['t', i, a],
      ]);
      e.setMatrix(o),
        e.animate(
          {
            matrix: Vt(e.getMatrix(), [
              ['t', -i, -a],
              ['s', 100, 100],
              ['t', i, a],
            ]),
          },
          r,
        );
    } else
      e.animate(
        {
          matrix: Vt(e.getMatrix(), [
            ['t', -i, -a],
            ['s', 0.01, 0.01],
            ['t', i, a],
          ]),
        },
        x(x({}, r), {
          callback: function () {
            e.remove(!0), U(r.callback) && r.callback();
          },
        }),
      );
  }
}
function TP(e, r, t) {
  Gh(e, r, 'zoomIn');
}
function kP(e, r, t) {
  Gh(e, r, 'zoomOut');
}
function Ar(e) {
  return [H.TOP, H.BOTTOM].includes(e)
    ? {
        offsetX: 0,
        offsetY: e === H.TOP ? -8 : 8,
        style: { textAlign: 'center', textBaseline: e === H.TOP ? 'bottom' : 'top' },
      }
    : [H.LEFT, H.RIGHT].includes(e)
    ? {
        offsetX: e === H.LEFT ? -8 : 8,
        offsetY: 0,
        style: {
          textAlign: e === H.LEFT ? 'right' : 'left',
          textBaseline: 'middle',
          rotate: Math.PI / 2,
        },
      }
    : {};
}
function gu(e, r, t) {
  return { x: e.x + r * Math.cos(t), y: e.y + r * Math.sin(t) };
}
var IP = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        return _({}, e.prototype.getDefaultCfg.call(this), {
          type: 'circle',
          showTitle: !0,
          title: e.prototype.getDefaultTitleCfg.call(this),
        });
      }),
      (r.prototype.render = function () {
        e.prototype.render.call(this), this.cfg.showTitle && this.renderTitle();
      }),
      (r.prototype.getRegion = function (t, n) {
        var i = 0.5,
          a = { x: 0.5, y: 0.5 },
          o = (Math.PI * 2) / t,
          s = (-1 * Math.PI) / 2 + o * n,
          l = i / (1 + 1 / Math.sin(o / 2)),
          u = gu(a, i - l, s),
          c = (Math.PI * 5) / 4,
          h = (Math.PI * 1) / 4;
        return { start: gu(u, l, c), end: gu(u, l, h) };
      }),
      (r.prototype.afterEachView = function (t, n) {
        this.processAxis(t, n);
      }),
      (r.prototype.beforeEachView = function (t, n) {}),
      (r.prototype.generateFacets = function (t) {
        var n = this,
          i = this.cfg,
          a = i.fields,
          o = i.type,
          s = q(a, 1),
          l = s[0];
        if (!l) throw new Error('No `fields` specified!');
        var u = this.getFieldValues(t, l),
          c = u.length,
          h = [];
        return (
          u.forEach(function (f, v) {
            var d = [{ field: l, value: f, values: u }],
              p = Jt(t, n.getFacetDataFilter(d)),
              g = {
                type: o,
                data: p,
                region: n.getRegion(c, v),
                columnValue: f,
                columnField: l,
                columnIndex: v,
                columnValuesLength: c,
                rowValue: null,
                rowField: null,
                rowIndex: 0,
                rowValuesLength: 1,
              };
            h.push(g);
          }),
          h
        );
      }),
      (r.prototype.getXAxisOption = function (t, n, i, a) {
        return i;
      }),
      (r.prototype.getYAxisOption = function (t, n, i, a) {
        return i;
      }),
      (r.prototype.renderTitle = function () {
        var t = this;
        M(this.facets, function (n) {
          var i = n.columnValue,
            a = n.view,
            o = A(t.cfg.title, 'formatter'),
            s = _({ position: ['50%', '0%'], content: o ? o(i) : i }, Ar(H.TOP), t.cfg.title);
          a.annotation().text(s);
        });
      }),
      r
    );
  })(Ei),
  LP = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        return _({}, e.prototype.getDefaultCfg.call(this), {
          type: 'list',
          cols: null,
          showTitle: !0,
          title: e.prototype.getDefaultTitleCfg.call(this),
        });
      }),
      (r.prototype.render = function () {
        e.prototype.render.call(this), this.cfg.showTitle && this.renderTitle();
      }),
      (r.prototype.afterEachView = function (t, n) {
        this.processAxis(t, n);
      }),
      (r.prototype.beforeEachView = function (t, n) {}),
      (r.prototype.generateFacets = function (t) {
        var n = this,
          i = this.cfg.fields,
          a = this.cfg.cols,
          o = q(i, 1),
          s = o[0];
        if (!s) throw new Error('No `fields` specified!');
        var l = this.getFieldValues(t, s),
          u = l.length;
        a = a || u;
        var c = this.getPageCount(u, a),
          h = [];
        return (
          l.forEach(function (f, v) {
            var d = n.getRowCol(v, a),
              p = d.row,
              g = d.col,
              y = [{ field: s, value: f, values: l }],
              m = Jt(t, n.getFacetDataFilter(y)),
              b = {
                type: n.cfg.type,
                data: m,
                region: n.getRegion(c, a, g, p),
                columnValue: f,
                rowValue: f,
                columnField: s,
                rowField: null,
                columnIndex: g,
                rowIndex: p,
                columnValuesLength: a,
                rowValuesLength: c,
                total: u,
              };
            h.push(b);
          }),
          h
        );
      }),
      (r.prototype.getXAxisOption = function (t, n, i, a) {
        return a.rowIndex !== a.rowValuesLength - 1 &&
          a.columnValuesLength * a.rowIndex + a.columnIndex + 1 + a.columnValuesLength <= a.total
          ? x(x({}, i), { label: null, title: null })
          : i;
      }),
      (r.prototype.getYAxisOption = function (t, n, i, a) {
        return a.columnIndex !== 0 ? x(x({}, i), { title: null, label: null }) : i;
      }),
      (r.prototype.renderTitle = function () {
        var t = this;
        M(this.facets, function (n) {
          var i = n.columnValue,
            a = n.view,
            o = A(t.cfg.title, 'formatter'),
            s = _({ position: ['50%', '0%'], content: o ? o(i) : i }, Ar(H.TOP), t.cfg.title);
          a.annotation().text(s);
        });
      }),
      (r.prototype.getPageCount = function (t, n) {
        return Math.floor((t + n - 1) / n);
      }),
      (r.prototype.getRowCol = function (t, n) {
        var i = Math.floor(t / n),
          a = t % n;
        return { row: i, col: a };
      }),
      r
    );
  })(Ei),
  PP = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        return _({}, e.prototype.getDefaultCfg.call(this), {
          type: 'matrix',
          showTitle: !1,
          columnTitle: x({}, e.prototype.getDefaultTitleCfg.call(this)),
          rowTitle: x({}, e.prototype.getDefaultTitleCfg.call(this)),
        });
      }),
      (r.prototype.render = function () {
        e.prototype.render.call(this), this.cfg.showTitle && this.renderTitle();
      }),
      (r.prototype.afterEachView = function (t, n) {
        this.processAxis(t, n);
      }),
      (r.prototype.beforeEachView = function (t, n) {}),
      (r.prototype.generateFacets = function (t) {
        for (
          var n = this.cfg, i = n.fields, a = n.type, o = i.length, s = o, l = [], u = 0;
          u < s;
          u++
        )
          for (var c = i[u], h = 0; h < o; h++) {
            var f = i[h],
              v = {
                type: a,
                data: t,
                region: this.getRegion(o, s, u, h),
                columnValue: c,
                rowValue: f,
                columnField: c,
                rowField: f,
                columnIndex: u,
                rowIndex: h,
                columnValuesLength: s,
                rowValuesLength: o,
              };
            l.push(v);
          }
        return l;
      }),
      (r.prototype.getXAxisOption = function (t, n, i, a) {
        return a.rowIndex !== a.rowValuesLength - 1 ? x(x({}, i), { label: null, title: null }) : i;
      }),
      (r.prototype.getYAxisOption = function (t, n, i, a) {
        return a.columnIndex !== 0 ? x(x({}, i), { title: null, label: null }) : i;
      }),
      (r.prototype.renderTitle = function () {
        var t = this;
        M(this.facets, function (n, i) {
          var a = n.columnIndex,
            o = n.rowIndex,
            s = n.columnValuesLength;
          n.rowValuesLength;
          var l = n.columnValue,
            u = n.rowValue,
            c = n.view;
          if (o === 0) {
            var h = A(t.cfg.columnTitle, 'formatter'),
              f = _(
                { position: ['50%', '0%'], content: h ? h(l) : l },
                Ar(H.TOP),
                t.cfg.columnTitle,
              );
            c.annotation().text(f);
          }
          if (a === s - 1) {
            var h = A(t.cfg.rowTitle, 'formatter'),
              f = _(
                { position: ['100%', '50%'], content: h ? h(u) : u },
                Ar(H.RIGHT),
                t.cfg.rowTitle,
              );
            c.annotation().text(f);
          }
        });
      }),
      r
    );
  })(Ei),
  OP = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getDefaultCfg = function () {
        return _({}, e.prototype.getDefaultCfg.call(this), {
          type: 'mirror',
          showTitle: !0,
          title: e.prototype.getDefaultTitleCfg.call(this),
          transpose: !1,
        });
      }),
      (r.prototype.render = function () {
        e.prototype.render.call(this), this.cfg.showTitle && this.renderTitle();
      }),
      (r.prototype.beforeEachView = function (t, n) {
        this.cfg.transpose
          ? n.columnIndex % 2 === 0
            ? t.coordinate().transpose().reflect('x')
            : t.coordinate().transpose()
          : n.rowIndex % 2 !== 0 && t.coordinate().reflect('y');
      }),
      (r.prototype.afterEachView = function (t, n) {
        this.processAxis(t, n);
      }),
      (r.prototype.generateFacets = function (t) {
        var n = this,
          i = q(this.cfg.fields, 1),
          a = i[0],
          o = [],
          s = 1,
          l = 1,
          u = [''],
          c = [''],
          h,
          f;
        return (
          this.cfg.transpose
            ? ((h = a), (u = this.getFieldValues(t, h).slice(0, 2)), (s = u.length))
            : ((f = a), (c = this.getFieldValues(t, f).slice(0, 2)), (l = c.length)),
          u.forEach(function (v, d) {
            c.forEach(function (p, g) {
              var y = [
                  { field: h, value: v, values: u },
                  { field: f, value: p, values: c },
                ],
                m = Jt(t, n.getFacetDataFilter(y)),
                b = {
                  type: n.cfg.type,
                  data: m,
                  region: n.getRegion(l, s, d, g),
                  columnValue: v,
                  rowValue: p,
                  columnField: h,
                  rowField: f,
                  columnIndex: d,
                  rowIndex: g,
                  columnValuesLength: s,
                  rowValuesLength: l,
                };
              o.push(b);
            });
          }),
          o
        );
      }),
      (r.prototype.getXAxisOption = function (t, n, i, a) {
        return a.columnIndex === 1 || a.rowIndex === 1
          ? x(x({}, i), { label: null, title: null })
          : i;
      }),
      (r.prototype.getYAxisOption = function (t, n, i, a) {
        return i;
      }),
      (r.prototype.renderTitle = function () {
        var t = this;
        M(this.facets, function (n, i) {
          var a = n.columnValue,
            o = n.rowValue,
            s = n.view,
            l = A(t.cfg.title, 'formatter');
          if (t.cfg.transpose) {
            var u = _({ position: ['50%', '0%'], content: l ? l(a) : a }, Ar(H.TOP), t.cfg.title);
            s.annotation().text(u);
          } else {
            var u = _(
              { position: ['100%', '50%'], content: l ? l(o) : o },
              Ar(H.RIGHT),
              t.cfg.title,
            );
            s.annotation().text(u);
          }
        });
      }),
      r
    );
  })(Ei),
  DP = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.afterEachView = function (t, n) {
        this.processAxis(t, n);
      }),
      (r.prototype.beforeEachView = function (t, n) {}),
      (r.prototype.getDefaultCfg = function () {
        return _({}, e.prototype.getDefaultCfg.call(this), {
          type: 'rect',
          columnTitle: x({}, e.prototype.getDefaultTitleCfg.call(this)),
          rowTitle: x({}, e.prototype.getDefaultTitleCfg.call(this)),
        });
      }),
      (r.prototype.render = function () {
        e.prototype.render.call(this), this.cfg.showTitle && this.renderTitle();
      }),
      (r.prototype.generateFacets = function (t) {
        var n = this,
          i = q(this.cfg.fields, 2),
          a = i[0],
          o = i[1],
          s = [],
          l = 1,
          u = 1,
          c = [''],
          h = [''];
        return (
          a && ((c = this.getFieldValues(t, a)), (l = c.length)),
          o && ((h = this.getFieldValues(t, o)), (u = h.length)),
          c.forEach(function (f, v) {
            h.forEach(function (d, p) {
              var g = [
                  { field: a, value: f, values: c },
                  { field: o, value: d, values: h },
                ],
                y = Jt(t, n.getFacetDataFilter(g)),
                m = {
                  type: n.cfg.type,
                  data: y,
                  region: n.getRegion(u, l, v, p),
                  columnValue: f,
                  rowValue: d,
                  columnField: a,
                  rowField: o,
                  columnIndex: v,
                  rowIndex: p,
                  columnValuesLength: l,
                  rowValuesLength: u,
                };
              s.push(m);
            });
          }),
          s
        );
      }),
      (r.prototype.renderTitle = function () {
        var t = this;
        M(this.facets, function (n, i) {
          var a = n.columnIndex,
            o = n.rowIndex,
            s = n.columnValuesLength,
            l = n.columnValue,
            u = n.rowValue,
            c = n.view;
          if (o === 0) {
            var h = A(t.cfg.columnTitle, 'formatter'),
              f = _(
                { position: ['50%', '0%'], content: h ? h(l) : l },
                Ar(H.TOP),
                t.cfg.columnTitle,
              );
            c.annotation().text(f);
          }
          if (a === s - 1) {
            var h = A(t.cfg.rowTitle, 'formatter'),
              f = _(
                { position: ['100%', '50%'], content: h ? h(u) : u },
                Ar(H.RIGHT),
                t.cfg.rowTitle,
              );
            c.annotation().text(f);
          }
        });
      }),
      (r.prototype.getXAxisOption = function (t, n, i, a) {
        return a.rowIndex !== a.rowValuesLength - 1
          ? x(x({}, i), { title: null, label: null })
          : a.columnIndex !== Math.floor((a.columnValuesLength - 1) / 2)
          ? x(x({}, i), { title: null })
          : i;
      }),
      (r.prototype.getYAxisOption = function (t, n, i, a) {
        return a.columnIndex !== 0
          ? x(x({}, i), { title: null, label: null })
          : a.rowIndex !== Math.floor((a.rowValuesLength - 1) / 2)
          ? x(x({}, i), { title: null })
          : i;
      }),
      r
    );
  })(Ei),
  BP = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (
        (t.afterChartRender = function () {
          t.facets && t.cfg.line && (t.container.clear(), t.drawLines(t.facets));
        }),
        t
      );
    }
    return (
      (r.prototype.afterEachView = function (t, n) {
        this.processAxis(t, n);
      }),
      (r.prototype.beforeEachView = function (t, n) {}),
      (r.prototype.init = function () {
        e.prototype.init.call(this), this.view.on(ut.AFTER_RENDER, this.afterChartRender);
      }),
      (r.prototype.getDefaultCfg = function () {
        return _({}, e.prototype.getDefaultCfg.call(this), {
          type: 'tree',
          line: { style: { lineWidth: 1, stroke: '#ddd' }, smooth: !1 },
          showTitle: !0,
          title: e.prototype.getDefaultTitleCfg.call(this),
        });
      }),
      (r.prototype.generateFacets = function (t) {
        var n = this.cfg.fields;
        if (!n.length) throw new Error('Please specify for the fields for rootFacet!');
        var i = [],
          a = {
            type: this.cfg.type,
            data: t,
            region: null,
            rowValuesLength: this.getRows(),
            columnValuesLength: 1,
            rowIndex: 0,
            columnIndex: 0,
            rowField: '',
            columnField: '',
            rowValue: '',
            columnValue: '',
          };
        return i.push(a), (a.children = this.getChildFacets(t, 1, i)), this.setRegion(i), i;
      }),
      (r.prototype.setRegion = function (t) {
        var n = this;
        this.forceColIndex(t),
          t.forEach(function (i) {
            i.region = n.getRegion(
              i.rowValuesLength,
              i.columnValuesLength,
              i.columnIndex,
              i.rowIndex,
            );
          });
      }),
      (r.prototype.getRegion = function (t, n, i, a) {
        var o = 1 / n,
          s = 1 / t,
          l = { x: o * i, y: s * a },
          u = { x: l.x + o, y: l.y + (s * 2) / 3 };
        return { start: l, end: u };
      }),
      (r.prototype.forceColIndex = function (t) {
        var n,
          i,
          a = this,
          o = [],
          s = 0;
        t.forEach(function (d) {
          a.isLeaf(d) && (o.push(d), (d.columnIndex = s), s++);
        }),
          o.forEach(function (d) {
            d.columnValuesLength = o.length;
          });
        for (var l = this.cfg.fields.length, u = l - 1; u >= 0; u--) {
          var c = this.getFacetsByLevel(t, u);
          try {
            for (var h = ((n = void 0), pt(c)), f = h.next(); !f.done; f = h.next()) {
              var v = f.value;
              this.isLeaf(v) ||
                ((v.originColIndex = v.columnIndex),
                (v.columnIndex = this.getRegionIndex(v.children)),
                (v.columnValuesLength = o.length));
            }
          } catch (d) {
            n = { error: d };
          } finally {
            try {
              f && !f.done && (i = h.return) && i.call(h);
            } finally {
              if (n) throw n.error;
            }
          }
        }
      }),
      (r.prototype.getFacetsByLevel = function (t, n) {
        var i = [];
        return (
          t.forEach(function (a) {
            a.rowIndex === n && i.push(a);
          }),
          i
        );
      }),
      (r.prototype.getRegionIndex = function (t) {
        var n = t[0],
          i = t[t.length - 1];
        return (i.columnIndex - n.columnIndex) / 2 + n.columnIndex;
      }),
      (r.prototype.isLeaf = function (t) {
        return !t.children || !t.children.length;
      }),
      (r.prototype.getRows = function () {
        return this.cfg.fields.length + 1;
      }),
      (r.prototype.getChildFacets = function (t, n, i) {
        var a = this,
          o = this.cfg.fields,
          s = o.length;
        if (!(s < n)) {
          var l = [],
            u = o[n - 1],
            c = this.getFieldValues(t, u);
          return (
            c.forEach(function (h, f) {
              var v = [{ field: u, value: h, values: c }],
                d = t.filter(a.getFacetDataFilter(v));
              if (d.length) {
                var p = {
                  type: a.cfg.type,
                  data: d,
                  region: null,
                  columnValue: h,
                  rowValue: '',
                  columnField: u,
                  rowField: '',
                  columnIndex: f,
                  rowValuesLength: a.getRows(),
                  columnValuesLength: 1,
                  rowIndex: n,
                  children: a.getChildFacets(d, n + 1, i),
                };
                l.push(p), i.push(p);
              }
            }),
            l
          );
        }
      }),
      (r.prototype.render = function () {
        e.prototype.render.call(this), this.cfg.showTitle && this.renderTitle();
      }),
      (r.prototype.renderTitle = function () {
        var t = this;
        M(this.facets, function (n) {
          var i = n.columnValue,
            a = n.view,
            o = A(t.cfg.title, 'formatter'),
            s = _({ position: ['50%', '0%'], content: o ? o(i) : i }, Ar(H.TOP), t.cfg.title);
          a.annotation().text(s);
        });
      }),
      (r.prototype.drawLines = function (t) {
        var n = this;
        t.forEach(function (i) {
          if (!n.isLeaf(i)) {
            var a = i.children;
            n.addFacetLines(i, a);
          }
        });
      }),
      (r.prototype.addFacetLines = function (t, n) {
        var i = this,
          a = t.view,
          o = a.coordinateBBox,
          s = { x: o.x + o.width / 2, y: o.y + o.height };
        n.forEach(function (l) {
          var u = l.view.coordinateBBox,
            c = { x: u.bl.x + (u.tr.x - u.bl.x) / 2, y: u.tr.y },
            h = { x: s.x, y: s.y + (c.y - s.y) / 2 },
            f = { x: c.x, y: h.y };
          i.drawLine([s, h, f, c]);
        });
      }),
      (r.prototype.getPath = function (t) {
        var n = [],
          i = this.cfg.line.smooth;
        return (
          i
            ? (n.push(['M', t[0].x, t[0].y]),
              n.push(['C', t[1].x, t[1].y, t[2].x, t[2].y, t[3].x, t[3].y]))
            : t.forEach(function (a, o) {
                o === 0 ? n.push(['M', a.x, a.y]) : n.push(['L', a.x, a.y]);
              }),
          n
        );
      }),
      (r.prototype.drawLine = function (t) {
        var n = this.getPath(t),
          i = this.cfg.line.style;
        this.container.addShape('path', { attrs: bt({ path: n }, i) });
      }),
      (r.prototype.getXAxisOption = function (t, n, i, a) {
        return a.rowIndex !== a.rowValuesLength - 1 ? x(x({}, i), { title: null, label: null }) : i;
      }),
      (r.prototype.getYAxisOption = function (t, n, i, a) {
        return a.originColIndex !== 0 && a.columnIndex !== 0
          ? x(x({}, i), { title: null, label: null })
          : i;
      }),
      r
    );
  })(Ei);
function op(e) {
  var r = J([], q(e), !1);
  r.sort(function (n, i) {
    return n - i;
  });
  var t = r.length;
  return t === 0 ? 0 : t % 2 === 1 ? r[(t - 1) / 2] : (r[t / 2] + r[t / 2 - 1]) / 2;
}
function RP(e) {
  var r = ie(
    e,
    function (t, n) {
      return (t += isNaN(n) || !at(n) ? 0 : n);
    },
    0,
  );
  return e.length === 0 ? 0 : r / e.length;
}
function Do(e, r) {
  if (!r) return null;
  var t;
  switch (e) {
    case 'start':
      return 0;
    case 'center':
      return 0.5;
    case 'end':
      return 1;
    case 'median': {
      t = r.isCategory
        ? op(
            r.values.map(function (n, i) {
              return i;
            }),
          )
        : op(r.values);
      break;
    }
    case 'mean': {
      t = r.isCategory ? (r.values.length - 1) / 2 : RP(r.values);
      break;
    }
    case 'min':
      t = r.isCategory ? 0 : r[e];
      break;
    case 'max':
      t = r.isCategory ? r.values.length - 1 : r[e];
      break;
    default:
      t = e;
      break;
  }
  return r.scale(t);
}
var Bo = ['regionFilter', 'shape'],
  $P = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      return (
        (n.cache = new Map()),
        (n.foregroundContainer = n.view.getLayer($t.FORE).addGroup()),
        (n.backgroundContainer = n.view.getLayer($t.BG).addGroup()),
        (n.option = []),
        n
      );
    }
    return (
      Object.defineProperty(r.prototype, 'name', {
        get: function () {
          return 'annotation';
        },
        enumerable: !1,
        configurable: !0,
      }),
      (r.prototype.init = function () {}),
      (r.prototype.layout = function () {
        this.update();
      }),
      (r.prototype.render = function () {}),
      (r.prototype.update = function () {
        var t = this;
        this.onAfterRender(function () {
          var i = new Map();
          M(t.option, function (a) {
            if (fn(Bo, a.type)) {
              var o = t.updateOrCreate(a);
              o && i.set(t.getCacheKey(a), o);
            }
          }),
            (t.cache = t.syncCache(i));
        });
        var n = new Map();
        M(this.option, function (i) {
          if (!fn(Bo, i.type)) {
            var a = t.updateOrCreate(i);
            a && n.set(t.getCacheKey(i), a);
          }
        }),
          (this.cache = this.syncCache(n));
      }),
      (r.prototype.clear = function (t) {
        t === void 0 && (t = !1),
          e.prototype.clear.call(this),
          this.clearComponents(),
          this.foregroundContainer.clear(),
          this.backgroundContainer.clear(),
          t && (this.option = []);
      }),
      (r.prototype.destroy = function () {
        this.clear(!0), this.foregroundContainer.remove(!0), this.backgroundContainer.remove(!0);
      }),
      (r.prototype.getComponents = function () {
        var t = [];
        return (
          this.cache.forEach(function (n) {
            t.push(n);
          }),
          t
        );
      }),
      (r.prototype.clearComponents = function () {
        this.getComponents().forEach(function (t) {
          t.component.destroy();
        }),
          this.cache.clear();
      }),
      (r.prototype.onAfterRender = function (t) {
        var n = !1;
        this.view.getOptions().animate &&
          this.view.geometries.forEach(function (i) {
            i.animateOption &&
              (i.once(Gr.AFTER_DRAW_ANIMATE, function () {
                t();
              }),
              (n = !0));
          }),
          n ||
            this.view.getRootView().once(ut.AFTER_RENDER, function () {
              t();
            });
      }),
      (r.prototype.createAnnotation = function (t) {
        var n = t.type,
          i = tE[Nn(n)];
        if (i) {
          var a = this.getAnnotationTheme(n),
            o = this.getAnnotationCfg(n, t, a);
          if (!o) return null;
          var s = new i(o);
          return {
            component: s,
            layer: this.isTop(o) ? $t.FORE : $t.BG,
            direction: H.NONE,
            type: Xt.ANNOTATION,
            extra: t,
          };
        }
      }),
      (r.prototype.annotation = function (t) {
        this.option.push(t);
      }),
      (r.prototype.arc = function (t) {
        return this.annotation(x({ type: 'arc' }, t)), this;
      }),
      (r.prototype.image = function (t) {
        return this.annotation(x({ type: 'image' }, t)), this;
      }),
      (r.prototype.line = function (t) {
        return this.annotation(x({ type: 'line' }, t)), this;
      }),
      (r.prototype.region = function (t) {
        return this.annotation(x({ type: 'region' }, t)), this;
      }),
      (r.prototype.text = function (t) {
        return this.annotation(x({ type: 'text' }, t)), this;
      }),
      (r.prototype.dataMarker = function (t) {
        return this.annotation(x({ type: 'dataMarker' }, t)), this;
      }),
      (r.prototype.dataRegion = function (t) {
        this.annotation(x({ type: 'dataRegion' }, t));
      }),
      (r.prototype.regionFilter = function (t) {
        this.annotation(x({ type: 'regionFilter' }, t));
      }),
      (r.prototype.shape = function (t) {
        this.annotation(x({ type: 'shape' }, t));
      }),
      (r.prototype.html = function (t) {
        this.annotation(x({ type: 'html' }, t));
      }),
      (r.prototype.parsePosition = function (t) {
        var n,
          i,
          a = this.view.getXScale(),
          o = this.view.getScalesByDim('y'),
          s = U(t) ? t.call(null, a, o) : t,
          l = 0,
          u = 0;
        if (N(s)) {
          var c = q(s, 2),
            h = c[0],
            f = c[1];
          if (et(h) && h.indexOf('%') !== -1 && !isNaN(h.slice(0, -1)))
            return this.parsePercentPosition(s);
          (l = Do(h, a)), (u = Do(f, Object.values(o)[0]));
        } else if (!$(s))
          try {
            for (var v = pt(Ci(s)), d = v.next(); !d.done; d = v.next()) {
              var p = d.value,
                g = s[p];
              p === a.field && (l = Do(g, a)), o[p] && (u = Do(g, o[p]));
            }
          } catch (y) {
            n = { error: y };
          } finally {
            try {
              d && !d.done && (i = v.return) && i.call(v);
            } finally {
              if (n) throw n.error;
            }
          }
        return isNaN(l) || isNaN(u) ? null : this.view.getCoordinate().convert({ x: l, y: u });
      }),
      (r.prototype.getRegionPoints = function (t, n) {
        var i = this,
          a = this.view.getXScale(),
          o = this.view.getScalesByDim('y'),
          s = Object.values(o)[0],
          l = a.field,
          u = this.view.getData(),
          c = N(t) ? t[0] : t[l],
          h = N(n) ? n[0] : n[l],
          f = [],
          v;
        return (
          M(u, function (d, p) {
            if ((d[l] === c && (v = p), p >= v)) {
              var g = i.parsePosition([d[l], d[s.field]]);
              g && f.push(g);
            }
            if (d[l] === h) return !1;
          }),
          f
        );
      }),
      (r.prototype.parsePercentPosition = function (t) {
        var n = parseFloat(t[0]) / 100,
          i = parseFloat(t[1]) / 100,
          a = this.view.getCoordinate(),
          o = a.start,
          s = a.end,
          l = { x: Math.min(o.x, s.x), y: Math.min(o.y, s.y) },
          u = a.getWidth() * n + l.x,
          c = a.getHeight() * i + l.y;
        return { x: u, y: c };
      }),
      (r.prototype.getCoordinateBBox = function () {
        var t = this.view.getCoordinate(),
          n = t.start,
          i = t.end,
          a = t.getWidth(),
          o = t.getHeight(),
          s = { x: Math.min(n.x, i.x), y: Math.min(n.y, i.y) };
        return {
          x: s.x,
          y: s.y,
          minX: s.x,
          minY: s.y,
          maxX: s.x + a,
          maxY: s.y + o,
          width: a,
          height: o,
        };
      }),
      (r.prototype.getAnnotationCfg = function (t, n, i) {
        var a = this,
          o = this.view.getCoordinate(),
          s = this.view.getCanvas(),
          l = {};
        if ($(n)) return null;
        var u = n.start,
          c = n.end,
          h = n.position,
          f = this.parsePosition(u),
          v = this.parsePosition(c),
          d = this.parsePosition(h);
        if (['arc', 'image', 'line', 'region', 'regionFilter'].includes(t) && (!f || !v))
          return null;
        if (['text', 'dataMarker', 'html'].includes(t) && !d) return null;
        if (t === 'arc') {
          var p = n;
          p.start, p.end;
          var g = wt(p, ['start', 'end']),
            y = vi(o, f),
            m = vi(o, v);
          y > m && (m = Math.PI * 2 + m),
            (l = x(x({}, g), {
              center: o.getCenter(),
              radius: vl(o, f),
              startAngle: y,
              endAngle: m,
            }));
        } else if (t === 'image') {
          var b = n;
          b.start, b.end;
          var g = wt(b, ['start', 'end']);
          l = x(x({}, g), { start: f, end: v, src: n.src });
        } else if (t === 'line') {
          var w = n;
          w.start, w.end;
          var g = wt(w, ['start', 'end']);
          l = x(x({}, g), { start: f, end: v, text: A(n, 'text', null) });
        } else if (t === 'region') {
          var S = n;
          S.start, S.end;
          var g = wt(S, ['start', 'end']);
          l = x(x({}, g), { start: f, end: v });
        } else if (t === 'text') {
          var C = this.view.getData(),
            F = n;
          F.position;
          var E = F.content,
            g = wt(F, ['position', 'content']),
            I = E;
          U(E) && (I = E(C)), (l = x(x(x({}, d), g), { content: I }));
        } else if (t === 'dataMarker') {
          var T = n;
          T.position;
          var P = T.point,
            R = T.line,
            B = T.text,
            G = T.autoAdjust,
            j = T.direction,
            g = wt(T, ['position', 'point', 'line', 'text', 'autoAdjust', 'direction']);
          l = x(x(x({}, g), d), {
            coordinateBBox: this.getCoordinateBBox(),
            point: P,
            line: R,
            text: B,
            autoAdjust: G,
            direction: j,
          });
        } else if (t === 'dataRegion') {
          var D = n,
            z = D.start,
            X = D.end,
            Y = D.region,
            B = D.text,
            V = D.lineLength,
            g = wt(D, ['start', 'end', 'region', 'text', 'lineLength']);
          l = x(x({}, g), {
            points: this.getRegionPoints(z, X),
            region: Y,
            text: B,
            lineLength: V,
          });
        } else if (t === 'regionFilter') {
          var W = n;
          W.start, W.end;
          var tt = W.apply,
            rt = W.color,
            g = wt(W, ['start', 'end', 'apply', 'color']),
            Z = this.view.geometries,
            K = [],
            nt = function (Ke) {
              Ke &&
                (Ke.isGroup()
                  ? Ke.getChildren().forEach(function (Bi) {
                      return nt(Bi);
                    })
                  : K.push(Ke));
            };
          M(Z, function (Ke) {
            tt
              ? fn(tt, Ke.type) &&
                M(Ke.elements, function (Bi) {
                  nt(Bi.shape);
                })
              : M(Ke.elements, function (Bi) {
                  nt(Bi.shape);
                });
          }),
            (l = x(x({}, g), { color: rt, shapes: K, start: f, end: v }));
        } else if (t === 'shape') {
          var st = n,
            ft = st.render,
            Et = wt(st, ['render']),
            Yt = function (vw) {
              if (U(n.render)) return ft(vw, a.view, { parsePosition: a.parsePosition.bind(a) });
            };
          l = x(x({}, Et), { render: Yt });
        } else if (t === 'html') {
          var Se = n,
            fr = Se.html;
          Se.position;
          var Et = wt(Se, ['html', 'position']),
            sn = function (Ke) {
              return U(fr) ? fr(Ke, a.view) : fr;
            };
          l = x(x(x({}, Et), d), { parent: s.get('el').parentNode, html: sn });
        }
        var Er = _(
          {},
          i,
          x(x({}, l), { top: n.top, style: n.style, offsetX: n.offsetX, offsetY: n.offsetY }),
        );
        return (
          t !== 'html' && (Er.container = this.getComponentContainer(Er)),
          (Er.animate =
            this.view.getOptions().animate && Er.animate && A(n, 'animate', Er.animate)),
          (Er.animateOption = _({}, pi, Er.animateOption, n.animateOption)),
          Er
        );
      }),
      (r.prototype.isTop = function (t) {
        return A(t, 'top', !0);
      }),
      (r.prototype.getComponentContainer = function (t) {
        return this.isTop(t) ? this.foregroundContainer : this.backgroundContainer;
      }),
      (r.prototype.getAnnotationTheme = function (t) {
        return A(this.view.getTheme(), ['components', 'annotation', t], {});
      }),
      (r.prototype.updateOrCreate = function (t) {
        var n = this.cache.get(this.getCacheKey(t));
        if (n) {
          var i = t.type,
            a = this.getAnnotationTheme(i),
            o = this.getAnnotationCfg(i, t, a);
          o && ve(o, ['container']),
            n.component.update(x(x({}, o || {}), { visible: !!o })),
            fn(Bo, t.type) && n.component.render();
        } else
          (n = this.createAnnotation(t)),
            n && (n.component.init(), fn(Bo, t.type) && n.component.render());
        return n;
      }),
      (r.prototype.syncCache = function (t) {
        var n = this,
          i = new Map(this.cache);
        return (
          t.forEach(function (a, o) {
            i.set(o, a);
          }),
          i.forEach(function (a, o) {
            Xe(n.option, function (s) {
              return o === n.getCacheKey(s);
            }) || (a.component.destroy(), i.delete(o));
          }),
          i
        );
      }),
      (r.prototype.getCacheKey = function (t) {
        return t;
      }),
      r
    );
  })(ki);
function sp(e, r) {
  var t = _({}, A(e, ['components', 'axis', 'common']), A(e, ['components', 'axis', r]));
  return A(t, ['grid'], {});
}
function Ro(e, r, t, n) {
  var i = [],
    a = r.getTicks();
  return (
    e.isPolar && a.push({ value: 1, text: '', tickValue: '' }),
    a.reduce(function (o, s, l) {
      var u = s.value;
      if (n)
        i.push({
          points: [
            e.convert(t === 'y' ? { x: 0, y: u } : { x: u, y: 0 }),
            e.convert(t === 'y' ? { x: 1, y: u } : { x: u, y: 1 }),
          ],
        });
      else if (l) {
        var c = o.value,
          h = (c + u) / 2;
        i.push({
          points: [
            e.convert(t === 'y' ? { x: 0, y: h } : { x: h, y: 0 }),
            e.convert(t === 'y' ? { x: 1, y: h } : { x: h, y: 1 }),
          ],
        });
      }
      return s;
    }, a[0]),
    i
  );
}
function yu(e, r, t, n, i) {
  var a = r.values.length,
    o = [],
    s = t.getTicks();
  return (
    s.reduce(function (l, u) {
      var c = l ? l.value : u.value,
        h = u.value,
        f = (c + h) / 2;
      return (
        i === 'x'
          ? o.push({
              points: [e.convert({ x: n ? h : f, y: 0 }), e.convert({ x: n ? h : f, y: 1 })],
            })
          : o.push({
              points: kt(Array(a + 1), function (v, d) {
                return e.convert({ x: d / a, y: n ? h : f });
              }),
            }),
        u
      );
    }, s[0]),
    o
  );
}
function lp(e, r) {
  var t = A(r, 'grid');
  if (t === null) return !1;
  var n = A(e, 'grid');
  return !(t === void 0 && n === null);
}
var Lr = ['container'],
  up = x(x({}, pi), { appear: null }),
  NP = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      return (
        (n.cache = new Map()),
        (n.gridContainer = n.view.getLayer($t.BG).addGroup()),
        (n.gridForeContainer = n.view.getLayer($t.FORE).addGroup()),
        (n.axisContainer = n.view.getLayer($t.BG).addGroup()),
        (n.axisForeContainer = n.view.getLayer($t.FORE).addGroup()),
        n
      );
    }
    return (
      Object.defineProperty(r.prototype, 'name', {
        get: function () {
          return 'axis';
        },
        enumerable: !1,
        configurable: !0,
      }),
      (r.prototype.init = function () {}),
      (r.prototype.render = function () {
        this.update();
      }),
      (r.prototype.layout = function () {
        var t = this,
          n = this.view.getCoordinate();
        M(this.getComponents(), function (i) {
          var a = i.component,
            o = i.direction,
            s = i.type,
            l = i.extra,
            u = l.dim,
            c = l.scale,
            h = l.alignTick,
            f;
          if (s === Xt.AXIS)
            n.isPolar
              ? u === 'x'
                ? (f = n.isTransposed ? Co(n, o) : uu(n))
                : u === 'y' && (f = n.isTransposed ? uu(n) : Co(n, o))
              : (f = Co(n, o));
          else if (s === Xt.GRID)
            if (n.isPolar) {
              var v = void 0;
              n.isTransposed
                ? (v = u === 'x' ? yu(n, t.view.getYScales()[0], c, h, u) : Ro(n, c, u, h))
                : (v = u === 'x' ? Ro(n, c, u, h) : yu(n, t.view.getXScale(), c, h, u)),
                (f = { items: v, center: t.view.getCoordinate().getCenter() });
            } else f = { items: Ro(n, c, u, h) };
          a.update(f);
        });
      }),
      (r.prototype.update = function () {
        this.option = this.view.getOptions().axes;
        var t = new Map();
        this.updateXAxes(t), this.updateYAxes(t);
        var n = new Map();
        this.cache.forEach(function (i, a) {
          t.has(a) ? n.set(a, i) : i.component.destroy();
        }),
          (this.cache = n);
      }),
      (r.prototype.clear = function () {
        e.prototype.clear.call(this),
          this.cache.clear(),
          this.gridContainer.clear(),
          this.gridForeContainer.clear(),
          this.axisContainer.clear(),
          this.axisForeContainer.clear();
      }),
      (r.prototype.destroy = function () {
        e.prototype.destroy.call(this),
          this.gridContainer.remove(!0),
          this.gridForeContainer.remove(!0),
          this.axisContainer.remove(!0),
          this.axisForeContainer.remove(!0);
      }),
      (r.prototype.getComponents = function () {
        var t = [];
        return (
          this.cache.forEach(function (n) {
            t.push(n);
          }),
          t
        );
      }),
      (r.prototype.updateXAxes = function (t) {
        var n = this.view.getXScale();
        if (!(!n || n.isIdentity)) {
          var i = xs(this.option, n.field);
          if (i !== !1) {
            var a = xd(i, H.BOTTOM),
              o = $t.BG,
              s = 'x',
              l = this.view.getCoordinate(),
              u = this.getId('axis', n.field),
              c = this.getId('grid', n.field);
            if (l.isRect) {
              var h = this.cache.get(u);
              if (h) {
                var f = this.getLineAxisCfg(n, i, a);
                ve(f, Lr), h.component.update(f), t.set(u, h);
              } else (h = this.createLineAxis(n, i, o, a, s)), this.cache.set(u, h), t.set(u, h);
              var v = this.cache.get(c);
              if (v) {
                var f = this.getLineGridCfg(n, i, a, s);
                ve(f, Lr), v.component.update(f), t.set(c, v);
              } else
                (v = this.createLineGrid(n, i, o, a, s)), v && (this.cache.set(c, v), t.set(c, v));
            } else if (l.isPolar) {
              var h = this.cache.get(u);
              if (h) {
                var f = l.isTransposed
                  ? this.getLineAxisCfg(n, i, H.RADIUS)
                  : this.getCircleAxisCfg(n, i, a);
                ve(f, Lr), h.component.update(f), t.set(u, h);
              } else {
                if (l.isTransposed) {
                  if (pn(i)) return;
                  h = this.createLineAxis(n, i, o, H.RADIUS, s);
                } else h = this.createCircleAxis(n, i, o, a, s);
                this.cache.set(u, h), t.set(u, h);
              }
              var v = this.cache.get(c);
              if (v) {
                var f = l.isTransposed
                  ? this.getCircleGridCfg(n, i, H.RADIUS, s)
                  : this.getLineGridCfg(n, i, H.CIRCLE, s);
                ve(f, Lr), v.component.update(f), t.set(c, v);
              } else {
                if (l.isTransposed) {
                  if (pn(i)) return;
                  v = this.createCircleGrid(n, i, o, H.RADIUS, s);
                } else v = this.createLineGrid(n, i, o, H.CIRCLE, s);
                v && (this.cache.set(c, v), t.set(c, v));
              }
            }
          }
        }
      }),
      (r.prototype.updateYAxes = function (t) {
        var n = this,
          i = this.view.getYScales();
        M(i, function (a, o) {
          if (!(!a || a.isIdentity)) {
            var s = a.field,
              l = xs(n.option, s);
            if (l !== !1) {
              var u = $t.BG,
                c = 'y',
                h = n.getId('axis', s),
                f = n.getId('grid', s),
                v = n.view.getCoordinate();
              if (v.isRect) {
                var d = xd(l, o === 0 ? H.LEFT : H.RIGHT),
                  p = n.cache.get(h);
                if (p) {
                  var g = n.getLineAxisCfg(a, l, d);
                  ve(g, Lr), p.component.update(g), t.set(h, p);
                } else (p = n.createLineAxis(a, l, u, d, c)), n.cache.set(h, p), t.set(h, p);
                var y = n.cache.get(f);
                if (y) {
                  var g = n.getLineGridCfg(a, l, d, c);
                  ve(g, Lr), y.component.update(g), t.set(f, y);
                } else (y = n.createLineGrid(a, l, u, d, c)), y && (n.cache.set(f, y), t.set(f, y));
              } else if (v.isPolar) {
                var p = n.cache.get(h);
                if (p) {
                  var g = v.isTransposed
                    ? n.getCircleAxisCfg(a, l, H.CIRCLE)
                    : n.getLineAxisCfg(a, l, H.RADIUS);
                  ve(g, Lr), p.component.update(g), t.set(h, p);
                } else {
                  if (v.isTransposed) {
                    if (pn(l)) return;
                    p = n.createCircleAxis(a, l, u, H.CIRCLE, c);
                  } else p = n.createLineAxis(a, l, u, H.RADIUS, c);
                  n.cache.set(h, p), t.set(h, p);
                }
                var y = n.cache.get(f);
                if (y) {
                  var g = v.isTransposed
                    ? n.getLineGridCfg(a, l, H.CIRCLE, c)
                    : n.getCircleGridCfg(a, l, H.RADIUS, c);
                  ve(g, Lr), y.component.update(g), t.set(f, y);
                } else {
                  if (v.isTransposed) {
                    if (pn(l)) return;
                    y = n.createLineGrid(a, l, u, H.CIRCLE, c);
                  } else y = n.createCircleGrid(a, l, u, H.RADIUS, c);
                  y && (n.cache.set(f, y), t.set(f, y));
                }
              }
            }
          }
        });
      }),
      (r.prototype.createLineAxis = function (t, n, i, a, o) {
        var s = {
          component: new KE(this.getLineAxisCfg(t, n, a)),
          layer: i,
          direction: a === H.RADIUS ? H.NONE : a,
          type: Xt.AXIS,
          extra: { dim: o, scale: t },
        };
        return s.component.set('field', t.field), s.component.init(), s;
      }),
      (r.prototype.createLineGrid = function (t, n, i, a, o) {
        var s = this.getLineGridCfg(t, n, a, o);
        if (s) {
          var l = {
            component: new JE(s),
            layer: i,
            direction: H.NONE,
            type: Xt.GRID,
            extra: { dim: o, scale: t, alignTick: A(s, 'alignTick', !0) },
          };
          return l.component.init(), l;
        }
      }),
      (r.prototype.createCircleAxis = function (t, n, i, a, o) {
        var s = {
          component: new QE(this.getCircleAxisCfg(t, n, a)),
          layer: i,
          direction: a,
          type: Xt.AXIS,
          extra: { dim: o, scale: t },
        };
        return s.component.set('field', t.field), s.component.init(), s;
      }),
      (r.prototype.createCircleGrid = function (t, n, i, a, o) {
        var s = this.getCircleGridCfg(t, n, a, o);
        if (s) {
          var l = {
            component: new tT(s),
            layer: i,
            direction: H.NONE,
            type: Xt.GRID,
            extra: { dim: o, scale: t, alignTick: A(s, 'alignTick', !0) },
          };
          return l.component.init(), l;
        }
      }),
      (r.prototype.getLineAxisCfg = function (t, n, i) {
        var a = A(n, ['top']) ? this.axisForeContainer : this.axisContainer,
          o = this.view.getCoordinate(),
          s = Co(o, i),
          l = wd(t, n),
          u = Mo(this.view.getTheme(), i),
          c = A(n, ['title'])
            ? _(
                { title: { style: { text: l } } },
                { title: md(this.view.getTheme(), i, n.title) },
                n,
              )
            : n,
          h = _(
            x(x({ container: a }, s), {
              ticks: t.getTicks().map(function (b) {
                return { id: ''.concat(b.tickValue), name: b.text, value: b.value };
              }),
              verticalFactor: o.isPolar ? yd(s, o.getCenter()) * -1 : yd(s, o.getCenter()),
              theme: u,
            }),
            u,
            c,
          ),
          f = this.getAnimateCfg(h),
          v = f.animate,
          d = f.animateOption;
        (h.animateOption = d), (h.animate = v);
        var p = Mm(s),
          g = A(h, 'verticalLimitLength', p ? 1 / 3 : 1 / 2);
        if (g <= 1) {
          var y = this.view.getCanvas().get('width'),
            m = this.view.getCanvas().get('height');
          h.verticalLimitLength = g * (p ? y : m);
        }
        return h;
      }),
      (r.prototype.getLineGridCfg = function (t, n, i, a) {
        if (lp(Mo(this.view.getTheme(), i), n)) {
          var o = sp(this.view.getTheme(), i),
            s = _(
              { container: A(n, ['top']) ? this.gridForeContainer : this.gridContainer },
              o,
              A(n, 'grid'),
              this.getAnimateCfg(n),
            );
          return (s.items = Ro(this.view.getCoordinate(), t, a, A(s, 'alignTick', !0))), s;
        }
      }),
      (r.prototype.getCircleAxisCfg = function (t, n, i) {
        var a = A(n, ['top']) ? this.axisForeContainer : this.axisContainer,
          o = this.view.getCoordinate(),
          s = t.getTicks().map(function (p) {
            return { id: ''.concat(p.tickValue), name: p.text, value: p.value };
          });
        !t.isCategory &&
          Math.abs(o.endAngle - o.startAngle) === Math.PI * 2 &&
          s.length &&
          (s[s.length - 1].name = '');
        var l = wd(t, n),
          u = Mo(this.view.getTheme(), H.CIRCLE),
          c = A(n, ['title'])
            ? _(
                { title: { style: { text: l } } },
                { title: md(this.view.getTheme(), i, n.title) },
                n,
              )
            : n,
          h = _(
            x(x({ container: a }, uu(this.view.getCoordinate())), {
              ticks: s,
              verticalFactor: 1,
              theme: u,
            }),
            u,
            c,
          ),
          f = this.getAnimateCfg(h),
          v = f.animate,
          d = f.animateOption;
        return (h.animate = v), (h.animateOption = d), h;
      }),
      (r.prototype.getCircleGridCfg = function (t, n, i, a) {
        if (lp(Mo(this.view.getTheme(), i), n)) {
          var o = sp(this.view.getTheme(), H.RADIUS),
            s = _(
              {
                container: A(n, ['top']) ? this.gridForeContainer : this.gridContainer,
                center: this.view.getCoordinate().getCenter(),
              },
              o,
              A(n, 'grid'),
              this.getAnimateCfg(n),
            ),
            l = A(s, 'alignTick', !0),
            u = a === 'x' ? this.view.getYScales()[0] : this.view.getXScale();
          return (s.items = yu(this.view.getCoordinate(), u, t, l, a)), s;
        }
      }),
      (r.prototype.getId = function (t, n) {
        var i = this.view.getCoordinate();
        return ''.concat(t, '-').concat(n, '-').concat(i.type);
      }),
      (r.prototype.getAnimateCfg = function (t) {
        return {
          animate: this.view.getOptions().animate && A(t, 'animate'),
          animateOption: t && t.animateOption ? _({}, up, t.animateOption) : up,
        };
      }),
      r
    );
  })(ki);
function zr(e, r, t) {
  return t === H.TOP
    ? [e.minX + e.width / 2 - r.width / 2, e.minY]
    : t === H.BOTTOM
    ? [e.minX + e.width / 2 - r.width / 2, e.maxY - r.height]
    : t === H.LEFT
    ? [e.minX, e.minY + e.height / 2 - r.height / 2]
    : t === H.RIGHT
    ? [e.maxX - r.width, e.minY + e.height / 2 - r.height / 2]
    : t === H.TOP_LEFT || t === H.LEFT_TOP
    ? [e.tl.x, e.tl.y]
    : t === H.TOP_RIGHT || t === H.RIGHT_TOP
    ? [e.tr.x - r.width, e.tr.y]
    : t === H.BOTTOM_LEFT || t === H.LEFT_BOTTOM
    ? [e.bl.x, e.bl.y - r.height]
    : t === H.BOTTOM_RIGHT || t === H.RIGHT_BOTTOM
    ? [e.br.x - r.width, e.br.y - r.height]
    : [0, 0];
}
function cp(e, r) {
  return ui(e) ? (e === !1 ? !1 : {}) : A(e, [r], e);
}
function $o(e) {
  return A(e, 'position', H.BOTTOM);
}
var zP = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      return (n.container = n.view.getLayer($t.FORE).addGroup()), n;
    }
    return (
      Object.defineProperty(r.prototype, 'name', {
        get: function () {
          return 'legend';
        },
        enumerable: !1,
        configurable: !0,
      }),
      (r.prototype.init = function () {}),
      (r.prototype.render = function () {
        this.update();
      }),
      (r.prototype.layout = function () {
        var t = this;
        (this.layoutBBox = this.view.viewBBox),
          M(this.components, function (n) {
            var i = n.component,
              a = n.direction,
              o = cu(a),
              s = i.get('maxWidthRatio'),
              l = i.get('maxHeightRatio'),
              u = t.getCategoryLegendSizeCfg(o, s, l),
              c = i.get('maxWidth'),
              h = i.get('maxHeight');
            i.update({
              maxWidth: Math.min(u.maxWidth, c || 0),
              maxHeight: Math.min(u.maxHeight, h || 0),
            });
            var f = i.get('padding'),
              v = i.getLayoutBBox(),
              d = new le(v.x, v.y, v.width, v.height).expand(f),
              p = q(zr(t.view.viewBBox, d, a), 2),
              g = p[0],
              y = p[1],
              m = q(zr(t.layoutBBox, d, a), 2),
              b = m[0],
              w = m[1],
              S = 0,
              C = 0;
            a.startsWith('top') || a.startsWith('bottom') ? ((S = g), (C = w)) : ((S = b), (C = y)),
              i.setLocation({ x: S + f[3], y: C + f[0] }),
              (t.layoutBBox = t.layoutBBox.cut(d, a));
          });
      }),
      (r.prototype.update = function () {
        var t = this;
        this.option = this.view.getOptions().legends;
        var n = {},
          i = function (f, v, d) {
            var p = t.getId(d.field),
              g = t.getComponentById(p);
            if (g) {
              var y = void 0,
                m = cp(t.option, d.field);
              m !== !1 &&
                (A(m, 'custom')
                  ? (y = t.getCategoryCfg(f, v, d, m, !0))
                  : d.isLinear
                  ? (y = t.getContinuousCfg(f, v, d, m))
                  : d.isCategory && (y = t.getCategoryCfg(f, v, d, m))),
                y &&
                  (ve(y, ['container']), (g.direction = $o(m)), g.component.update(y), (n[p] = !0));
            } else {
              var b = t.createFieldLegend(f, v, d);
              b && (b.component.init(), t.components.push(b), (n[p] = !0));
            }
          };
        if (A(this.option, 'custom')) {
          var a = 'global-custom',
            o = this.getComponentById(a);
          if (o) {
            var s = this.getCategoryCfg(void 0, void 0, void 0, this.option, !0);
            ve(s, ['container']), o.component.update(s), (n[a] = !0);
          } else {
            var l = this.createCustomLegend(void 0, void 0, void 0, this.option);
            if (l) {
              l.init();
              var u = $t.FORE,
                c = $o(this.option);
              this.components.push({
                id: a,
                component: l,
                layer: u,
                direction: c,
                type: Xt.LEGEND,
                extra: void 0,
              }),
                (n[a] = !0);
            }
          }
        } else this.loopLegends(i);
        var h = [];
        M(this.getComponents(), function (f) {
          n[f.id] ? h.push(f) : f.component.destroy();
        }),
          (this.components = h);
      }),
      (r.prototype.clear = function () {
        e.prototype.clear.call(this), this.container.clear();
      }),
      (r.prototype.destroy = function () {
        e.prototype.destroy.call(this), this.container.remove(!0);
      }),
      (r.prototype.getGeometries = function (t) {
        var n = this,
          i = t.geometries;
        return (
          M(t.views, function (a) {
            i = i.concat(n.getGeometries(a));
          }),
          i
        );
      }),
      (r.prototype.loopLegends = function (t) {
        var n = this.view.getRootView() === this.view;
        if (n) {
          var i = this.getGeometries(this.view),
            a = {};
          M(i, function (o) {
            var s = o.getGroupAttributes();
            M(s, function (l) {
              var u = l.getScale(l.type);
              !u || u.type === 'identity' || a[u.field] || (t(o, l, u), (a[u.field] = !0));
            });
          });
        }
      }),
      (r.prototype.createFieldLegend = function (t, n, i) {
        var a,
          o = cp(this.option, i.field),
          s = $t.FORE,
          l = $o(o);
        if (
          (o !== !1 &&
            (A(o, 'custom')
              ? (a = this.createCustomLegend(t, n, i, o))
              : i.isLinear
              ? (a = this.createContinuousLegend(t, n, i, o))
              : i.isCategory && (a = this.createCategoryLegend(t, n, i, o))),
          a)
        )
          return (
            a.set('field', i.field),
            {
              id: this.getId(i.field),
              component: a,
              layer: s,
              direction: l,
              type: Xt.LEGEND,
              extra: { scale: i },
            }
          );
      }),
      (r.prototype.createCustomLegend = function (t, n, i, a) {
        var o = this.getCategoryCfg(t, n, i, a, !0);
        return new dd(o);
      }),
      (r.prototype.createContinuousLegend = function (t, n, i, a) {
        var o = this.getContinuousCfg(t, n, i, ve(a, ['value']));
        return new eT(o);
      }),
      (r.prototype.createCategoryLegend = function (t, n, i, a) {
        var o = this.getCategoryCfg(t, n, i, a);
        return new dd(o);
      }),
      (r.prototype.getContinuousCfg = function (t, n, i, a) {
        var o = i.getTicks(),
          s = Xe(o, function (p) {
            return p.value === 0;
          }),
          l = Xe(o, function (p) {
            return p.value === 1;
          }),
          u = o.map(function (p) {
            var g = p.value,
              y = p.tickValue,
              m = n.mapping(i.invert(g)).join('');
            return { value: y, attrValue: m, color: m, scaleValue: g };
          });
        s ||
          u.push({
            value: i.min,
            attrValue: n.mapping(i.invert(0)).join(''),
            color: n.mapping(i.invert(0)).join(''),
            scaleValue: 0,
          }),
          l ||
            u.push({
              value: i.max,
              attrValue: n.mapping(i.invert(1)).join(''),
              color: n.mapping(i.invert(1)).join(''),
              scaleValue: 1,
            }),
          u.sort(function (p, g) {
            return p.value - g.value;
          });
        var c = {
          min: Me(u).value,
          max: Ht(u).value,
          colors: [],
          rail: { type: n.type },
          track: {},
        };
        n.type === 'size' &&
          (c.track = {
            style: { fill: n.type === 'size' ? this.view.getTheme().defaultColor : void 0 },
          }),
          n.type === 'color' &&
            (c.colors = u.map(function (p) {
              return p.attrValue;
            }));
        var h = this.container,
          f = $o(a),
          v = cu(f),
          d = A(a, 'title');
        return (
          d && (d = _({ text: ka(i) }, d)),
          (c.container = h),
          (c.layout = v),
          (c.title = d),
          (c.animateOption = pi),
          this.mergeLegendCfg(c, a, 'continuous')
        );
      }),
      (r.prototype.getCategoryCfg = function (t, n, i, a, o) {
        var s = this.container,
          l = A(a, 'position', H.BOTTOM),
          u = Pd(this.view.getTheme(), l),
          c = A(u, ['marker']),
          h = A(a, 'marker'),
          f = cu(l),
          v = A(u, ['pageNavigator']),
          d = A(a, 'pageNavigator'),
          p = o ? Ak(c, h, a.items) : a0(this.view, t, n, c, h),
          g = A(a, 'title');
        g && (g = _({ text: i ? ka(i) : '' }, g));
        var y = A(a, 'maxWidthRatio'),
          m = A(a, 'maxHeightRatio'),
          b = this.getCategoryLegendSizeCfg(f, y, m);
        (b.container = s),
          (b.layout = f),
          (b.items = p),
          (b.title = g),
          (b.animateOption = pi),
          (b.pageNavigator = _({}, v, d));
        var w = this.mergeLegendCfg(b, a, l);
        w.reversed && w.items.reverse();
        var S = A(w, 'maxItemWidth');
        return S && S <= 1 && (w.maxItemWidth = this.view.viewBBox.width * S), w;
      }),
      (r.prototype.mergeLegendCfg = function (t, n, i) {
        var a = i.split('-')[0],
          o = Pd(this.view.getTheme(), a);
        return _({}, o, t, n);
      }),
      (r.prototype.getId = function (t) {
        return ''.concat(this.name, '-').concat(t);
      }),
      (r.prototype.getComponentById = function (t) {
        return Xe(this.components, function (n) {
          return n.id === t;
        });
      }),
      (r.prototype.getCategoryLegendSizeCfg = function (t, n, i) {
        n === void 0 && (n = jf), i === void 0 && (i = jf);
        var a = this.view.viewBBox,
          o = a.width,
          s = a.height;
        return t === 'vertical'
          ? { maxWidth: o * n, maxHeight: s }
          : { maxWidth: o, maxHeight: s * i };
      }),
      r
    );
  })(ki),
  GP = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      return (
        (n.onChangeFn = $r),
        (n.resetMeasure = function () {
          n.clear();
        }),
        (n.onValueChange = function (i) {
          var a = q(i, 2),
            o = a[0],
            s = a[1];
          (n.start = o), (n.end = s), n.changeViewData(o, s);
        }),
        (n.container = n.view.getLayer($t.FORE).addGroup()),
        (n.onChangeFn = Wc(n.onValueChange, 20, { leading: !0 })),
        (n.width = 0),
        n.view.on(ut.BEFORE_CHANGE_DATA, n.resetMeasure),
        n.view.on(ut.BEFORE_CHANGE_SIZE, n.resetMeasure),
        n
      );
    }
    return (
      Object.defineProperty(r.prototype, 'name', {
        get: function () {
          return 'slider';
        },
        enumerable: !1,
        configurable: !0,
      }),
      (r.prototype.destroy = function () {
        e.prototype.destroy.call(this),
          this.view.off(ut.BEFORE_CHANGE_DATA, this.resetMeasure),
          this.view.off(ut.BEFORE_CHANGE_SIZE, this.resetMeasure);
      }),
      (r.prototype.init = function () {}),
      (r.prototype.render = function () {
        this.option = this.view.getOptions().slider;
        var t = this.getSliderCfg(),
          n = t.start,
          i = t.end;
        $(this.start) && ((this.start = n), (this.end = i));
        var a = this.view.getOptions().data;
        this.option && !ye(a)
          ? this.slider
            ? (this.slider = this.updateSlider())
            : ((this.slider = this.createSlider()),
              this.slider.component.on('sliderchange', this.onChangeFn))
          : this.slider && (this.slider.component.destroy(), (this.slider = void 0));
      }),
      (r.prototype.layout = function () {
        var t = this;
        if (
          (this.option &&
            !this.width &&
            (this.measureSlider(),
            setTimeout(function () {
              t.view.destroyed || t.changeViewData(t.start, t.end);
            }, 0)),
          this.slider)
        ) {
          var n = this.view.coordinateBBox.width,
            i = this.slider.component.get('padding'),
            a = q(i, 4),
            o = a[0];
          a[1], a[2];
          var s = a[3],
            l = this.slider.component.getLayoutBBox(),
            u = new le(l.x, l.y, Math.min(l.width, n), l.height).expand(i),
            c = this.getMinMaxText(this.start, this.end),
            h = c.minText,
            f = c.maxText,
            v = q(zr(this.view.viewBBox, u, H.BOTTOM), 2);
          v[0];
          var d = v[1],
            p = q(zr(this.view.coordinateBBox, u, H.BOTTOM), 2),
            g = p[0];
          p[1],
            this.slider.component.update(
              x(x({}, this.getSliderCfg()), {
                x: g + s,
                y: d + o,
                width: this.width,
                start: this.start,
                end: this.end,
                minText: h,
                maxText: f,
              }),
            ),
            (this.view.viewBBox = this.view.viewBBox.cut(u, H.BOTTOM));
        }
      }),
      (r.prototype.update = function () {
        this.render();
      }),
      (r.prototype.createSlider = function () {
        var t = this.getSliderCfg(),
          n = new UE(x({ container: this.container }, t));
        return n.init(), { component: n, layer: $t.FORE, direction: H.BOTTOM, type: Xt.SLIDER };
      }),
      (r.prototype.updateSlider = function () {
        var t = this.getSliderCfg();
        if (this.width) {
          var n = this.getMinMaxText(this.start, this.end),
            i = n.minText,
            a = n.maxText;
          t = x(x({}, t), {
            width: this.width,
            start: this.start,
            end: this.end,
            minText: i,
            maxText: a,
          });
        }
        return this.slider.component.update(t), this.slider;
      }),
      (r.prototype.measureSlider = function () {
        var t = this.getSliderCfg().width;
        this.width = t;
      }),
      (r.prototype.getSliderCfg = function () {
        var t = {
          height: 16,
          start: 0,
          end: 1,
          minText: '',
          maxText: '',
          x: 0,
          y: 0,
          width: this.view.coordinateBBox.width,
        };
        if (xt(this.option)) {
          var n = x({ data: this.getData() }, A(this.option, 'trendCfg', {}));
          (t = _({}, t, this.getThemeOptions(), this.option)), (t = x(x({}, t), { trendCfg: n }));
        }
        return (
          (t.start = Tt(Math.min($(t.start) ? 0 : t.start, $(t.end) ? 1 : t.end), 0, 1)),
          (t.end = Tt(Math.max($(t.start) ? 0 : t.start, $(t.end) ? 1 : t.end), 0, 1)),
          t
        );
      }),
      (r.prototype.getData = function () {
        var t = this.view.getOptions().data,
          n = q(this.view.getYScales(), 1),
          i = n[0],
          a = this.view.getGroupScales();
        if (a.length) {
          var o = a[0],
            s = o.field,
            l = o.ticks;
          return t.reduce(function (u, c) {
            return c[s] === l[0] && u.push(c[i.field]), u;
          }, []);
        }
        return t.map(function (u) {
          return u[i.field] || 0;
        });
      }),
      (r.prototype.getThemeOptions = function () {
        var t = this.view.getTheme();
        return A(t, ['components', 'slider', 'common'], {});
      }),
      (r.prototype.getMinMaxText = function (t, n) {
        var i = this.view.getOptions().data,
          a = this.view.getXScale(),
          o = je(i, a.field);
        a.isLinear && (o = o.sort());
        var s = o,
          l = _t(i);
        if (!a || !l) return {};
        var u = _t(s),
          c = Math.round(t * (u - 1)),
          h = Math.round(n * (u - 1)),
          f = A(s, [c]),
          v = A(s, [h]),
          d = this.getSliderCfg().formatter;
        return d && ((f = d(f, i[c], c)), (v = d(v, i[h], h))), { minText: f, maxText: v };
      }),
      (r.prototype.changeViewData = function (t, n) {
        var i = this.view.getOptions().data,
          a = this.view.getXScale(),
          o = _t(i);
        if (!(!a || !o)) {
          var s = je(i, a.field),
            l = this.view.getXScale().isLinear
              ? s.sort(function (v, d) {
                  return Number(v) - Number(d);
                })
              : s,
            u = l,
            c = _t(u),
            h = Math.round(t * (c - 1)),
            f = Math.round(n * (c - 1));
          this.view.filter(a.field, function (v, d) {
            var p = u.indexOf(v);
            return p > -1 ? ti(p, h, f) : !0;
          }),
            this.view.render(!0);
        }
      }),
      (r.prototype.getComponents = function () {
        return this.slider ? [this.slider] : [];
      }),
      (r.prototype.clear = function () {
        this.slider && (this.slider.component.destroy(), (this.slider = void 0)),
          (this.width = 0),
          (this.start = void 0),
          (this.end = void 0);
      }),
      r
    );
  })(ki),
  No = 0,
  hp = 8,
  VP = 32,
  HP = 20,
  YP = (function (e) {
    k(r, e);
    function r(t) {
      var n = e.call(this, t) || this;
      return (
        (n.onChangeFn = $r),
        (n.resetMeasure = function () {
          n.clear();
        }),
        (n.onValueChange = function (i) {
          var a = i.ratio,
            o = n.getValidScrollbarCfg().animate;
          n.ratio = Tt(a, 0, 1);
          var s = n.view.getOptions().animate;
          o || n.view.animate(!1), n.changeViewData(n.getScrollRange(), !0), n.view.animate(s);
        }),
        (n.container = n.view.getLayer($t.FORE).addGroup()),
        (n.onChangeFn = Wc(n.onValueChange, 20, { leading: !0 })),
        (n.trackLen = 0),
        (n.thumbLen = 0),
        (n.ratio = 0),
        n.view.on(ut.BEFORE_CHANGE_DATA, n.resetMeasure),
        n.view.on(ut.BEFORE_CHANGE_SIZE, n.resetMeasure),
        n
      );
    }
    return (
      Object.defineProperty(r.prototype, 'name', {
        get: function () {
          return 'scrollbar';
        },
        enumerable: !1,
        configurable: !0,
      }),
      (r.prototype.destroy = function () {
        e.prototype.destroy.call(this),
          this.view.off(ut.BEFORE_CHANGE_DATA, this.resetMeasure),
          this.view.off(ut.BEFORE_CHANGE_SIZE, this.resetMeasure);
      }),
      (r.prototype.init = function () {}),
      (r.prototype.render = function () {
        (this.option = this.view.getOptions().scrollbar),
          this.option
            ? this.scrollbar
              ? (this.scrollbar = this.updateScrollbar())
              : ((this.scrollbar = this.createScrollbar()),
                this.scrollbar.component.on('scrollchange', this.onChangeFn))
            : this.scrollbar && (this.scrollbar.component.destroy(), (this.scrollbar = void 0));
      }),
      (r.prototype.layout = function () {
        var t = this;
        if (
          (this.option &&
            !this.trackLen &&
            (this.measureScrollbar(),
            setTimeout(function () {
              t.view.destroyed || t.changeViewData(t.getScrollRange(), !0);
            })),
          this.scrollbar)
        ) {
          var n = this.view.coordinateBBox.width,
            i = this.scrollbar.component.get('padding'),
            a = this.scrollbar.component.getLayoutBBox(),
            o = new le(a.x, a.y, Math.min(a.width, n), a.height).expand(i),
            s = this.getScrollbarComponentCfg(),
            l = void 0,
            u = void 0;
          if (s.isHorizontal) {
            var c = q(zr(this.view.viewBBox, o, H.BOTTOM), 2);
            c[0];
            var h = c[1],
              f = q(zr(this.view.coordinateBBox, o, H.BOTTOM), 2),
              v = f[0];
            f[1], (l = v), (u = h);
          } else {
            var d = q(zr(this.view.viewBBox, o, H.RIGHT), 2);
            d[0];
            var h = d[1],
              p = q(zr(this.view.viewBBox, o, H.RIGHT), 2),
              v = p[0];
            p[1], (l = v), (u = h);
          }
          (l += i[3]),
            (u += i[0]),
            this.trackLen
              ? this.scrollbar.component.update(
                  x(x({}, s), {
                    x: l,
                    y: u,
                    trackLen: this.trackLen,
                    thumbLen: this.thumbLen,
                    thumbOffset: (this.trackLen - this.thumbLen) * this.ratio,
                  }),
                )
              : this.scrollbar.component.update(x(x({}, s), { x: l, y: u })),
            (this.view.viewBBox = this.view.viewBBox.cut(o, s.isHorizontal ? H.BOTTOM : H.RIGHT));
        }
      }),
      (r.prototype.update = function () {
        this.render();
      }),
      (r.prototype.getComponents = function () {
        return this.scrollbar ? [this.scrollbar] : [];
      }),
      (r.prototype.clear = function () {
        this.scrollbar && (this.scrollbar.component.destroy(), (this.scrollbar = void 0)),
          (this.trackLen = 0),
          (this.thumbLen = 0),
          (this.ratio = 0),
          (this.cnt = 0),
          (this.step = 0),
          (this.data = void 0),
          (this.xScaleCfg = void 0),
          (this.yScalesCfg = []);
      }),
      (r.prototype.setValue = function (t) {
        this.onValueChange({ ratio: t });
      }),
      (r.prototype.getValue = function () {
        return this.ratio;
      }),
      (r.prototype.getThemeOptions = function () {
        var t = this.view.getTheme();
        return A(t, ['components', 'scrollbar', 'common'], {});
      }),
      (r.prototype.getScrollbarTheme = function (t) {
        var n = A(this.view.getTheme(), ['components', 'scrollbar']),
          i = t || {},
          a = i.thumbHighlightColor,
          o = wt(i, ['thumbHighlightColor']);
        return {
          default: _({}, A(n, ['default', 'style'], {}), o),
          hover: _({}, A(n, ['hover', 'style'], {}), { thumbColor: a }),
        };
      }),
      (r.prototype.measureScrollbar = function () {
        var t = this.view.getXScale(),
          n = this.view.getYScales().slice();
        (this.data = this.getScrollbarData()),
          (this.step = this.getStep()),
          (this.cnt = this.getCnt());
        var i = this.getScrollbarComponentCfg(),
          a = i.trackLen,
          o = i.thumbLen;
        (this.trackLen = a),
          (this.thumbLen = o),
          (this.xScaleCfg = { field: t.field, values: t.values || [] }),
          (this.yScalesCfg = n);
      }),
      (r.prototype.getScrollRange = function () {
        var t = Math.floor((this.cnt - this.step) * Tt(this.ratio, 0, 1)),
          n = Math.min(t + this.step - 1, this.cnt - 1);
        return [t, n];
      }),
      (r.prototype.changeViewData = function (t, n) {
        var i = this,
          a = q(t, 2),
          o = a[0],
          s = a[1],
          l = this.getValidScrollbarCfg().type,
          u = l !== 'vertical',
          c = je(this.data, this.xScaleCfg.field),
          h = this.view.getXScale().isLinear
            ? c.sort(function (v, d) {
                return Number(v) - Number(d);
              })
            : c,
          f = u ? h : h.reverse();
        this.yScalesCfg.forEach(function (v) {
          i.view.scale(v.field, {
            formatter: v.formatter,
            type: v.type,
            min: v.min,
            max: v.max,
            tickMethod: v.tickMethod,
          });
        }),
          this.view.filter(this.xScaleCfg.field, function (v) {
            var d = f.indexOf(v);
            return d > -1 ? ti(d, o, s) : !0;
          }),
          this.view.render(!0);
      }),
      (r.prototype.createScrollbar = function () {
        var t = this.getValidScrollbarCfg().type,
          n = t !== 'vertical',
          i = new ZE(
            x(x({ container: this.container }, this.getScrollbarComponentCfg()), { x: 0, y: 0 }),
          );
        return (
          i.init(),
          { component: i, layer: $t.FORE, direction: n ? H.BOTTOM : H.RIGHT, type: Xt.SCROLLBAR }
        );
      }),
      (r.prototype.updateScrollbar = function () {
        var t = this.getScrollbarComponentCfg(),
          n = this.trackLen
            ? x(x({}, t), {
                trackLen: this.trackLen,
                thumbLen: this.thumbLen,
                thumbOffset: (this.trackLen - this.thumbLen) * this.ratio,
              })
            : x({}, t);
        return this.scrollbar.component.update(n), this.scrollbar;
      }),
      (r.prototype.getStep = function () {
        if (this.step) return this.step;
        var t = this.view.coordinateBBox,
          n = this.getValidScrollbarCfg(),
          i = n.type,
          a = n.categorySize,
          o = i !== 'vertical';
        return Math.floor((o ? t.width : t.height) / a);
      }),
      (r.prototype.getCnt = function () {
        if (this.cnt) return this.cnt;
        var t = this.view.getXScale(),
          n = this.getScrollbarData(),
          i = je(n, t.field);
        return _t(i);
      }),
      (r.prototype.getScrollbarComponentCfg = function () {
        var t = this.view,
          n = t.coordinateBBox,
          i = t.viewBBox,
          a = this.getValidScrollbarCfg(),
          o = a.type,
          s = a.padding,
          l = a.width,
          u = a.height,
          c = a.style,
          h = o !== 'vertical',
          f = q(s, 4),
          v = f[0],
          d = f[1],
          p = f[2],
          g = f[3],
          y = h ? { x: n.minX + g, y: i.maxY - u - p } : { x: i.maxX - l - d, y: n.minY + v },
          m = this.getStep(),
          b = this.getCnt(),
          w = h ? n.width - g - d : n.height - v - p,
          S = Math.max(w * Tt(m / b, 0, 1), HP);
        return x(x({}, this.getThemeOptions()), {
          x: y.x,
          y: y.y,
          size: h ? u : l,
          isHorizontal: h,
          trackLen: w,
          thumbLen: S,
          thumbOffset: 0,
          theme: this.getScrollbarTheme(c),
        });
      }),
      (r.prototype.getValidScrollbarCfg = function () {
        var t = {
          type: 'horizontal',
          categorySize: VP,
          width: hp,
          height: hp,
          padding: [0, 0, 0, 0],
          animate: !0,
          style: {},
        };
        return (
          xt(this.option) && (t = x(x({}, t), this.option)),
          (!xt(this.option) || !this.option.padding) &&
            (t.padding = t.type === 'horizontal' ? [No, 0, No, 0] : [0, No, 0, No]),
          t
        );
      }),
      (r.prototype.getScrollbarData = function () {
        var t = this.view.getCoordinate(),
          n = this.getValidScrollbarCfg(),
          i = this.view.getOptions().data || [];
        return t.isReflect('y') && n.type === 'vertical' && (i = J([], q(i), !1).reverse()), i;
      }),
      r
    );
  })(ki),
  WP = { fill: '#CCD6EC', opacity: 0.3 };
function XP(e, r, t) {
  var n,
    i,
    a,
    o,
    s,
    l,
    u = QT(e, r, t);
  if (u.length) {
    u = Ee(u);
    try {
      for (var c = pt(u), h = c.next(); !h.done; h = c.next()) {
        var f = h.value;
        try {
          for (var v = ((a = void 0), pt(f)), d = v.next(); !d.done; d = v.next()) {
            var p = d.value,
              g = p.mappingData,
              y = g.x,
              m = g.y;
            (p.x = N(y) ? y[y.length - 1] : y), (p.y = N(m) ? m[m.length - 1] : m);
          }
        } catch (T) {
          a = { error: T };
        } finally {
          try {
            d && !d.done && (o = v.return) && o.call(v);
          } finally {
            if (a) throw a.error;
          }
        }
      }
    } catch (T) {
      n = { error: T };
    } finally {
      try {
        h && !h.done && (i = c.return) && i.call(c);
      } finally {
        if (n) throw n.error;
      }
    }
    var b = t.shared;
    if (b === !1 && u.length > 1) {
      var w = u[0],
        S = Math.abs(r.y - w[0].y);
      try {
        for (var C = pt(u), F = C.next(); !F.done; F = C.next()) {
          var E = F.value,
            I = Math.abs(r.y - E[0].y);
          I <= S && ((w = E), (S = I));
        }
      } catch (T) {
        s = { error: T };
      } finally {
        try {
          F && !F.done && (l = C.return) && l.call(C);
        } finally {
          if (s) throw s.error;
        }
      }
      u = [w];
    }
    return In(Ee(u));
  }
  return [];
}
var _P = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.show = function (t) {
        var n = this.context.view,
          i = this.context.event,
          a = n.getController('tooltip').getTooltipCfg(),
          o = XP(n, { x: i.x, y: i.y }, a);
        if (!Dt(o, this.items) && ((this.items = o), o.length)) {
          var s = n.getXScale().field,
            l = o[0].data[s],
            u = [],
            c = n.geometries;
          if (
            (M(c, function (X) {
              if (X.type === 'interval' || X.type === 'schema') {
                var Y = X.getElementsBy(function (V) {
                  var W = V.getData();
                  return W[s] === l;
                });
                u = u.concat(Y);
              }
            }),
            u.length)
          ) {
            var h = n.getCoordinate(),
              f = u[0].shape.getCanvasBBox(),
              v = u[0].shape.getCanvasBBox(),
              d = f;
            M(u, function (X) {
              var Y = X.shape.getCanvasBBox();
              h.isTransposed
                ? (Y.minY < f.minY && (f = Y), Y.maxY > v.maxY && (v = Y))
                : (Y.minX < f.minX && (f = Y), Y.maxX > v.maxX && (v = Y)),
                (d.x = Math.min(Y.minX, d.minX)),
                (d.y = Math.min(Y.minY, d.minY)),
                (d.width = Math.max(Y.maxX, d.maxX) - d.x),
                (d.height = Math.max(Y.maxY, d.maxY) - d.y);
            });
            var p = n.backgroundGroup,
              g = n.coordinateBBox,
              y = void 0;
            if (h.isRect) {
              var m = n.getXScale(),
                b = t || {},
                w = b.appendRatio,
                S = b.appendWidth;
              $(S) &&
                ((w = $(w) ? (m.isLinear ? 0 : 0.25) : w),
                (S = h.isTransposed ? w * v.height : w * f.width));
              var C = void 0,
                F = void 0,
                E = void 0,
                I = void 0;
              h.isTransposed
                ? ((C = g.minX),
                  (F = Math.min(v.minY, f.minY) - S),
                  (E = g.width),
                  (I = d.height + S * 2))
                : ((C = Math.min(f.minX, v.minX) - S),
                  (F = g.minY),
                  (E = d.width + S * 2),
                  (I = g.height)),
                (y = [['M', C, F], ['L', C + E, F], ['L', C + E, F + I], ['L', C, F + I], ['Z']]);
            } else {
              var T = Me(u),
                P = Ht(u),
                R = Ta(T.getModel(), h).startAngle,
                B = Ta(P.getModel(), h).endAngle,
                G = h.getCenter(),
                j = h.getRadius(),
                D = h.innerRadius * j;
              y = Yr(G.x, G.y, j, R, B, D);
            }
            if (this.regionPath) this.regionPath.attr('path', y), this.regionPath.show();
            else {
              var z = A(t, 'style', WP);
              this.regionPath = p.addShape({
                type: 'path',
                name: 'active-region',
                capture: !1,
                attrs: x(x({}, z), { path: y }),
              });
            }
          }
        }
      }),
      (r.prototype.hide = function () {
        this.regionPath && this.regionPath.hide(), (this.items = null);
      }),
      (r.prototype.destroy = function () {
        this.hide(), this.regionPath && this.regionPath.remove(!0), e.prototype.destroy.call(this);
      }),
      r
    );
  })(Ft),
  z0 = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.timeStamp = 0), t;
    }
    return (
      (r.prototype.show = function () {
        var t = this.context,
          n = t.event,
          i = t.view,
          a = i.isTooltipLocked();
        if (!a) {
          var o = this.timeStamp,
            s = +new Date(),
            l = A(t.view.getOptions(), 'tooltip.showDelay', 16);
          if (s - o > l) {
            var u = this.location,
              c = { x: n.x, y: n.y };
            (!u || !Dt(u, c)) && this.showTooltip(i, c), (this.timeStamp = s), (this.location = c);
          }
        }
      }),
      (r.prototype.hide = function () {
        var t = this.context.view,
          n = t.getController('tooltip'),
          i = this.context.event,
          a = i.clientX,
          o = i.clientY;
        n.isCursorEntered({ x: a, y: o }) ||
          t.isTooltipLocked() ||
          (this.hideTooltip(t), (this.location = null));
      }),
      (r.prototype.showTooltip = function (t, n) {
        t.showTooltip(n);
      }),
      (r.prototype.hideTooltip = function (t) {
        t.hideTooltip();
      }),
      r
    );
  })(Ft),
  jP = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.showTooltip = function (t, n) {
        var i = ar(t);
        M(i, function (a) {
          var o = cc(t, a, n);
          a.showTooltip(o);
        });
      }),
      (r.prototype.hideTooltip = function (t) {
        var n = ar(t);
        M(n, function (i) {
          i.hideTooltip();
        });
      }),
      r
    );
  })(z0),
  UP = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.timeStamp = 0), t;
    }
    return (
      (r.prototype.destroy = function () {
        e.prototype.destroy.call(this), this.tooltip && this.tooltip.destroy();
      }),
      (r.prototype.show = function () {
        var t = this.context,
          n = t.event,
          i = this.timeStamp,
          a = +new Date();
        if (a - i > 16) {
          var o = this.location,
            s = { x: n.x, y: n.y };
          (!o || !Dt(o, s)) && this.showTooltip(s), (this.timeStamp = a), (this.location = s);
        }
      }),
      (r.prototype.hide = function () {
        this.hideTooltip(), (this.location = null);
      }),
      (r.prototype.showTooltip = function (t) {
        var n = this.context,
          i = n.event,
          a = i.target;
        if (a && a.get('tip')) {
          this.tooltip || this.renderTooltip();
          var o = a.get('tip');
          this.tooltip.update(x({ title: o }, t)), this.tooltip.show();
        }
      }),
      (r.prototype.hideTooltip = function () {
        this.tooltip && this.tooltip.hide();
      }),
      (r.prototype.renderTooltip = function () {
        var t,
          n = this.context.view,
          i = n.canvas,
          a = { start: { x: 0, y: 0 }, end: { x: i.get('width'), y: i.get('height') } },
          o = n.getTheme(),
          s = A(o, ['components', 'tooltip', 'domStyles'], {}),
          l = new fl({
            parent: i.get('el').parentNode,
            region: a,
            visible: !1,
            crosshairs: null,
            domStyles: x(
              {},
              _(
                {},
                s,
                ((t = {}),
                (t[Cr] = { 'max-width': '50%' }),
                (t[Mr] = { 'word-break': 'break-all' }),
                t),
              ),
            ),
          });
        l.init(), l.setCapture(!1), (this.tooltip = l);
      }),
      r
    );
  })(Ft),
  Vh = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = ''), t;
    }
    return (
      (r.prototype.hasState = function (t) {
        return t.hasState(this.stateName);
      }),
      (r.prototype.setElementState = function (t, n) {
        t.setState(this.stateName, n);
      }),
      (r.prototype.setState = function () {
        this.setStateEnable(!0);
      }),
      (r.prototype.clear = function () {
        var t = this.context.view;
        this.clearViewState(t);
      }),
      (r.prototype.clearViewState = function (t) {
        var n = this,
          i = $m(t, this.stateName);
        M(i, function (a) {
          n.setElementState(a, !1);
        });
      }),
      r
    );
  })(Ft);
function fp(e) {
  return A(e.get('delegateObject'), 'item');
}
var Hh = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.ignoreListItemStates = ['unchecked']), t;
    }
    return (
      (r.prototype.isItemIgnore = function (t, n) {
        var i = this.ignoreListItemStates,
          a = i.filter(function (o) {
            return n.hasState(t, o);
          });
        return !!a.length;
      }),
      (r.prototype.setStateByComponent = function (t, n, i) {
        var a = this.context.view,
          o = t.get('field'),
          s = Qt(a);
        this.setElementsStateByItem(s, o, n, i);
      }),
      (r.prototype.setStateByElement = function (t, n) {
        this.setElementState(t, n);
      }),
      (r.prototype.isMathItem = function (t, n, i) {
        var a = this.context.view,
          o = di(a, n),
          s = Ue(t, n);
        return !$(s) && i.name === o.getText(s);
      }),
      (r.prototype.setElementsStateByItem = function (t, n, i, a) {
        var o = this;
        M(t, function (s) {
          o.isMathItem(s, n, i) && s.setState(o.stateName, a);
        });
      }),
      (r.prototype.setStateEnable = function (t) {
        var n = qr(this.context);
        if (n) Om(this.context) && this.setStateByElement(n, t);
        else {
          var i = On(this.context);
          if (Ia(i)) {
            var a = i.item,
              o = i.component;
            if (a && o && !this.isItemIgnore(a, o)) {
              var s = this.context.event.gEvent;
              if (s && s.fromShape && s.toShape && fp(s.fromShape) === fp(s.toShape)) return;
              this.setStateByComponent(o, a, t);
            }
          }
        }
      }),
      (r.prototype.toggle = function () {
        var t = qr(this.context);
        if (t) {
          var n = t.hasState(this.stateName);
          this.setElementState(t, !n);
        }
      }),
      (r.prototype.reset = function () {
        this.setStateEnable(!1);
      }),
      r
    );
  })(Vh),
  qP = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = 'active'), t;
    }
    return (
      (r.prototype.active = function () {
        this.setState();
      }),
      r
    );
  })(Hh),
  ZP = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.cache = {}), t;
    }
    return (
      (r.prototype.getColorScale = function (t, n) {
        var i = n.geometry.getAttribute('color');
        if (!i) return null;
        var a = t.getScaleByField(i.getFields()[0]);
        return a;
      }),
      (r.prototype.getLinkPath = function (t, n) {
        var i = this.context.view,
          a = i.getCoordinate().isTransposed,
          o = t.shape.getCanvasBBox(),
          s = n.shape.getCanvasBBox(),
          l = a
            ? [
                ['M', o.minX, o.minY],
                ['L', s.minX, s.maxY],
                ['L', s.maxX, s.maxY],
                ['L', o.maxX, o.minY],
                ['Z'],
              ]
            : [
                ['M', o.maxX, o.minY],
                ['L', s.minX, s.minY],
                ['L', s.minX, s.maxY],
                ['L', o.maxX, o.maxY],
                ['Z'],
              ];
        return l;
      }),
      (r.prototype.addLinkShape = function (t, n, i, a) {
        var o = { opacity: 0.4, fill: n.shape.attr('fill') };
        t.addShape({
          type: 'path',
          attrs: x(x({}, _({}, o, U(a) ? a(o, n) : a)), { path: this.getLinkPath(n, i) }),
        });
      }),
      (r.prototype.linkByElement = function (t, n) {
        var i = this,
          a = this.context.view,
          o = this.getColorScale(a, t);
        if (o) {
          var s = Ue(t, o.field);
          if (!this.cache[s]) {
            var l = IT(a, o.field, s),
              u = this.linkGroup,
              c = u.addGroup();
            this.cache[s] = c;
            var h = l.length;
            M(l, function (f, v) {
              if (v < h - 1) {
                var d = l[v + 1];
                i.addLinkShape(c, f, d, n);
              }
            });
          }
        }
      }),
      (r.prototype.removeLink = function (t) {
        var n = this.getColorScale(this.context.view, t);
        if (n) {
          var i = Ue(t, n.field);
          this.cache[i] && (this.cache[i].remove(), (this.cache[i] = null));
        }
      }),
      (r.prototype.link = function (t) {
        var n = this.context;
        this.linkGroup ||
          (this.linkGroup = n.view.foregroundGroup.addGroup({
            id: 'link-by-color-group',
            capture: !1,
          }));
        var i = qr(n);
        i && this.linkByElement(i, t == null ? void 0 : t.style);
      }),
      (r.prototype.unlink = function () {
        var t = qr(this.context);
        t && this.removeLink(t);
      }),
      (r.prototype.clear = function () {
        this.linkGroup && this.linkGroup.clear(), (this.cache = {});
      }),
      (r.prototype.destroy = function () {
        e.prototype.destroy.call(this), this.linkGroup && this.linkGroup.remove();
      }),
      r
    );
  })(Ft),
  Yh = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (
        (t.startPoint = null),
        (t.endPoint = null),
        (t.isStarted = !1),
        (t.effectSiblings = !1),
        (t.effectByRecord = !1),
        t
      );
    }
    return (
      (r.prototype.getCurrentPoint = function () {
        var t = this.context.event;
        return { x: t.x, y: t.y };
      }),
      (r.prototype.start = function () {
        this.clear(), (this.startPoint = this.getCurrentPoint()), (this.isStarted = !0);
      }),
      (r.prototype.getIntersectElements = function () {
        var t = null;
        if (La(this.context)) t = mh(this.context, 10);
        else {
          var n = this.startPoint,
            i = this.isStarted ? this.getCurrentPoint() : this.endPoint;
          if (!n || !i) return;
          var a = {
              minX: Math.min(n.x, i.x),
              minY: Math.min(n.y, i.y),
              maxX: Math.max(n.x, i.x),
              maxY: Math.max(n.y, i.y),
            },
            o = this.context.view;
          t = gl(o, a);
        }
        return t;
      }),
      (r.prototype.setStateEnable = function (t) {
        if (this.effectSiblings && !this.effectByRecord) this.setSiblingsState(t);
        else {
          var n = Qt(this.context.view),
            i = this.getIntersectElements();
          i && i.length
            ? this.effectByRecord
              ? this.setSiblingsStateByRecord(i, t)
              : this.setElementsState(i, t, n)
            : this.clear();
        }
      }),
      (r.prototype.setSiblingsStateByRecord = function (t, n) {
        var i = this,
          a = this.context.view,
          o = ar(a),
          s = t.map(function (c) {
            return c.getModel().data;
          }),
          l = a.getXScale().field,
          u = a.getYScales()[0].field;
        M(o, function (c) {
          var h = Qt(c),
            f = h.filter(function (v) {
              var d = v.getModel().data;
              return Gm(s, d, l, u);
            });
          i.setElementsState(f, n, h);
        });
      }),
      (r.prototype.setSiblingsState = function (t) {
        var n = this,
          i = this.context.view,
          a = ar(i);
        La(this.context) &&
          M(a, function (o) {
            var s = Qt(o),
              l = Bm(n.context, o, 10);
            l && l.length ? n.setElementsState(l, t, s) : n.clearViewState(o);
          });
      }),
      (r.prototype.setElementsState = function (t, n, i) {
        var a = this;
        M(i, function (o) {
          t.includes(o) ? a.setElementState(o, n) : a.setElementState(o, !1);
        });
      }),
      (r.prototype.end = function () {
        (this.isStarted = !1), (this.endPoint = this.getCurrentPoint());
      }),
      (r.prototype.clear = function () {
        var t = this,
          n = this.context.view;
        if (this.effectSiblings) {
          var i = ar(n);
          M(i, function (a) {
            t.clearViewState(a);
          });
        } else this.clearViewState(n);
      }),
      r
    );
  })(Vh),
  KP = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = 'active'), t;
    }
    return (
      (r.prototype.active = function () {
        this.setState();
      }),
      r
    );
  })(Yh),
  Wh = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.setStateEnable = function (t) {
        var n = qr(this.context);
        if (n) {
          if (!Om(this.context)) return;
          t
            ? (this.clear(), this.setElementState(n, !0))
            : this.hasState(n) && this.setElementState(n, !1);
        }
      }),
      (r.prototype.toggle = function () {
        var t = qr(this.context);
        if (t) {
          var n = this.hasState(t);
          n || this.clear(), this.setElementState(t, !n);
        }
      }),
      (r.prototype.reset = function () {
        this.setStateEnable(!1);
      }),
      r
    );
  })(Vh),
  QP = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = 'active'), t;
    }
    return (
      (r.prototype.active = function () {
        this.setState();
      }),
      r
    );
  })(Wh),
  ha = 'inactive',
  fa = 'active';
function Xh(e) {
  var r = Qt(e);
  M(r, function (t) {
    t.hasState(fa) && t.setState(fa, !1), t.hasState(ha) && t.setState(ha, !1);
  });
}
function G0(e, r, t) {
  M(e, function (n) {
    r(n)
      ? (n.hasState(ha) && n.setState(ha, !1), n.setState(fa, t))
      : (n.hasState(fa) && n.setState(fa, !1), n.setState(ha, t));
  });
}
var mn = os.INACTIVE,
  dr = os.ACTIVE,
  _h = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = dr), t;
    }
    return (
      (r.prototype.setElementsStateByItem = function (t, n, i, a) {
        var o = this,
          s = function (l) {
            return o.isMathItem(l, n, i);
          };
        this.setHighlightBy(t, s, a);
      }),
      (r.prototype.setElementHighlight = function (t, n) {
        n(t)
          ? (t.hasState(mn) && t.setState(mn, !1), t.setState(dr, !0))
          : t.hasState(dr) || t.setState(mn, !0);
      }),
      (r.prototype.setHighlightBy = function (t, n, i) {
        var a = this;
        if (i)
          M(t, function (l) {
            a.setElementHighlight(l, n);
          });
        else {
          var o = $m(this.context.view, dr),
            s = !0;
          M(o, function (l) {
            if (!n(l)) return (s = !1), !1;
          }),
            s
              ? this.clear()
              : M(t, function (l) {
                  n(l) && (l.hasState(dr) && l.setState(dr, !1), l.setState(mn, !0));
                });
        }
      }),
      (r.prototype.setElementState = function (t, n) {
        var i = this.context.view,
          a = Qt(i);
        this.setHighlightBy(
          a,
          function (o) {
            return t === o;
          },
          n,
        );
      }),
      (r.prototype.highlight = function () {
        this.setState();
      }),
      (r.prototype.clear = function () {
        var t = this.context.view;
        Xh(t);
      }),
      r
    );
  })(Hh),
  JP = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.setStateByElement = function (t, n) {
        var i = this.context.view,
          a = t.geometry.getAttribute('color');
        if (a) {
          var o = i.getScaleByField(a.getFields()[0]),
            s = Ue(t, o.field),
            l = Qt(i),
            u = l.filter(function (c) {
              return Ue(c, o.field) === s;
            });
          this.setHighlightBy(
            l,
            function (c) {
              return u.includes(c);
            },
            n,
          );
        }
      }),
      r
    );
  })(_h),
  tO = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.setElementHighlight = function (t, n) {
        n(t)
          ? (t.hasState(mn) && t.setState(mn, !1), t.setState(dr, !0))
          : (t.setState(mn, !0), t.hasState(dr) && t.setState(dr, !1));
      }),
      (r.prototype.setStateByElement = function (t, n) {
        var i = this.context.view,
          a = i.getXScale(),
          o = Ue(t, a.field),
          s = Qt(i),
          l = s.filter(function (u) {
            return Ue(u, a.field) === o;
          });
        this.setHighlightBy(
          s,
          function (u) {
            return l.includes(u);
          },
          n,
        );
      }),
      (r.prototype.toggle = function () {
        var t = qr(this.context);
        if (t) {
          var n = t.hasState(this.stateName);
          this.setStateByElement(t, !n);
        }
      }),
      r
    );
  })(_h),
  Je;
(function (e) {
  (e.BEFORE_HIGHLIGHT = 'element-range-highlight:beforehighlight'),
    (e.AFTER_HIGHLIGHT = 'element-range-highlight:afterhighlight'),
    (e.BEFORE_CLEAR = 'element-range-highlight:beforeclear'),
    (e.AFTER_CLEAR = 'element-range-highlight:afterclear');
})(Je || (Je = {}));
var V0 = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = 'active'), t;
    }
    return (
      (r.prototype.clearViewState = function (t) {
        Xh(t);
      }),
      (r.prototype.highlight = function () {
        var t = this.context,
          n = t.view,
          i = t.event,
          a = this.getIntersectElements(),
          o = { view: n, event: i, highlightElements: a };
        n.emit(Je.BEFORE_HIGHLIGHT, Lt.fromData(n, Je.BEFORE_HIGHLIGHT, o)),
          this.setState(),
          n.emit(Je.AFTER_HIGHLIGHT, Lt.fromData(n, Je.AFTER_HIGHLIGHT, o));
      }),
      (r.prototype.clear = function () {
        var t = this.context.view;
        t.emit(Je.BEFORE_CLEAR, Lt.fromData(t, Je.BEFORE_CLEAR, {})),
          e.prototype.clear.call(this),
          t.emit(Je.AFTER_CLEAR, Lt.fromData(t, Je.AFTER_CLEAR, {}));
      }),
      (r.prototype.setElementsState = function (t, n, i) {
        G0(
          i,
          function (a) {
            return t.indexOf(a) >= 0;
          },
          n,
        );
      }),
      r
    );
  })(Yh),
  eO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = 'active'), t;
    }
    return (
      (r.prototype.highlight = function () {
        this.setState();
      }),
      (r.prototype.setElementState = function (t, n) {
        var i = this.context.view,
          a = Qt(i);
        G0(
          a,
          function (o) {
            return t === o;
          },
          n,
        );
      }),
      (r.prototype.clear = function () {
        var t = this.context.view;
        Xh(t);
      }),
      r
    );
  })(Wh),
  rO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = 'selected'), t;
    }
    return (
      (r.prototype.selected = function () {
        this.setState();
      }),
      r
    );
  })(Yh),
  nO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = 'selected'), t;
    }
    return (
      (r.prototype.selected = function () {
        this.setState();
      }),
      r
    );
  })(Hh),
  iO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = 'selected'), t;
    }
    return (
      (r.prototype.selected = function () {
        this.setState();
      }),
      r
    );
  })(Wh),
  Gn = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = ''), (t.ignoreItemStates = []), t;
    }
    return (
      (r.prototype.getTriggerListInfo = function () {
        var t = On(this.context),
          n = null;
        return Ia(t) && (n = { item: t.item, list: t.component }), n;
      }),
      (r.prototype.getAllowComponents = function () {
        var t = this,
          n = this.context.view,
          i = zm(n),
          a = [];
        return (
          M(i, function (o) {
            o.isList() && t.allowSetStateByElement(o) && a.push(o);
          }),
          a
        );
      }),
      (r.prototype.hasState = function (t, n) {
        return t.hasState(n, this.stateName);
      }),
      (r.prototype.clearAllComponentsState = function () {
        var t = this,
          n = this.getAllowComponents();
        M(n, function (i) {
          i.clearItemsState(t.stateName);
        });
      }),
      (r.prototype.allowSetStateByElement = function (t) {
        var n = t.get('field');
        if (!n) return !1;
        if (this.cfg && this.cfg.componentNames) {
          var i = t.get('name');
          if (this.cfg.componentNames.indexOf(i) === -1) return !1;
        }
        var a = this.context.view,
          o = di(a, n);
        return o && o.isCategory;
      }),
      (r.prototype.allowSetStateByItem = function (t, n) {
        var i = this.ignoreItemStates;
        if (i.length) {
          var a = i.filter(function (o) {
            return n.hasState(t, o);
          });
          return a.length === 0;
        }
        return !0;
      }),
      (r.prototype.setStateByElement = function (t, n, i) {
        var a = t.get('field'),
          o = this.context.view,
          s = di(o, a),
          l = Ue(n, a),
          u = s.getText(l);
        this.setItemsState(t, u, i);
      }),
      (r.prototype.setStateEnable = function (t) {
        var n = this,
          i = qr(this.context);
        if (i) {
          var a = this.getAllowComponents();
          M(a, function (u) {
            n.setStateByElement(u, i, t);
          });
        } else {
          var o = On(this.context);
          if (Ia(o)) {
            var s = o.item,
              l = o.component;
            this.allowSetStateByElement(l) &&
              this.allowSetStateByItem(s, l) &&
              this.setItemState(l, s, t);
          }
        }
      }),
      (r.prototype.setItemsState = function (t, n, i) {
        var a = this,
          o = t.getItems();
        M(o, function (s) {
          s.name === n && a.setItemState(t, s, i);
        });
      }),
      (r.prototype.setItemState = function (t, n, i) {
        t.setItemState(n, this.stateName, i);
      }),
      (r.prototype.setState = function () {
        this.setStateEnable(!0);
      }),
      (r.prototype.reset = function () {
        this.setStateEnable(!1);
      }),
      (r.prototype.toggle = function () {
        var t = this.getTriggerListInfo();
        if (t && t.item) {
          var n = t.list,
            i = t.item,
            a = this.hasState(n, i);
          this.setItemState(n, i, !a);
        }
      }),
      (r.prototype.clear = function () {
        var t = this.getTriggerListInfo();
        t ? t.list.clearItemsState(this.stateName) : this.clearAllComponentsState();
      }),
      r
    );
  })(Ft),
  aO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = 'active'), t;
    }
    return (
      (r.prototype.active = function () {
        this.setState();
      }),
      r
    );
  })(Gn),
  vp = 'inactive',
  dp = 'active';
function oO(e) {
  var r = e.getItems();
  M(r, function (t) {
    e.hasState(t, dp) && e.setItemState(t, dp, !1), e.hasState(t, vp) && e.setItemState(t, vp, !1);
  });
}
var Wi = 'inactive',
  un = 'active',
  jh = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = un), (t.ignoreItemStates = ['unchecked']), t;
    }
    return (
      (r.prototype.setItemsState = function (t, n, i) {
        this.setHighlightBy(
          t,
          function (a) {
            return a.name === n;
          },
          i,
        );
      }),
      (r.prototype.setItemState = function (t, n, i) {
        t.getItems(),
          this.setHighlightBy(
            t,
            function (a) {
              return a === n;
            },
            i,
          );
      }),
      (r.prototype.setHighlightBy = function (t, n, i) {
        var a = t.getItems();
        if (i)
          M(a, function (l) {
            n(l)
              ? (t.hasState(l, Wi) && t.setItemState(l, Wi, !1), t.setItemState(l, un, !0))
              : t.hasState(l, un) || t.setItemState(l, Wi, !0);
          });
        else {
          var o = t.getItemsByState(un),
            s = !0;
          M(o, function (l) {
            if (!n(l)) return (s = !1), !1;
          }),
            s
              ? this.clear()
              : M(a, function (l) {
                  n(l) &&
                    (t.hasState(l, un) && t.setItemState(l, un, !1), t.setItemState(l, Wi, !0));
                });
        }
      }),
      (r.prototype.highlight = function () {
        this.setState();
      }),
      (r.prototype.clear = function () {
        var t = this.getTriggerListInfo();
        if (t) oO(t.list);
        else {
          var n = this.getAllowComponents();
          M(n, function (i) {
            i.clearItemsState(un), i.clearItemsState(Wi);
          });
        }
      }),
      r
    );
  })(Gn),
  sO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = 'selected'), t;
    }
    return (
      (r.prototype.selected = function () {
        this.setState();
      }),
      r
    );
  })(Gn),
  lO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = 'unchecked'), t;
    }
    return (
      (r.prototype.unchecked = function () {
        this.setState();
      }),
      r
    );
  })(Gn),
  _n = 'unchecked',
  zo = 'checked',
  uO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.stateName = zo), t;
    }
    return (
      (r.prototype.setItemState = function (t, n, i) {
        this.setCheckedBy(
          t,
          function (a) {
            return a === n;
          },
          i,
        );
      }),
      (r.prototype.setCheckedBy = function (t, n, i) {
        var a = t.getItems();
        i &&
          M(a, function (o) {
            n(o)
              ? (t.hasState(o, _n) && t.setItemState(o, _n, !1), t.setItemState(o, zo, !0))
              : t.hasState(o, zo) || t.setItemState(o, _n, !0);
          });
      }),
      (r.prototype.toggle = function () {
        var t = this.getTriggerListInfo();
        if (t && t.item) {
          var n = t.list,
            i = t.item,
            a = !zs(n.getItems(), function (o) {
              return n.hasState(o, _n);
            });
          a || n.hasState(i, _n) ? this.setItemState(n, i, !0) : this.reset();
        }
      }),
      (r.prototype.checked = function () {
        this.setState();
      }),
      (r.prototype.reset = function () {
        var t = this.getAllowComponents();
        M(t, function (n) {
          n.clearItemsState(zo), n.clearItemsState(_n);
        });
      }),
      r
    );
  })(Gn),
  jn = 'unchecked',
  cO = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.toggle = function () {
        var t,
          n,
          i,
          a,
          o,
          s,
          l,
          u,
          c = this.getTriggerListInfo();
        if (c != null && c.item) {
          var h = c.list,
            f = c.item,
            v = h.getItems(),
            d = v.filter(function (T) {
              return !h.hasState(T, jn);
            }),
            p = v.filter(function (T) {
              return h.hasState(T, jn);
            }),
            g = d[0];
          if (v.length === d.length)
            try {
              for (var y = pt(v), m = y.next(); !m.done; m = y.next()) {
                var b = m.value;
                h.setItemState(b, jn, b.id !== f.id);
              }
            } catch (T) {
              t = { error: T };
            } finally {
              try {
                m && !m.done && (n = y.return) && n.call(y);
              } finally {
                if (t) throw t.error;
              }
            }
          else if (v.length - p.length === 1)
            if (g.id === f.id)
              try {
                for (var w = pt(v), S = w.next(); !S.done; S = w.next()) {
                  var b = S.value;
                  h.setItemState(b, jn, !1);
                }
              } catch (T) {
                i = { error: T };
              } finally {
                try {
                  S && !S.done && (a = w.return) && a.call(w);
                } finally {
                  if (i) throw i.error;
                }
              }
            else
              try {
                for (var C = pt(v), F = C.next(); !F.done; F = C.next()) {
                  var b = F.value;
                  h.setItemState(b, jn, b.id !== f.id);
                }
              } catch (T) {
                o = { error: T };
              } finally {
                try {
                  F && !F.done && (s = C.return) && s.call(C);
                } finally {
                  if (o) throw o.error;
                }
              }
          else
            try {
              for (var E = pt(v), I = E.next(); !I.done; I = E.next()) {
                var b = I.value;
                h.setItemState(b, jn, b.id !== f.id);
              }
            } catch (T) {
              l = { error: T };
            } finally {
              try {
                I && !I.done && (u = E.return) && u.call(E);
              } finally {
                if (l) throw l.error;
              }
            }
        }
      }),
      r
    );
  })(Gn),
  pp = 'showRadio',
  mu = 'legend-radio-tip',
  hO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.timeStamp = 0), t;
    }
    return (
      (r.prototype.show = function () {
        var t = this.getTriggerListInfo();
        if (t != null && t.item) {
          var n = t.list,
            i = t.item;
          n.setItemState(i, pp, !0);
        }
      }),
      (r.prototype.hide = function () {
        var t = this.getTriggerListInfo();
        if (t != null && t.item) {
          var n = t.list,
            i = t.item;
          n.setItemState(i, pp, !1);
        }
      }),
      (r.prototype.destroy = function () {
        e.prototype.destroy.call(this), this.tooltip && this.tooltip.destroy();
      }),
      (r.prototype.showTip = function () {
        var t = this.context,
          n = t.event,
          i = this.timeStamp,
          a = +new Date(),
          o = this.context.event.target;
        if (a - i > 16 && o.get('name') === 'legend-item-radio') {
          var s = this.location,
            l = { x: n.x, y: n.y };
          (this.timeStamp = a), (this.location = l), (!s || !Dt(s, l)) && this.showTooltip(l);
        }
      }),
      (r.prototype.hideTip = function () {
        this.hideTooltip(), (this.location = null);
      }),
      (r.prototype.showTooltip = function (t) {
        var n = this.context,
          i = n.event,
          a = i.target;
        if (a && a.get('tip')) {
          this.tooltip || this.renderTooltip();
          var o = n.view.getCanvas().get('el').getBoundingClientRect(),
            s = o.x,
            l = o.y;
          this.tooltip.update(x(x({ title: a.get('tip') }, t), { x: t.x + s, y: t.y + l })),
            this.tooltip.show();
        }
      }),
      (r.prototype.hideTooltip = function () {
        this.tooltip && this.tooltip.hide();
      }),
      (r.prototype.renderTooltip = function () {
        var t,
          n =
            ((t = {}),
            (t[Cr] = {
              padding: '6px 8px',
              transform: 'translate(-50%, -80%)',
              background: 'rgba(0,0,0,0.75)',
              color: '#fff',
              'border-radius': '2px',
              'z-index': 100,
            }),
            (t[Mr] = {
              'font-size': '12px',
              'line-height': '14px',
              'margin-bottom': 0,
              'word-break': 'break-all',
            }),
            t);
        document.getElementById(mu) && document.body.removeChild(document.getElementById(mu));
        var i = new fl({
          parent: document.body,
          region: null,
          visible: !1,
          crosshairs: null,
          domStyles: n,
          containerId: mu,
        });
        i.init(), i.setCapture(!1), (this.tooltip = i);
      }),
      r
    );
  })(Gn),
  Uh = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (
        (t.maskShape = null),
        (t.points = []),
        (t.starting = !1),
        (t.moving = !1),
        (t.preMovePoint = null),
        (t.shapeType = 'path'),
        t
      );
    }
    return (
      (r.prototype.getCurrentPoint = function () {
        var t = this.context.event;
        return { x: t.x, y: t.y };
      }),
      (r.prototype.emitEvent = function (t) {
        var n = 'mask:'.concat(t),
          i = this.context.view,
          a = this.context.event;
        i.emit(n, {
          target: this.maskShape,
          shape: this.maskShape,
          points: this.points,
          x: a.x,
          y: a.y,
        });
      }),
      (r.prototype.createMask = function () {
        var t = this.context.view,
          n = this.getMaskAttrs(),
          i = t.foregroundGroup.addShape({
            type: this.shapeType,
            name: 'mask',
            draggable: !0,
            attrs: x({ fill: '#C5D4EB', opacity: 0.3 }, n),
          });
        return i;
      }),
      (r.prototype.getMaskPath = function () {
        return [];
      }),
      (r.prototype.show = function () {
        this.maskShape && (this.maskShape.show(), this.emitEvent('show'));
      }),
      (r.prototype.start = function (t) {
        (this.starting = !0),
          (this.moving = !1),
          (this.points = [this.getCurrentPoint()]),
          this.maskShape ||
            ((this.maskShape = this.createMask()), this.maskShape.set('capture', !1)),
          this.updateMask(t == null ? void 0 : t.maskStyle),
          this.emitEvent('start');
      }),
      (r.prototype.moveStart = function () {
        (this.moving = !0), (this.preMovePoint = this.getCurrentPoint());
      }),
      (r.prototype.move = function () {
        if (!(!this.moving || !this.maskShape)) {
          var t = this.getCurrentPoint(),
            n = this.preMovePoint,
            i = t.x - n.x,
            a = t.y - n.y,
            o = this.points;
          M(o, function (s) {
            (s.x += i), (s.y += a);
          }),
            this.updateMask(),
            this.emitEvent('change'),
            (this.preMovePoint = t);
        }
      }),
      (r.prototype.updateMask = function (t) {
        var n = _({}, this.getMaskAttrs(), t);
        this.maskShape.attr(n);
      }),
      (r.prototype.moveEnd = function () {
        (this.moving = !1), (this.preMovePoint = null);
      }),
      (r.prototype.end = function () {
        (this.starting = !1),
          this.emitEvent('end'),
          this.maskShape && this.maskShape.set('capture', !0);
      }),
      (r.prototype.hide = function () {
        this.maskShape && (this.maskShape.hide(), this.emitEvent('hide'));
      }),
      (r.prototype.resize = function () {
        this.starting &&
          this.maskShape &&
          (this.points.push(this.getCurrentPoint()), this.updateMask(), this.emitEvent('change'));
      }),
      (r.prototype.destroy = function () {
        (this.points = []),
          this.maskShape && this.maskShape.remove(),
          (this.maskShape = null),
          (this.preMovePoint = null),
          e.prototype.destroy.call(this);
      }),
      r
    );
  })(Ft);
function H0(e) {
  var r = Ht(e),
    t = 0,
    n = 0,
    i = 0;
  if (e.length) {
    var a = e[0];
    (t = xh(a, r) / 2), (n = (r.x + a.x) / 2), (i = (r.y + a.y) / 2);
  }
  return { x: n, y: i, r: t };
}
var fO = (function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.shapeType = 'circle'), t;
  }
  return (
    (r.prototype.getMaskAttrs = function () {
      return H0(this.points);
    }),
    r
  );
})(Uh);
function Y0(e) {
  return { start: Me(e), end: Ht(e) };
}
function W0(e, r) {
  var t = Math.min(e.x, r.x),
    n = Math.min(e.y, r.y),
    i = Math.abs(r.x - e.x),
    a = Math.abs(r.y - e.y);
  return { x: t, y: n, width: i, height: a };
}
var X0 = (function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.shapeType = 'rect'), t;
  }
  return (
    (r.prototype.getRegion = function () {
      return Y0(this.points);
    }),
    (r.prototype.getMaskAttrs = function () {
      var t = this.getRegion(),
        n = t.start,
        i = t.end;
      return W0(n, i);
    }),
    r
  );
})(Uh);
function gp(e) {
  (e.x = Tt(e.x, 0, 1)), (e.y = Tt(e.y, 0, 1));
}
function _0(e, r, t, n) {
  var i = null,
    a = null,
    o = n.invert(Me(e)),
    s = n.invert(Ht(e));
  return (
    t && (gp(o), gp(s)),
    r === 'x'
      ? ((i = n.convert({ x: o.x, y: 0 })), (a = n.convert({ x: s.x, y: 1 })))
      : ((i = n.convert({ x: 0, y: o.y })), (a = n.convert({ x: 1, y: s.y }))),
    { start: i, end: a }
  );
}
var j0 = (function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.dim = 'x'), (t.inPlot = !0), t;
  }
  return (
    (r.prototype.getRegion = function () {
      var t = this.context.view.getCoordinate();
      return _0(this.points, this.dim, this.inPlot, t);
    }),
    r
  );
})(X0);
function qh(e) {
  var r = [];
  return (
    e.length &&
      (M(e, function (t, n) {
        n === 0 ? r.push(['M', t.x, t.y]) : r.push(['L', t.x, t.y]);
      }),
      r.push(['L', e[0].x, e[0].y])),
    r
  );
}
function U0(e) {
  return { path: qh(e) };
}
var q0 = (function (e) {
  k(r, e);
  function r() {
    return (e !== null && e.apply(this, arguments)) || this;
  }
  return (
    (r.prototype.getMaskPath = function () {
      return qh(this.points);
    }),
    (r.prototype.getMaskAttrs = function () {
      return U0(this.points);
    }),
    (r.prototype.addPoint = function () {
      this.resize();
    }),
    r
  );
})(Uh);
function Zh(e) {
  return PT(e, !0);
}
function Z0(e) {
  return { path: Zh(e) };
}
var vO = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getMaskPath = function () {
        return Zh(this.points);
      }),
      (r.prototype.getMaskAttrs = function () {
        return Z0(this.points);
      }),
      r
    );
  })(q0),
  Kh = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (
        (t.maskShapes = []),
        (t.starting = !1),
        (t.moving = !1),
        (t.recordPoints = null),
        (t.preMovePoint = null),
        (t.shapeType = 'path'),
        (t.maskType = 'multi-mask'),
        t
      );
    }
    return (
      (r.prototype.getCurrentPoint = function () {
        var t = this.context.event;
        return { x: t.x, y: t.y };
      }),
      (r.prototype.emitEvent = function (t) {
        var n = ''.concat(this.maskType, ':').concat(t),
          i = this.context.view,
          a = this.context.event,
          o = {
            type: this.shapeType,
            name: this.maskType,
            get: function (s) {
              return o.hasOwnProperty(s) ? o[s] : void 0;
            },
          };
        i.emit(n, {
          target: o,
          maskShapes: this.maskShapes,
          multiPoints: this.recordPoints,
          x: a.x,
          y: a.y,
        });
      }),
      (r.prototype.createMask = function (t) {
        var n = this.context.view,
          i = this.recordPoints[t],
          a = this.getMaskAttrs(i),
          o = n.foregroundGroup.addShape({
            type: this.shapeType,
            name: 'mask',
            draggable: !0,
            attrs: x({ fill: '#C5D4EB', opacity: 0.3 }, a),
          });
        this.maskShapes.push(o);
      }),
      (r.prototype.getMaskPath = function (t) {
        return [];
      }),
      (r.prototype.show = function () {
        this.maskShapes.length > 0 &&
          (this.maskShapes.forEach(function (t) {
            return t.show();
          }),
          this.emitEvent('show'));
      }),
      (r.prototype.start = function (t) {
        this.recordPointStart(), (this.starting = !0), (this.moving = !1);
        var n = this.recordPoints.length - 1;
        this.createMask(n),
          this.updateShapesCapture(!1),
          this.updateMask(t == null ? void 0 : t.maskStyle),
          this.emitEvent('start');
      }),
      (r.prototype.moveStart = function () {
        (this.moving = !0),
          (this.preMovePoint = this.getCurrentPoint()),
          this.updateShapesCapture(!1);
      }),
      (r.prototype.move = function () {
        if (!(!this.moving || this.maskShapes.length === 0)) {
          var t = this.getCurrentPoint(),
            n = this.preMovePoint,
            i = t.x - n.x,
            a = t.y - n.y,
            o = this.getCurMaskShapeIndex();
          o > -1 &&
            (this.recordPoints[o].forEach(function (s) {
              (s.x += i), (s.y += a);
            }),
            this.updateMask(),
            this.emitEvent('change'),
            (this.preMovePoint = t));
        }
      }),
      (r.prototype.updateMask = function (t) {
        var n = this;
        this.recordPoints.forEach(function (i, a) {
          var o = _({}, n.getMaskAttrs(i), t);
          n.maskShapes[a].attr(o);
        });
      }),
      (r.prototype.resize = function () {
        this.starting &&
          this.maskShapes.length > 0 &&
          (this.recordPointContinue(), this.updateMask(), this.emitEvent('change'));
      }),
      (r.prototype.moveEnd = function () {
        (this.moving = !1), (this.preMovePoint = null), this.updateShapesCapture(!0);
      }),
      (r.prototype.end = function () {
        (this.starting = !1), this.emitEvent('end'), this.updateShapesCapture(!0);
      }),
      (r.prototype.hide = function () {
        this.maskShapes.length > 0 &&
          (this.maskShapes.forEach(function (t) {
            return t.hide();
          }),
          this.emitEvent('hide'));
      }),
      (r.prototype.remove = function () {
        var t = this.getCurMaskShapeIndex();
        t > -1 &&
          (this.recordPoints.splice(t, 1),
          this.maskShapes[t].remove(),
          this.maskShapes.splice(t, 1),
          (this.preMovePoint = null),
          this.updateShapesCapture(!0),
          this.emitEvent('change'));
      }),
      (r.prototype.clearAll = function () {
        this.recordPointClear(),
          this.maskShapes.forEach(function (t) {
            return t.remove();
          }),
          (this.maskShapes = []),
          (this.preMovePoint = null);
      }),
      (r.prototype.clear = function () {
        var t = this.getCurMaskShapeIndex();
        t === -1
          ? (this.recordPointClear(),
            this.maskShapes.forEach(function (n) {
              return n.remove();
            }),
            (this.maskShapes = []),
            this.emitEvent('clearAll'))
          : (this.recordPoints.splice(t, 1),
            this.maskShapes[t].remove(),
            this.maskShapes.splice(t, 1),
            (this.preMovePoint = null),
            this.emitEvent('clearSingle')),
          (this.preMovePoint = null);
      }),
      (r.prototype.destroy = function () {
        this.clear(), e.prototype.destroy.call(this);
      }),
      (r.prototype.getRecordPoints = function () {
        var t;
        return J([], q((t = this.recordPoints) !== null && t !== void 0 ? t : []), !1);
      }),
      (r.prototype.recordPointStart = function () {
        var t = this.getRecordPoints(),
          n = this.getCurrentPoint();
        this.recordPoints = J(J([], q(t), !1), [[n]], !1);
      }),
      (r.prototype.recordPointContinue = function () {
        var t = this.getRecordPoints(),
          n = this.getCurrentPoint(),
          i = t.splice(-1, 1)[0] || [];
        i.push(n), (this.recordPoints = J(J([], q(t), !1), [i], !1));
      }),
      (r.prototype.recordPointClear = function () {
        this.recordPoints = [];
      }),
      (r.prototype.updateShapesCapture = function (t) {
        this.maskShapes.forEach(function (n) {
          return n.set('capture', t);
        });
      }),
      (r.prototype.getCurMaskShapeIndex = function () {
        var t = this.getCurrentPoint();
        return this.maskShapes.findIndex(function (n) {
          var i = n.attrs,
            a = i.width,
            o = i.height,
            s = i.r,
            l = a === 0 || o === 0 || s === 0;
          return !l && n.isHit(t.x, t.y);
        });
      }),
      r
    );
  })(Ft),
  K0 = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.shapeType = 'rect'), t;
    }
    return (
      (r.prototype.getRegion = function (t) {
        return Y0(t);
      }),
      (r.prototype.getMaskAttrs = function (t) {
        var n = this.getRegion(t),
          i = n.start,
          a = n.end;
        return W0(i, a);
      }),
      r
    );
  })(Kh),
  Q0 = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.dim = 'x'), (t.inPlot = !0), t;
    }
    return (
      (r.prototype.getRegion = function (t) {
        var n = this.context.view.getCoordinate();
        return _0(t, this.dim, this.inPlot, n);
      }),
      r
    );
  })(K0),
  dO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.shapeType = 'circle'), (t.getMaskAttrs = H0), t;
    }
    return r;
  })(Kh),
  J0 = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.getMaskPath = qh), (t.getMaskAttrs = U0), t;
    }
    return (
      (r.prototype.addPoint = function () {
        this.resize();
      }),
      r
    );
  })(Kh),
  pO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.getMaskPath = Zh), (t.getMaskAttrs = Z0), t;
    }
    return r;
  })(J0),
  gO = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.setCursor = function (t) {
        var n = this.context.view;
        n.getCanvas().setCursor(t);
      }),
      (r.prototype.default = function () {
        this.setCursor('default');
      }),
      (r.prototype.pointer = function () {
        this.setCursor('pointer');
      }),
      (r.prototype.move = function () {
        this.setCursor('move');
      }),
      (r.prototype.crosshair = function () {
        this.setCursor('crosshair');
      }),
      (r.prototype.wait = function () {
        this.setCursor('wait');
      }),
      (r.prototype.help = function () {
        this.setCursor('help');
      }),
      (r.prototype.text = function () {
        this.setCursor('text');
      }),
      (r.prototype.eResize = function () {
        this.setCursor('e-resize');
      }),
      (r.prototype.wResize = function () {
        this.setCursor('w-resize');
      }),
      (r.prototype.nResize = function () {
        this.setCursor('n-resize');
      }),
      (r.prototype.sResize = function () {
        this.setCursor('s-resize');
      }),
      (r.prototype.neResize = function () {
        this.setCursor('ne-resize');
      }),
      (r.prototype.nwResize = function () {
        this.setCursor('nw-resize');
      }),
      (r.prototype.seResize = function () {
        this.setCursor('se-resize');
      }),
      (r.prototype.swResize = function () {
        this.setCursor('sw-resize');
      }),
      (r.prototype.nsResize = function () {
        this.setCursor('ns-resize');
      }),
      (r.prototype.ewResize = function () {
        this.setCursor('ew-resize');
      }),
      (r.prototype.zoomIn = function () {
        this.setCursor('zoom-in');
      }),
      (r.prototype.zoomOut = function () {
        this.setCursor('zoom-out');
      }),
      r
    );
  })(Ft),
  yO = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.filterView = function (t, n, i) {
        var a = this;
        t.getScaleByField(n) && t.filter(n, i),
          t.views &&
            t.views.length &&
            M(t.views, function (o) {
              a.filterView(o, n, i);
            });
      }),
      (r.prototype.filter = function () {
        var t = On(this.context);
        if (t) {
          var n = this.context.view,
            i = t.component,
            a = i.get('field');
          if (Ia(t)) {
            if (a) {
              var o = i.getItemsByState('unchecked'),
                s = di(n, a),
                l = o.map(function (v) {
                  return v.name;
                });
              l.length
                ? this.filterView(n, a, function (v) {
                    var d = s.getText(v);
                    return !l.includes(d);
                  })
                : this.filterView(n, a, null),
                n.render(!0);
            }
          } else if (Dm(t)) {
            var u = i.getValue(),
              c = q(u, 2),
              h = c[0],
              f = c[1];
            this.filterView(n, a, function (v) {
              return v >= h && v <= f;
            }),
              n.render(!0);
          }
        }
      }),
      r
    );
  })(Ft);
function yp(e, r, t, n) {
  var i = Math.min(t[r], n[r]),
    a = Math.max(t[r], n[r]),
    o = q(e.range, 2),
    s = o[0],
    l = o[1];
  if ((i < s && (i = s), a > l && (a = l), i === l && a === l)) return null;
  var u = e.invert(i),
    c = e.invert(a);
  if (e.isCategory) {
    var h = e.values.indexOf(u),
      f = e.values.indexOf(c),
      v = e.values.slice(h, f + 1);
    return function (d) {
      return v.includes(d);
    };
  } else
    return function (d) {
      return d >= u && d <= c;
    };
}
var he;
(function (e) {
  (e.FILTER = 'brush-filter-processing'),
    (e.RESET = 'brush-filter-reset'),
    (e.BEFORE_FILTER = 'brush-filter:beforefilter'),
    (e.AFTER_FILTER = 'brush-filter:afterfilter'),
    (e.BEFORE_RESET = 'brush-filter:beforereset'),
    (e.AFTER_RESET = 'brush-filter:afterreset');
})(he || (he = {}));
var bl = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.dims = ['x', 'y']), (t.startPoint = null), (t.isStarted = !1), t;
    }
    return (
      (r.prototype.hasDim = function (t) {
        return this.dims.includes(t);
      }),
      (r.prototype.start = function () {
        var t = this.context;
        (this.isStarted = !0), (this.startPoint = t.getCurrentPoint());
      }),
      (r.prototype.filter = function () {
        var t, n;
        if (La(this.context)) {
          var i = this.context.event.target,
            a = i.getCanvasBBox();
          (t = { x: a.x, y: a.y }), (n = { x: a.maxX, y: a.maxY });
        } else {
          if (!this.isStarted) return;
          (t = this.startPoint), (n = this.context.getCurrentPoint());
        }
        if (!(Math.abs(t.x - n.x) < 5 || Math.abs(t.x - n.y) < 5)) {
          var o = this.context,
            s = o.view,
            l = o.event,
            u = { view: s, event: l, dims: this.dims };
          s.emit(he.BEFORE_FILTER, Lt.fromData(s, he.BEFORE_FILTER, u));
          var c = s.getCoordinate(),
            h = c.invert(n),
            f = c.invert(t);
          if (this.hasDim('x')) {
            var v = s.getXScale(),
              d = yp(v, 'x', h, f);
            this.filterView(s, v.field, d);
          }
          if (this.hasDim('y')) {
            var p = s.getYScales()[0],
              d = yp(p, 'y', h, f);
            this.filterView(s, p.field, d);
          }
          this.reRender(s, { source: he.FILTER }),
            s.emit(he.AFTER_FILTER, Lt.fromData(s, he.AFTER_FILTER, u));
        }
      }),
      (r.prototype.end = function () {
        this.isStarted = !1;
      }),
      (r.prototype.reset = function () {
        var t = this.context.view;
        if (
          (t.emit(he.BEFORE_RESET, Lt.fromData(t, he.BEFORE_RESET, {})),
          (this.isStarted = !1),
          this.hasDim('x'))
        ) {
          var n = t.getXScale();
          this.filterView(t, n.field, null);
        }
        if (this.hasDim('y')) {
          var i = t.getYScales()[0];
          this.filterView(t, i.field, null);
        }
        this.reRender(t, { source: he.RESET }),
          t.emit(he.AFTER_RESET, Lt.fromData(t, he.AFTER_RESET, {}));
      }),
      (r.prototype.filterView = function (t, n, i) {
        t.filter(n, i);
      }),
      (r.prototype.reRender = function (t, n) {
        t.render(!0, n);
      }),
      r
    );
  })(Ft),
  Qh = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.filterView = function (t, n, i) {
        var a = ar(t);
        M(a, function (o) {
          o.filter(n, i);
        });
      }),
      (r.prototype.reRender = function (t) {
        var n = ar(t);
        M(n, function (i) {
          i.render(!0);
        });
      }),
      r
    );
  })(bl),
  mO = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.filter = function () {
        var t = On(this.context),
          n = this.context.view,
          i = Qt(n);
        if (La(this.context)) {
          var a = mh(this.context, 10);
          a &&
            M(i, function (p) {
              a.includes(p) ? p.show() : p.hide();
            });
        } else if (t) {
          var o = t.component,
            s = o.get('field');
          if (Ia(t)) {
            if (s) {
              var l = o.getItemsByState('unchecked'),
                u = di(n, s),
                c = l.map(function (p) {
                  return p.name;
                });
              M(i, function (p) {
                var g = Ue(p, s),
                  y = u.getText(g);
                c.indexOf(y) >= 0 ? p.hide() : p.show();
              });
            }
          } else if (Dm(t)) {
            var h = o.getValue(),
              f = q(h, 2),
              v = f[0],
              d = f[1];
            M(i, function (p) {
              var g = Ue(p, s);
              g >= v && g <= d ? p.show() : p.hide();
            });
          }
        }
      }),
      (r.prototype.clear = function () {
        var t = Qt(this.context.view);
        M(t, function (n) {
          n.show();
        });
      }),
      (r.prototype.reset = function () {
        this.clear();
      }),
      r
    );
  })(Ft),
  tx = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.byRecord = !1), t;
    }
    return (
      (r.prototype.filter = function () {
        La(this.context) && (this.byRecord ? this.filterByRecord() : this.filterByBBox());
      }),
      (r.prototype.filterByRecord = function () {
        var t = this.context.view,
          n = mh(this.context, 10);
        if (n) {
          var i = t.getXScale().field,
            a = t.getYScales()[0].field,
            o = n.map(function (l) {
              return l.getModel().data;
            }),
            s = ar(t);
          M(s, function (l) {
            var u = Qt(l);
            M(u, function (c) {
              var h = c.getModel().data;
              Gm(o, h, i, a) ? c.show() : c.hide();
            });
          });
        }
      }),
      (r.prototype.filterByBBox = function () {
        var t = this,
          n = this.context.view,
          i = ar(n);
        M(i, function (a) {
          var o = Bm(t.context, a, 10),
            s = Qt(a);
          o &&
            M(s, function (l) {
              o.includes(l) ? l.show() : l.hide();
            });
        });
      }),
      (r.prototype.reset = function () {
        var t = ar(this.context.view);
        M(t, function (n) {
          var i = Qt(n);
          M(i, function (a) {
            a.show();
          });
        });
      }),
      r
    );
  })(Ft),
  xO = 10,
  wO = 5,
  bO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (
        (t.buttonGroup = null),
        (t.buttonCfg = {
          name: 'button',
          text: 'button',
          textStyle: { x: 0, y: 0, fontSize: 12, fill: '#333333', cursor: 'pointer' },
          padding: [8, 10],
          style: { fill: '#f7f7f7', stroke: '#cccccc', cursor: 'pointer' },
          activeStyle: { fill: '#e6e6e6' },
        }),
        t
      );
    }
    return (
      (r.prototype.getButtonCfg = function () {
        return _(this.buttonCfg, this.cfg);
      }),
      (r.prototype.drawButton = function () {
        var t = this.getButtonCfg(),
          n = this.context.view.foregroundGroup.addGroup({ name: t.name }),
          i = n.addShape({
            type: 'text',
            name: 'button-text',
            attrs: x({ text: t.text }, t.textStyle),
          }),
          a = i.getBBox(),
          o = bh(t.padding),
          s = n.addShape({
            type: 'rect',
            name: 'button-rect',
            attrs: x(
              {
                x: a.x - o[3],
                y: a.y - o[0],
                width: a.width + o[1] + o[3],
                height: a.height + o[0] + o[2],
              },
              t.style,
            ),
          });
        s.toBack(),
          n.on('mouseenter', function () {
            s.attr(t.activeStyle);
          }),
          n.on('mouseleave', function () {
            s.attr(t.style);
          }),
          (this.buttonGroup = n);
      }),
      (r.prototype.resetPosition = function () {
        var t = this.context.view,
          n = t.getCoordinate(),
          i = n.convert({ x: 1, y: 1 }),
          a = this.buttonGroup,
          o = a.getBBox(),
          s = Vt(null, [['t', i.x - o.width - xO, i.y + o.height + wO]]);
        a.setMatrix(s);
      }),
      (r.prototype.show = function () {
        this.buttonGroup || this.drawButton(), this.resetPosition(), this.buttonGroup.show();
      }),
      (r.prototype.hide = function () {
        this.buttonGroup && this.buttonGroup.hide();
      }),
      (r.prototype.destroy = function () {
        var t = this.buttonGroup;
        t && t.remove(), e.prototype.destroy.call(this);
      }),
      r
    );
  })(Ft),
  SO = 4,
  CO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.starting = !1), (t.dragStart = !1), t;
    }
    return (
      (r.prototype.start = function () {
        (this.starting = !0), (this.startPoint = this.context.getCurrentPoint());
      }),
      (r.prototype.drag = function () {
        if (this.startPoint) {
          var t = this.context.getCurrentPoint(),
            n = this.context.view,
            i = this.context.event;
          this.dragStart
            ? n.emit('drag', { target: i.target, x: i.x, y: i.y })
            : xh(t, this.startPoint) > SO &&
              (n.emit('dragstart', { target: i.target, x: i.x, y: i.y }), (this.dragStart = !0));
        }
      }),
      (r.prototype.end = function () {
        if (this.dragStart) {
          var t = this.context.view,
            n = this.context.event;
          t.emit('dragend', { target: n.target, x: n.x, y: n.y });
        }
        (this.starting = !1), (this.dragStart = !1);
      }),
      r
    );
  })(Ft),
  MO = 5,
  AO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.starting = !1), (t.isMoving = !1), (t.startPoint = null), (t.startMatrix = null), t;
    }
    return (
      (r.prototype.start = function () {
        (this.starting = !0),
          (this.startPoint = this.context.getCurrentPoint()),
          (this.startMatrix = this.context.view.middleGroup.getMatrix());
      }),
      (r.prototype.move = function () {
        if (this.starting) {
          var t = this.startPoint,
            n = this.context.getCurrentPoint(),
            i = xh(t, n);
          if ((i > MO && !this.isMoving && (this.isMoving = !0), this.isMoving)) {
            var a = this.context.view,
              o = Vt(this.startMatrix, [['t', n.x - t.x, n.y - t.y]]);
            a.backgroundGroup.setMatrix(o),
              a.foregroundGroup.setMatrix(o),
              a.middleGroup.setMatrix(o);
          }
        }
      }),
      (r.prototype.end = function () {
        this.isMoving && (this.isMoving = !1),
          (this.startMatrix = null),
          (this.starting = !1),
          (this.startPoint = null);
      }),
      (r.prototype.reset = function () {
        (this.starting = !1), (this.startPoint = null), (this.isMoving = !1);
        var t = this.context.view;
        t.backgroundGroup.resetMatrix(),
          t.foregroundGroup.resetMatrix(),
          t.middleGroup.resetMatrix(),
          (this.isMoving = !1);
      }),
      r
    );
  })(Ft),
  mp = 'x',
  xp = 'y',
  ex = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.dims = [mp, xp]), (t.cfgFields = ['dims']), (t.cacheScaleDefs = {}), t;
    }
    return (
      (r.prototype.hasDim = function (t) {
        return this.dims.includes(t);
      }),
      (r.prototype.getScale = function (t) {
        var n = this.context.view;
        return t === 'x' ? n.getXScale() : n.getYScales()[0];
      }),
      (r.prototype.resetDim = function (t) {
        var n = this.context.view;
        if (this.hasDim(t) && this.cacheScaleDefs[t]) {
          var i = this.getScale(t);
          n.scale(i.field, this.cacheScaleDefs[t]), (this.cacheScaleDefs[t] = null);
        }
      }),
      (r.prototype.reset = function () {
        this.resetDim(mp), this.resetDim(xp);
        var t = this.context.view;
        t.render(!0);
      }),
      r
    );
  })(Ft),
  FO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.startPoint = null), (t.starting = !1), (t.startCache = {}), t;
    }
    return (
      (r.prototype.start = function () {
        var t = this;
        (this.startPoint = this.context.getCurrentPoint()), (this.starting = !0);
        var n = this.dims;
        M(n, function (i) {
          var a = t.getScale(i),
            o = a.min,
            s = a.max,
            l = a.values;
          t.startCache[i] = { min: o, max: s, values: l };
        });
      }),
      (r.prototype.end = function () {
        (this.startPoint = null), (this.starting = !1), (this.startCache = {});
      }),
      (r.prototype.translate = function () {
        var t = this;
        if (this.starting) {
          var n = this.startPoint,
            i = this.context.view.getCoordinate(),
            a = this.context.getCurrentPoint(),
            o = i.invert(n),
            s = i.invert(a),
            l = s.x - o.x,
            u = s.y - o.y,
            c = this.context.view,
            h = this.dims;
          M(h, function (f) {
            t.translateDim(f, { x: l * -1, y: u * -1 });
          }),
            c.render(!0);
        }
      }),
      (r.prototype.translateDim = function (t, n) {
        if (this.hasDim(t)) {
          var i = this.getScale(t);
          i.isLinear && this.translateLinear(t, i, n);
        }
      }),
      (r.prototype.translateLinear = function (t, n, i) {
        var a = this.context.view,
          o = this.startCache[t],
          s = o.min,
          l = o.max,
          u = l - s,
          c = i[t] * u;
        this.cacheScaleDefs[t] || (this.cacheScaleDefs[t] = { nice: n.nice, min: s, max: l }),
          a.scale(n.field, { nice: !1, min: s + c, max: l + c });
      }),
      (r.prototype.reset = function () {
        e.prototype.reset.call(this), (this.startPoint = null), (this.starting = !1);
      }),
      r
    );
  })(ex),
  EO = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.zoomRatio = 0.05), t;
    }
    return (
      (r.prototype.zoomIn = function () {
        this.zoom(this.zoomRatio);
      }),
      (r.prototype.zoom = function (t) {
        var n = this,
          i = this.dims;
        M(i, function (a) {
          n.zoomDim(a, t);
        }),
          this.context.view.render(!0);
      }),
      (r.prototype.zoomOut = function () {
        this.zoom(-1 * this.zoomRatio);
      }),
      (r.prototype.zoomDim = function (t, n) {
        if (this.hasDim(t)) {
          var i = this.getScale(t);
          i.isLinear && this.zoomLinear(t, i, n);
        }
      }),
      (r.prototype.zoomLinear = function (t, n, i) {
        var a = this.context.view;
        this.cacheScaleDefs[t] ||
          (this.cacheScaleDefs[t] = { nice: n.nice, min: n.min, max: n.max });
        var o = this.cacheScaleDefs[t],
          s = o.max - o.min,
          l = n.min,
          u = n.max,
          c = i * s,
          h = l - c,
          f = u + c,
          v = f - h,
          d = v / s;
        f > h && d < 100 && d > 0.01 && a.scale(n.field, { nice: !1, min: l - c, max: u + c });
      }),
      r
    );
  })(ex);
function TO(e) {
  var r = e.gEvent.originalEvent;
  return r.deltaY > 0;
}
var kO = 1,
  IO = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.scroll = function (t) {
        var n = this.context,
          i = n.view,
          a = n.event;
        if (i.getOptions().scrollbar) {
          var o = (t == null ? void 0 : t.wheelDelta) || kO,
            s = i.getController('scrollbar'),
            l = i.getXScale(),
            u = i.getOptions().data,
            c = _t(je(u, l.field)),
            h = _t(l.values),
            f = s.getValue(),
            v = Math.floor((c - h) * f),
            d = v + (TO(a) ? o : -o),
            p = o / (c - h) / 1e4,
            g = Tt(d / (c - h) + p, 0, 1);
          s.setValue(g);
        }
      }),
      r
    );
  })(Ft),
  LO = 'aixs-description-tooltip',
  PO = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.show = function () {
        var t = this.context,
          n = On(t).axis,
          i = n.cfg.title,
          a = i.description,
          o = i.text,
          s = i.descriptionTooltipStyle,
          l = t.event,
          u = l.x,
          c = l.y;
        this.tooltip || this.renderTooltip(),
          this.tooltip.update({
            title: o || '',
            customContent: function () {
              return `
          <div class="`
                .concat(Cr, '" style={')
                .concat(
                  s,
                  `}>
            <div class="`,
                )
                .concat(
                  Mr,
                  `">
              字段说明：`,
                )
                .concat(
                  a,
                  `
            </div>
          </div>
        `,
                );
            },
            x: u,
            y: c,
          }),
          this.tooltip.show();
      }),
      (r.prototype.destroy = function () {
        e.prototype.destroy.call(this), this.tooltip && this.tooltip.destroy();
      }),
      (r.prototype.hide = function () {
        this.tooltip && this.tooltip.hide();
      }),
      (r.prototype.renderTooltip = function () {
        var t,
          n = this.context.view,
          i = n.canvas,
          a = { start: { x: 0, y: 0 }, end: { x: i.get('width'), y: i.get('height') } },
          o = new fl({
            parent: i.get('el').parentNode,
            region: a,
            visible: !1,
            containerId: LO,
            domStyles: x(
              {},
              _(
                {},
                ((t = {}),
                (t[Cr] = {
                  'max-width': '50%',
                  padding: '10px',
                  'line-height': '15px',
                  'font-size': '12px',
                  color: 'rgba(0, 0, 0, .65)',
                }),
                (t[Mr] = { 'word-break': 'break-all', 'margin-bottom': '3px' }),
                t),
              ),
            ),
          });
        o.init(), o.setCapture(!1), (this.tooltip = o);
      }),
      r
    );
  })(Ft);
XT('dark', Hm(Pk));
zg('canvas', pI);
zg('svg', UI);
hr('Polygon', lL);
hr('Interval', nL);
hr('Schema', uL);
hr('Path', Dh);
hr('Point', oL);
hr('Line', iL);
hr('Area', ZI);
hr('Edge', KI);
hr('Heatmap', QI);
hr('Violin', hL);
Qa('base', ml);
Qa('interval', EL);
Qa('pie', TL);
Qa('polar', D0);
we('overlap', HL);
we('distribute', IL);
we('fixed-overlap', VL);
we('hide-overlap', QL);
we('limit-in-shape', $L);
we('limit-in-canvas', RL);
we('limit-in-plot', pP);
we('pie-outer', PL);
we('adjust-color', tP);
we('interval-adjust-position', iP);
we('interval-hide-overlap', oP);
we('point-adjust-position', uP);
we('pie-spider', BL);
we('path-adjust-position', fP);
ke('fade-in', gP);
ke('fade-out', yP);
ke('grow-in-x', xP);
ke('grow-in-xy', bP);
ke('grow-in-y', wP);
ke('scale-in-x', MP);
ke('scale-in-y', AP);
ke('wave-in', EP);
ke('zoom-in', TP);
ke('zoom-out', kP);
ke('position-update', CP);
ke('sector-path-update', FP);
ke('path-in', SP);
Ti('rect', DP);
Ti('mirror', OP);
Ti('list', LP);
Ti('matrix', PP);
Ti('circle', IP);
Ti('tree', BP);
zn('axis', NP);
zn('legend', zP);
zn('tooltip', jm);
zn('annotation', $P);
zn('slider', GP);
zn('scrollbar', YP);
Q('tooltip', z0);
Q('sibling-tooltip', jP);
Q('ellipsis-text', UP);
Q('element-active', qP);
Q('element-single-active', QP);
Q('element-range-active', KP);
Q('element-highlight', _h);
Q('element-highlight-by-x', tO);
Q('element-highlight-by-color', JP);
Q('element-single-highlight', eO);
Q('element-range-highlight', V0);
Q('element-sibling-highlight', V0, { effectSiblings: !0, effectByRecord: !0 });
Q('element-selected', nO);
Q('element-single-selected', iO);
Q('element-range-selected', rO);
Q('element-link-by-color', ZP);
Q('active-region', _P);
Q('list-active', aO);
Q('list-selected', sO);
Q('list-highlight', jh);
Q('list-unchecked', lO);
Q('list-checked', uO);
Q('list-focus', cO);
Q('list-radio', hO);
Q('legend-item-highlight', jh, { componentNames: ['legend'] });
Q('axis-label-highlight', jh, { componentNames: ['axis'] });
Q('axis-description', PO);
Q('rect-mask', X0);
Q('x-rect-mask', j0, { dim: 'x' });
Q('y-rect-mask', j0, { dim: 'y' });
Q('circle-mask', fO);
Q('path-mask', q0);
Q('smooth-path-mask', vO);
Q('rect-multi-mask', K0);
Q('x-rect-multi-mask', Q0, { dim: 'x' });
Q('y-rect-multi-mask', Q0, { dim: 'y' });
Q('circle-multi-mask', dO);
Q('path-multi-mask', J0);
Q('smooth-path-multi-mask', pO);
Q('cursor', gO);
Q('data-filter', yO);
Q('brush', bl);
Q('brush-x', bl, { dims: ['x'] });
Q('brush-y', bl, { dims: ['y'] });
Q('sibling-filter', Qh);
Q('sibling-x-filter', Qh, { dims: 'x' });
Q('sibling-y-filter', Qh, { dims: 'y' });
Q('element-filter', mO);
Q('element-sibling-filter', tx);
Q('element-sibling-filter-record', tx, { byRecord: !0 });
Q('view-drag', CO);
Q('view-move', AO);
Q('scale-translate', FO);
Q('scale-zoom', EO);
Q('reset-button', bO, { name: 'reset-button', text: 'reset' });
Q('mousewheel-scroll', IO);
function wr(e) {
  return e.isInPlot();
}
ot('tooltip', {
  start: [
    {
      trigger: 'plot:mousemove',
      action: 'tooltip:show',
      throttle: { wait: 50, leading: !0, trailing: !1 },
    },
    {
      trigger: 'plot:touchmove',
      action: 'tooltip:show',
      throttle: { wait: 50, leading: !0, trailing: !1 },
    },
  ],
  end: [
    { trigger: 'plot:mouseleave', action: 'tooltip:hide' },
    { trigger: 'plot:leave', action: 'tooltip:hide' },
    { trigger: 'plot:touchend', action: 'tooltip:hide' },
  ],
});
ot('ellipsis-text', {
  start: [
    {
      trigger: 'legend-item-name:mousemove',
      action: 'ellipsis-text:show',
      throttle: { wait: 50, leading: !0, trailing: !1 },
    },
    {
      trigger: 'legend-item-name:touchstart',
      action: 'ellipsis-text:show',
      throttle: { wait: 50, leading: !0, trailing: !1 },
    },
    {
      trigger: 'axis-label:mousemove',
      action: 'ellipsis-text:show',
      throttle: { wait: 50, leading: !0, trailing: !1 },
    },
    {
      trigger: 'axis-label:touchstart',
      action: 'ellipsis-text:show',
      throttle: { wait: 50, leading: !0, trailing: !1 },
    },
  ],
  end: [
    { trigger: 'legend-item-name:mouseleave', action: 'ellipsis-text:hide' },
    { trigger: 'legend-item-name:touchend', action: 'ellipsis-text:hide' },
    { trigger: 'axis-label:mouseleave', action: 'ellipsis-text:hide' },
    { trigger: 'axis-label:mouseout', action: 'ellipsis-text:hide' },
    { trigger: 'axis-label:touchend', action: 'ellipsis-text:hide' },
  ],
});
ot('element-active', {
  start: [{ trigger: 'element:mouseenter', action: 'element-active:active' }],
  end: [{ trigger: 'element:mouseleave', action: 'element-active:reset' }],
});
ot('element-selected', {
  start: [{ trigger: 'element:click', action: 'element-selected:toggle' }],
});
ot('element-highlight', {
  start: [{ trigger: 'element:mouseenter', action: 'element-highlight:highlight' }],
  end: [{ trigger: 'element:mouseleave', action: 'element-highlight:reset' }],
});
ot('element-highlight-by-x', {
  start: [{ trigger: 'element:mouseenter', action: 'element-highlight-by-x:highlight' }],
  end: [{ trigger: 'element:mouseleave', action: 'element-highlight-by-x:reset' }],
});
ot('element-highlight-by-color', {
  start: [{ trigger: 'element:mouseenter', action: 'element-highlight-by-color:highlight' }],
  end: [{ trigger: 'element:mouseleave', action: 'element-highlight-by-color:reset' }],
});
ot('legend-active', {
  start: [
    { trigger: 'legend-item:mouseenter', action: ['list-active:active', 'element-active:active'] },
  ],
  end: [
    { trigger: 'legend-item:mouseleave', action: ['list-active:reset', 'element-active:reset'] },
  ],
});
ot('legend-highlight', {
  start: [
    {
      trigger: 'legend-item:mouseenter',
      action: ['legend-item-highlight:highlight', 'element-highlight:highlight'],
    },
  ],
  end: [
    {
      trigger: 'legend-item:mouseleave',
      action: ['legend-item-highlight:reset', 'element-highlight:reset'],
    },
  ],
});
ot('axis-label-highlight', {
  start: [
    {
      trigger: 'axis-label:mouseenter',
      action: ['axis-label-highlight:highlight', 'element-highlight:highlight'],
    },
  ],
  end: [
    {
      trigger: 'axis-label:mouseleave',
      action: ['axis-label-highlight:reset', 'element-highlight:reset'],
    },
  ],
});
ot('element-list-highlight', {
  start: [
    {
      trigger: 'element:mouseenter',
      action: ['list-highlight:highlight', 'element-highlight:highlight'],
    },
  ],
  end: [
    { trigger: 'element:mouseleave', action: ['list-highlight:reset', 'element-highlight:reset'] },
  ],
});
ot('element-range-highlight', {
  showEnable: [
    { trigger: 'plot:mouseenter', action: 'cursor:crosshair' },
    { trigger: 'mask:mouseenter', action: 'cursor:move' },
    { trigger: 'plot:mouseleave', action: 'cursor:default' },
    { trigger: 'mask:mouseleave', action: 'cursor:crosshair' },
  ],
  start: [
    {
      trigger: 'plot:mousedown',
      isEnable: function (e) {
        return !e.isInShape('mask');
      },
      action: ['rect-mask:start', 'rect-mask:show'],
    },
    { trigger: 'mask:dragstart', action: ['rect-mask:moveStart'] },
  ],
  processing: [
    { trigger: 'plot:mousemove', action: ['rect-mask:resize'] },
    { trigger: 'mask:drag', action: ['rect-mask:move'] },
    { trigger: 'mask:change', action: ['element-range-highlight:highlight'] },
  ],
  end: [
    { trigger: 'plot:mouseup', action: ['rect-mask:end'] },
    { trigger: 'mask:dragend', action: ['rect-mask:moveEnd'] },
    {
      trigger: 'document:mouseup',
      isEnable: function (e) {
        return !e.isInPlot();
      },
      action: ['element-range-highlight:clear', 'rect-mask:end', 'rect-mask:hide'],
    },
  ],
  rollback: [{ trigger: 'dblclick', action: ['element-range-highlight:clear', 'rect-mask:hide'] }],
});
ot('brush', {
  showEnable: [
    { trigger: 'plot:mouseenter', action: 'cursor:crosshair' },
    { trigger: 'plot:mouseleave', action: 'cursor:default' },
  ],
  start: [
    {
      trigger: 'mousedown',
      isEnable: wr,
      action: ['brush:start', 'rect-mask:start', 'rect-mask:show'],
    },
  ],
  processing: [{ trigger: 'mousemove', isEnable: wr, action: ['rect-mask:resize'] }],
  end: [
    {
      trigger: 'mouseup',
      isEnable: wr,
      action: ['brush:filter', 'brush:end', 'rect-mask:end', 'rect-mask:hide', 'reset-button:show'],
    },
  ],
  rollback: [
    {
      trigger: 'reset-button:click',
      action: ['brush:reset', 'reset-button:hide', 'cursor:crosshair'],
    },
  ],
});
ot('brush-visible', {
  showEnable: [
    { trigger: 'plot:mouseenter', action: 'cursor:crosshair' },
    { trigger: 'plot:mouseleave', action: 'cursor:default' },
  ],
  start: [{ trigger: 'plot:mousedown', action: ['rect-mask:start', 'rect-mask:show'] }],
  processing: [
    { trigger: 'plot:mousemove', action: ['rect-mask:resize'] },
    { trigger: 'mask:change', action: ['element-range-highlight:highlight'] },
  ],
  end: [
    {
      trigger: 'plot:mouseup',
      action: [
        'rect-mask:end',
        'rect-mask:hide',
        'element-filter:filter',
        'element-range-highlight:clear',
      ],
    },
  ],
  rollback: [{ trigger: 'dblclick', action: ['element-filter:clear'] }],
});
ot('brush-x', {
  showEnable: [
    { trigger: 'plot:mouseenter', action: 'cursor:crosshair' },
    { trigger: 'plot:mouseleave', action: 'cursor:default' },
  ],
  start: [
    {
      trigger: 'mousedown',
      isEnable: wr,
      action: ['brush-x:start', 'x-rect-mask:start', 'x-rect-mask:show'],
    },
  ],
  processing: [{ trigger: 'mousemove', isEnable: wr, action: ['x-rect-mask:resize'] }],
  end: [
    {
      trigger: 'mouseup',
      isEnable: wr,
      action: ['brush-x:filter', 'brush-x:end', 'x-rect-mask:end', 'x-rect-mask:hide'],
    },
  ],
  rollback: [{ trigger: 'dblclick', action: ['brush-x:reset'] }],
});
ot('element-path-highlight', {
  showEnable: [
    { trigger: 'plot:mouseenter', action: 'cursor:crosshair' },
    { trigger: 'plot:mouseleave', action: 'cursor:default' },
  ],
  start: [
    { trigger: 'mousedown', isEnable: wr, action: 'path-mask:start' },
    { trigger: 'mousedown', isEnable: wr, action: 'path-mask:show' },
  ],
  processing: [{ trigger: 'mousemove', action: 'path-mask:addPoint' }],
  end: [{ trigger: 'mouseup', action: 'path-mask:end' }],
  rollback: [{ trigger: 'dblclick', action: 'path-mask:hide' }],
});
ot('brush-x-multi', {
  showEnable: [
    { trigger: 'plot:mouseenter', action: 'cursor:crosshair' },
    { trigger: 'mask:mouseenter', action: 'cursor:move' },
    { trigger: 'plot:mouseleave', action: 'cursor:default' },
    { trigger: 'mask:mouseleave', action: 'cursor:crosshair' },
  ],
  start: [
    {
      trigger: 'mousedown',
      isEnable: wr,
      action: ['x-rect-multi-mask:start', 'x-rect-multi-mask:show'],
    },
    { trigger: 'mask:dragstart', action: ['x-rect-multi-mask:moveStart'] },
  ],
  processing: [
    {
      trigger: 'mousemove',
      isEnable: function (e) {
        return !pl(e);
      },
      action: ['x-rect-multi-mask:resize'],
    },
    { trigger: 'multi-mask:change', action: 'element-range-highlight:highlight' },
    { trigger: 'mask:drag', action: ['x-rect-multi-mask:move'] },
  ],
  end: [
    { trigger: 'mouseup', action: ['x-rect-multi-mask:end'] },
    { trigger: 'mask:dragend', action: ['x-rect-multi-mask:moveEnd'] },
  ],
  rollback: [
    { trigger: 'dblclick', action: ['x-rect-multi-mask:clear', 'cursor:crosshair'] },
    { trigger: 'multi-mask:clearAll', action: ['element-range-highlight:clear'] },
    { trigger: 'multi-mask:clearSingle', action: ['element-range-highlight:highlight'] },
  ],
});
ot('element-single-selected', {
  start: [{ trigger: 'element:click', action: 'element-single-selected:toggle' }],
});
ot('legend-filter', {
  showEnable: [
    { trigger: 'legend-item:mouseenter', action: ['cursor:pointer', 'list-radio:show'] },
    { trigger: 'legend-item:mouseleave', action: ['cursor:default', 'list-radio:hide'] },
  ],
  start: [
    {
      trigger: 'legend-item:click',
      isEnable: function (e) {
        return !e.isInShape('legend-item-radio');
      },
      action: [
        'legend-item-highlight:reset',
        'element-highlight:reset',
        'list-unchecked:toggle',
        'data-filter:filter',
        'list-radio:show',
      ],
    },
    { trigger: 'legend-item-radio:mouseenter', action: ['list-radio:showTip'] },
    { trigger: 'legend-item-radio:mouseleave', action: ['list-radio:hideTip'] },
    {
      trigger: 'legend-item-radio:click',
      action: ['list-focus:toggle', 'data-filter:filter', 'list-radio:show'],
    },
  ],
});
ot('continuous-filter', {
  start: [{ trigger: 'legend:valuechanged', action: 'data-filter:filter' }],
});
ot('continuous-visible-filter', {
  start: [{ trigger: 'legend:valuechanged', action: 'element-filter:filter' }],
});
ot('legend-visible-filter', {
  showEnable: [
    { trigger: 'legend-item:mouseenter', action: 'cursor:pointer' },
    { trigger: 'legend-item:mouseleave', action: 'cursor:default' },
  ],
  start: [
    {
      trigger: 'legend-item:click',
      action: [
        'legend-item-highlight:reset',
        'element-highlight:reset',
        'list-unchecked:toggle',
        'element-filter:filter',
      ],
    },
  ],
});
ot('active-region', {
  start: [{ trigger: 'plot:mousemove', action: 'active-region:show' }],
  end: [{ trigger: 'plot:mouseleave', action: 'active-region:hide' }],
});
ot('axis-description', {
  start: [{ trigger: 'axis-description:mousemove', action: 'axis-description:show' }],
  end: [{ trigger: 'axis-description:mouseleave', action: 'axis-description:hide' }],
});
function wp(e) {
  return e.gEvent.preventDefault(), e.gEvent.originalEvent.deltaY > 0;
}
ot('view-zoom', {
  start: [
    {
      trigger: 'plot:mousewheel',
      isEnable: function (e) {
        return wp(e.event);
      },
      action: 'scale-zoom:zoomOut',
      throttle: { wait: 100, leading: !0, trailing: !1 },
    },
    {
      trigger: 'plot:mousewheel',
      isEnable: function (e) {
        return !wp(e.event);
      },
      action: 'scale-zoom:zoomIn',
      throttle: { wait: 100, leading: !0, trailing: !1 },
    },
  ],
});
ot('sibling-tooltip', {
  start: [{ trigger: 'plot:mousemove', action: 'sibling-tooltip:show' }],
  end: [{ trigger: 'plot:mouseleave', action: 'sibling-tooltip:hide' }],
});
ot('plot-mousewheel-scroll', {
  start: [{ trigger: 'plot:mousewheel', action: 'mousewheel-scroll:scroll' }],
});
var pe = [
    'type',
    'alias',
    'tickCount',
    'tickInterval',
    'min',
    'max',
    'nice',
    'minLimit',
    'maxLimit',
    'range',
    'tickMethod',
    'base',
    'exponent',
    'mask',
    'sync',
  ],
  qe;
(function (e) {
  (e.ERROR = 'error'), (e.WARN = 'warn'), (e.INFO = 'log');
})(qe || (qe = {}));
var OO = 'AntV/G2Plot';
function DO(e) {
  for (var r = [], t = 1; t < arguments.length; t++) r[t - 1] = arguments[t];
  var n = 0;
  return ''.concat(OO, ': ').concat(
    e.replace(/%s/g, function () {
      return ''.concat(r[n++]);
    }),
  );
}
function Fr(e, r, t) {
  for (var n = [], i = 3; i < arguments.length; i++) n[i - 3] = arguments[i];
  r || console[e](DO.apply(void 0, J([t], n, !1)));
}
function mt(e, r) {
  var t = {};
  return (
    e !== null &&
      typeof e == 'object' &&
      r.forEach(function (n) {
        var i = e[n];
        i !== void 0 && (t[n] = i);
      }),
    t
  );
}
function Jh(e, r) {
  if (!e) return {};
  var t = e.filter(function (a) {
      var o = A(a, [r]);
      return at(o) && !isNaN(o);
    }),
    n = t.every(function (a) {
      return A(a, [r]) >= 0;
    }),
    i = t.every(function (a) {
      return A(a, [r]) <= 0;
    });
  return n ? { min: 0 } : i ? { max: 0 } : {};
}
function rx(e, r, t, n, i) {
  if ((i === void 0 && (i = []), !Array.isArray(e))) return { nodes: [], links: [] };
  var a = [],
    o = {},
    s = -1;
  return (
    e.forEach(function (l) {
      var u = l[r],
        c = l[t],
        h = l[n],
        f = mt(l, i);
      o[u] || (o[u] = x({ id: ++s, name: u }, f)),
        o[c] || (o[c] = x({ id: ++s, name: c }, f)),
        a.push(x({ source: o[u].id, target: o[c].id, value: h }, f));
    }),
    {
      nodes: Object.values(o).sort(function (l, u) {
        return l.id - u.id;
      }),
      links: a,
    }
  );
}
function yi(e, r) {
  var t = Jt(e, function (n) {
    var i = n[r];
    return i === null || (typeof i == 'number' && !isNaN(i));
  });
  return Fr(qe.WARN, t.length === e.length, 'illegal data existed in chart data.'), t;
}
var BO = 5,
  RO = {}.toString,
  nx = function (e, r) {
    return RO.call(e) === '[object ' + r + ']';
  },
  $O = function (e) {
    return nx(e, 'Array');
  },
  NO = function (e) {
    return typeof e == 'object' && e !== null;
  },
  bp = function (e) {
    if (!NO(e) || !nx(e, 'Object')) return !1;
    for (var r = e; Object.getPrototypeOf(r) !== null; ) r = Object.getPrototypeOf(r);
    return Object.getPrototypeOf(e) === r;
  },
  ix = function (e, r, t, n) {
    (t = t || 0), (n = n || BO);
    for (var i in r)
      if (Object.prototype.hasOwnProperty.call(r, i)) {
        var a = r[i];
        a
          ? bp(a)
            ? (bp(e[i]) || (e[i] = {}), t < n ? ix(e[i], a, t + 1, n) : (e[i] = r[i]))
            : $O(a)
            ? ((e[i] = []), (e[i] = e[i].concat(a)))
            : (e[i] = a)
          : (e[i] = a);
      }
  },
  O = function (e) {
    for (var r = [], t = 1; t < arguments.length; t++) r[t - 1] = arguments[t];
    for (var n = 0; n < r.length; n += 1) ix(e, r[n]);
    return e;
  };
function Sc(e) {
  if (!e) return { width: 0, height: 0 };
  var r = getComputedStyle(e);
  return {
    width:
      (e.clientWidth || parseInt(r.width, 10)) -
      parseInt(r.paddingLeft, 10) -
      parseInt(r.paddingRight, 10),
    height:
      (e.clientHeight || parseInt(r.height, 10)) -
      parseInt(r.paddingTop, 10) -
      parseInt(r.paddingBottom, 10),
  };
}
function it() {
  for (var e = [], r = 0; r < arguments.length; r++) e[r] = arguments[r];
  return function (t) {
    return e.reduce(function (n, i) {
      return i(n);
    }, t);
  };
}
function te(e, r) {
  return e.geometries.find(function (t) {
    return t.type === r;
  });
}
function As(e) {
  return ie(
    e.geometries,
    function (r, t) {
      return r.concat(t.elements);
    },
    [],
  );
}
function Da(e) {
  return A(e, ['views', 'length'], 0) <= 0
    ? As(e)
    : ie(
        e.views,
        function (r, t) {
          return r.concat(Da(t));
        },
        As(e),
      );
}
function zO(e) {
  return A(e, ['views', 'length'], 0) <= 0
    ? e.geometries
    : ie(
        e.views,
        function (r, t) {
          return r.concat(t.geometries);
        },
        e.geometries,
      );
}
function Sp(e) {
  if (!e) return e;
  var r = e.match(/(([A-Z]{0,1}[a-z]*[^A-Z])|([A-Z]{1}))/g);
  return r
    .map(function (t) {
      return t.toLowerCase();
    })
    .join('-');
}
function jt(e) {
  if (!en(e, 'Object')) return e;
  var r = x({}, e);
  return r.formatter && !r.content && (r.content = r.formatter), r;
}
var xu;
function GO() {
  return xu || (xu = document.createElement('canvas').getContext('2d')), xu;
}
Ai(
  function (e, r) {
    r === void 0 && (r = {});
    var t = r.fontSize,
      n = r.fontFamily,
      i = n === void 0 ? 'sans-serif' : n,
      a = r.fontWeight,
      o = r.fontStyle,
      s = r.fontVariant,
      l = GO();
    l.font = [o, a, s, ''.concat(t, 'px'), i].join(' ');
    var u = l.measureText(et(e) ? e : '');
    return u.width;
  },
  function (e, r) {
    return r === void 0 && (r = {}), J([e], Gs(r), !0).join('');
  },
);
function Bn(e) {
  return typeof e == 'number' && !isNaN(e);
}
function VO(e, r, t) {
  var n = Math.min(r, t),
    i = Math.max(r, t);
  return e >= n && e <= i;
}
function Kr(e) {
  if (at(e)) return [e, e, e, e];
  if (N(e)) {
    var r = e.length;
    if (r === 1) return [e[0], e[0], e[0], e[0]];
    if (r === 2) return [e[0], e[1], e[0], e[1]];
    if (r === 3) return [e[0], e[1], e[2], e[1]];
    if (r === 4) return e;
  }
  return [0, 0, 0, 0];
}
function Sl(e, r, t) {
  r === void 0 && (r = 'bottom'), t === void 0 && (t = 25);
  var n = Kr(e),
    i = [
      r.startsWith('top') ? t : 0,
      r.startsWith('right') ? t : 0,
      r.startsWith('bottom') ? t : 0,
      r.startsWith('left') ? t : 0,
    ];
  return [n[0] + i[0], n[1] + i[1], n[2] + i[2], n[3] + i[3]];
}
function tf(e) {
  var r = e.map(function (n) {
      return Kr(n);
    }),
    t = [0, 0, 0, 0];
  return (
    r.length > 0 &&
      (t = t.map(function (n, i) {
        return (
          r.forEach(function (a, o) {
            n += r[o][i];
          }),
          n
        );
      })),
    t
  );
}
function HO(e, r) {
  var t = [];
  if (e.length) {
    t.push(['M', e[0].x, e[0].y]);
    for (var n = 1, i = e.length; n < i; n += 1) {
      var a = e[n];
      t.push(['L', a.x, a.y]);
    }
    r && t.push(['Z']);
  }
  return t;
}
var YO = function (e, r, t, n) {
  var i = [],
    a,
    o,
    s = !!n,
    l,
    u;
  if (s) {
    (l = [1 / 0, 1 / 0]), (u = [-1 / 0, -1 / 0]);
    for (var c = 0, h = e.length; c < h; c++) {
      var f = e[c];
      (l = Ut([0, 0], l, f)), (u = qt([0, 0], u, f));
    }
    (l = Ut([0, 0], l, n[0])), (u = qt([0, 0], u, n[1]));
  }
  for (var c = 0, v = e.length; c < v; c++) {
    var f = e[c];
    if (t) (a = e[c ? c - 1 : v - 1]), (o = e[(c + 1) % v]);
    else if (c === 0 || c === v - 1) {
      i.push(f);
      continue;
    } else (a = e[c - 1]), (o = e[c + 1]);
    var d = [0, 0];
    (d = Sn(d, o, a)), (d = se(d, d, r));
    var p = ci(f, a),
      g = ci(f, o),
      y = p + g;
    y !== 0 && ((p /= y), (g /= y));
    var m = se([0, 0], d, -p),
      b = se([0, 0], d, g),
      w = er([0, 0], f, m),
      S = er([0, 0], f, b);
    s &&
      ((w = qt([0, 0], w, l)),
      (w = Ut([0, 0], w, u)),
      (S = qt([0, 0], S, l)),
      (S = Ut([0, 0], S, u))),
      i.push(w),
      i.push(S);
  }
  return t && i.push(i.shift()), i;
};
function WO(e, r, t) {
  for (var n = !!r, i = [], a = 0, o = e.length; a < o; a += 2) i.push([e[a], e[a + 1]]);
  for (var s = YO(i, 0.4, n, t), l = i.length, u = [], c, h, f, a = 0; a < l - 1; a++)
    (c = s[a * 2]),
      (h = s[a * 2 + 1]),
      (f = i[a + 1]),
      u.push(['C', c[0], c[1], h[0], h[1], f[0], f[1]]);
  return (
    n &&
      ((c = s[l]), (h = s[l + 1]), (f = i[0]), u.push(['C', c[0], c[1], h[0], h[1], f[0], f[1]])),
    u
  );
}
function XO(e, r, t) {
  var n = [],
    i = e[0],
    a = null;
  if (e.length <= 2) return HO(e, r);
  for (var o = 0, s = e.length; o < s; o++) {
    var l = e[o];
    (!a || !(a.x === l.x && a.y === l.y)) && (n.push(l.x), n.push(l.y), (a = l));
  }
  var u = t || [
      [0, 0],
      [1, 1],
    ],
    c = WO(n, r, u);
  return c.unshift(['M', i.x, i.y]), c;
}
function ax(e) {
  var r = {
      overflow: 'hidden',
      'white-space': 'nowrap',
      'text-overflow': 'ellipsis',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
    },
    t = [
      'stroke',
      'lineWidth',
      'shadowColor',
      'strokeOpacity',
      'shadowBlur',
      'shadowOffsetX',
      'shadowOffsetY',
      'fill',
    ];
  A(e, 'fill') && (r.color = e.fill);
  var n = mt(e, t),
    i = n.shadowColor,
    a = n.shadowBlur,
    o = a === void 0 ? 0 : a,
    s = n.shadowOffsetX,
    l = s === void 0 ? 0 : s,
    u = n.shadowOffsetY,
    c = u === void 0 ? 0 : u;
  r['text-shadow'] = ''.concat(
    [i, ''.concat(l, 'px'), ''.concat(c, 'px'), ''.concat(o, 'px')].join(' '),
  );
  var h = mt(e, t),
    f = h.stroke,
    v = h.lineWidth,
    d = v === void 0 ? 0 : v;
  return (
    (r['-webkit-text-stroke'] = ''.concat([''.concat(d, 'px'), f].join(' '))),
    M(e, function (p, g) {
      ['fontSize'].includes(g) && at(p)
        ? (r[Sp(g)] = ''.concat(p, 'px'))
        : g && !t.includes(g) && (r[Sp(g)] = ''.concat(p));
    }),
    r
  );
}
function ox(e, r) {
  (e.style['pointer-events'] = 'none'),
    M(r, function (t, n) {
      n && t && (e.style[n] = t);
    });
}
var Cl = function (e, r, t) {
    var n = r.statistic,
      i = r.plotType,
      a = n.title,
      o = n.content;
    [a, o].forEach(function (s, l) {
      if (s) {
        var u = '';
        l === 0
          ? (u = o ? 'translate(-50%, -100%)' : 'translate(-50%, -50%)')
          : (u = a ? 'translate(-50%, 0)' : 'translate(-50%, -50%)');
        var c = U(s.style) ? s.style(t) : s.style;
        e.annotation().html(
          x(
            {
              position: ['50%', '50%'],
              html: function (h, f) {
                var v = f.getCoordinate(),
                  d = 0;
                if (i === 'pie' || i === 'ring-progress') d = v.getRadius() * v.innerRadius * 2;
                else if (i === 'liquid') {
                  var p = A(f.geometries, [0, 'elements', 0, 'shape']);
                  if (p) {
                    var g = p.find(function (w) {
                        return w.get('name') === 'wrap';
                      }),
                      y = g.getCanvasBBox().width;
                    d = y;
                  }
                } else d || (d = v.getWidth());
                ox(h, x({ width: ''.concat(d, 'px'), transform: u }, ax(c)));
                var m = f.getData();
                if (s.customHtml) return s.customHtml(h, f, t, m);
                var b = s.content;
                return (
                  s.formatter && (b = s.formatter(t, m)),
                  b ? (et(b) ? b : ''.concat(b)) : '<div></div>'
                );
              },
              key: ''.concat(l === 0 ? 'top' : 'bottom', '-statistic'),
            },
            mt(s, ['offsetX', 'offsetY', 'rotate', 'style', 'formatter']),
          ),
        );
      }
    });
  },
  _O = function (e, r, t) {
    var n = r.statistic,
      i = n.title,
      a = n.content;
    [i, a].forEach(function (o) {
      if (o) {
        var s = U(o.style) ? o.style(t) : o.style;
        e.annotation().html(
          x(
            {
              position: ['50%', '100%'],
              html: function (l, u) {
                var c = u.getCoordinate(),
                  h = u.views[0].getCoordinate(),
                  f = h.getCenter(),
                  v = h.getRadius(),
                  d = Math.max(Math.sin(h.startAngle), Math.sin(h.endAngle)) * v,
                  p = f.y + d - c.y.start - parseFloat(A(s, 'fontSize', 0)),
                  g = c.getRadius() * c.innerRadius * 2;
                ox(
                  l,
                  x(
                    { width: ''.concat(g, 'px'), transform: 'translate(-50%, '.concat(p, 'px)') },
                    ax(s),
                  ),
                );
                var y = u.getData();
                if (o.customHtml) return o.customHtml(l, u, t, y);
                var m = o.content;
                return (
                  o.formatter && (m = o.formatter(t, y)),
                  m ? (et(m) ? m : ''.concat(m)) : '<div></div>'
                );
              },
            },
            mt(o, ['offsetX', 'offsetY', 'rotate', 'style', 'formatter']),
          ),
        );
      }
    });
  };
function sx(e, r) {
  return r
    ? ie(
        r,
        function (t, n, i) {
          return t.replace(new RegExp('{\\s*'.concat(i, '\\s*}'), 'g'), n);
        },
        e,
      )
    : e;
}
function ct(e, r) {
  return e.views.find(function (t) {
    return t.id === r;
  });
}
function ea(e) {
  var r = e.parent;
  return r ? r.views : [];
}
function Cp(e) {
  return ea(e).filter(function (r) {
    return r !== e;
  });
}
function eo(e, r, t) {
  t === void 0 && (t = e.geometries),
    typeof r == 'boolean' ? e.animate(r) : e.animate(!0),
    M(t, function (n) {
      var i;
      U(r) ? (i = r(n.type || n.shapeType, n) || !0) : (i = r), n.animate(i);
    });
}
function Ml() {
  return typeof window == 'object' ? (window == null ? void 0 : window.devicePixelRatio) : 2;
}
function ef(e, r) {
  r === void 0 && (r = e);
  var t = document.createElement('canvas'),
    n = Ml();
  (t.width = e * n),
    (t.height = r * n),
    (t.style.width = ''.concat(e, 'px')),
    (t.style.height = ''.concat(r, 'px'));
  var i = t.getContext('2d');
  return i.scale(n, n), t;
}
function rf(e, r, t, n) {
  n === void 0 && (n = t);
  var i = r.backgroundColor,
    a = r.opacity;
  (e.globalAlpha = a), (e.fillStyle = i), e.beginPath(), e.fillRect(0, 0, t, n), e.closePath();
}
function lx(e, r, t) {
  var n = e + r;
  return t ? n * 2 : n;
}
function ux(e, r) {
  var t = r
    ? [
        [e * 0.25, e * 0.25],
        [e * 0.75, e * 0.75],
      ]
    : [[e * 0.5, e * 0.5]];
  return t;
}
function nf(e, r) {
  var t = (r * Math.PI) / 180,
    n = {
      a: Math.cos(t) * (1 / e),
      b: Math.sin(t) * (1 / e),
      c: -Math.sin(t) * (1 / e),
      d: Math.cos(t) * (1 / e),
      e: 0,
      f: 0,
    };
  return n;
}
var jO = {
  size: 6,
  padding: 2,
  backgroundColor: 'transparent',
  opacity: 1,
  rotation: 0,
  fill: '#fff',
  fillOpacity: 0.5,
  stroke: 'transparent',
  lineWidth: 0,
  isStagger: !0,
};
function UO(e, r, t, n) {
  var i = r.size,
    a = r.fill,
    o = r.lineWidth,
    s = r.stroke,
    l = r.fillOpacity;
  e.beginPath(),
    (e.globalAlpha = l),
    (e.fillStyle = a),
    (e.strokeStyle = s),
    (e.lineWidth = o),
    e.arc(t, n, i / 2, 0, 2 * Math.PI, !1),
    e.fill(),
    o && e.stroke(),
    e.closePath();
}
function qO(e) {
  var r = O({}, jO, e),
    t = r.size,
    n = r.padding,
    i = r.isStagger,
    a = r.rotation,
    o = lx(t, n, i),
    s = ux(o, i),
    l = ef(o, o),
    u = l.getContext('2d');
  rf(u, r, o);
  for (var c = 0, h = s; c < h.length; c++) {
    var f = h[c],
      v = f[0],
      d = f[1];
    UO(u, r, v, d);
  }
  var p = u.createPattern(l, 'repeat');
  if (p) {
    var g = Ml(),
      y = nf(g, a);
    p.setTransform(y);
  }
  return p;
}
var ZO = {
  rotation: 45,
  spacing: 5,
  opacity: 1,
  backgroundColor: 'transparent',
  strokeOpacity: 0.5,
  stroke: '#fff',
  lineWidth: 2,
};
function KO(e, r, t) {
  var n = r.stroke,
    i = r.lineWidth,
    a = r.strokeOpacity,
    o = new Path2D(t);
  (e.globalAlpha = a),
    (e.lineCap = 'square'),
    (e.strokeStyle = i ? n : 'transparent'),
    (e.lineWidth = i),
    e.stroke(o);
}
function QO(e) {
  var r = O({}, ZO, e),
    t = r.spacing,
    n = r.rotation,
    i = r.lineWidth,
    a = t + i || 1,
    o = t + i || 1,
    s = `
            M 0 0 L `
      .concat(
        a,
        ` 0
            M 0 `,
      )
      .concat(o, ' L ')
      .concat(a, ' ')
      .concat(
        o,
        `
            `,
      ),
    l = ef(a, o),
    u = l.getContext('2d');
  rf(u, r, a, o), KO(u, r, s);
  var c = u.createPattern(l, 'repeat');
  if (c) {
    var h = Ml(),
      f = nf(h, n);
    c.setTransform(f);
  }
  return c;
}
var JO = {
  size: 6,
  padding: 1,
  isStagger: !0,
  backgroundColor: 'transparent',
  opacity: 1,
  rotation: 0,
  fill: '#fff',
  fillOpacity: 0.5,
  stroke: 'transparent',
  lineWidth: 0,
};
function tD(e, r, t, n) {
  var i = r.stroke,
    a = r.size,
    o = r.fill,
    s = r.lineWidth,
    l = r.fillOpacity;
  (e.globalAlpha = l),
    (e.strokeStyle = i),
    (e.lineWidth = s),
    (e.fillStyle = o),
    e.strokeRect(t - a / 2, n - a / 2, a, a),
    e.fillRect(t - a / 2, n - a / 2, a, a);
}
function eD(e) {
  var r = O({}, JO, e),
    t = r.size,
    n = r.padding,
    i = r.isStagger,
    a = r.rotation,
    o = lx(t, n, i),
    s = ux(o, i),
    l = ef(o, o),
    u = l.getContext('2d');
  rf(u, r, o);
  for (var c = 0, h = s; c < h.length; c++) {
    var f = h[c],
      v = f[0],
      d = f[1];
    tD(u, r, v, d);
  }
  var p = u.createPattern(l, 'repeat');
  if (p) {
    var g = Ml(),
      y = nf(g, a);
    p.setTransform(y);
  }
  return p;
}
function rD(e) {
  var r = e.type,
    t = e.cfg,
    n;
  switch (r) {
    case 'dot':
      n = qO(t);
      break;
    case 'line':
      n = QO(t);
      break;
    case 'square':
      n = eD(t);
      break;
  }
  return n;
}
function Ie(e) {
  var r = this;
  return function (t) {
    var n,
      i = t.options,
      a = t.chart,
      o = i.pattern;
    if (!o) return t;
    var s = function (l) {
      for (var u, c, h, f = [], v = 1; v < arguments.length; v++) f[v - 1] = arguments[v];
      var d = a.getTheme().defaultColor,
        p = d,
        g =
          (c = (u = a.geometries) === null || u === void 0 ? void 0 : u[0]) === null || c === void 0
            ? void 0
            : c.getAttribute('color');
      if (g) {
        var y = g.getFields()[0],
          m = A(l, y);
        p = me.getMappingValue(
          g,
          m,
          ((h = g.values) === null || h === void 0 ? void 0 : h[0]) || d,
        );
      }
      var b = o;
      typeof o == 'function' && (b = o.call(r, l, p)),
        b instanceof CanvasPattern || (b = rD(O({}, { cfg: { backgroundColor: p } }, b)));
      var w = i[e];
      return x(x({}, typeof w == 'function' ? w.call.apply(w, J([r, l], f, !1)) : w || {}), {
        fill: b || p,
      });
    };
    return O({}, t, { options: ((n = {}), (n[e] = s), n) });
  };
}
function Ii(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend,
    i = t.colorField,
    a = t.seriesField;
  return n === !1 ? r.legend(!1) : (i || a) && r.legend(i || a, n), e;
}
function Wt(e) {
  var r = e.chart,
    t = e.options,
    n = t.tooltip;
  return n !== void 0 && r.tooltip(n), e;
}
function It(e) {
  var r = e.chart,
    t = e.options,
    n = t.interactions;
  return (
    M(n, function (i) {
      i.enable === !1 ? r.removeInteraction(i.type) : r.interaction(i.type, i.cfg || {});
    }),
    e
  );
}
function St(e) {
  var r = e.chart,
    t = e.options,
    n = t.animation;
  return eo(r, n), e;
}
function vt(e) {
  var r = e.chart,
    t = e.options,
    n = t.theme;
  return n && r.theme(n), e;
}
function on(e) {
  var r = e.chart,
    t = e.options,
    n = t.state;
  return (
    n &&
      M(r.geometries, function (i) {
        i.state(n);
      }),
    e
  );
}
function ro(e) {
  var r = e.chart,
    t = e.options,
    n = t.slider;
  return r.option('slider', n), e;
}
function af(e) {
  var r = e.chart,
    t = e.options,
    n = t.scrollbar;
  return r.option('scrollbar', n), e;
}
function Rt(e, r) {
  return function (t) {
    var n = t.chart,
      i = t.options,
      a = {};
    return (
      M(e, function (o, s) {
        a[s] = mt(o, pe);
      }),
      (a = O({}, r, i.meta, a)),
      n.scale(a),
      t
    );
  };
}
function Pt(e) {
  return function (r) {
    var t = r.chart,
      n = r.options,
      i = t.getController('annotation');
    return (
      M(J(J([], n.annotations || [], !0), e || [], !0), function (a) {
        i.annotation(a);
      }),
      r
    );
  };
}
function Rn(e) {
  var r = e.chart,
    t = e.options,
    n = t.yAxis,
    i = t.limitInPlot,
    a = i;
  return (
    xt(n) &&
      $(i) &&
      (Object.values(mt(n, ['min', 'max', 'minLimit', 'maxLimit'])).some(function (o) {
        return !$(o);
      })
        ? (a = !0)
        : (a = !1)),
    (r.limitInPlot = a),
    e
  );
}
function cx(e) {
  return (
    e === void 0 && (e = 'rect'),
    function (r) {
      var t = r.chart,
        n = r.options,
        i = n.coordinate,
        a = Array.from(i || [])
          .map(function (o) {
            return o.type === 'reflectX'
              ? ['reflect', 'x']
              : o.type === 'reflectY'
              ? ['reflect', 'y']
              : o.type === 'transpose'
              ? ['transpose']
              : null;
          })
          .filter(function (o) {
            return !!o;
          });
      return a.length !== 0 && t.coordinate({ type: e, actions: a }), r;
    }
  );
}
var nD = { locale: 'en-US' },
  Ko = {};
function hx(e, r) {
  Ko[e] = r;
}
function Al(e) {
  return {
    get: function (r, t) {
      return sx(A(Ko[e], r) || A(Ko[nD.locale], r) || A(Ko['en-US'], r) || r, t);
    },
  };
}
var iD = {
    locale: 'en-US',
    general: { increase: 'Increase', decrease: 'Decrease', root: 'Root' },
    statistic: { total: 'Total' },
    conversionTag: { label: 'Rate' },
    legend: {},
    tooltip: {},
    slider: {},
    scrollbar: {},
    waterfall: { total: 'Total' },
  },
  aD = {
    locale: 'zh-CN',
    general: { increase: '增加', decrease: '减少', root: '初始' },
    statistic: { total: '总计' },
    conversionTag: { label: '转化率' },
    legend: {},
    tooltip: {},
    slider: {},
    scrollbar: {},
    waterfall: { total: '总计' },
  };
function Ve(e, r) {
  if (e === !1) return { fields: !1 };
  var t = A(e, 'fields'),
    n = A(e, 'formatter');
  return n && !t && (t = r), { fields: t, formatter: n };
}
function Go(e, r) {
  var t = e.type,
    n = e.xField,
    i = e.yField,
    a = e.colorField,
    o = e.shapeField,
    s = e.sizeField,
    l = e.styleField,
    u = e.rawFields,
    c = [];
  if (((u = (U(u) ? u(t, r) : u) || []), r === 'color')) c = J([a || n], u, !0);
  else if (r === 'shape') c = J([o || n], u, !0);
  else if (r === 'size') c = J([s || n], u, !0);
  else {
    c = J([n, i, a, o, s, l], u, !0);
    var h = ['x', 'y', 'color', 'shape', 'size', 'style'].indexOf(r),
      f = c[h];
    c.splice(h, 1), c.unshift(f);
  }
  var v = In(
      c.filter(function (p) {
        return !!p;
      }),
    ),
    d = t === 'line' && [n, i].includes(v.join('*')) ? '' : v.join('*');
  return { mappingFields: v, tileMappingField: d };
}
function qn(e, r) {
  if (r)
    return function () {
      for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
      var i = {};
      return (
        e.forEach(function (a, o) {
          i[a] = t[o];
        }),
        delete i.undefined,
        r(i)
      );
    };
}
function be(e) {
  var r = e.chart,
    t = e.options,
    n = t.type,
    i = t.args,
    a = t.mapping,
    o = t.xField,
    s = t.yField,
    l = t.colorField,
    u = t.shapeField,
    c = t.sizeField,
    h = t.tooltipFields,
    f = t.label,
    v = t.state,
    d = t.customInfo;
  if (!a) return e;
  var p = a.color,
    g = a.shape,
    y = a.size,
    m = a.style,
    b = a.tooltip,
    w = r[n](i).position(''.concat(o, '*').concat(s));
  if (et(p)) l ? w.color(l, p) : w.color(p);
  else if (U(p)) {
    var S = Go(t, 'color'),
      C = S.mappingFields,
      F = S.tileMappingField;
    w.color(F, qn(C, p));
  } else l && w.color(l, p);
  if (et(g)) u ? w.shape(u, [g]) : w.shape(g);
  else if (U(g)) {
    var E = Go(t, 'shape'),
      C = E.mappingFields,
      F = E.tileMappingField;
    w.shape(F, qn(C, g));
  } else u && w.shape(u, g);
  if (at(y)) c ? w.size(c, y) : w.size(y);
  else if (U(y)) {
    var I = Go(t, 'size'),
      C = I.mappingFields,
      F = I.tileMappingField;
    w.size(F, qn(C, y));
  } else c && w.size(c, y);
  if (U(m)) {
    var T = Go(t, 'style'),
      C = T.mappingFields,
      F = T.tileMappingField;
    w.style(F, qn(C, m));
  } else xt(m) && w.style(m);
  if ((h === !1 ? w.tooltip(!1) : ye(h) || w.tooltip(h.join('*'), qn(h, b)), f === !1)) w.label(!1);
  else if (f) {
    var P = f.callback,
      R = f.fields,
      B = wt(f, ['callback', 'fields']);
    w.label({ fields: R || [s], callback: P, cfg: jt(B) });
  }
  return (
    v && w.state(v),
    d && w.customInfo(d),
    [o, s]
      .filter(function (G) {
        return G !== l;
      })
      .forEach(function (G) {
        r.legend(G, !1);
      }),
    x(x({}, e), { ext: { geometry: w } })
  );
}
function Fl(e) {
  var r = e.options,
    t = r.area,
    n = r.xField,
    i = r.yField,
    a = r.seriesField,
    o = r.smooth,
    s = r.tooltip,
    l = r.useDeferredLabel,
    u = Ve(s, [n, i, a]),
    c = u.fields,
    h = u.formatter;
  return t
    ? be(
        O({}, e, {
          options: {
            type: 'area',
            colorField: a,
            tooltipFields: c,
            mapping: _({ shape: o ? 'smooth' : 'area', tooltip: h }, t),
            args: { useDeferredLabel: l },
          },
        }),
      )
    : e;
}
function fx(e) {
  var r = e.options,
    t = r.edge,
    n = r.xField,
    i = r.yField,
    a = r.seriesField,
    o = r.tooltip,
    s = r.useDeferredLabel,
    l = Ve(o, [n, i, a]),
    u = l.fields,
    c = l.formatter;
  return t
    ? be(
        O({}, e, {
          options: {
            type: 'edge',
            colorField: a,
            tooltipFields: u,
            mapping: x({ tooltip: c }, t),
            args: { useDeferredLabel: s },
          },
        }),
      )
    : e;
}
function oD(e) {
  var r = e.chart,
    t = e.options,
    n = e.ext,
    i = t.seriesField,
    a = t.isGroup,
    o = t.isStack,
    s = t.marginRatio,
    l = t.widthRatio,
    u = t.groupField,
    c = t.theme,
    h = [];
  if (
    (i &&
      (a && h.push({ type: 'dodge', dodgeBy: u || i, marginRatio: s }),
      o && h.push({ type: 'stack', marginRatio: s })),
    h.length && n != null && n.geometry)
  ) {
    var f = n == null ? void 0 : n.geometry;
    f.adjust(h);
  }
  return $(l) || r.theme(O({}, xt(c) ? c : ca(c), { columnWidthRatio: l })), e;
}
function ee(e) {
  var r = e.options,
    t = r.xField,
    n = r.yField,
    i = r.interval,
    a = r.seriesField,
    o = r.tooltip,
    s = r.minColumnWidth,
    l = r.maxColumnWidth,
    u = r.columnBackground,
    c = r.dodgePadding,
    h = r.intervalPadding,
    f = r.useDeferredLabel,
    v = Ve(o, [t, n, a]),
    d = v.fields,
    p = v.formatter,
    g = (
      i
        ? be(
            O({}, e, {
              options: {
                type: 'interval',
                colorField: a,
                tooltipFields: d,
                mapping: x({ tooltip: p }, i),
                args: {
                  dodgePadding: c,
                  intervalPadding: h,
                  minColumnWidth: s,
                  maxColumnWidth: l,
                  background: u,
                  useDeferredLabel: f,
                },
              },
            }),
          )
        : e
    ).ext;
  return oD(x(x({}, e), { ext: g }));
}
function Li(e) {
  var r = e.options,
    t = r.line,
    n = r.stepType,
    i = r.xField,
    a = r.yField,
    o = r.seriesField,
    s = r.smooth,
    l = r.connectNulls,
    u = r.tooltip,
    c = r.useDeferredLabel,
    h = Ve(u, [i, a, o]),
    f = h.fields,
    v = h.formatter;
  return t
    ? be(
        O({}, e, {
          options: {
            type: 'line',
            colorField: o,
            tooltipFields: f,
            mapping: _({ shape: n || (s ? 'smooth' : 'line'), tooltip: v }, t),
            args: { connectNulls: l, useDeferredLabel: c },
          },
        }),
      )
    : e;
}
function Le(e) {
  var r = e.options,
    t = r.point,
    n = r.xField,
    i = r.yField,
    a = r.seriesField,
    o = r.sizeField,
    s = r.shapeField,
    l = r.tooltip,
    u = r.useDeferredLabel,
    c = Ve(l, [n, i, a, o, s]),
    h = c.fields,
    f = c.formatter;
  return t
    ? be(
        O({}, e, {
          options: {
            type: 'point',
            colorField: a,
            shapeField: s,
            tooltipFields: h,
            mapping: x({ tooltip: f }, t),
            args: { useDeferredLabel: u },
          },
        }),
      )
    : e;
}
function El(e) {
  var r = e.options,
    t = r.polygon,
    n = r.xField,
    i = r.yField,
    a = r.seriesField,
    o = r.tooltip,
    s = r.useDeferredLabel,
    l = Ve(o, [n, i, a]),
    u = l.fields,
    c = l.formatter;
  return t
    ? be(
        O({}, e, {
          options: {
            type: 'polygon',
            colorField: a,
            tooltipFields: u,
            mapping: x({ tooltip: c }, t),
            args: { useDeferredLabel: s },
          },
        }),
      )
    : e;
}
function of(e) {
  var r = e.options,
    t = r.schema,
    n = r.xField,
    i = r.yField,
    a = r.seriesField,
    o = r.tooltip,
    s = r.useDeferredLabel,
    l = Ve(o, [n, i, a]),
    u = l.fields,
    c = l.formatter;
  return t
    ? be(
        O({}, e, {
          options: {
            type: 'schema',
            colorField: a,
            tooltipFields: u,
            mapping: x({ tooltip: c }, t),
            args: { useDeferredLabel: s },
          },
        }),
      )
    : e;
}
function sD(e) {
  var r = e.options,
    t = r.violin,
    n = r.xField,
    i = r.yField,
    a = r.seriesField,
    o = r.sizeField,
    s = r.tooltip,
    l = Ve(s, [n, i, a, o]),
    u = l.fields,
    c = l.formatter;
  return t
    ? be(
        O({}, e, {
          options: {
            type: 'violin',
            colorField: a,
            tooltipFields: u,
            mapping: x({ tooltip: c }, t),
          },
        }),
      )
    : e;
}
var Tn = {},
  Wr = {},
  vx = {};
(function (e) {
  Object.defineProperty(e, '__esModule', { value: !0 }), (e.default = void 0);
  var r = 1,
    t = function () {
      return ''.concat(r++);
    };
  e.default = t;
})(vx);
var Tl = {},
  kl = {},
  sf = {};
(function (e) {
  Object.defineProperty(e, '__esModule', { value: !0 }), (e.default = void 0);
  var r = function (n) {
    var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 60,
      a = null;
    return function () {
      for (var o = this, s = arguments.length, l = new Array(s), u = 0; u < s; u++)
        l[u] = arguments[u];
      clearTimeout(a),
        (a = setTimeout(function () {
          n.apply(o, l);
        }, i));
    };
  };
  e.default = r;
})(sf);
var or = {};
Object.defineProperty(or, '__esModule', { value: !0 });
or.SizeSensorId = or.SensorTabIndex = or.SensorClassName = void 0;
var lD = 'size-sensor-id';
or.SizeSensorId = lD;
var uD = 'size-sensor-object';
or.SensorClassName = uD;
var cD = '-1';
or.SensorTabIndex = cD;
Object.defineProperty(kl, '__esModule', { value: !0 });
kl.createSensor = void 0;
var hD = fD(sf),
  wu = or;
function fD(e) {
  return e && e.__esModule ? e : { default: e };
}
var vD = function (r, t) {
  var n = void 0,
    i = [],
    a = function () {
      getComputedStyle(r).position === 'static' && (r.style.position = 'relative');
      var h = document.createElement('object');
      return (
        (h.onload = function () {
          h.contentDocument.defaultView.addEventListener('resize', o), o();
        }),
        (h.style.display = 'block'),
        (h.style.position = 'absolute'),
        (h.style.top = '0'),
        (h.style.left = '0'),
        (h.style.height = '100%'),
        (h.style.width = '100%'),
        (h.style.overflow = 'hidden'),
        (h.style.pointerEvents = 'none'),
        (h.style.zIndex = '-1'),
        (h.style.opacity = '0'),
        h.setAttribute('class', wu.SensorClassName),
        h.setAttribute('tabindex', wu.SensorTabIndex),
        (h.type = 'text/html'),
        r.appendChild(h),
        (h.data = 'about:blank'),
        h
      );
    },
    o = (0, hD.default)(function () {
      i.forEach(function (c) {
        c(r);
      });
    }),
    s = function (h) {
      n || (n = a()), i.indexOf(h) === -1 && i.push(h);
    },
    l = function () {
      n &&
        n.parentNode &&
        (n.contentDocument && n.contentDocument.defaultView.removeEventListener('resize', o),
        n.parentNode.removeChild(n),
        r.removeAttribute(wu.SizeSensorId),
        (n = void 0),
        (i = []),
        t && t());
    },
    u = function (h) {
      var f = i.indexOf(h);
      f !== -1 && i.splice(f, 1), i.length === 0 && n && l();
    };
  return { element: r, bind: s, destroy: l, unbind: u };
};
kl.createSensor = vD;
var Il = {};
Object.defineProperty(Il, '__esModule', { value: !0 });
Il.createSensor = void 0;
var dD = or,
  pD = gD(sf);
function gD(e) {
  return e && e.__esModule ? e : { default: e };
}
var yD = function (r, t) {
  var n = void 0,
    i = [],
    a = (0, pD.default)(function () {
      i.forEach(function (c) {
        c(r);
      });
    }),
    o = function () {
      var h = new ResizeObserver(a);
      return h.observe(r), a(), h;
    },
    s = function (h) {
      n || (n = o()), i.indexOf(h) === -1 && i.push(h);
    },
    l = function () {
      n.disconnect(), (i = []), (n = void 0), r.removeAttribute(dD.SizeSensorId), t && t();
    },
    u = function (h) {
      var f = i.indexOf(h);
      f !== -1 && i.splice(f, 1), i.length === 0 && n && l();
    };
  return { element: r, bind: s, destroy: l, unbind: u };
};
Il.createSensor = yD;
Object.defineProperty(Tl, '__esModule', { value: !0 });
Tl.createSensor = void 0;
var mD = kl,
  xD = Il,
  wD = typeof ResizeObserver != 'undefined' ? xD.createSensor : mD.createSensor;
Tl.createSensor = wD;
Object.defineProperty(Wr, '__esModule', { value: !0 });
Wr.removeSensor = Wr.getSensor = Wr.Sensors = void 0;
var bD = CD(vx),
  SD = Tl,
  Cc = or;
function CD(e) {
  return e && e.__esModule ? e : { default: e };
}
var oi = {};
Wr.Sensors = oi;
function dx(e) {
  e && oi[e] && delete oi[e];
}
var MD = function (r) {
  var t = r.getAttribute(Cc.SizeSensorId);
  if (t && oi[t]) return oi[t];
  var n = (0, bD.default)();
  r.setAttribute(Cc.SizeSensorId, n);
  var i = (0, SD.createSensor)(r, function () {
    return dx(n);
  });
  return (oi[n] = i), i;
};
Wr.getSensor = MD;
var AD = function (r) {
  var t = r.element.getAttribute(Cc.SizeSensorId);
  r.destroy(), dx(t);
};
Wr.removeSensor = AD;
Object.defineProperty(Tn, '__esModule', { value: !0 });
Tn.ver = Tn.clear = px = Tn.bind = void 0;
var Mc = Wr,
  FD = function (r, t) {
    var n = (0, Mc.getSensor)(r);
    return (
      n.bind(t),
      function () {
        n.unbind(t);
      }
    );
  },
  px = (Tn.bind = FD),
  ED = function (r) {
    var t = (0, Mc.getSensor)(r);
    (0, Mc.removeSensor)(t);
  };
Tn.clear = ED;
var TD = '1.0.2';
Tn.ver = TD;
var Mp = 'data-chart-source-type',
  gx = [
    'padding',
    'appendPadding',
    'renderer',
    'pixelRatio',
    'syncViewPadding',
    'supportCSSTransform',
    'limitInPlot',
  ],
  lt = (function (e) {
    k(r, e);
    function r(t, n) {
      var i = e.call(this) || this;
      return (
        (i.container = typeof t == 'string' ? document.getElementById(t) : t),
        (i.options = O({}, i.getDefaultOptions(), n)),
        i.createG2(),
        i.bindEvents(),
        i
      );
    }
    return (
      (r.getDefaultOptions = function () {
        return {
          renderer: 'canvas',
          xAxis: {
            nice: !0,
            label: { autoRotate: !1, autoHide: { type: 'equidistance', cfg: { minGap: 6 } } },
          },
          yAxis: { nice: !0, label: { autoHide: !0, autoRotate: !1 } },
          animation: !0,
        };
      }),
      (r.prototype.createG2 = function () {
        var t = this.options,
          n = t.width,
          i = t.height,
          a = t.defaultInteractions;
        (this.chart = new sk(
          x(
            x(
              x(x({ container: this.container, autoFit: !1 }, this.getChartSize(n, i)), {
                localRefresh: !1,
              }),
              mt(this.options, gx),
            ),
            { defaultInteractions: a },
          ),
        )),
          this.container.setAttribute(Mp, 'G2Plot');
      }),
      (r.prototype.getChartSize = function (t, n) {
        var i = Sc(this.container);
        return { width: t || i.width || 400, height: n || i.height || 400 };
      }),
      (r.prototype.bindEvents = function () {
        var t = this;
        this.chart &&
          this.chart.on('*', function (n) {
            n != null && n.type && t.emit(n.type, n);
          });
      }),
      (r.prototype.getDefaultOptions = function () {
        return r.getDefaultOptions();
      }),
      (r.prototype.render = function () {
        this.chart.clear(),
          (this.chart.options = { data: [], animate: !0 }),
          (this.chart.views = []),
          this.execAdaptor(),
          this.chart.render(),
          this.bindSizeSensor();
      }),
      (r.prototype.update = function (t) {
        this.updateOption(t), this.render();
      }),
      (r.prototype.updateOption = function (t) {
        this.options = O({}, this.options, t);
      }),
      (r.prototype.setState = function (t, n, i) {
        i === void 0 && (i = !0);
        var a = Da(this.chart);
        M(a, function (o) {
          n(o.getData()) && o.setState(t, i);
        });
      }),
      (r.prototype.getStates = function () {
        var t = Da(this.chart),
          n = [];
        return (
          M(t, function (i) {
            var a = i.getData(),
              o = i.getStates();
            M(o, function (s) {
              n.push({ data: a, state: s, geometry: i.geometry, element: i });
            });
          }),
          n
        );
      }),
      (r.prototype.changeData = function (t) {
        this.update({ data: t });
      }),
      (r.prototype.changeSize = function (t, n) {
        this.chart.changeSize(t, n);
      }),
      (r.prototype.addAnnotations = function (t, n) {
        n = n || this.chart;
        var i = J([], t, !0),
          a = n.getController('annotation'),
          o = a.getComponents().map(function (u) {
            return u.extra;
          });
        a.clear(!0);
        for (
          var s = function (u) {
              var c = o[u],
                h = i.findIndex(function (f) {
                  return f.id && f.id === c.id;
                });
              h !== -1 && ((c = O({}, c, i[h])), i.splice(h, 1)), a.annotation(c);
            },
            l = 0;
          l < o.length;
          l++
        )
          s(l);
        i.forEach(function (u) {
          return a.annotation(u);
        }),
          n.render(!0);
      }),
      (r.prototype.removeAnnotations = function (t) {
        var n = this.chart.getController('annotation'),
          i = n.getComponents().map(function (s) {
            return s.extra;
          });
        n.clear(!0);
        for (
          var a = function (s) {
              var l = i[s];
              t.find(function (u) {
                return u.id && u.id === l.id;
              }) || n.annotation(l);
            },
            o = 0;
          o < i.length;
          o++
        )
          a(o);
        this.chart.render(!0);
      }),
      (r.prototype.destroy = function () {
        this.unbindSizeSensor(),
          this.chart.destroy(),
          this.off(),
          this.container.removeAttribute(Mp);
      }),
      (r.prototype.execAdaptor = function () {
        var t = this.getSchemaAdaptor(),
          n = this.options,
          i = n.padding,
          a = n.appendPadding;
        (this.chart.padding = i),
          (this.chart.appendPadding = a),
          t({ chart: this.chart, options: this.options });
      }),
      (r.prototype.triggerResize = function () {
        this.chart.forceFit();
      }),
      (r.prototype.bindSizeSensor = function () {
        var t = this;
        if (!this.unbind) {
          var n = this.options.autoFit,
            i = n === void 0 ? !0 : n;
          i &&
            (this.unbind = px(this.container, function () {
              var a = Sc(t.container),
                o = a.width,
                s = a.height;
              (o !== t.chart.width || s !== t.chart.height) && t.triggerResize();
            }));
        }
      }),
      (r.prototype.unbindSizeSensor = function () {
        this.unbind && (this.unbind(), (this.unbind = void 0));
      }),
      r
    );
  })(Xc);
function yx(e, r, t, n) {
  var i = ie(
    e,
    function (a, o) {
      var s = o[t],
        l = a.has(s) ? a.get(s) : 0,
        u = o[r];
      return (l = Bn(u) ? l + u : l), a.set(s, l), a;
    },
    new Map(),
  );
  return kt(e, function (a) {
    var o,
      s = a[r],
      l = a[t],
      u = Bn(s) && i.get(l) !== 0 ? s / i.get(l) : 0;
    return x(x({}, a), ((o = {}), (o[n] = u), o));
  });
}
function kD(e, r, t, n) {
  var i = ie(
    e,
    function (a, o) {
      var s = ie(
          t,
          function (c, h) {
            return ''.concat(c).concat(o[h]);
          },
          '',
        ),
        l = a.has(s) ? a.get(s) : 0,
        u = o[r];
      return (l = Bn(u) ? l + u : l), a.set(s, l), a;
    },
    new Map(),
  );
  return kt(e, function (a) {
    var o,
      s = a[r],
      l = ie(
        t,
        function (c, h) {
          return ''.concat(c).concat(a[h]);
        },
        '',
      ),
      u = Bn(s) && i.get(l) !== 0 ? s / i.get(l) : 0;
    return x(x({}, a), ((o = {}), (o[n] = u), o));
  });
}
function no(e, r, t, n, i) {
  return i ? yx(e, r, t, n) : e;
}
function ID(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = t.color,
    a = t.lineStyle,
    o = t.lineShape,
    s = t.point,
    l = t.area,
    u = t.seriesField,
    c = s == null ? void 0 : s.state,
    h = l == null ? void 0 : l.state;
  r.data(n);
  var f = O({}, e, {
      options: {
        shapeField: u,
        line: { color: i, style: a, shape: o },
        point: s && x({ color: i, shape: 'circle' }, s),
        area: l && x({ color: i }, l),
        label: void 0,
      },
    }),
    v = O({}, f, { options: { tooltip: !1, state: c } }),
    d = O({}, f, { options: { tooltip: !1, state: h } });
  return Li(f), Le(v), Fl(d), e;
}
function Ll(e) {
  var r,
    t,
    n = e.options,
    i = n.xAxis,
    a = n.yAxis,
    o = n.xField,
    s = n.yField,
    l = n.data;
  return it(
    Rt(
      ((r = {}), (r[o] = i), (r[s] = a), r),
      ((t = {}), (t[o] = { type: 'cat' }), (t[s] = Jh(l, s)), t),
    ),
  )(e);
}
function LD(e) {
  var r = e.chart,
    t = e.options,
    n = t.reflect;
  if (n) {
    var i = n;
    N(i) || (i = [i]);
    var a = i.map(function (o) {
      return ['reflect', o];
    });
    r.coordinate({ type: 'rect', actions: a });
  }
  return e;
}
function mx(e) {
  var r = e.chart,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = t.xField,
    o = t.yField;
  return n === !1 ? r.axis(a, !1) : r.axis(a, n), i === !1 ? r.axis(o, !1) : r.axis(o, i), e;
}
function xx(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend,
    i = t.seriesField;
  return n && i ? r.legend(i, n) : n === !1 && r.legend(!1), e;
}
function PD(e) {
  var r = e.chart,
    t = e.options,
    n = t.label,
    i = t.yField,
    a = te(r, 'line');
  if (!n) a.label(!1);
  else {
    var o = n.callback,
      s = wt(n, ['callback']);
    a.label({
      fields: [i],
      callback: o,
      cfg: x(
        {
          layout: [
            { type: 'limit-in-plot' },
            { type: 'path-adjust-position' },
            { type: 'point-adjust-position' },
            { type: 'limit-in-plot', cfg: { action: 'hide' } },
          ],
        },
        jt(s),
      ),
    });
  }
  return e;
}
function OD(e) {
  var r = e.chart,
    t = e.options,
    n = t.isStack;
  return (
    n &&
      M(r.geometries, function (i) {
        i.adjust('stack');
      }),
    e
  );
}
function wx(e) {
  return it(ID, Ll, OD, vt, LD, mx, xx, Wt, PD, ro, af, It, St, Pt(), Rn)(e);
}
function DD(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = t.areaStyle,
    a = t.areaShape,
    o = t.color,
    s = t.point,
    l = t.line,
    u = t.isPercent,
    c = t.xField,
    h = t.yField,
    f = t.tooltip,
    v = t.seriesField,
    d = t.startOnZero,
    p = s == null ? void 0 : s.state,
    g = no(n, h, c, h, u);
  r.data(g);
  var y = u
      ? x(
          {
            formatter: function (S) {
              return { name: S[v] || S[c], value: (Number(S[h]) * 100).toFixed(2) + '%' };
            },
          },
          f,
        )
      : f,
    m = O({}, e, {
      options: {
        area: { color: o, style: i, shape: a },
        point: s && x({ color: o }, s),
        tooltip: y,
        label: void 0,
        args: { startOnZero: d },
      },
    }),
    b = {
      chart: r,
      options: O({ line: { size: 2 } }, Vs(t, ['state']), {
        line: l && x({ color: o }, l),
        sizeField: v,
        state: l == null ? void 0 : l.state,
        tooltip: !1,
        label: void 0,
        args: { startOnZero: d },
      }),
    },
    w = O({}, m, { options: { tooltip: !1, state: p } });
  return Fl(m), Li(b), Le(w), e;
}
function BD(e) {
  var r = e.chart,
    t = e.options,
    n = t.label,
    i = t.yField,
    a = te(r, 'area');
  if (!n) a.label(!1);
  else {
    var o = n.callback,
      s = wt(n, ['callback']);
    a.label({
      fields: [i],
      callback: o,
      cfg: x(
        {
          layout: [
            { type: 'limit-in-plot' },
            { type: 'path-adjust-position' },
            { type: 'point-adjust-position' },
            { type: 'limit-in-plot', cfg: { action: 'hide' } },
          ],
        },
        jt(s),
      ),
    });
  }
  return e;
}
function RD(e) {
  var r = e.chart,
    t = e.options,
    n = t.isStack,
    i = t.isPercent,
    a = t.seriesField;
  return (
    (i || n) &&
      a &&
      M(r.geometries, function (o) {
        o.adjust('stack');
      }),
    e
  );
}
function bx(e) {
  return it(vt, Ie('areaStyle'), cx('rect'), DD, Ll, RD, mx, xx, Wt, BD, ro, Pt(), It, St, Rn)(e);
}
var $D = O({}, lt.getDefaultOptions(), {
    tooltip: { shared: !0, showMarkers: !0, showCrosshairs: !0, crosshairs: { type: 'x' } },
    isStack: !0,
    line: {},
    legend: { position: 'top-left', radio: {} },
  }),
  Sx = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'area'), t;
    }
    return (
      (r.getDefaultOptions = function () {
        return $D;
      }),
      (r.prototype.getDefaultOptions = function () {
        return r.getDefaultOptions();
      }),
      (r.prototype.changeData = function (t) {
        this.updateOption({ data: t });
        var n = this.options,
          i = n.isPercent,
          a = n.xField,
          o = n.yField,
          s = this,
          l = s.chart,
          u = s.options;
        Ll({ chart: l, options: u }), this.chart.changeData(no(t, o, a, o, i));
      }),
      (r.prototype.getSchemaAdaptor = function () {
        return bx;
      }),
      r
    );
  })(lt),
  ND = 10,
  zD = 5,
  GD = {
    padding: [8, 10],
    text: 'reset',
    textStyle: { default: { x: 0, y: 0, fontSize: 12, fill: '#333333', cursor: 'pointer' } },
    buttonStyle: {
      default: { fill: '#f7f7f7', stroke: '#cccccc', cursor: 'pointer' },
      active: { fill: '#e6e6e6' },
    },
  },
  VD = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.buttonGroup = null), (t.buttonCfg = x({ name: 'button' }, GD)), t;
    }
    return (
      (r.prototype.getButtonCfg = function () {
        var t = this.context.view,
          n = A(t, ['interactions', 'filter-action', 'cfg', 'buttonConfig']);
        return O(this.buttonCfg, n, this.cfg);
      }),
      (r.prototype.drawButton = function () {
        var t = this.getButtonCfg(),
          n = this.context.view.foregroundGroup.addGroup({ name: t.name }),
          i = this.drawText(n);
        this.drawBackground(n, i.getBBox()), (this.buttonGroup = n);
      }),
      (r.prototype.drawText = function (t) {
        var n,
          i = this.getButtonCfg();
        return t.addShape({
          type: 'text',
          name: 'button-text',
          attrs: x(
            { text: i.text },
            (n = i.textStyle) === null || n === void 0 ? void 0 : n.default,
          ),
        });
      }),
      (r.prototype.drawBackground = function (t, n) {
        var i,
          a = this.getButtonCfg(),
          o = Kr(a.padding),
          s = t.addShape({
            type: 'rect',
            name: 'button-rect',
            attrs: x(
              {
                x: n.x - o[3],
                y: n.y - o[0],
                width: n.width + o[1] + o[3],
                height: n.height + o[0] + o[2],
              },
              (i = a.buttonStyle) === null || i === void 0 ? void 0 : i.default,
            ),
          });
        return (
          s.toBack(),
          t.on('mouseenter', function () {
            var l;
            s.attr((l = a.buttonStyle) === null || l === void 0 ? void 0 : l.active);
          }),
          t.on('mouseleave', function () {
            var l;
            s.attr((l = a.buttonStyle) === null || l === void 0 ? void 0 : l.default);
          }),
          s
        );
      }),
      (r.prototype.resetPosition = function () {
        var t = this.context.view,
          n = t.getCoordinate(),
          i = n.convert({ x: 1, y: 1 }),
          a = this.buttonGroup,
          o = a.getBBox(),
          s = me.transform(null, [['t', i.x - o.width - ND, i.y + o.height + zD]]);
        a.setMatrix(s);
      }),
      (r.prototype.show = function () {
        this.buttonGroup || this.drawButton(), this.resetPosition(), this.buttonGroup.show();
      }),
      (r.prototype.hide = function () {
        this.buttonGroup && this.buttonGroup.hide();
      }),
      (r.prototype.destroy = function () {
        var t = this.buttonGroup;
        t && t.remove(), e.prototype.destroy.call(this);
      }),
      r
    );
  })(Ft);
Q('brush-reset-button', VD, { name: 'brush-reset-button' });
ot('filter-action', {});
function vr(e) {
  return e.isInPlot();
}
function Vn(e, r, t) {
  var n = t || {},
    i = n.mask,
    a = n.isStartEnable,
    o = r || 'rect';
  switch (e) {
    case 'brush':
      return {
        showEnable: [
          {
            trigger: 'plot:mouseenter',
            action: 'cursor:crosshair',
            isEnable:
              a ||
              function () {
                return !0;
              },
          },
          { trigger: 'plot:mouseleave', action: 'cursor:default' },
        ],
        start: [
          {
            trigger: 'mousedown',
            isEnable: a || vr,
            action: ['brush:start', ''.concat(o, '-mask:start'), ''.concat(o, '-mask:show')],
            arg: [null, { maskStyle: i == null ? void 0 : i.style }],
          },
        ],
        processing: [
          { trigger: 'mousemove', isEnable: vr, action: [''.concat(o, '-mask:resize')] },
        ],
        end: [
          {
            trigger: 'mouseup',
            isEnable: vr,
            action: [
              'brush:filter',
              'brush:end',
              ''.concat(o, '-mask:end'),
              ''.concat(o, '-mask:hide'),
              'brush-reset-button:show',
            ],
          },
        ],
        rollback: [
          {
            trigger: 'brush-reset-button:click',
            action: ['brush:reset', 'brush-reset-button:hide', 'cursor:crosshair'],
          },
        ],
      };
    case 'brush-highlight':
      return {
        showEnable: [
          {
            trigger: 'plot:mouseenter',
            action: 'cursor:crosshair',
            isEnable:
              a ||
              function () {
                return !0;
              },
          },
          {
            trigger: 'plot:mousemove',
            action: 'cursor:crosshair',
            isEnable:
              a ||
              function () {
                return !0;
              },
          },
          {
            trigger: 'plot:mousemove',
            action: 'cursor:default',
            isEnable: function (s) {
              return a ? !a(s) : !1;
            },
          },
          {
            trigger: 'mask:mouseenter',
            action: 'cursor:move',
            isEnable:
              a ||
              function () {
                return !0;
              },
          },
          { trigger: 'plot:mouseleave', action: 'cursor:default' },
          { trigger: 'mask:mouseleave', action: 'cursor:crosshair' },
        ],
        start: [
          {
            trigger: 'plot:mousedown',
            isEnable:
              a ||
              function (s) {
                return !s.isInShape('mask');
              },
            action: [''.concat(o, '-mask:start'), ''.concat(o, '-mask:show')],
            arg: [{ maskStyle: i == null ? void 0 : i.style }],
          },
          { trigger: 'mask:dragstart', action: [''.concat(o, '-mask:moveStart')] },
        ],
        processing: [
          { trigger: 'plot:mousemove', action: [''.concat(o, '-mask:resize')] },
          { trigger: 'mask:drag', action: [''.concat(o, '-mask:move')] },
          { trigger: 'mask:change', action: ['element-range-highlight:highlight'] },
        ],
        end: [
          { trigger: 'plot:mouseup', action: [''.concat(o, '-mask:end')] },
          { trigger: 'mask:dragend', action: [''.concat(o, '-mask:moveEnd')] },
          {
            trigger: 'document:mouseup',
            isEnable: function (s) {
              return !s.isInPlot();
            },
            action: [
              'element-range-highlight:clear',
              ''.concat(o, '-mask:end'),
              ''.concat(o, '-mask:hide'),
            ],
          },
        ],
        rollback: [
          {
            trigger: 'dblclick',
            action: ['element-range-highlight:clear', ''.concat(o, '-mask:hide')],
          },
        ],
      };
    case 'brush-x':
      return {
        showEnable: [
          {
            trigger: 'plot:mouseenter',
            action: 'cursor:crosshair',
            isEnable:
              a ||
              function () {
                return !0;
              },
          },
          { trigger: 'plot:mouseleave', action: 'cursor:default' },
        ],
        start: [
          {
            trigger: 'mousedown',
            isEnable: a || vr,
            action: ['brush-x:start', ''.concat(o, '-mask:start'), ''.concat(o, '-mask:show')],
            arg: [null, { maskStyle: i == null ? void 0 : i.style }],
          },
        ],
        processing: [
          { trigger: 'mousemove', isEnable: vr, action: [''.concat(o, '-mask:resize')] },
        ],
        end: [
          {
            trigger: 'mouseup',
            isEnable: vr,
            action: [
              'brush-x:filter',
              'brush-x:end',
              ''.concat(o, '-mask:end'),
              ''.concat(o, '-mask:hide'),
            ],
          },
        ],
        rollback: [{ trigger: 'dblclick', action: ['brush-x:reset'] }],
      };
    case 'brush-x-highlight':
      return {
        showEnable: [
          {
            trigger: 'plot:mouseenter',
            action: 'cursor:crosshair',
            isEnable:
              a ||
              function () {
                return !0;
              },
          },
          {
            trigger: 'mask:mouseenter',
            action: 'cursor:move',
            isEnable:
              a ||
              function () {
                return !0;
              },
          },
          { trigger: 'plot:mouseleave', action: 'cursor:default' },
          { trigger: 'mask:mouseleave', action: 'cursor:crosshair' },
        ],
        start: [
          {
            trigger: 'plot:mousedown',
            isEnable:
              a ||
              function (s) {
                return !s.isInShape('mask');
              },
            action: [''.concat(o, '-mask:start'), ''.concat(o, '-mask:show')],
            arg: [{ maskStyle: i == null ? void 0 : i.style }],
          },
          { trigger: 'mask:dragstart', action: [''.concat(o, '-mask:moveStart')] },
        ],
        processing: [
          { trigger: 'plot:mousemove', action: [''.concat(o, '-mask:resize')] },
          { trigger: 'mask:drag', action: [''.concat(o, '-mask:move')] },
          { trigger: 'mask:change', action: ['element-range-highlight:highlight'] },
        ],
        end: [
          { trigger: 'plot:mouseup', action: [''.concat(o, '-mask:end')] },
          { trigger: 'mask:dragend', action: [''.concat(o, '-mask:moveEnd')] },
          {
            trigger: 'document:mouseup',
            isEnable: function (s) {
              return !s.isInPlot();
            },
            action: [
              'element-range-highlight:clear',
              ''.concat(o, '-mask:end'),
              ''.concat(o, '-mask:hide'),
            ],
          },
        ],
        rollback: [
          {
            trigger: 'dblclick',
            action: ['element-range-highlight:clear', ''.concat(o, '-mask:hide')],
          },
        ],
      };
    case 'brush-y':
      return {
        showEnable: [
          {
            trigger: 'plot:mouseenter',
            action: 'cursor:crosshair',
            isEnable:
              a ||
              function () {
                return !0;
              },
          },
          { trigger: 'plot:mouseleave', action: 'cursor:default' },
        ],
        start: [
          {
            trigger: 'mousedown',
            isEnable: a || vr,
            action: ['brush-y:start', ''.concat(o, '-mask:start'), ''.concat(o, '-mask:show')],
            arg: [null, { maskStyle: i == null ? void 0 : i.style }],
          },
        ],
        processing: [
          { trigger: 'mousemove', isEnable: vr, action: [''.concat(o, '-mask:resize')] },
        ],
        end: [
          {
            trigger: 'mouseup',
            isEnable: vr,
            action: [
              'brush-y:filter',
              'brush-y:end',
              ''.concat(o, '-mask:end'),
              ''.concat(o, '-mask:hide'),
            ],
          },
        ],
        rollback: [{ trigger: 'dblclick', action: ['brush-y:reset'] }],
      };
    case 'brush-y-highlight':
      return {
        showEnable: [
          {
            trigger: 'plot:mouseenter',
            action: 'cursor:crosshair',
            isEnable:
              a ||
              function () {
                return !0;
              },
          },
          {
            trigger: 'mask:mouseenter',
            action: 'cursor:move',
            isEnable:
              a ||
              function () {
                return !0;
              },
          },
          { trigger: 'plot:mouseleave', action: 'cursor:default' },
          { trigger: 'mask:mouseleave', action: 'cursor:crosshair' },
        ],
        start: [
          {
            trigger: 'plot:mousedown',
            isEnable:
              a ||
              function (s) {
                return !s.isInShape('mask');
              },
            action: [''.concat(o, '-mask:start'), ''.concat(o, '-mask:show')],
            arg: [{ maskStyle: i == null ? void 0 : i.style }],
          },
          { trigger: 'mask:dragstart', action: [''.concat(o, '-mask:moveStart')] },
        ],
        processing: [
          { trigger: 'plot:mousemove', action: [''.concat(o, '-mask:resize')] },
          { trigger: 'mask:drag', action: [''.concat(o, '-mask:move')] },
          { trigger: 'mask:change', action: ['element-range-highlight:highlight'] },
        ],
        end: [
          { trigger: 'plot:mouseup', action: [''.concat(o, '-mask:end')] },
          { trigger: 'mask:dragend', action: [''.concat(o, '-mask:moveEnd')] },
          {
            trigger: 'document:mouseup',
            isEnable: function (s) {
              return !s.isInPlot();
            },
            action: [
              'element-range-highlight:clear',
              ''.concat(o, '-mask:end'),
              ''.concat(o, '-mask:hide'),
            ],
          },
        ],
        rollback: [
          {
            trigger: 'dblclick',
            action: ['element-range-highlight:clear', ''.concat(o, '-mask:hide')],
          },
        ],
      };
    default:
      return {};
  }
}
ot('brush', Vn('brush'));
ot('brush-highlight', Vn('brush-highlight'));
ot('brush-x', Vn('brush-x', 'x-rect'));
ot('brush-y', Vn('brush-y', 'y-rect'));
ot('brush-x-highlight', Vn('brush-x-highlight', 'x-rect'));
ot('brush-y-highlight', Vn('brush-y-highlight', 'y-rect'));
var Ap = [
  'brush',
  'brush-x',
  'brush-y',
  'brush-highlight',
  'brush-x-highlight',
  'brush-y-highlight',
];
function Cx(e) {
  var r = e.options,
    t = r.brush,
    n = Jt(r.interactions || [], function (i) {
      return Ap.indexOf(i.type) === -1;
    });
  return (
    t != null &&
      t.enabled &&
      (Ap.forEach(function (i) {
        var a = !1;
        switch (t.type) {
          case 'x-rect':
            a = i === (t.action === 'highlight' ? 'brush-x-highlight' : 'brush-x');
            break;
          case 'y-rect':
            a = i === (t.action === 'highlight' ? 'brush-y-highlight' : 'brush-y');
            break;
          default:
            a = i === (t.action === 'highlight' ? 'brush-highlight' : 'brush');
            break;
        }
        var o = { type: i, enable: a };
        t && (o.cfg = Vn(i, t.type, t)), n.push(o);
      }),
      (t == null ? void 0 : t.action) !== 'highlight' &&
        n.push({ type: 'filter-action', cfg: { buttonConfig: t.button } })),
    O({}, e, { options: { interactions: n } })
  );
}
var kn = { hover: '__interval-connected-area-hover__', click: '__interval-connected-area-click__' },
  lf = function (e, r) {
    return e === 'hover'
      ? [
          {
            trigger: 'interval:mouseenter',
            action: ['element-highlight-by-color:highlight', 'element-link-by-color:link'],
            arg: [null, { style: r }],
          },
        ]
      : [
          {
            trigger: 'interval:click',
            action: [
              'element-highlight-by-color:clear',
              'element-highlight-by-color:highlight',
              'element-link-by-color:clear',
              'element-link-by-color:unlink',
              'element-link-by-color:link',
            ],
            arg: [null, null, null, null, { style: r }],
          },
        ];
  };
ot(kn.hover, {
  start: lf(kn.hover),
  end: [
    {
      trigger: 'interval:mouseleave',
      action: ['element-highlight-by-color:reset', 'element-link-by-color:unlink'],
    },
  ],
});
ot(kn.click, {
  start: lf(kn.click),
  end: [
    {
      trigger: 'document:mousedown',
      action: ['element-highlight-by-color:clear', 'element-link-by-color:clear'],
    },
  ],
});
function HD(e) {
  return (
    e === void 0 && (e = !1),
    function (r) {
      var t = r.chart,
        n = r.options,
        i = n.connectedArea,
        a = function () {
          t.removeInteraction(kn.hover), t.removeInteraction(kn.click);
        };
      if (!e && i) {
        var o = i.trigger || 'hover';
        a(), t.interaction(kn[o], { start: lf(o, i.style) });
      } else a();
      return r;
    }
  );
}
function Mx(e, r) {
  return !at(e) || !at(r) || (e === 0 && r === 0)
    ? '-'
    : e === r
    ? '100%'
    : e === 0
    ? '∞'
    : ''.concat(((100 * r) / e).toFixed(2), '%');
}
function YD(e, r) {
  return O(
    {
      size: r ? 32 : 80,
      spacing: r ? 8 : 12,
      offset: r ? 32 : 0,
      arrow: e.arrow !== !1 && { headSize: 12, style: { fill: 'rgba(0, 0, 0, 0.05)' } },
      text: e.text !== !1 && {
        style: {
          fontSize: 12,
          fill: 'rgba(0, 0, 0, 0.85)',
          textAlign: 'center',
          textBaseline: 'middle',
        },
        formatter: Mx,
      },
    },
    e,
  );
}
function Fs(e, r) {
  return kt(r.getModel().points, function (t) {
    return e.convertPoint(t);
  });
}
function WD(e, r, t) {
  var n = e.view,
    i = e.geometry,
    a = e.group,
    o = e.options,
    s = e.horizontal,
    l = o.offset,
    u = o.size,
    c = o.arrow,
    h = n.getCoordinate(),
    f = Fs(h, r)[3],
    v = Fs(h, t)[0],
    d = v.y - f.y,
    p = v.x - f.x;
  if (typeof c != 'boolean') {
    var g = c.headSize,
      y = o.spacing,
      m;
    s
      ? (p - g) / 2 < y
        ? ((y = Math.max(1, (p - g) / 2)),
          (m = [
            [f.x + y, f.y - l],
            [f.x + y, f.y - l - u],
            [v.x - y, v.y - l - u / 2],
          ]))
        : (m = [
            [f.x + y, f.y - l],
            [f.x + y, f.y - l - u],
            [v.x - y - g, v.y - l - u],
            [v.x - y, v.y - l - u / 2],
            [v.x - y - g, v.y - l],
          ])
      : (d - g) / 2 < y
      ? ((y = Math.max(1, (d - g) / 2)),
        (m = [
          [f.x + l, f.y + y],
          [f.x + l + u, f.y + y],
          [v.x + l + u / 2, v.y - y],
        ]))
      : (m = [
          [f.x + l, f.y + y],
          [f.x + l + u, f.y + y],
          [v.x + l + u, v.y - y - g],
          [v.x + l + u / 2, v.y - y],
          [v.x + l, v.y - y - g],
        ]),
      a.addShape('polygon', {
        id: ''
          .concat(n.id, '-conversion-tag-arrow-')
          .concat(i.getElementId(r.getModel().mappingData)),
        name: 'conversion-tag-arrow',
        origin: { element: r, nextElement: t },
        attrs: x(x({}, c.style || {}), { points: m }),
      });
  }
}
function XD(e, r, t) {
  var n,
    i,
    a,
    o = e.view,
    s = e.geometry,
    l = e.group,
    u = e.options,
    c = e.field,
    h = e.horizontal,
    f = u.offset,
    v = u.size;
  if (typeof u.text != 'boolean') {
    var d = o.getCoordinate(),
      p =
        ((n = u.text) === null || n === void 0 ? void 0 : n.formatter) &&
        ((i = u.text) === null || i === void 0
          ? void 0
          : i.formatter(r.getData()[c], t.getData()[c])),
      g = Fs(d, r)[h ? 3 : 0],
      y = Fs(d, t)[h ? 0 : 3],
      m = l.addShape('text', {
        id: ''
          .concat(o.id, '-conversion-tag-text-')
          .concat(s.getElementId(r.getModel().mappingData)),
        name: 'conversion-tag-text',
        origin: { element: r, nextElement: t },
        attrs: x(x({}, ((a = u.text) === null || a === void 0 ? void 0 : a.style) || {}), {
          text: p,
          x: h ? (g.x + y.x) / 2 : g.x + f + v / 2,
          y: h ? g.y - f - v / 2 : (g.y + y.y) / 2,
        }),
      });
    if (h) {
      var b = y.x - g.x,
        w = m.getBBox().width;
      if (w > b) {
        var S = w / p.length,
          C = Math.max(1, Math.ceil(b / S) - 1),
          F = ''.concat(p.slice(0, C), '...');
        m.attr('text', F);
      }
    }
  }
}
function _D(e, r, t) {
  WD(e, r, t), XD(e, r, t);
}
function jD(e, r, t) {
  return (
    r === void 0 && (r = !0),
    t === void 0 && (t = !1),
    function (n) {
      var i = n.options,
        a = n.chart,
        o = i.conversionTag,
        s = i.theme;
      return (
        o &&
          !t &&
          (a.theme(O({}, xt(s) ? s : ca(s), { columnWidthRatio: 1 / 3 })),
          a.annotation().shape({
            render: function (l, u) {
              var c = l.addGroup({
                  id: ''.concat(a.id, '-conversion-tag-group'),
                  name: 'conversion-tag-group',
                }),
                h = Xe(a.geometries, function (d) {
                  return d.type === 'interval';
                }),
                f = { view: u, geometry: h, group: c, field: e, horizontal: r, options: YD(o, r) },
                v = h.elements;
              M(v, function (d, p) {
                p > 0 && _D(f, v[p - 1], d);
              });
            },
          })),
        n
      );
    }
  );
}
function UD(e) {
  var r = e.options,
    t = r.legend,
    n = r.seriesField,
    i = r.isStack;
  return (
    n ? t !== !1 && (t = x({ position: i ? 'right-top' : 'top-left' }, t)) : (t = !1),
    (e.options.legend = t),
    e
  );
}
function qD(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = t.columnStyle,
    a = t.color,
    o = t.columnWidthRatio,
    s = t.isPercent,
    l = t.isGroup,
    u = t.isStack,
    c = t.xField,
    h = t.yField,
    f = t.seriesField,
    v = t.groupField,
    d = t.tooltip,
    p = t.shape,
    g = s && l && u ? kD(n, h, [c, v], h) : no(n, h, c, h, s),
    y = [];
  u && f && !l
    ? g.forEach(function (w) {
        var S = y.find(function (C) {
          return C[c] === w[c] && C[f] === w[f];
        });
        S ? (S[h] += w[h] || 0) : y.push(x({}, w));
      })
    : (y = g),
    r.data(y);
  var m = s
      ? x(
          {
            formatter: function (w) {
              var S;
              return {
                name:
                  l && u
                    ? ''.concat(w[f], ' - ').concat(w[v])
                    : (S = w[f]) !== null && S !== void 0
                    ? S
                    : w[c],
                value: (Number(w[h]) * 100).toFixed(2) + '%',
              };
            },
          },
          d,
        )
      : d,
    b = O({}, e, {
      options: { data: y, widthRatio: o, tooltip: m, interval: { shape: p, style: i, color: a } },
    });
  return ee(b), b;
}
function uf(e) {
  var r,
    t,
    n = e.options,
    i = n.xAxis,
    a = n.yAxis,
    o = n.xField,
    s = n.yField,
    l = n.data,
    u = n.isPercent,
    c = u ? { max: 1, min: 0, minLimit: 0, maxLimit: 1 } : {};
  return it(
    Rt(
      ((r = {}), (r[o] = i), (r[s] = a), r),
      ((t = {}), (t[o] = { type: 'cat' }), (t[s] = x(x({}, Jh(l, s)), c)), t),
    ),
  )(e);
}
function ZD(e) {
  var r = e.chart,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = t.xField,
    o = t.yField;
  return n === !1 ? r.axis(a, !1) : r.axis(a, n), i === !1 ? r.axis(o, !1) : r.axis(o, i), e;
}
function KD(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend,
    i = t.seriesField;
  return n && i ? r.legend(i, n) : n === !1 && r.legend(!1), e;
}
function QD(e) {
  var r = e.chart,
    t = e.options,
    n = t.label,
    i = t.yField,
    a = t.isRange,
    o = te(r, 'interval');
  if (!n) o.label(!1);
  else {
    var s = n.callback,
      l = wt(n, ['callback']);
    o.label({
      fields: [i],
      callback: s,
      cfg: x(
        {
          layout:
            l != null && l.position
              ? void 0
              : [
                  { type: 'interval-adjust-position' },
                  { type: 'interval-hide-overlap' },
                  { type: 'adjust-color' },
                  { type: 'limit-in-plot', cfg: { action: 'hide' } },
                ],
        },
        jt(
          a
            ? x(
                {
                  content: function (u) {
                    var c;
                    return (c = u[i]) === null || c === void 0 ? void 0 : c.join('-');
                  },
                },
                l,
              )
            : l,
        ),
      ),
    });
  }
  return e;
}
function JD(e) {
  var r = e.chart,
    t = e.options,
    n = t.tooltip,
    i = t.isGroup,
    a = t.isStack,
    o = t.groupField,
    s = t.data,
    l = t.xField,
    u = t.yField,
    c = t.seriesField;
  if (n === !1) r.tooltip(!1);
  else {
    var h = n;
    if (i && a) {
      var f = h.customItems,
        v =
          (h == null ? void 0 : h.formatter) ||
          function (d) {
            return { name: ''.concat(d[c], ' - ').concat(d[o]), value: d[u] };
          };
      h = x(x({}, h), {
        customItems: function (d) {
          var p = [];
          return (
            M(d, function (g) {
              var y = Jt(s, function (m) {
                return Eg(m, mt(g.data, [l, c]));
              });
              y.forEach(function (m) {
                p.push(x(x(x({}, g), { value: m[u], data: m, mappingData: { _origin: m } }), v(m)));
              });
            }),
            f ? f(p) : p
          );
        },
      });
    }
    r.tooltip(h);
  }
  return e;
}
function Pl(e, r) {
  r === void 0 && (r = !1);
  var t = e.options,
    n = t.seriesField;
  return it(
    UD,
    vt,
    Ie('columnStyle'),
    on,
    cx('rect'),
    qD,
    uf,
    ZD,
    KD,
    JD,
    ro,
    af,
    QD,
    Cx,
    It,
    St,
    Pt(),
    jD(t.yField, !r, !!n),
    HD(!t.isStack),
    Rn,
  )(e);
}
function tB(e) {
  var r = e.options,
    t = r.xField,
    n = r.yField,
    i = r.xAxis,
    a = r.yAxis,
    o = { left: 'bottom', right: 'top', top: 'left', bottom: 'right' },
    s = a !== !1 ? x({ position: o[(a == null ? void 0 : a.position) || 'left'] }, a) : !1,
    l = i !== !1 ? x({ position: o[(i == null ? void 0 : i.position) || 'bottom'] }, i) : !1;
  return x(x({}, e), { options: x(x({}, r), { xField: n, yField: t, xAxis: s, yAxis: l }) });
}
function eB(e) {
  var r = e.options,
    t = r.label;
  return (
    t &&
      !t.position &&
      ((t.position = 'left'),
      t.layout ||
        (t.layout = [
          { type: 'interval-adjust-position' },
          { type: 'interval-hide-overlap' },
          { type: 'adjust-color' },
          { type: 'limit-in-plot', cfg: { action: 'hide' } },
        ])),
    O({}, e, { options: { label: t } })
  );
}
function rB(e) {
  var r = e.options,
    t = r.seriesField,
    n = r.isStack,
    i = r.legend;
  return (
    t ? i !== !1 && (i = x({ position: n ? 'top-left' : 'right-top' }, i || {})) : (i = !1),
    O({}, e, { options: { legend: i } })
  );
}
function nB(e) {
  var r = e.options,
    t = [{ type: 'transpose' }, { type: 'reflectY' }].concat(r.coordinate || []);
  return O({}, e, { options: { coordinate: t } });
}
function iB(e) {
  var r = e.chart,
    t = e.options,
    n = t.barStyle,
    i = t.barWidthRatio,
    a = t.minBarWidth,
    o = t.maxBarWidth,
    s = t.barBackground;
  return Pl(
    {
      chart: r,
      options: x(x({}, t), {
        columnStyle: n,
        columnWidthRatio: i,
        minColumnWidth: a,
        maxColumnWidth: o,
        columnBackground: s,
      }),
    },
    !0,
  );
}
function Ax(e) {
  return it(tB, eB, rB, Wt, nB, iB)(e);
}
var aB = O({}, lt.getDefaultOptions(), {
    barWidthRatio: 0.6,
    marginRatio: 1 / 32,
    tooltip: { shared: !0, showMarkers: !1, offset: 20 },
    legend: { radio: {} },
    interactions: [{ type: 'active-region' }],
  }),
  oB = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'bar'), t;
    }
    return (
      (r.getDefaultOptions = function () {
        return aB;
      }),
      (r.prototype.changeData = function (t) {
        var n, i;
        this.updateOption({ data: t });
        var a = this,
          o = a.chart,
          s = a.options,
          l = s.isPercent,
          u = s.xField,
          c = s.yField,
          h = s.xAxis,
          f = s.yAxis;
        (n = [c, u]), (u = n[0]), (c = n[1]), (i = [f, h]), (h = i[0]), (f = i[1]);
        var v = x(x({}, s), { xField: u, yField: c, yAxis: f, xAxis: h });
        uf({ chart: o, options: v }), o.changeData(no(t, u, c, u, l));
      }),
      (r.prototype.getDefaultOptions = function () {
        return r.getDefaultOptions();
      }),
      (r.prototype.getSchemaAdaptor = function () {
        return Ax;
      }),
      r
    );
  })(lt),
  sB = O({}, lt.getDefaultOptions(), {
    columnWidthRatio: 0.6,
    marginRatio: 1 / 32,
    tooltip: { shared: !0, showMarkers: !1, offset: 20 },
    legend: { radio: {} },
    interactions: [{ type: 'active-region' }],
  }),
  lB = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'column'), t;
    }
    return (
      (r.getDefaultOptions = function () {
        return sB;
      }),
      (r.prototype.changeData = function (t) {
        this.updateOption({ data: t });
        var n = this.options,
          i = n.yField,
          a = n.xField,
          o = n.isPercent,
          s = this,
          l = s.chart,
          u = s.options;
        uf({ chart: l, options: u }), this.chart.changeData(no(t, i, a, i, o));
      }),
      (r.prototype.getDefaultOptions = function () {
        return r.getDefaultOptions();
      }),
      (r.prototype.getSchemaAdaptor = function () {
        return Pl;
      }),
      r
    );
  })(lt),
  bu,
  Qr = '$$percentage$$',
  Jr = '$$mappingValue$$',
  br = '$$conversion$$',
  Ac = '$$totalPercentage$$',
  Ba = '$$x$$',
  Ra = '$$y$$',
  uB = {
    appendPadding: [0, 80],
    minSize: 0,
    maxSize: 1,
    meta: ((bu = {}), (bu[Jr] = { min: 0, max: 1, nice: !1 }), bu),
    label: { style: { fill: '#fff', fontSize: 12 } },
    tooltip: { showTitle: !1, showMarkers: !1, shared: !1 },
    conversionTag: { offsetX: 10, offsetY: 0, style: { fontSize: 12, fill: 'rgba(0,0,0,0.45)' } },
  },
  Fx = 'CONVERSION_TAG_NAME';
function cf(e, r, t) {
  var n = [],
    i = t.yField,
    a = t.maxSize,
    o = t.minSize,
    s = A(Lg(r, i), [i]),
    l = at(a) ? a : 1,
    u = at(o) ? o : 0;
  return (
    (n = kt(e, function (c, h) {
      var f = (c[i] || 0) / s;
      return (c[Qr] = f), (c[Jr] = (l - u) * f + u), (c[br] = [A(e, [h - 1, i]), c[i]]), c;
    })),
    n
  );
}
function hf(e) {
  return function (r) {
    var t = r.chart,
      n = r.options,
      i = n.conversionTag,
      a = n.filteredData,
      o = a || t.getOptions().data;
    if (i) {
      var s = i.formatter;
      o.forEach(function (l, u) {
        if (!(u <= 0 || Number.isNaN(l[Jr]))) {
          var c = e(l, u, o, {
            top: !0,
            name: Fx,
            text: {
              content: U(s) ? s(l, o) : s,
              offsetX: i.offsetX,
              offsetY: i.offsetY,
              position: 'end',
              autoRotate: !1,
              style: x({ textAlign: 'start', textBaseline: 'middle' }, i.style),
            },
          });
          t.annotation().line(c);
        }
      });
    }
    return r;
  };
}
function cB(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = n === void 0 ? [] : n,
    a = t.yField,
    o = t.maxSize,
    s = t.minSize,
    l = cf(i, i, { yField: a, maxSize: o, minSize: s });
  return r.data(l), e;
}
function hB(e) {
  var r = e.chart,
    t = e.options,
    n = t.xField,
    i = t.yField,
    a = t.color,
    o = t.tooltip,
    s = t.label,
    l = t.shape,
    u = l === void 0 ? 'funnel' : l,
    c = t.funnelStyle,
    h = t.state,
    f = Ve(o, [n, i]),
    v = f.fields,
    d = f.formatter;
  be({
    chart: r,
    options: {
      type: 'interval',
      xField: n,
      yField: Jr,
      colorField: n,
      tooltipFields: N(v) && v.concat([Qr, br]),
      mapping: { shape: u, tooltip: d, color: a, style: c },
      label: s,
      state: h,
    },
  });
  var p = te(e.chart, 'interval');
  return p.adjust('symmetric'), e;
}
function fB(e) {
  var r = e.chart,
    t = e.options,
    n = t.isTransposed;
  return r.coordinate({ type: 'rect', actions: n ? [] : [['transpose'], ['scale', 1, -1]] }), e;
}
function Ex(e) {
  var r = e.options,
    t = e.chart,
    n = r.maxSize,
    i = A(t, ['geometries', '0', 'dataArray'], []),
    a = A(t, ['options', 'data', 'length']),
    o = kt(i, function (l) {
      return A(l, ['0', 'nextPoints', '0', 'x']) * a - 0.5;
    }),
    s = function (l, u, c, h) {
      var f = n - (n - l[Jr]) / 2;
      return x(x({}, h), { start: [o[u - 1] || u - 0.5, f], end: [o[u - 1] || u - 0.5, f + 0.05] });
    };
  return hf(s)(e), e;
}
function Tx(e) {
  return it(cB, hB, fB, Ex)(e);
}
function vB(e) {
  var r,
    t = e.chart,
    n = e.options,
    i = n.data,
    a = i === void 0 ? [] : i,
    o = n.yField;
  return t.data(a), t.scale(((r = {}), (r[o] = { sync: !0 }), r)), e;
}
function dB(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = t.xField,
    a = t.yField,
    o = t.color,
    s = t.compareField,
    l = t.isTransposed,
    u = t.tooltip,
    c = t.maxSize,
    h = t.minSize,
    f = t.label,
    v = t.funnelStyle,
    d = t.state,
    p = t.showFacetTitle;
  return (
    r.facet('mirror', {
      fields: [s],
      transpose: !l,
      padding: l ? 0 : [32, 0, 0, 0],
      showTitle: p,
      eachView: function (g, y) {
        var m = l ? y.rowIndex : y.columnIndex;
        l ||
          g.coordinate({ type: 'rect', actions: [['transpose'], ['scale', m === 0 ? -1 : 1, -1]] });
        var b = cf(y.data, n, { yField: a, maxSize: c, minSize: h });
        g.data(b);
        var w = Ve(u, [i, a, s]),
          S = w.fields,
          C = w.formatter,
          F = l
            ? { offset: m === 0 ? 10 : -23, position: m === 0 ? 'bottom' : 'top' }
            : { offset: 10, position: 'left', style: { textAlign: m === 0 ? 'end' : 'start' } };
        be({
          chart: g,
          options: {
            type: 'interval',
            xField: i,
            yField: Jr,
            colorField: i,
            tooltipFields: N(S) && S.concat([Qr, br]),
            mapping: { shape: 'funnel', tooltip: C, color: o, style: v },
            label: f === !1 ? !1 : O({}, F, f),
            state: d,
          },
        });
      },
    }),
    e
  );
}
function kx(e) {
  var r = e.chart,
    t = e.index,
    n = e.options,
    i = n.conversionTag,
    a = n.isTransposed;
  (at(t) ? [r] : r.views).forEach(function (o, s) {
    var l = A(o, ['geometries', '0', 'dataArray'], []),
      u = A(o, ['options', 'data', 'length']),
      c = kt(l, function (f) {
        return A(f, ['0', 'nextPoints', '0', 'x']) * u - 0.5;
      }),
      h = function (f, v, d, p) {
        var g = (t || s) === 0 ? -1 : 1;
        return O({}, p, {
          start: [c[v - 1] || v - 0.5, f[Jr]],
          end: [c[v - 1] || v - 0.5, f[Jr] + 0.05],
          text: a
            ? { style: { textAlign: 'start' } }
            : {
                offsetX: i !== !1 ? g * i.offsetX : 0,
                style: { textAlign: (t || s) === 0 ? 'end' : 'start' },
              },
        });
      };
    hf(h)(O({}, { chart: o, options: n }));
  });
}
function pB(e) {
  var r = e.chart;
  return (
    r.once('beforepaint', function () {
      return kx(e);
    }),
    e
  );
}
function gB(e) {
  return it(vB, dB, pB)(e);
}
function yB(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = n === void 0 ? [] : n,
    a = t.yField,
    o = ie(
      i,
      function (u, c) {
        return u + (c[a] || 0);
      },
      0,
    ),
    s = Lg(i, a)[a],
    l = kt(i, function (u, c) {
      var h = [],
        f = [];
      if (((u[Ac] = (u[a] || 0) / o), c)) {
        var v = i[c - 1][Ba],
          d = i[c - 1][Ra];
        (h[0] = v[3]), (f[0] = d[3]), (h[1] = v[2]), (f[1] = d[2]);
      } else (h[0] = -0.5), (f[0] = 1), (h[1] = 0.5), (f[1] = 1);
      return (
        (f[2] = f[1] - u[Ac]),
        (h[2] = (f[2] + 1) / 4),
        (f[3] = f[2]),
        (h[3] = -h[2]),
        (u[Ba] = h),
        (u[Ra] = f),
        (u[Qr] = (u[a] || 0) / s),
        (u[br] = [A(i, [c - 1, a]), u[a]]),
        u
      );
    });
  return r.data(l), e;
}
function mB(e) {
  var r = e.chart,
    t = e.options,
    n = t.xField,
    i = t.yField,
    a = t.color,
    o = t.tooltip,
    s = t.label,
    l = t.funnelStyle,
    u = t.state,
    c = Ve(o, [n, i]),
    h = c.fields,
    f = c.formatter;
  return (
    be({
      chart: r,
      options: {
        type: 'polygon',
        xField: Ba,
        yField: Ra,
        colorField: n,
        tooltipFields: N(h) && h.concat([Qr, br]),
        label: s,
        state: u,
        mapping: { tooltip: f, color: a, style: l },
      },
    }),
    e
  );
}
function xB(e) {
  var r = e.chart,
    t = e.options,
    n = t.isTransposed;
  return r.coordinate({ type: 'rect', actions: n ? [['transpose'], ['reflect', 'x']] : [] }), e;
}
function wB(e) {
  var r = function (t, n, i, a) {
    return x(x({}, a), { start: [t[Ba][1], t[Ra][1]], end: [t[Ba][1] + 0.05, t[Ra][1]] });
  };
  return hf(r)(e), e;
}
function bB(e) {
  return it(yB, mB, xB, wB)(e);
}
function SB(e) {
  var r,
    t = e.chart,
    n = e.options,
    i = n.data,
    a = i === void 0 ? [] : i,
    o = n.yField;
  return t.data(a), t.scale(((r = {}), (r[o] = { sync: !0 }), r)), e;
}
function CB(e) {
  var r = e.chart,
    t = e.options,
    n = t.seriesField,
    i = t.isTransposed,
    a = t.showFacetTitle;
  return (
    r.facet('rect', {
      fields: [n],
      padding: [i ? 0 : 32, 10, 0, 10],
      showTitle: a,
      eachView: function (o, s) {
        Tx(O({}, e, { chart: o, options: { data: s.data } }));
      },
    }),
    e
  );
}
function MB(e) {
  return it(SB, CB)(e);
}
var AB = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.rendering = !1), t;
    }
    return (
      (r.prototype.change = function (t) {
        var n = this;
        if (!this.rendering) {
          var i = t.seriesField,
            a = t.compareField,
            o = a ? kx : Ex,
            s = this.context.view,
            l = i || a ? s.views : [s];
          kt(l, function (u, c) {
            var h = u.getController('annotation'),
              f = Jt(A(h, ['option'], []), function (d) {
                var p = d.name;
                return p !== Fx;
              });
            h.clear(!0),
              M(f, function (d) {
                typeof d == 'object' && u.annotation()[d.type](d);
              });
            var v = A(u, ['filteredData'], u.getOptions().data);
            o({ chart: u, index: c, options: x(x({}, t), { filteredData: cf(v, v, t) }) }),
              u.filterData(v),
              (n.rendering = !0),
              u.render(!0);
          });
        }
        this.rendering = !1;
      }),
      r
    );
  })(Ft),
  Ix = 'funnel-conversion-tag',
  Fc = 'funnel-afterrender',
  Lx = { trigger: 'afterrender', action: ''.concat(Ix, ':change') };
Q(Ix, AB);
ot(Fc, { start: [Lx] });
function FB(e) {
  var r = e.options,
    t = r.compareField,
    n = r.xField,
    i = r.yField,
    a = r.locale,
    o = r.funnelStyle,
    s = r.data,
    l = Al(a),
    u = {
      label: t
        ? {
            fields: [n, i, t, Qr, br],
            formatter: function (h) {
              return ''.concat(h[i]);
            },
          }
        : {
            fields: [n, i, Qr, br],
            offset: 0,
            position: 'middle',
            formatter: function (h) {
              return ''.concat(h[n], ' ').concat(h[i]);
            },
          },
      tooltip: {
        title: n,
        formatter: function (h) {
          return { name: h[n], value: h[i] };
        },
      },
      conversionTag: {
        formatter: function (h) {
          return ''.concat(l.get(['conversionTag', 'label']), ': ').concat(Mx.apply(void 0, h[br]));
        },
      },
    },
    c;
  return (
    (t || o) &&
      (c = function (h) {
        return O({}, t && { lineWidth: 1, stroke: '#fff' }, U(o) ? o(h) : o);
      }),
    O({ options: u }, e, { options: { funnelStyle: c, data: oe(s) } })
  );
}
function EB(e) {
  var r = e.options,
    t = r.compareField,
    n = r.dynamicHeight,
    i = r.seriesField;
  return i ? MB(e) : t ? gB(e) : n ? bB(e) : Tx(e);
}
function TB(e) {
  var r,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = t.xField,
    o = t.yField;
  return it(Rt(((r = {}), (r[a] = n), (r[o] = i), r)))(e);
}
function kB(e) {
  var r = e.chart;
  return r.axis(!1), e;
}
function IB(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend;
  return n === !1 ? r.legend(!1) : r.legend(n), e;
}
function LB(e) {
  var r = e.chart,
    t = e.options,
    n = t.interactions,
    i = t.dynamicHeight;
  return (
    M(n, function (a) {
      a.enable === !1 ? r.removeInteraction(a.type) : r.interaction(a.type, a.cfg || {});
    }),
    i ? r.removeInteraction(Fc) : r.interaction(Fc, { start: [x(x({}, Lx), { arg: t })] }),
    e
  );
}
function Px(e) {
  return it(FB, EB, TB, kB, Wt, LB, IB, St, vt, Pt())(e);
}
var PB = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'funnel'), t;
    }
    return (
      (r.getDefaultOptions = function () {
        return uB;
      }),
      (r.prototype.getDefaultOptions = function () {
        return r.getDefaultOptions();
      }),
      (r.prototype.getSchemaAdaptor = function () {
        return Px;
      }),
      (r.prototype.setState = function (t, n, i) {
        i === void 0 && (i = !0);
        var a = Da(this.chart);
        M(a, function (o) {
          n(o.getData()) && o.setState(t, i);
        });
      }),
      (r.prototype.getStates = function () {
        var t = Da(this.chart),
          n = [];
        return (
          M(t, function (i) {
            var a = i.getData(),
              o = i.getStates();
            M(o, function (s) {
              n.push({ data: a, state: s, geometry: i.geometry, element: i });
            });
          }),
          n
        );
      }),
      (r.CONVERSATION_FIELD = br),
      (r.PERCENT_FIELD = Qr),
      (r.TOTAL_PERCENT_FIELD = Ac),
      r
    );
  })(lt),
  Vo,
  ff = 'range',
  Ox = 'type',
  mr = 'percent',
  OB = '#f0f0f0',
  Dx = 'indicator-view',
  Bx = 'range-view',
  DB = {
    percent: 0,
    range: { ticks: [] },
    innerRadius: 0.9,
    radius: 0.95,
    startAngle: (-7 / 6) * Math.PI,
    endAngle: (1 / 6) * Math.PI,
    syncViewPadding: !0,
    axis: {
      line: null,
      label: { offset: -24, style: { textAlign: 'center', textBaseline: 'middle' } },
      subTickLine: { length: -8 },
      tickLine: { length: -12 },
      grid: null,
    },
    indicator: {
      pointer: { style: { lineWidth: 5, lineCap: 'round' } },
      pin: { style: { r: 9.75, lineWidth: 4.5, fill: '#fff' } },
    },
    statistic: { title: !1 },
    meta:
      ((Vo = {}),
      (Vo[ff] = { sync: 'v' }),
      (Vo[mr] = { sync: 'v', tickCount: 5, tickInterval: 0.2 }),
      Vo),
    animation: !1,
  };
function BB(e, r) {
  return e.map(function (t, n) {
    var i;
    return (i = {}), (i[ff] = t - (e[n - 1] || 0)), (i[Ox] = ''.concat(n)), (i[mr] = r), i;
  });
}
function Rx(e) {
  var r;
  return [((r = {}), (r[mr] = Tt(e, 0, 1)), r)];
}
function $x(e, r) {
  var t = A(r, ['ticks'], []),
    n = _t(t) ? In(t) : [0, Tt(e, 0, 1), 1];
  return n[0] || n.shift(), BB(n, e);
}
function RB(e) {
  var r = e.chart,
    t = e.options,
    n = t.percent,
    i = t.range,
    a = t.radius,
    o = t.innerRadius,
    s = t.startAngle,
    l = t.endAngle,
    u = t.axis,
    c = t.indicator,
    h = t.gaugeStyle,
    f = t.type,
    v = t.meter,
    d = i.color,
    p = i.width;
  if (c) {
    var g = Rx(n),
      y = r.createView({ id: Dx });
    y.data(g),
      y
        .point()
        .position(''.concat(mr, '*1'))
        .shape(c.shape || 'gauge-indicator')
        .customInfo({ defaultColor: r.getTheme().defaultColor, indicator: c }),
      y.coordinate('polar', { startAngle: s, endAngle: l, radius: o * a }),
      y.axis(mr, u),
      y.scale(mr, mt(u, pe));
  }
  var m = $x(n, t.range),
    b = r.createView({ id: Bx });
  b.data(m);
  var w = et(d) ? [d, OB] : d,
    S = ee({
      chart: b,
      options: {
        xField: '1',
        yField: ff,
        seriesField: Ox,
        rawFields: [mr],
        isStack: !0,
        interval: { color: w, style: h, shape: f === 'meter' ? 'meter-gauge' : null },
        args: { zIndexReversed: !0, sortZIndex: !0 },
        minColumnWidth: p,
        maxColumnWidth: p,
      },
    }).ext,
    C = S.geometry;
  return (
    C.customInfo({ meter: v }),
    b.coordinate('polar', { innerRadius: o, radius: a, startAngle: s, endAngle: l }).transpose(),
    e
  );
}
function $B(e) {
  var r;
  return it(Rt(((r = { range: { min: 0, max: 1, maxLimit: 1, minLimit: 0 } }), (r[mr] = {}), r)))(
    e,
  );
}
function Nx(e, r) {
  var t = e.chart,
    n = e.options,
    i = n.statistic,
    a = n.percent;
  if ((t.getController('annotation').clear(!0), i)) {
    var o = i.content,
      s = void 0;
    o &&
      (s = O(
        {},
        {
          content: ''.concat((a * 100).toFixed(2), '%'),
          style: {
            opacity: 0.75,
            fontSize: '30px',
            lineHeight: 1,
            textAlign: 'center',
            color: 'rgba(44,53,66,0.85)',
          },
        },
        o,
      )),
      _O(t, { statistic: x(x({}, i), { content: s }) }, { percent: a });
  }
  return r && t.render(!0), e;
}
function NB(e) {
  var r = e.chart,
    t = e.options,
    n = t.tooltip;
  return (
    n
      ? r.tooltip(
          O(
            {
              showTitle: !1,
              showMarkers: !1,
              containerTpl: '<div class="g2-tooltip"><div class="g2-tooltip-list"></div></div>',
              domStyles: { 'g2-tooltip': { padding: '4px 8px', fontSize: '10px' } },
              customContent: function (i, a) {
                var o = A(a, [0, 'data', mr], 0);
                return ''.concat((o * 100).toFixed(2), '%');
              },
            },
            n,
          ),
        )
      : r.tooltip(!1),
    e
  );
}
function zB(e) {
  var r = e.chart;
  return r.legend(!1), e;
}
function zx(e) {
  return it(vt, St, RB, $B, NB, Nx, It, Pt(), zB)(e);
}
gt('point', 'gauge-indicator', {
  draw: function (e, r) {
    var t = e.customInfo,
      n = t.indicator,
      i = t.defaultColor,
      a = n,
      o = a.pointer,
      s = a.pin,
      l = r.addGroup(),
      u = this.parsePoint({ x: 0, y: 0 });
    return (
      o &&
        l.addShape('line', {
          name: 'pointer',
          attrs: x({ x1: u.x, y1: u.y, x2: e.x, y2: e.y, stroke: i }, o.style),
        }),
      s && l.addShape('circle', { name: 'pin', attrs: x({ x: u.x, y: u.y, stroke: i }, s.style) }),
      l
    );
  },
});
gt('interval', 'meter-gauge', {
  draw: function (e, r) {
    var t = e.customInfo.meter,
      n = t === void 0 ? {} : t,
      i = n.steps,
      a = i === void 0 ? 50 : i,
      o = n.stepRatio,
      s = o === void 0 ? 0.5 : o;
    (a = a < 1 ? 1 : a), (s = Tt(s, 0, 1));
    var l = this.coordinate,
      u = l.startAngle,
      c = l.endAngle,
      h = 0;
    if (s > 0 && s < 1) {
      var f = c - u;
      h = f / a / (s / (1 - s) + 1 - 1 / a);
    }
    for (
      var v = (h / (1 - s)) * s,
        d = r.addGroup(),
        p = this.coordinate.getCenter(),
        g = this.coordinate.getRadius(),
        y = me.getAngle(e, this.coordinate),
        m = y.startAngle,
        b = y.endAngle,
        w = m;
      w < b;

    ) {
      var S = void 0,
        C = (w - u) % (v + h);
      C < v ? (S = w + (v - C)) : ((w += v + h - C), (S = w + v));
      var F = me.getSectorPath(p.x, p.y, g, w, Math.min(S, b), g * this.coordinate.innerRadius);
      d.addShape('path', {
        name: 'meter-gauge',
        attrs: { path: F, fill: e.color, stroke: e.color, lineWidth: 0.5 },
      }),
        (w = S + h);
    }
    return d;
  },
});
var GB = (function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'gauge'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return DB;
    }),
    (r.prototype.changeData = function (t) {
      this.chart.emit(ut.BEFORE_CHANGE_DATA, Lt.fromData(this.chart, ut.BEFORE_CHANGE_DATA, null)),
        this.updateOption({ percent: t });
      var n = this.chart.views.find(function (a) {
        return a.id === Dx;
      });
      n && n.data(Rx(t));
      var i = this.chart.views.find(function (a) {
        return a.id === Bx;
      });
      i && i.data($x(t, this.options.range)),
        Nx({ chart: this.chart, options: this.options }, !0),
        this.chart.emit(ut.AFTER_CHANGE_DATA, Lt.fromData(this.chart, ut.AFTER_CHANGE_DATA, null));
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return zx;
    }),
    r
  );
})(lt);
function Fp(e, r, t) {
  if (t === 1) return [0, r];
  var n = Math.floor(e / r);
  return [r * n, r * (n + 1)];
}
function VB(e) {
  return Math.ceil(Math.log(e.length) / Math.LN2) + 1;
}
function Gx(e, r, t, n, i) {
  var a = oe(e);
  jS(a, r);
  var o = je(a, r),
    s = kg(o),
    l = s.max - s.min,
    u = t;
  if ((!t && n && (u = n > 1 ? l / (n - 1) : s.max), !t && !n)) {
    var c = VB(o);
    u = l / c;
  }
  var h = {},
    f = Ae(a, i);
  ye(f)
    ? M(a, function (d) {
        var p = d[r],
          g = Fp(p, u, n),
          y = ''.concat(g[0], '-').concat(g[1]);
        _r(h, y) || (h[y] = { range: g, count: 0 }), (h[y].count += 1);
      })
    : Object.keys(f).forEach(function (d) {
        M(f[d], function (p) {
          var g = p[r],
            y = Fp(g, u, n),
            m = ''.concat(y[0], '-').concat(y[1]),
            b = ''.concat(m, '-').concat(d);
          _r(h, b) || ((h[b] = { range: y, count: 0 }), (h[b][i] = d)), (h[b].count += 1);
        });
      });
  var v = [];
  return (
    M(h, function (d) {
      v.push(d);
    }),
    v
  );
}
var Es = 'range',
  $a = 'count',
  HB = O({}, lt.getDefaultOptions(), {
    columnStyle: { stroke: '#FFFFFF' },
    tooltip: { shared: !0, showMarkers: !1 },
    interactions: [{ type: 'active-region' }],
  });
function YB(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = t.binField,
    a = t.binNumber,
    o = t.binWidth,
    s = t.color,
    l = t.stackField,
    u = t.legend,
    c = t.columnStyle,
    h = Gx(n, i, o, a, l);
  r.data(h);
  var f = O({}, e, {
    options: {
      xField: Es,
      yField: $a,
      seriesField: l,
      isStack: !0,
      interval: { color: s, style: c },
    },
  });
  return ee(f), u && l ? r.legend(l, u) : r.legend(!1), e;
}
function WB(e) {
  var r,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis;
  return it(Rt(((r = {}), (r[Es] = n), (r[$a] = i), r)))(e);
}
function XB(e) {
  var r = e.chart,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis;
  return n === !1 ? r.axis(Es, !1) : r.axis(Es, n), i === !1 ? r.axis($a, !1) : r.axis($a, i), e;
}
function _B(e) {
  var r = e.chart,
    t = e.options,
    n = t.label,
    i = te(r, 'interval');
  if (!n) i.label(!1);
  else {
    var a = n.callback,
      o = wt(n, ['callback']);
    i.label({ fields: [$a], callback: a, cfg: jt(o) });
  }
  return e;
}
function Vx(e) {
  return it(vt, Ie('columnStyle'), YB, WB, XB, on, _B, Wt, It, St)(e);
}
var jB = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'histogram'), t;
    }
    return (
      (r.getDefaultOptions = function () {
        return HB;
      }),
      (r.prototype.changeData = function (t) {
        this.updateOption({ data: t });
        var n = this.options,
          i = n.binField,
          a = n.binNumber,
          o = n.binWidth,
          s = n.stackField;
        this.chart.changeData(Gx(t, i, o, a, s));
      }),
      (r.prototype.getDefaultOptions = function () {
        return r.getDefaultOptions();
      }),
      (r.prototype.getSchemaAdaptor = function () {
        return Vx;
      }),
      r
    );
  })(lt),
  UB = O({}, lt.getDefaultOptions(), {
    tooltip: { shared: !0, showMarkers: !0, showCrosshairs: !0, crosshairs: { type: 'x' } },
    legend: { position: 'top-left', radio: {} },
    isStack: !1,
  }),
  qB = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.active = function () {
        var t = this.getView(),
          n = this.context.event;
        if (n.data) {
          var i = n.data.items,
            a = t.geometries.filter(function (o) {
              return o.type === 'point';
            });
          M(a, function (o) {
            M(o.elements, function (s) {
              var l =
                Tg(i, function (u) {
                  return u.data === s.data;
                }) !== -1;
              s.setState('active', l);
            });
          });
        }
      }),
      (r.prototype.reset = function () {
        var t = this.getView(),
          n = t.geometries.filter(function (i) {
            return i.type === 'point';
          });
        M(n, function (i) {
          M(i.elements, function (a) {
            a.setState('active', !1);
          });
        });
      }),
      (r.prototype.getView = function () {
        return this.context.view;
      }),
      r
    );
  })(Ft);
Q('marker-active', qB);
ot('marker-active', {
  start: [{ trigger: 'tooltip:show', action: 'marker-active:active' }],
  end: [{ trigger: 'tooltip:hide', action: 'marker-active:reset' }],
});
var ZB = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'line'), t;
    }
    return (
      (r.getDefaultOptions = function () {
        return UB;
      }),
      (r.prototype.changeData = function (t) {
        this.updateOption({ data: t });
        var n = this,
          i = n.chart,
          a = n.options;
        Ll({ chart: i, options: a }), this.chart.changeData(t);
      }),
      (r.prototype.getDefaultOptions = function () {
        return r.getDefaultOptions();
      }),
      (r.prototype.getSchemaAdaptor = function () {
        return wx;
      }),
      r
    );
  })(lt),
  Hx = O({}, lt.getDefaultOptions(), {
    legend: { position: 'right', radio: {} },
    tooltip: { shared: !1, showTitle: !1, showMarkers: !1 },
    label: { layout: { type: 'limit-in-plot', cfg: { action: 'ellipsis' } } },
    pieStyle: { stroke: 'white', lineWidth: 1 },
    statistic: {
      title: {
        style: {
          fontWeight: 300,
          color: '#4B535E',
          textAlign: 'center',
          fontSize: '20px',
          lineHeight: 1,
        },
      },
      content: {
        style: {
          fontWeight: 'bold',
          color: 'rgba(44,53,66,0.85)',
          textAlign: 'center',
          fontSize: '32px',
          lineHeight: 1,
        },
      },
    },
    theme: { components: { annotation: { text: { animate: !1 } } } },
  }),
  KB = [1, 0, 0, 0, 1, 0, 0, 0, 1];
function Ec(e, r) {
  var t = r ? J([], r, !0) : J([], KB, !0);
  return me.transform(t, e);
}
var QB = (function (e) {
  k(r, e);
  function r() {
    return (e !== null && e.apply(this, arguments)) || this;
  }
  return (
    (r.prototype.getActiveElements = function () {
      var t = me.getDelegationObject(this.context);
      if (t) {
        var n = this.context.view,
          i = t.component,
          a = t.item,
          o = i.get('field');
        if (o) {
          var s = n.geometries[0].elements;
          return s.filter(function (l) {
            return l.getModel().data[o] === a.value;
          });
        }
      }
      return [];
    }),
    (r.prototype.getActiveElementLabels = function () {
      var t = this.context.view,
        n = this.getActiveElements(),
        i = t.geometries[0].labelsContainer.getChildren();
      return i.filter(function (a) {
        return n.find(function (o) {
          return Dt(o.getData(), a.get('data'));
        });
      });
    }),
    (r.prototype.transfrom = function (t) {
      t === void 0 && (t = 7.5);
      var n = this.getActiveElements(),
        i = this.getActiveElementLabels();
      n.forEach(function (a, o) {
        var s = i[o],
          l = a.geometry.coordinate;
        if (l.isPolar && l.isTransposed) {
          var u = me.getAngle(a.getModel(), l),
            c = u.startAngle,
            h = u.endAngle,
            f = (c + h) / 2,
            v = t,
            d = v * Math.cos(f),
            p = v * Math.sin(f);
          a.shape.setMatrix(Ec([['t', d, p]])), s.setMatrix(Ec([['t', d, p]]));
        }
      });
    }),
    (r.prototype.active = function () {
      this.transfrom();
    }),
    (r.prototype.reset = function () {
      this.transfrom(0);
    }),
    r
  );
})(Ft);
function JB(e) {
  var r = e.event,
    t,
    n = r.target;
  return n && (t = n.get('element')), t;
}
var tR = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.getAnnotations = function (t) {
        var n = t || this.context.view;
        return n.getController('annotation').option;
      }),
      (r.prototype.getInitialAnnotation = function () {
        return this.initialAnnotation;
      }),
      (r.prototype.init = function () {
        var t = this,
          n = this.context.view;
        n.removeInteraction('tooltip'),
          n.on('afterchangesize', function () {
            var i = t.getAnnotations(n);
            t.initialAnnotation = i;
          });
      }),
      (r.prototype.change = function (t) {
        var n = this.context,
          i = n.view,
          a = n.event;
        this.initialAnnotation || (this.initialAnnotation = this.getAnnotations());
        var o = A(a, ['data', 'data']);
        if (a.type.match('legend-item')) {
          var s = me.getDelegationObject(this.context),
            l = i.getGroupedFields()[0];
          if (s && l) {
            var u = s.item;
            o = i.getData().find(function (v) {
              return v[l] === u.value;
            });
          }
        }
        if (o) {
          var c = A(t, 'annotations', []),
            h = A(t, 'statistic', {});
          i.getController('annotation').clear(!0),
            M(c, function (v) {
              typeof v == 'object' && i.annotation()[v.type](v);
            }),
            Cl(i, { statistic: h, plotType: 'pie' }, o),
            i.render(!0);
        }
        var f = JB(this.context);
        f && f.shape.toFront();
      }),
      (r.prototype.reset = function () {
        var t = this.context.view,
          n = t.getController('annotation');
        n.clear(!0);
        var i = this.getInitialAnnotation();
        M(i, function (a) {
          t.annotation()[a.type](a);
        }),
          t.render(!0);
      }),
      r
    );
  })(Ft),
  Yx = 'pie-statistic';
Q(Yx, tR);
ot('pie-statistic-active', {
  start: [{ trigger: 'element:mouseenter', action: 'pie-statistic:change' }],
  end: [{ trigger: 'element:mouseleave', action: 'pie-statistic:reset' }],
});
Q('pie-legend', QB);
ot('pie-legend-active', {
  start: [{ trigger: 'legend-item:mouseenter', action: 'pie-legend:active' }],
  end: [{ trigger: 'legend-item:mouseleave', action: 'pie-legend:reset' }],
});
function eR(e, r) {
  var t = null;
  return (
    M(e, function (n) {
      typeof n[r] == 'number' && (t += n[r]);
    }),
    t
  );
}
function rR(e, r) {
  var t;
  switch (e) {
    case 'inner':
      return (
        (t = '-30%'), et(r) && r.endsWith('%') ? (parseFloat(r) * 0.01 > 0 ? t : r) : r < 0 ? r : t
      );
    case 'outer':
      return (
        (t = 12), et(r) && r.endsWith('%') ? (parseFloat(r) * 0.01 < 0 ? t : r) : r > 0 ? r : t
      );
    default:
      return r;
  }
}
function Ts(e, r) {
  return Gc(yi(e, r), function (t) {
    return t[r] === 0;
  });
}
function nR(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = t.angleField,
    a = t.colorField,
    o = t.color,
    s = t.pieStyle,
    l = t.shape,
    u = yi(n, i);
  if (Ts(u, i)) {
    var c = '$$percentage$$';
    (u = u.map(function (f) {
      var v;
      return x(x({}, f), ((v = {}), (v[c] = 1 / u.length), v));
    })),
      r.data(u);
    var h = O({}, e, {
      options: {
        xField: '1',
        yField: c,
        seriesField: a,
        isStack: !0,
        interval: { color: o, shape: l, style: s },
        args: { zIndexReversed: !0, sortZIndex: !0 },
      },
    });
    ee(h);
  } else {
    r.data(u);
    var h = O({}, e, {
      options: {
        xField: '1',
        yField: i,
        seriesField: a,
        isStack: !0,
        interval: { color: o, shape: l, style: s },
        args: { zIndexReversed: !0, sortZIndex: !0 },
      },
    });
    ee(h);
  }
  return e;
}
function iR(e) {
  var r,
    t = e.chart,
    n = e.options,
    i = n.meta,
    a = n.colorField,
    o = O({}, i);
  return t.scale(o, ((r = {}), (r[a] = { type: 'cat' }), r)), e;
}
function aR(e) {
  var r = e.chart,
    t = e.options,
    n = t.radius,
    i = t.innerRadius,
    a = t.startAngle,
    o = t.endAngle;
  return (
    r.coordinate({ type: 'theta', cfg: { radius: n, innerRadius: i, startAngle: a, endAngle: o } }),
    e
  );
}
function oR(e) {
  var r = e.chart,
    t = e.options,
    n = t.label,
    i = t.colorField,
    a = t.angleField,
    o = r.geometries[0];
  if (!n) o.label(!1);
  else {
    var s = n.callback,
      l = wt(n, ['callback']),
      u = jt(l);
    if (u.content) {
      var c = u.content;
      u.content = function (d, p, g) {
        var y = d[i],
          m = d[a],
          b = r.getScaleByField(a),
          w = b == null ? void 0 : b.scale(m);
        return U(c)
          ? c(x(x({}, d), { percent: w }), p, g)
          : et(c)
          ? sx(c, {
              value: m,
              name: y,
              percentage: at(w) && !$(m) ? ''.concat((w * 100).toFixed(2), '%') : null,
            })
          : c;
      };
    }
    var h = { inner: '', outer: 'pie-outer', spider: 'pie-spider' },
      f = u.type ? h[u.type] : 'pie-outer',
      v = u.layout ? (N(u.layout) ? u.layout : [u.layout]) : [];
    (u.layout = (f ? [{ type: f }] : []).concat(v)),
      o.label({
        fields: i ? [a, i] : [a],
        callback: s,
        cfg: x(x({}, u), { offset: rR(u.type, u.offset), type: 'pie' }),
      });
  }
  return e;
}
function Wx(e) {
  var r = e.innerRadius,
    t = e.statistic,
    n = e.angleField,
    i = e.colorField,
    a = e.meta,
    o = e.locale,
    s = Al(o);
  if (r && t) {
    var l = O({}, Hx.statistic, t),
      u = l.title,
      c = l.content;
    return (
      u !== !1 &&
        (u = O(
          {},
          {
            formatter: function (h) {
              var f = h ? h[i] : $(u.content) ? s.get(['statistic', 'total']) : u.content,
                v =
                  A(a, [i, 'formatter']) ||
                  function (d) {
                    return d;
                  };
              return v(f);
            },
          },
          u,
        )),
      c !== !1 &&
        (c = O(
          {},
          {
            formatter: function (h, f) {
              var v = h ? h[n] : eR(f, n),
                d =
                  A(a, [n, 'formatter']) ||
                  function (p) {
                    return p;
                  };
              return h || $(c.content) ? d(v) : c.content;
            },
          },
          c,
        )),
      O({}, { statistic: { title: u, content: c } }, e)
    );
  }
  return e;
}
function Xx(e) {
  var r = e.chart,
    t = e.options,
    n = Wx(t),
    i = n.innerRadius,
    a = n.statistic;
  return (
    r.getController('annotation').clear(!0),
    it(Pt())(e),
    i && a && Cl(r, { statistic: a, plotType: 'pie' }),
    e
  );
}
function sR(e) {
  var r = e.chart,
    t = e.options,
    n = t.tooltip,
    i = t.colorField,
    a = t.angleField,
    o = t.data;
  if (n === !1) r.tooltip(n);
  else if ((r.tooltip(O({}, n, { shared: !1 })), Ts(o, a))) {
    var s = A(n, 'fields'),
      l = A(n, 'formatter');
    ye(A(n, 'fields')) &&
      ((s = [i, a]),
      (l =
        l ||
        function (u) {
          return { name: u[i], value: Xa(u[a]) };
        })),
      r.geometries[0].tooltip(s.join('*'), qn(s, l));
  }
  return e;
}
function lR(e) {
  var r = e.chart,
    t = e.options,
    n = Wx(t),
    i = n.interactions,
    a = n.statistic,
    o = n.annotations;
  return (
    M(i, function (s) {
      var l, u;
      if (s.enable === !1) r.removeInteraction(s.type);
      else if (s.type === 'pie-statistic-active') {
        var c = [];
        (!((l = s.cfg) === null || l === void 0) && l.start) ||
          (c = [
            {
              trigger: 'element:mouseenter',
              action: ''.concat(Yx, ':change'),
              arg: { statistic: a, annotations: o },
            },
          ]),
          M((u = s.cfg) === null || u === void 0 ? void 0 : u.start, function (h) {
            c.push(x(x({}, h), { arg: { statistic: a, annotations: o } }));
          }),
          r.interaction(s.type, O({}, s.cfg, { start: c }));
      } else r.interaction(s.type, s.cfg || {});
    }),
    e
  );
}
function _x(e) {
  return it(Ie('pieStyle'), nR, iR, vt, aR, Ii, sR, oR, on, Xx, lR, St)(e);
}
var jx = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'pie'), t;
    }
    return (
      (r.getDefaultOptions = function () {
        return Hx;
      }),
      (r.prototype.changeData = function (t) {
        this.chart.emit(
          ut.BEFORE_CHANGE_DATA,
          Lt.fromData(this.chart, ut.BEFORE_CHANGE_DATA, null),
        );
        var n = this.options,
          i = this.options.angleField,
          a = yi(n.data, i),
          o = yi(t, i);
        Ts(a, i) || Ts(o, i)
          ? this.update({ data: t })
          : (this.updateOption({ data: t }),
            this.chart.data(o),
            Xx({ chart: this.chart, options: this.options }),
            this.chart.render(!0)),
          this.chart.emit(
            ut.AFTER_CHANGE_DATA,
            Lt.fromData(this.chart, ut.AFTER_CHANGE_DATA, null),
          );
      }),
      (r.prototype.getDefaultOptions = function () {
        return r.getDefaultOptions();
      }),
      (r.prototype.getSchemaAdaptor = function () {
        return _x;
      }),
      r
    );
  })(lt),
  Ux = ['#FAAD14', '#E8EDF3'],
  uR = { percent: 0.2, color: Ux, animation: {} };
function vf(e) {
  var r = Tt(Bn(e) ? e : 0, 0, 1);
  return [
    { current: ''.concat(r), type: 'current', percent: r },
    { current: ''.concat(r), type: 'target', percent: 1 },
  ];
}
function qx(e) {
  var r = e.chart,
    t = e.options,
    n = t.percent,
    i = t.progressStyle,
    a = t.color,
    o = t.barWidthRatio;
  r.data(vf(n));
  var s = O({}, e, {
    options: {
      xField: 'current',
      yField: 'percent',
      seriesField: 'type',
      widthRatio: o,
      interval: { style: i, color: et(a) ? [a, Ux[1]] : a },
      args: { zIndexReversed: !0, sortZIndex: !0 },
    },
  });
  return ee(s), r.tooltip(!1), r.axis(!1), r.legend(!1), e;
}
function cR(e) {
  var r = e.chart;
  return r.coordinate('rect').transpose(), e;
}
function Zx(e) {
  return it(qx, Rt({}), cR, St, vt, Pt())(e);
}
var hR = (function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'process'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return uR;
    }),
    (r.prototype.changeData = function (t) {
      this.updateOption({ percent: t }), this.chart.changeData(vf(t));
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return Zx;
    }),
    r
  );
})(lt);
function fR(e) {
  var r = e.chart,
    t = e.options,
    n = t.innerRadius,
    i = t.radius;
  return r.coordinate('theta', { innerRadius: n, radius: i }), e;
}
function Kx(e, r) {
  var t = e.chart,
    n = e.options,
    i = n.innerRadius,
    a = n.statistic,
    o = n.percent,
    s = n.meta;
  if ((t.getController('annotation').clear(!0), i && a)) {
    var l =
        A(s, ['percent', 'formatter']) ||
        function (c) {
          return ''.concat((c * 100).toFixed(2), '%');
        },
      u = a.content;
    u && (u = O({}, u, { content: $(u.content) ? l(o) : u.content })),
      Cl(t, { statistic: x(x({}, a), { content: u }), plotType: 'ring-progress' }, { percent: o });
  }
  return r && t.render(!0), e;
}
function Qx(e) {
  return it(qx, Rt({}), fR, Kx, St, vt, Pt())(e);
}
var vR = {
    percent: 0.2,
    innerRadius: 0.8,
    radius: 0.98,
    color: ['#FAAD14', '#E8EDF3'],
    statistic: {
      title: !1,
      content: {
        style: {
          fontSize: '14px',
          fontWeight: 300,
          fill: '#4D4D4D',
          textAlign: 'center',
          textBaseline: 'middle',
        },
      },
    },
    animation: {},
  },
  dR = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'ring-process'), t;
    }
    return (
      (r.getDefaultOptions = function () {
        return vR;
      }),
      (r.prototype.changeData = function (t) {
        this.chart.emit(
          ut.BEFORE_CHANGE_DATA,
          Lt.fromData(this.chart, ut.BEFORE_CHANGE_DATA, null),
        ),
          this.updateOption({ percent: t }),
          this.chart.data(vf(t)),
          Kx({ chart: this.chart, options: this.options }, !0),
          this.chart.emit(
            ut.AFTER_CHANGE_DATA,
            Lt.fromData(this.chart, ut.AFTER_CHANGE_DATA, null),
          );
      }),
      (r.prototype.getDefaultOptions = function () {
        return r.getDefaultOptions();
      }),
      (r.prototype.getSchemaAdaptor = function () {
        return Qx;
      }),
      r
    );
  })(lt);
function tn(e, r) {
  return pR(e) || gR(e, r) || yR();
}
function pR(e) {
  if (Array.isArray(e)) return e;
}
function gR(e, r) {
  var t = [],
    n = !0,
    i = !1,
    a = void 0;
  try {
    for (
      var o = e[Symbol.iterator](), s;
      !(n = (s = o.next()).done) && (t.push(s.value), !(r && t.length === r));
      n = !0
    );
  } catch (l) {
    (i = !0), (a = l);
  } finally {
    try {
      !n && o.return != null && o.return();
    } finally {
      if (i) throw a;
    }
  }
  return t;
}
function yR() {
  throw new TypeError('Invalid attempt to destructure non-iterable instance');
}
function df(e, r, t, n) {
  (e = e.filter(function (d, p) {
    var g = r(d, p),
      y = t(d, p);
    return g != null && isFinite(g) && y != null && isFinite(y);
  })),
    n &&
      e.sort(function (d, p) {
        return r(d) - r(p);
      });
  for (
    var i = e.length,
      a = new Float64Array(i),
      o = new Float64Array(i),
      s = 0,
      l = 0,
      u,
      c,
      h,
      f = 0;
    f < i;

  )
    (h = e[f]),
      (a[f] = u = +r(h, f, e)),
      (o[f] = c = +t(h, f, e)),
      ++f,
      (s += (u - s) / f),
      (l += (c - l) / f);
  for (var v = 0; v < i; ++v) (a[v] -= s), (o[v] -= l);
  return [a, o, s, l];
}
function Hn(e, r, t, n) {
  for (var i = 0, a = 0, o = e.length; a < o; a++) {
    var s = e[a],
      l = +r(s, a, e),
      u = +t(s, a, e);
    l != null && isFinite(l) && u != null && isFinite(u) && n(l, u, i++);
  }
}
function Pi(e, r, t, n, i) {
  var a = 0,
    o = 0;
  return (
    Hn(e, r, t, function (s, l) {
      var u = l - i(s),
        c = l - n;
      (a += u * u), (o += c * c);
    }),
    1 - a / o
  );
}
function Ep(e) {
  return (Math.atan2(e[1][1] - e[0][1], e[1][0] - e[0][0]) * 180) / Math.PI;
}
function mR(e) {
  return [(e[0][0] + e[1][0]) / 2, (e[0][1] + e[1][1]) / 2];
}
function io(e, r, t) {
  for (
    var n = (Math.log(r - e) * Math.LOG10E + 1) | 0,
      i = 1 * Math.pow(10, -n / 2 - 1),
      a = 1e4,
      o = [l(e), l(r)],
      s = 0;
    u(o) && s < a;

  );
  return o;
  function l(c) {
    return [c, t(c)];
  }
  function u(c) {
    s++;
    for (var h = c.length, f = !1, v = 0; v < h - 1; v++) {
      var d = c[v],
        p = c[v + 1],
        g = mR([d, p]),
        y = l(g[0]),
        m = Ep([d, g]),
        b = Ep([d, y]),
        w = Math.abs(m - b);
      w > i && (c.splice(v + 1, 0, y), (f = !0));
    }
    return f;
  }
}
function ao(e, r, t, n) {
  var i = n - e * e,
    a = Math.abs(i) < 1e-24 ? 0 : (t - e * r) / i,
    o = r - a * e;
  return [o, a];
}
function xR() {
  var e = function (a) {
      return a[0];
    },
    r = function (a) {
      return a[1];
    },
    t;
  function n(i) {
    var a = 0,
      o = 0,
      s = 0,
      l = 0,
      u = 0,
      c = 0,
      h = t ? +t[0] : 1 / 0,
      f = t ? +t[1] : -1 / 0;
    Hn(i, e, r, function (b, w) {
      var S = Math.log(w),
        C = b * w;
      ++a,
        (o += (w - o) / a),
        (l += (C - l) / a),
        (c += (b * C - c) / a),
        (s += (w * S - s) / a),
        (u += (C * S - u) / a),
        t || (b < h && (h = b), b > f && (f = b));
    });
    var v = ao(l / o, s / o, u / o, c / o),
      d = tn(v, 2),
      p = d[0],
      g = d[1];
    p = Math.exp(p);
    var y = function (w) {
        return p * Math.exp(g * w);
      },
      m = io(h, f, y);
    return (m.a = p), (m.b = g), (m.predict = y), (m.rSquared = Pi(i, e, r, o, y)), m;
  }
  return (
    (n.domain = function (i) {
      return arguments.length ? ((t = i), n) : t;
    }),
    (n.x = function (i) {
      return arguments.length ? ((e = i), n) : e;
    }),
    (n.y = function (i) {
      return arguments.length ? ((r = i), n) : r;
    }),
    n
  );
}
function Jx() {
  var e = function (a) {
      return a[0];
    },
    r = function (a) {
      return a[1];
    },
    t;
  function n(i) {
    var a = 0,
      o = 0,
      s = 0,
      l = 0,
      u = 0,
      c = t ? +t[0] : 1 / 0,
      h = t ? +t[1] : -1 / 0;
    Hn(i, e, r, function (m, b) {
      ++a,
        (o += (m - o) / a),
        (s += (b - s) / a),
        (l += (m * b - l) / a),
        (u += (m * m - u) / a),
        t || (m < c && (c = m), m > h && (h = m));
    });
    var f = ao(o, s, l, u),
      v = tn(f, 2),
      d = v[0],
      p = v[1],
      g = function (b) {
        return p * b + d;
      },
      y = [
        [c, g(c)],
        [h, g(h)],
      ];
    return (y.a = p), (y.b = d), (y.predict = g), (y.rSquared = Pi(i, e, r, s, g)), y;
  }
  return (
    (n.domain = function (i) {
      return arguments.length ? ((t = i), n) : t;
    }),
    (n.x = function (i) {
      return arguments.length ? ((e = i), n) : e;
    }),
    (n.y = function (i) {
      return arguments.length ? ((r = i), n) : r;
    }),
    n
  );
}
function wR(e) {
  e.sort(function (t, n) {
    return t - n;
  });
  var r = e.length / 2;
  return r % 1 === 0 ? (e[r - 1] + e[r]) / 2 : e[Math.floor(r)];
}
var Tp = 2,
  kp = 1e-12;
function bR() {
  var e = function (a) {
      return a[0];
    },
    r = function (a) {
      return a[1];
    },
    t = 0.3;
  function n(i) {
    for (
      var a = df(i, e, r, !0),
        o = tn(a, 4),
        s = o[0],
        l = o[1],
        u = o[2],
        c = o[3],
        h = s.length,
        f = Math.max(2, ~~(t * h)),
        v = new Float64Array(h),
        d = new Float64Array(h),
        p = new Float64Array(h).fill(1),
        g = -1;
      ++g <= Tp;

    ) {
      for (var y = [0, f - 1], m = 0; m < h; ++m) {
        for (
          var b = s[m],
            w = y[0],
            S = y[1],
            C = b - s[w] > s[S] - b ? w : S,
            F = 0,
            E = 0,
            I = 0,
            T = 0,
            P = 0,
            R = 1 / Math.abs(s[C] - b || 1),
            B = w;
          B <= S;
          ++B
        ) {
          var G = s[B],
            j = l[B],
            D = SR(Math.abs(b - G) * R) * p[B],
            z = G * D;
          (F += D), (E += z), (I += j * D), (T += j * z), (P += G * z);
        }
        var X = ao(E / F, I / F, T / F, P / F),
          Y = tn(X, 2),
          V = Y[0],
          W = Y[1];
        (v[m] = V + W * b), (d[m] = Math.abs(l[m] - v[m])), CR(s, m + 1, y);
      }
      if (g === Tp) break;
      var tt = wR(d);
      if (Math.abs(tt) < kp) break;
      for (var rt = 0, Z, K; rt < h; ++rt)
        (Z = d[rt] / (6 * tt)), (p[rt] = Z >= 1 ? kp : (K = 1 - Z * Z) * K);
    }
    return MR(s, v, u, c);
  }
  return (
    (n.bandwidth = function (i) {
      return arguments.length ? ((t = i), n) : t;
    }),
    (n.x = function (i) {
      return arguments.length ? ((e = i), n) : e;
    }),
    (n.y = function (i) {
      return arguments.length ? ((r = i), n) : r;
    }),
    n
  );
}
function SR(e) {
  return (e = 1 - e * e * e) * e * e;
}
function CR(e, r, t) {
  var n = e[r],
    i = t[0],
    a = t[1] + 1;
  if (!(a >= e.length)) for (; r > i && e[a] - n <= n - e[i]; ) (t[0] = ++i), (t[1] = a), ++a;
}
function MR(e, r, t, n) {
  for (var i = e.length, a = [], o = 0, s = 0, l = [], u; o < i; ++o)
    (u = e[o] + t),
      l[0] === u
        ? (l[1] += (r[o] - l[1]) / ++s)
        : ((s = 0), (l[1] += n), (l = [u, r[o]]), a.push(l));
  return (l[1] += n), a;
}
function AR() {
  var e = function (o) {
      return o[0];
    },
    r = function (o) {
      return o[1];
    },
    t = Math.E,
    n;
  function i(a) {
    var o = 0,
      s = 0,
      l = 0,
      u = 0,
      c = 0,
      h = n ? +n[0] : 1 / 0,
      f = n ? +n[1] : -1 / 0,
      v = Math.log(t);
    Hn(a, e, r, function (w, S) {
      var C = Math.log(w) / v;
      ++o,
        (s += (C - s) / o),
        (l += (S - l) / o),
        (u += (C * S - u) / o),
        (c += (C * C - c) / o),
        n || (w < h && (h = w), w > f && (f = w));
    });
    var d = ao(s, l, u, c),
      p = tn(d, 2),
      g = p[0],
      y = p[1],
      m = function (S) {
        return (y * Math.log(S)) / v + g;
      },
      b = io(h, f, m);
    return (b.a = y), (b.b = g), (b.predict = m), (b.rSquared = Pi(a, e, r, l, m)), b;
  }
  return (
    (i.domain = function (a) {
      return arguments.length ? ((n = a), i) : n;
    }),
    (i.x = function (a) {
      return arguments.length ? ((e = a), i) : e;
    }),
    (i.y = function (a) {
      return arguments.length ? ((r = a), i) : r;
    }),
    (i.base = function (a) {
      return arguments.length ? ((t = a), i) : t;
    }),
    i
  );
}
function t1() {
  var e = function (a) {
      return a[0];
    },
    r = function (a) {
      return a[1];
    },
    t;
  function n(i) {
    var a = df(i, e, r),
      o = tn(a, 4),
      s = o[0],
      l = o[1],
      u = o[2],
      c = o[3],
      h = s.length,
      f = 0,
      v = 0,
      d = 0,
      p = 0,
      g = 0,
      y,
      m,
      b,
      w;
    for (y = 0; y < h; )
      (m = s[y]),
        (b = l[y++]),
        (w = m * m),
        (f += (w - f) / y),
        (v += (w * m - v) / y),
        (d += (w * w - d) / y),
        (p += (m * b - p) / y),
        (g += (w * b - g) / y);
    var S = 0,
      C = 0,
      F = t ? +t[0] : 1 / 0,
      E = t ? +t[1] : -1 / 0;
    Hn(i, e, r, function (D, z) {
      C++, (S += (z - S) / C), t || (D < F && (F = D), D > E && (E = D));
    });
    var I = d - f * f,
      T = f * I - v * v,
      P = (g * f - p * v) / T,
      R = (p * I - g * v) / T,
      B = -P * f,
      G = function (z) {
        return (z = z - u), P * z * z + R * z + B + c;
      },
      j = io(F, E, G);
    return (
      (j.a = P),
      (j.b = R - 2 * P * u),
      (j.c = B - R * u + P * u * u + c),
      (j.predict = G),
      (j.rSquared = Pi(i, e, r, S, G)),
      j
    );
  }
  return (
    (n.domain = function (i) {
      return arguments.length ? ((t = i), n) : t;
    }),
    (n.x = function (i) {
      return arguments.length ? ((e = i), n) : e;
    }),
    (n.y = function (i) {
      return arguments.length ? ((r = i), n) : r;
    }),
    n
  );
}
function FR() {
  var e = function (o) {
      return o[0];
    },
    r = function (o) {
      return o[1];
    },
    t = 3,
    n;
  function i(a) {
    if (t === 1) {
      var o = Jx().x(e).y(r).domain(n)(a);
      return (o.coefficients = [o.b, o.a]), delete o.a, delete o.b, o;
    }
    if (t === 2) {
      var s = t1().x(e).y(r).domain(n)(a);
      return (s.coefficients = [s.c, s.b, s.a]), delete s.a, delete s.b, delete s.c, s;
    }
    var l = df(a, e, r),
      u = tn(l, 4),
      c = u[0],
      h = u[1],
      f = u[2],
      v = u[3],
      d = c.length,
      p = [],
      g = [],
      y = t + 1,
      m = 0,
      b = 0,
      w = n ? +n[0] : 1 / 0,
      S = n ? +n[1] : -1 / 0;
    Hn(a, e, r, function (G, j) {
      ++b, (m += (j - m) / b), n || (G < w && (w = G), G > S && (S = G));
    });
    var C, F, E, I, T;
    for (C = 0; C < y; ++C) {
      for (E = 0, I = 0; E < d; ++E) I += Math.pow(c[E], C) * h[E];
      for (p.push(I), T = new Float64Array(y), F = 0; F < y; ++F) {
        for (E = 0, I = 0; E < d; ++E) I += Math.pow(c[E], C + F);
        T[F] = I;
      }
      g.push(T);
    }
    g.push(p);
    var P = TR(g),
      R = function (j) {
        j -= f;
        var D = v + P[0] + P[1] * j + P[2] * j * j;
        for (C = 3; C < y; ++C) D += P[C] * Math.pow(j, C);
        return D;
      },
      B = io(w, S, R);
    return (B.coefficients = ER(y, P, -f, v)), (B.predict = R), (B.rSquared = Pi(a, e, r, m, R)), B;
  }
  return (
    (i.domain = function (a) {
      return arguments.length ? ((n = a), i) : n;
    }),
    (i.x = function (a) {
      return arguments.length ? ((e = a), i) : e;
    }),
    (i.y = function (a) {
      return arguments.length ? ((r = a), i) : r;
    }),
    (i.order = function (a) {
      return arguments.length ? ((t = a), i) : t;
    }),
    i
  );
}
function ER(e, r, t, n) {
  var i = Array(e),
    a,
    o,
    s,
    l;
  for (a = 0; a < e; ++a) i[a] = 0;
  for (a = e - 1; a >= 0; --a)
    for (s = r[a], l = 1, i[a] += s, o = 1; o <= a; ++o)
      (l *= (a + 1 - o) / o), (i[a - o] += s * Math.pow(t, o) * l);
  return (i[0] += n), i;
}
function TR(e) {
  var r = e.length - 1,
    t = [],
    n,
    i,
    a,
    o,
    s;
  for (n = 0; n < r; ++n) {
    for (o = n, i = n + 1; i < r; ++i) Math.abs(e[n][i]) > Math.abs(e[n][o]) && (o = i);
    for (a = n; a < r + 1; ++a) (s = e[a][n]), (e[a][n] = e[a][o]), (e[a][o] = s);
    for (i = n + 1; i < r; ++i) for (a = r; a >= n; a--) e[a][i] -= (e[a][n] * e[n][i]) / e[n][n];
  }
  for (i = r - 1; i >= 0; --i) {
    for (s = 0, a = i + 1; a < r; ++a) s += e[a][i] * t[a];
    t[i] = (e[r][i] - s) / e[i][i];
  }
  return t;
}
function kR() {
  var e = function (a) {
      return a[0];
    },
    r = function (a) {
      return a[1];
    },
    t;
  function n(i) {
    var a = 0,
      o = 0,
      s = 0,
      l = 0,
      u = 0,
      c = 0,
      h = t ? +t[0] : 1 / 0,
      f = t ? +t[1] : -1 / 0;
    Hn(i, e, r, function (b, w) {
      var S = Math.log(b),
        C = Math.log(w);
      ++a,
        (o += (S - o) / a),
        (s += (C - s) / a),
        (l += (S * C - l) / a),
        (u += (S * S - u) / a),
        (c += (w - c) / a),
        t || (b < h && (h = b), b > f && (f = b));
    });
    var v = ao(o, s, l, u),
      d = tn(v, 2),
      p = d[0],
      g = d[1];
    p = Math.exp(p);
    var y = function (w) {
        return p * Math.pow(w, g);
      },
      m = io(h, f, y);
    return (m.a = p), (m.b = g), (m.predict = y), (m.rSquared = Pi(i, e, r, c, y)), m;
  }
  return (
    (n.domain = function (i) {
      return arguments.length ? ((t = i), n) : t;
    }),
    (n.x = function (i) {
      return arguments.length ? ((e = i), n) : e;
    }),
    (n.y = function (i) {
      return arguments.length ? ((r = i), n) : r;
    }),
    n
  );
}
var IR = { exp: xR, linear: Jx, loess: bR, log: AR, poly: FR, pow: kR, quad: t1 };
function LR(e, r) {
  var t = 10,
    n = {
      regionStyle: [
        {
          position: { start: [e, 'max'], end: ['max', r] },
          style: { fill: '#d8d0c0', opacity: 0.4 },
        },
        {
          position: { start: ['min', 'max'], end: [e, r] },
          style: { fill: '#a3dda1', opacity: 0.4 },
        },
        {
          position: { start: ['min', r], end: [e, 'min'] },
          style: { fill: '#d8d0c0', opacity: 0.4 },
        },
        {
          position: { start: [e, r], end: ['max', 'min'] },
          style: { fill: '#a3dda1', opacity: 0.4 },
        },
      ],
      lineStyle: { stroke: '#9ba29a', lineWidth: 1 },
      labelStyle: [
        {
          position: ['max', r],
          offsetX: -t,
          offsetY: -t,
          style: { textAlign: 'right', textBaseline: 'bottom', fontSize: 14, fill: '#ccc' },
        },
        {
          position: ['min', r],
          offsetX: t,
          offsetY: -t,
          style: { textAlign: 'left', textBaseline: 'bottom', fontSize: 14, fill: '#ccc' },
        },
        {
          position: ['min', r],
          offsetX: t,
          offsetY: t,
          style: { textAlign: 'left', textBaseline: 'top', fontSize: 14, fill: '#ccc' },
        },
        {
          position: ['max', r],
          offsetX: -t,
          offsetY: t,
          style: { textAlign: 'right', textBaseline: 'top', fontSize: 14, fill: '#ccc' },
        },
      ],
    };
  return n;
}
var PR = function (e, r) {
    var t = r.view,
      n = r.options,
      i = n.xField,
      a = n.yField,
      o = t.getScaleByField(i),
      s = t.getScaleByField(a),
      l = e.map(function (u) {
        return t.getCoordinate().convert({ x: o.scale(u[0]), y: s.scale(u[1]) });
      });
    return XO(l, !1);
  },
  OR = function (e) {
    var r = e.options,
      t = r.xField,
      n = r.yField,
      i = r.data,
      a = r.regressionLine,
      o = a.type,
      s = o === void 0 ? 'linear' : o,
      l = a.algorithm,
      u = a.equation,
      c,
      h = null;
    if (l) (c = N(l) ? l : l(i)), (h = u);
    else {
      var f = IR[s]()
        .x(function (v) {
          return v[t];
        })
        .y(function (v) {
          return v[n];
        });
      (c = f(i)), (h = BR(s, c));
    }
    return [PR(c, e), h];
  },
  DR = function (e) {
    var r,
      t = e.meta,
      n = t === void 0 ? {} : t,
      i = e.xField,
      a = e.yField,
      o = e.data,
      s = o[0][i],
      l = o[0][a],
      u = s > 0,
      c = l > 0;
    function h(f, v) {
      var d = A(n, [f]);
      function p(y) {
        return A(d, y);
      }
      var g = {};
      return v === 'x'
        ? (at(s) &&
            (at(p('min')) || (g.min = u ? 0 : s * 2), at(p('max')) || (g.max = u ? s * 2 : 0)),
          g)
        : (at(l) &&
            (at(p('min')) || (g.min = c ? 0 : l * 2), at(p('max')) || (g.max = c ? l * 2 : 0)),
          g);
    }
    return x(
      x({}, n),
      ((r = {}), (r[i] = x(x({}, n[i]), h(i, 'x'))), (r[a] = x(x({}, n[a]), h(a, 'y'))), r),
    );
  };
function BR(e, r) {
  var t,
    n,
    i,
    a = function (u, c) {
      return c === void 0 && (c = 4), Math.round(u * Math.pow(10, c)) / Math.pow(10, c);
    },
    o = function (u) {
      return Number.isFinite(u) ? a(u) : '?';
    };
  switch (e) {
    case 'linear':
      return 'y = '.concat(o(r.a), 'x + ').concat(o(r.b), ', R^2 = ').concat(o(r.rSquared));
    case 'exp':
      return 'y = '.concat(o(r.a), 'e^(').concat(o(r.b), 'x), R^2 = ').concat(o(r.rSquared));
    case 'log':
      return 'y = '.concat(o(r.a), 'ln(x) + ').concat(o(r.b), ', R^2 = ').concat(o(r.rSquared));
    case 'quad':
      return 'y = '
        .concat(o(r.a), 'x^2 + ')
        .concat(o(r.b), 'x + ')
        .concat(o(r.c), ', R^2 = ')
        .concat(o(r.rSquared));
    case 'poly':
      for (
        var s = 'y = '
            .concat(o((t = r.coefficients) === null || t === void 0 ? void 0 : t[0]), ' + ')
            .concat(o((n = r.coefficients) === null || n === void 0 ? void 0 : n[1]), 'x + ')
            .concat(o((i = r.coefficients) === null || i === void 0 ? void 0 : i[2]), 'x^2'),
          l = 3;
        l < r.coefficients.length;
        ++l
      )
        s += ' + '.concat(o(r.coefficients[l]), 'x^').concat(l);
      return ''.concat(s, ', R^2 = ').concat(o(r.rSquared));
    case 'pow':
      return 'y = '.concat(o(r.a), 'x^').concat(o(r.b), ', R^2 = ').concat(o(r.rSquared));
  }
  return null;
}
function e1(e) {
  var r = e.data,
    t = r === void 0 ? [] : r,
    n = e.xField,
    i = e.yField;
  if (t.length) {
    for (
      var a = !0, o = !0, s = t[0], l = void 0, u = 1;
      u < t.length &&
      ((l = t[u]), s[n] !== l[n] && (a = !1), s[i] !== l[i] && (o = !1), !(!a && !o));
      u++
    )
      s = l;
    var c = [];
    a && c.push(n), o && c.push(i);
    var h = mt(DR(e), c);
    return O({}, e, { meta: h });
  }
  return e;
}
function RR(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = t.type,
    a = t.color,
    o = t.shape,
    s = t.pointStyle,
    l = t.shapeField,
    u = t.colorField,
    c = t.xField,
    h = t.yField,
    f = t.sizeField,
    v = t.size,
    d = t.tooltip;
  f && (v || (v = [2, 8]), at(v) && (v = [v, v])),
    d && !d.fields && (d = x(x({}, d), { fields: [c, h, u, f, l] })),
    r.data(n),
    Le(
      O({}, e, {
        options: { seriesField: u, point: { color: a, shape: o, size: v, style: s }, tooltip: d },
      }),
    );
  var p = te(r, 'point');
  return i && p.adjust(i), e;
}
function Qo(e) {
  var r,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = t.xField,
    o = t.yField,
    s = e1(t);
  return it(Rt(((r = {}), (r[a] = n), (r[o] = i), r)))(O({}, e, { options: s }));
}
function $R(e) {
  var r = e.chart,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = t.xField,
    o = t.yField;
  return r.axis(a, n), r.axis(o, i), e;
}
function NR(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend,
    i = t.colorField,
    a = t.shapeField,
    o = t.sizeField,
    s = t.shapeLegend,
    l = t.sizeLegend,
    u = n !== !1;
  return (
    i && r.legend(i, u ? n : !1),
    a && (s ? r.legend(a, s) : r.legend(a, s === !1 ? !1 : n)),
    o && r.legend(o, l || !1),
    !u && !s && !l && r.legend(!1),
    e
  );
}
function zR(e) {
  var r = e.chart,
    t = e.options,
    n = t.label,
    i = t.yField,
    a = te(r, 'point');
  if (!n) a.label(!1);
  else {
    var o = n.callback,
      s = wt(n, ['callback']);
    a.label({ fields: [i], callback: o, cfg: jt(s) });
  }
  return e;
}
function GR(e) {
  var r = e.options,
    t = r.quadrant,
    n = [];
  if (t) {
    var i = t.xBaseline,
      a = i === void 0 ? 0 : i,
      o = t.yBaseline,
      s = o === void 0 ? 0 : o,
      l = t.labels,
      u = t.regionStyle,
      c = t.lineStyle,
      h = LR(a, s),
      f = new Array(4).join(',').split(',');
    f.forEach(function (v, d) {
      n.push(
        x(x({ type: 'region', top: !1 }, h.regionStyle[d].position), {
          style: O({}, h.regionStyle[d].style, u == null ? void 0 : u[d]),
        }),
        x({ type: 'text', top: !0 }, O({}, h.labelStyle[d], l == null ? void 0 : l[d])),
      );
    }),
      n.push(
        { type: 'line', top: !1, start: ['min', s], end: ['max', s], style: O({}, h.lineStyle, c) },
        { type: 'line', top: !1, start: [a, 'min'], end: [a, 'max'], style: O({}, h.lineStyle, c) },
      );
  }
  return it(Pt(n))(e);
}
function VR(e) {
  var r = e.options,
    t = e.chart,
    n = r.regressionLine;
  if (n) {
    var i = n.style,
      a = n.equationStyle,
      o = a === void 0 ? {} : a,
      s = n.top,
      l = s === void 0 ? !1 : s,
      u = n.showEquation,
      c = u === void 0 ? !1 : u,
      h = { stroke: '#9ba29a', lineWidth: 2, opacity: 0.5 },
      f = {
        x: 20,
        y: 20,
        textAlign: 'left',
        textBaseline: 'middle',
        fontSize: 14,
        fillOpacity: 0.5,
      };
    t.annotation().shape({
      top: l,
      render: function (v, d) {
        var p = v.addGroup({
            id: ''.concat(t.id, '-regression-line'),
            name: 'regression-line-group',
          }),
          g = OR({ view: d, options: r }),
          y = g[0],
          m = g[1];
        p.addShape('path', { name: 'regression-line', attrs: x(x({ path: y }, h), i) }),
          c &&
            p.addShape('text', {
              name: 'regression-equation',
              attrs: x(x(x({}, f), o), { text: m }),
            });
      },
    });
  }
  return e;
}
function HR(e) {
  var r = e.chart,
    t = e.options,
    n = t.tooltip;
  return n ? r.tooltip(n) : n === !1 && r.tooltip(!1), e;
}
function r1(e) {
  return it(RR, Qo, $R, NR, HR, zR, Cx, ro, af, It, GR, St, vt, VR)(e);
}
var YR = O({}, lt.getDefaultOptions(), {
  size: 4,
  tooltip: { showTitle: !1, showMarkers: !1, showCrosshairs: !0, crosshairs: { type: 'xy' } },
});
ot('drag-move', {
  start: [{ trigger: 'plot:mousedown', action: 'scale-translate:start' }],
  processing: [
    {
      trigger: 'plot:mousemove',
      action: 'scale-translate:translate',
      throttle: { wait: 100, leading: !0, trailing: !1 },
    },
  ],
  end: [{ trigger: 'plot:mouseup', action: 'scale-translate:end' }],
});
var WR = (function (e) {
    k(r, e);
    function r(t, n) {
      var i = e.call(this, t, n) || this;
      return (
        (i.type = 'scatter'),
        i.on(ut.BEFORE_RENDER, function (a) {
          var o,
            s,
            l = i,
            u = l.options,
            c = l.chart;
          if (((o = a.data) === null || o === void 0 ? void 0 : o.source) === he.FILTER) {
            var h = i.chart.filterData(i.chart.getData());
            Qo({ chart: c, options: x(x({}, u), { data: h }) });
          }
          ((s = a.data) === null || s === void 0 ? void 0 : s.source) === he.RESET &&
            Qo({ chart: c, options: u });
        }),
        i
      );
    }
    return (
      (r.getDefaultOptions = function () {
        return YR;
      }),
      (r.prototype.changeData = function (t) {
        this.updateOption(e1(O({}, this.options, { data: t })));
        var n = this,
          i = n.options,
          a = n.chart;
        Qo({ chart: a, options: i }), this.chart.changeData(t);
      }),
      (r.prototype.getSchemaAdaptor = function () {
        return r1;
      }),
      (r.prototype.getDefaultOptions = function () {
        return r.getDefaultOptions();
      }),
      r
    );
  })(lt),
  Na = '$$stock-range$$',
  Ol = 'trend',
  n1 = 'up',
  i1 = 'down',
  XR = {
    showMarkers: !1,
    showCrosshairs: !0,
    shared: !0,
    crosshairs: {
      type: 'xy',
      follow: !0,
      text: function (e, r, t) {
        var n;
        if (e === 'x') {
          var i = t[0];
          n = i ? i.title : r;
        } else n = r;
        return { position: e === 'y' ? 'start' : 'end', content: n, style: { fill: '#dfdfdf' } };
      },
      textBackground: { padding: [2, 4], style: { fill: '#666' } },
    },
  },
  _R = O({}, lt.getDefaultOptions(), {
    tooltip: XR,
    interactions: [{ type: 'tooltip' }],
    legend: { position: 'top-left' },
    risingFill: '#ef5350',
    fallingFill: '#26a69a',
  });
function a1(e, r) {
  return kt(e, function (t) {
    var n = t && x({}, t);
    if (N(r) && n) {
      var i = r[0],
        a = r[1],
        o = r[2],
        s = r[3];
      (n[Ol] = n[i] <= n[a] ? n1 : i1), (n[Na] = [n[i], n[a], n[o], n[s]]);
    }
    return n;
  });
}
function jR(e) {
  var r = e.chart,
    t = e.options,
    n = t.yField,
    i = t.data,
    a = t.risingFill,
    o = t.fallingFill,
    s = t.tooltip,
    l = t.stockStyle;
  r.data(a1(i, n));
  var u = s;
  return (
    u !== !1 && (u = O({}, { fields: n }, u)),
    of(
      O({}, e, {
        options: {
          schema: { shape: 'candle', color: [a, o], style: l },
          yField: Na,
          seriesField: Ol,
          rawFields: n,
          tooltip: u,
        },
      }),
    ),
    e
  );
}
function UR(e) {
  var r,
    t,
    n = e.chart,
    i = e.options,
    a = i.meta,
    o = i.xAxis,
    s = i.yAxis,
    l = i.xField,
    u = ((r = {}), (r[l] = { type: 'timeCat', tickCount: 6 }), (r[Ol] = { values: [n1, i1] }), r),
    c = O(u, a, ((t = {}), (t[l] = mt(o, pe)), (t[Na] = mt(s, pe)), t));
  return n.scale(c), e;
}
function qR(e) {
  var r = e.chart,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = t.xField;
  return n === !1 ? r.axis(a, !1) : r.axis(a, n), i === !1 ? r.axis(Na, !1) : r.axis(Na, i), e;
}
function ZR(e) {
  var r = e.chart,
    t = e.options,
    n = t.tooltip;
  return n !== !1 ? r.tooltip(n) : r.tooltip(!1), e;
}
function KR(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend;
  return n ? r.legend(Ol, n) : n === !1 && r.legend(!1), e;
}
function o1(e) {
  it(vt, jR, UR, qR, ZR, KR, It, St, Pt(), ro)(e);
}
var QR = (function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'stock'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return _R;
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return o1;
    }),
    (r.prototype.changeData = function (t) {
      this.updateOption({ data: t });
      var n = this.options.yField;
      this.chart.changeData(a1(t, n));
    }),
    r
  );
})(lt);
function Yn(e) {
  return kt(e || [], function (r, t) {
    return { x: ''.concat(t), y: r };
  });
}
var za = 'x',
  si = 'y',
  s1 = {
    showTitle: !1,
    shared: !0,
    showMarkers: !1,
    customContent: function (e, r) {
      return ''.concat(A(r, [0, 'data', 'y'], 0));
    },
    containerTpl: '<div class="g2-tooltip"><div class="g2-tooltip-list"></div></div>',
    itemTpl: '<span>{value}</span>',
    domStyles: { 'g2-tooltip': { padding: '2px 4px', fontSize: '10px' } },
    showCrosshairs: !0,
    crosshairs: { type: 'x' },
  },
  JR = { appendPadding: 2, tooltip: x({}, s1), animation: {} };
function t$(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = t.color,
    a = t.areaStyle,
    o = t.point,
    s = t.line,
    l = o == null ? void 0 : o.state,
    u = Yn(n);
  r.data(u);
  var c = O({}, e, {
      options: { xField: za, yField: si, area: { color: i, style: a }, line: s, point: o },
    }),
    h = O({}, c, { options: { tooltip: !1 } }),
    f = O({}, c, { options: { tooltip: !1, state: l } });
  return Fl(c), Li(h), Le(f), r.axis(!1), r.legend(!1), e;
}
function Oi(e) {
  var r,
    t,
    n = e.options,
    i = n.xAxis,
    a = n.yAxis,
    o = n.data,
    s = Yn(o);
  return it(
    Rt(
      ((r = {}), (r[za] = i), (r[si] = a), r),
      ((t = {}), (t[za] = { type: 'cat' }), (t[si] = Jh(s, si)), t),
    ),
  )(e);
}
function l1(e) {
  return it(Ie('areaStyle'), t$, Oi, Wt, vt, St, Pt())(e);
}
var e$ = {
    appendPadding: 2,
    tooltip: x({}, s1),
    color: 'l(90) 0:#E5EDFE 1:#ffffff',
    areaStyle: { fillOpacity: 0.6 },
    line: { size: 1, color: '#5B8FF9' },
    animation: {},
  },
  r$ = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'tiny-area'), t;
    }
    return (
      (r.getDefaultOptions = function () {
        return e$;
      }),
      (r.prototype.changeData = function (t) {
        this.updateOption({ data: t });
        var n = this,
          i = n.chart,
          a = n.options;
        Oi({ chart: i, options: a }), i.changeData(Yn(t));
      }),
      (r.prototype.getDefaultOptions = function () {
        return r.getDefaultOptions();
      }),
      (r.prototype.getSchemaAdaptor = function () {
        return l1;
      }),
      r
    );
  })(lt);
function n$(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = t.color,
    a = t.columnStyle,
    o = t.columnWidthRatio,
    s = Yn(n);
  r.data(s);
  var l = O({}, e, {
    options: { xField: za, yField: si, widthRatio: o, interval: { style: a, color: i } },
  });
  return ee(l), r.axis(!1), r.legend(!1), r.interaction('element-active'), e;
}
function u1(e) {
  return it(vt, Ie('columnStyle'), n$, Oi, Wt, St, Pt())(e);
}
var i$ = {
    showTitle: !1,
    shared: !0,
    showMarkers: !1,
    customContent: function (e, r) {
      return ''.concat(A(r, [0, 'data', 'y'], 0));
    },
    containerTpl: '<div class="g2-tooltip"><div class="g2-tooltip-list"></div></div>',
    itemTpl: '<span>{value}</span>',
    domStyles: { 'g2-tooltip': { padding: '2px 4px', fontSize: '10px' } },
  },
  a$ = { appendPadding: 2, tooltip: x({}, i$), animation: {} },
  o$ = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'tiny-column'), t;
    }
    return (
      (r.getDefaultOptions = function () {
        return a$;
      }),
      (r.prototype.changeData = function (t) {
        this.updateOption({ data: t });
        var n = this,
          i = n.chart,
          a = n.options;
        Oi({ chart: i, options: a }), i.changeData(Yn(t));
      }),
      (r.prototype.getDefaultOptions = function () {
        return r.getDefaultOptions();
      }),
      (r.prototype.getSchemaAdaptor = function () {
        return u1;
      }),
      r
    );
  })(lt);
function s$(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = t.color,
    a = t.lineStyle,
    o = t.point,
    s = o == null ? void 0 : o.state,
    l = Yn(n);
  r.data(l);
  var u = O({}, e, { options: { xField: za, yField: si, line: { color: i, style: a }, point: o } }),
    c = O({}, u, { options: { tooltip: !1, state: s } });
  return Li(u), Le(c), r.axis(!1), r.legend(!1), e;
}
function c1(e) {
  return it(s$, Oi, vt, Wt, St, Pt())(e);
}
var l$ = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (t.type = 'tiny-line'), t;
    }
    return (
      (r.getDefaultOptions = function () {
        return JR;
      }),
      (r.prototype.changeData = function (t) {
        this.updateOption({ data: t });
        var n = this,
          i = n.chart,
          a = n.options;
        Oi({ chart: i, options: a }), i.changeData(Yn(t));
      }),
      (r.prototype.getDefaultOptions = function () {
        return r.getDefaultOptions();
      }),
      (r.prototype.getSchemaAdaptor = function () {
        return c1;
      }),
      r
    );
  })(lt),
  u$ = {
    line: wx,
    pie: _x,
    column: Pl,
    bar: Ax,
    area: bx,
    gauge: zx,
    'tiny-line': c1,
    'tiny-column': u1,
    'tiny-area': l1,
    'ring-progress': Qx,
    progress: Zx,
    scatter: r1,
    histogram: Vx,
    funnel: Px,
    stock: o1,
  },
  c$ = {
    line: ZB,
    pie: jx,
    column: lB,
    bar: oB,
    area: Sx,
    gauge: GB,
    'tiny-line': l$,
    'tiny-column': o$,
    'tiny-area': r$,
    'ring-progress': dR,
    progress: hR,
    scatter: WR,
    histogram: jB,
    funnel: PB,
    stock: QR,
  },
  h$ = {
    pie: { label: !1 },
    column: { tooltip: { showMarkers: !1 } },
    bar: { tooltip: { showMarkers: !1 } },
  };
function Tc(e, r, t) {
  var n = c$[e];
  if (!n) {
    console.error('could not find '.concat(e, ' plot'));
    return;
  }
  var i = u$[e];
  i({ chart: r, options: O({}, n.getDefaultOptions(), A(h$, e, {}), t) });
}
function f$(e) {
  var r = e.chart,
    t = e.options,
    n = t.views,
    i = t.legend;
  return (
    M(n, function (a) {
      var o = a.region,
        s = a.data,
        l = a.meta,
        u = a.axes,
        c = a.coordinate,
        h = a.interactions,
        f = a.annotations,
        v = a.tooltip,
        d = a.geometries,
        p = r.createView({ region: o });
      p.data(s);
      var g = {};
      u &&
        M(u, function (y, m) {
          g[m] = mt(y, pe);
        }),
        (g = O({}, l, g)),
        p.scale(g),
        u
          ? M(u, function (y, m) {
              p.axis(m, y);
            })
          : p.axis(!1),
        p.coordinate(c),
        M(d, function (y) {
          var m = be({ chart: p, options: y }).ext,
            b = y.adjust;
          b && m.geometry.adjust(b);
        }),
        M(h, function (y) {
          y.enable === !1 ? p.removeInteraction(y.type) : p.interaction(y.type, y.cfg);
        }),
        M(f, function (y) {
          p.annotation()[y.type](x({}, y));
        }),
        typeof a.animation == 'boolean'
          ? p.animate(!1)
          : (p.animate(!0),
            M(p.geometries, function (y) {
              y.animate(a.animation);
            })),
        v && (p.interaction('tooltip'), p.tooltip(v));
    }),
    i
      ? M(i, function (a, o) {
          r.legend(o, a);
        })
      : r.legend(!1),
    r.tooltip(t.tooltip),
    e
  );
}
function v$(e) {
  var r = e.chart,
    t = e.options,
    n = t.plots,
    i = t.data,
    a = i === void 0 ? [] : i;
  return (
    M(n, function (o) {
      var s = o.type,
        l = o.region,
        u = o.options,
        c = u === void 0 ? {} : u,
        h = o.top,
        f = c.tooltip;
      if (h) {
        Tc(s, r, x(x({}, c), { data: a }));
        return;
      }
      var v = r.createView(x({ region: l }, mt(c, gx)));
      f && v.interaction('tooltip'), Tc(s, v, x({ data: a }, c));
    }),
    e
  );
}
function d$(e) {
  var r = e.chart,
    t = e.options;
  return r.option('slider', t.slider), e;
}
function p$(e) {
  return it(St, f$, v$, It, St, vt, Wt, d$, Pt())(e);
}
function g$(e, r) {
  var t = e.getModel(),
    n = t.data,
    i;
  return N(n) ? (i = n[0][r]) : (i = n[r]), i;
}
function y$(e) {
  var r = As(e);
  M(r, function (t) {
    t.hasState('active') && t.setState('active', !1),
      t.hasState('selected') && t.setState('selected', !1),
      t.hasState('inactive') && t.setState('inactive', !1);
  });
}
var m$ = (function (e) {
  k(r, e);
  function r() {
    return (e !== null && e.apply(this, arguments)) || this;
  }
  return (
    (r.prototype.getAssociationItems = function (t, n) {
      var i,
        a = this.context.event,
        o = n || {},
        s = o.linkField,
        l = o.dim,
        u = [];
      if (!((i = a.data) === null || i === void 0) && i.data) {
        var c = a.data.data;
        M(t, function (h) {
          var f,
            v,
            d = s;
          if (
            (l === 'x'
              ? (d = h.getXScale().field)
              : l === 'y'
              ? (d =
                  (f = h.getYScales().find(function (g) {
                    return g.field === d;
                  })) === null || f === void 0
                    ? void 0
                    : f.field)
              : d || (d = (v = h.getGroupScales()[0]) === null || v === void 0 ? void 0 : v.field),
            !!d)
          ) {
            var p = kt(As(h), function (g) {
              var y = !1,
                m = !1,
                b = N(c) ? A(c[0], d) : A(c, d);
              return (
                g$(g, d) === b ? (y = !0) : (m = !0),
                { element: g, view: h, active: y, inactive: m }
              );
            });
            u.push.apply(u, p);
          }
        });
      }
      return u;
    }),
    (r.prototype.showTooltip = function (t) {
      var n = Cp(this.context.view),
        i = this.getAssociationItems(n, t);
      M(i, function (a) {
        if (a.active) {
          var o = a.element.shape.getCanvasBBox();
          a.view.showTooltip({ x: o.minX + o.width / 2, y: o.minY + o.height / 2 });
        }
      });
    }),
    (r.prototype.hideTooltip = function () {
      var t = Cp(this.context.view);
      M(t, function (n) {
        n.hideTooltip();
      });
    }),
    (r.prototype.active = function (t) {
      var n = ea(this.context.view),
        i = this.getAssociationItems(n, t);
      M(i, function (a) {
        var o = a.active,
          s = a.element;
        o && s.setState('active', !0);
      });
    }),
    (r.prototype.selected = function (t) {
      var n = ea(this.context.view),
        i = this.getAssociationItems(n, t);
      M(i, function (a) {
        var o = a.active,
          s = a.element;
        o && s.setState('selected', !0);
      });
    }),
    (r.prototype.highlight = function (t) {
      var n = ea(this.context.view),
        i = this.getAssociationItems(n, t);
      M(i, function (a) {
        var o = a.inactive,
          s = a.element;
        o && s.setState('inactive', !0);
      });
    }),
    (r.prototype.reset = function () {
      var t = ea(this.context.view);
      M(t, function (n) {
        y$(n);
      });
    }),
    r
  );
})(Ft);
Q('association', m$);
ot('association-active', {
  start: [{ trigger: 'element:mouseenter', action: 'association:active' }],
  end: [{ trigger: 'element:mouseleave', action: 'association:reset' }],
});
ot('association-selected', {
  start: [{ trigger: 'element:mouseenter', action: 'association:selected' }],
  end: [{ trigger: 'element:mouseleave', action: 'association:reset' }],
});
ot('association-highlight', {
  start: [{ trigger: 'element:mouseenter', action: 'association:highlight' }],
  end: [{ trigger: 'element:mouseleave', action: 'association:reset' }],
});
ot('association-tooltip', {
  start: [{ trigger: 'element:mousemove', action: 'association:showTooltip' }],
  end: [{ trigger: 'element:mouseleave', action: 'association:hideTooltip' }],
});
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'mix'), t;
  }
  return (
    (r.prototype.getSchemaAdaptor = function () {
      return p$;
    }),
    r
  );
})(lt);
var Ip;
(function (e) {
  (e.DEV = 'DEV'), (e.BETA = 'BETA'), (e.STABLE = 'STABLE');
})(Ip || (Ip = {}));
var sr = 'first-axes-view',
  lr = 'second-axes-view',
  xn = 'series-field-key';
function h1(e, r, t, n, i) {
  var a = [];
  r.forEach(function (h) {
    n.forEach(function (f) {
      var v,
        d = ((v = {}), (v[e] = f[e]), (v[t] = h), (v[h] = f[h]), v);
      a.push(d);
    });
  });
  var o = Object.values(Ae(a, t)),
    s = o[0],
    l = s === void 0 ? [] : s,
    u = o[1],
    c = u === void 0 ? [] : u;
  return i ? [l.reverse(), c.reverse()] : [l, c];
}
function xr(e) {
  return e !== 'vertical';
}
function x$(e, r, t) {
  var n = r[0],
    i = r[1],
    a = n.autoPadding,
    o = i.autoPadding,
    s = e.__axisPosition,
    l = s.layout,
    u = s.position;
  if (
    (xr(l) &&
      u === 'top' &&
      ((n.autoPadding = t.instance(a.top, 0, a.bottom, a.left)),
      (i.autoPadding = t.instance(o.top, a.left, o.bottom, 0))),
    xr(l) &&
      u === 'bottom' &&
      ((n.autoPadding = t.instance(a.top, a.right / 2 + 5, a.bottom, a.left)),
      (i.autoPadding = t.instance(o.top, o.right, o.bottom, a.right / 2 + 5))),
    !xr(l) && u === 'bottom')
  ) {
    var c = a.left >= o.left ? a.left : o.left;
    (n.autoPadding = t.instance(a.top, a.right, a.bottom / 2 + 5, c)),
      (i.autoPadding = t.instance(a.bottom / 2 + 5, o.right, o.bottom, c));
  }
  if (!xr(l) && u === 'top') {
    var c = a.left >= o.left ? a.left : o.left;
    (n.autoPadding = t.instance(a.top, a.right, 0, c)),
      (i.autoPadding = t.instance(0, o.right, a.top, c));
  }
}
function w$(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = t.xField,
    a = t.yField,
    o = t.color,
    s = t.barStyle,
    l = t.widthRatio,
    u = t.legend,
    c = t.layout,
    h = h1(i, a, xn, n, xr(c));
  u ? r.legend(xn, u) : u === !1 && r.legend(!1);
  var f,
    v,
    d = h[0],
    p = h[1];
  xr(c)
    ? ((f = r.createView({ region: { start: { x: 0, y: 0 }, end: { x: 0.5, y: 1 } }, id: sr })),
      f.coordinate().transpose().reflect('x'),
      (v = r.createView({ region: { start: { x: 0.5, y: 0 }, end: { x: 1, y: 1 } }, id: lr })),
      v.coordinate().transpose(),
      f.data(d),
      v.data(p))
    : ((f = r.createView({ region: { start: { x: 0, y: 0 }, end: { x: 1, y: 0.5 } }, id: sr })),
      (v = r.createView({ region: { start: { x: 0, y: 0.5 }, end: { x: 1, y: 1 } }, id: lr })),
      v.coordinate().reflect('y'),
      f.data(d),
      v.data(p));
  var g = O({}, e, {
    chart: f,
    options: {
      widthRatio: l,
      xField: i,
      yField: a[0],
      seriesField: xn,
      interval: { color: o, style: s },
    },
  });
  ee(g);
  var y = O({}, e, {
    chart: v,
    options: {
      xField: i,
      yField: a[1],
      seriesField: xn,
      widthRatio: l,
      interval: { color: o, style: s },
    },
  });
  return ee(y), e;
}
function b$(e) {
  var r,
    t,
    n,
    i = e.options,
    a = e.chart,
    o = i.xAxis,
    s = i.yAxis,
    l = i.xField,
    u = i.yField,
    c = ct(a, sr),
    h = ct(a, lr),
    f = {};
  return (
    Ci((i == null ? void 0 : i.meta) || {}).map(function (v) {
      A(i == null ? void 0 : i.meta, [v, 'alias']) && (f[v] = i.meta[v].alias);
    }),
    a.scale(
      ((r = {}),
      (r[xn] = {
        sync: !0,
        formatter: function (v) {
          return A(f, v, v);
        },
      }),
      r),
    ),
    Rt(((t = {}), (t[l] = o), (t[u[0]] = s[u[0]]), t))(O({}, e, { chart: c })),
    Rt(((n = {}), (n[l] = o), (n[u[1]] = s[u[1]]), n))(O({}, e, { chart: h })),
    e
  );
}
function S$(e) {
  var r = e.chart,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = t.xField,
    o = t.yField,
    s = t.layout,
    l = ct(r, sr),
    u = ct(r, lr);
  return (
    (n == null ? void 0 : n.position) === 'bottom'
      ? u.axis(
          a,
          x(x({}, n), {
            label: {
              formatter: function () {
                return '';
              },
            },
          }),
        )
      : u.axis(a, !1),
    n === !1 ? l.axis(a, !1) : l.axis(a, x({ position: xr(s) ? 'top' : 'bottom' }, n)),
    i === !1
      ? (l.axis(o[0], !1), u.axis(o[1], !1))
      : (l.axis(o[0], i[o[0]]), u.axis(o[1], i[o[1]])),
    (r.__axisPosition = { position: l.getOptions().axes[a].position, layout: s }),
    e
  );
}
function C$(e) {
  var r = e.chart;
  return It(O({}, e, { chart: ct(r, sr) })), It(O({}, e, { chart: ct(r, lr) })), e;
}
function M$(e) {
  var r = e.chart,
    t = e.options,
    n = t.yField,
    i = t.yAxis;
  return (
    Rn(O({}, e, { chart: ct(r, sr), options: { yAxis: i[n[0]] } })),
    Rn(O({}, e, { chart: ct(r, lr), options: { yAxis: i[n[1]] } })),
    e
  );
}
function A$(e) {
  var r = e.chart;
  return vt(O({}, e, { chart: ct(r, sr) })), vt(O({}, e, { chart: ct(r, lr) })), vt(e), e;
}
function F$(e) {
  var r = e.chart;
  return St(O({}, e, { chart: ct(r, sr) })), St(O({}, e, { chart: ct(r, lr) })), e;
}
function E$(e) {
  var r = this,
    t,
    n,
    i = e.chart,
    a = e.options,
    o = a.label,
    s = a.yField,
    l = a.layout,
    u = ct(i, sr),
    c = ct(i, lr),
    h = te(u, 'interval'),
    f = te(c, 'interval');
  if (!o) h.label(!1), f.label(!1);
  else {
    var v = o.callback,
      d = wt(o, ['callback']);
    d.position || (d.position = 'middle'), d.offset === void 0 && (d.offset = 2);
    var p = x({}, d);
    if (xr(l)) {
      var g =
        ((t = p.style) === null || t === void 0 ? void 0 : t.textAlign) ||
        (d.position === 'middle' ? 'center' : 'left');
      d.style = O({}, d.style, { textAlign: g });
      var y = { left: 'right', right: 'left', center: 'center' };
      p.style = O({}, p.style, { textAlign: y[g] });
    } else {
      var m = { top: 'bottom', bottom: 'top', middle: 'middle' };
      typeof d.position == 'string'
        ? (d.position = m[d.position])
        : typeof d.position == 'function' &&
          (d.position = function () {
            for (var S = [], C = 0; C < arguments.length; C++) S[C] = arguments[C];
            return m[d.position.apply(r, S)];
          });
      var b = ((n = p.style) === null || n === void 0 ? void 0 : n.textBaseline) || 'bottom';
      p.style = O({}, p.style, { textBaseline: b });
      var w = { top: 'bottom', bottom: 'top', middle: 'middle' };
      d.style = O({}, d.style, { textBaseline: w[b] });
    }
    h.label({ fields: [s[0]], callback: v, cfg: jt(p) }),
      f.label({ fields: [s[1]], callback: v, cfg: jt(d) });
  }
  return e;
}
function T$(e) {
  return it(w$, b$, S$, M$, A$, E$, Wt, C$, F$)(e);
}
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'bidirectional-bar'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return O({}, e.getDefaultOptions.call(this), { syncViewPadding: x$ });
    }),
    (r.prototype.changeData = function (t) {
      t === void 0 && (t = []),
        this.chart.emit(
          ut.BEFORE_CHANGE_DATA,
          Lt.fromData(this.chart, ut.BEFORE_CHANGE_DATA, null),
        ),
        this.updateOption({ data: t });
      var n = this.options,
        i = n.xField,
        a = n.yField,
        o = n.layout,
        s = h1(i, a, xn, t, xr(o)),
        l = s[0],
        u = s[1],
        c = ct(this.chart, sr),
        h = ct(this.chart, lr);
      c.data(l),
        h.data(u),
        this.chart.render(!0),
        this.chart.emit(ut.AFTER_CHANGE_DATA, Lt.fromData(this.chart, ut.AFTER_CHANGE_DATA, null));
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return T$;
    }),
    (r.SERIES_FIELD_KEY = xn),
    r
  );
})(lt);
var Su,
  mi = '$$range$$',
  k$ = 'low-q1-median-q3-high',
  I$ = '$$y_outliers$$',
  f1 = 'outliers_view',
  L$ = O({}, lt.getDefaultOptions(), {
    meta: ((Su = {}), (Su[mi] = { min: 0, alias: k$ }), Su),
    interactions: [{ type: 'active-region' }],
    tooltip: { showMarkers: !1, shared: !0 },
    boxStyle: { lineWidth: 1 },
  }),
  v1 = function (e, r) {
    var t = e;
    if (Array.isArray(r)) {
      var n = r[0],
        i = r[1],
        a = r[2],
        o = r[3],
        s = r[4];
      t = kt(e, function (l) {
        return (l[mi] = [l[n], l[i], l[a], l[o], l[s]]), l;
      });
    }
    return t;
  };
function P$(e) {
  var r = e.chart,
    t = e.options,
    n = t.xField,
    i = t.yField,
    a = t.groupField,
    o = t.color,
    s = t.tooltip,
    l = t.boxStyle;
  r.data(v1(t.data, i));
  var u = N(i) ? mi : i,
    c = i ? (N(i) ? i : [i]) : [],
    h = s;
  h !== !1 && (h = O({}, { fields: N(i) ? i : [] }, h));
  var f = of(
    O({}, e, {
      options: {
        xField: n,
        yField: u,
        seriesField: a,
        tooltip: h,
        rawFields: c,
        label: !1,
        schema: { shape: 'box', color: o, style: l },
      },
    }),
  ).ext;
  return a && f.geometry.adjust('dodge'), e;
}
function O$(e) {
  var r = e.chart,
    t = e.options,
    n = t.xField,
    i = t.data,
    a = t.outliersField,
    o = t.outliersStyle,
    s = t.padding,
    l = t.label;
  if (!a) return e;
  var u = r.createView({ padding: s, id: f1 }),
    c = i.reduce(function (h, f) {
      var v = f[a];
      return (
        v.forEach(function (d) {
          var p;
          return h.push(x(x({}, f), ((p = {}), (p[a] = d), p)));
        }),
        h
      );
    }, []);
  return (
    u.data(c),
    Le({
      chart: u,
      options: { xField: n, yField: a, point: { shape: 'circle', style: o }, label: l },
    }),
    u.axis(!1),
    e
  );
}
function D$(e) {
  var r,
    t,
    n = e.chart,
    i = e.options,
    a = i.meta,
    o = i.xAxis,
    s = i.yAxis,
    l = i.xField,
    u = i.yField,
    c = i.outliersField,
    h = Array.isArray(u) ? mi : u,
    f = {};
  if (c) {
    var v = I$;
    f = ((r = {}), (r[c] = { sync: v, nice: !0 }), (r[h] = { sync: v, nice: !0 }), r);
  }
  var d = O(f, a, ((t = {}), (t[l] = mt(o, pe)), (t[h] = mt(s, pe)), t));
  return n.scale(d), e;
}
function B$(e) {
  var r = e.chart,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = t.xField,
    o = t.yField,
    s = Array.isArray(o) ? mi : o;
  return n === !1 ? r.axis(a, !1) : r.axis(a, n), i === !1 ? r.axis(mi, !1) : r.axis(s, i), e;
}
function R$(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend,
    i = t.groupField;
  return i ? (n ? r.legend(i, n) : r.legend(i, { position: 'bottom' })) : r.legend(!1), e;
}
function $$(e) {
  return it(P$, O$, D$, B$, R$, Wt, Pt(), It, St, vt)(e);
}
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'box'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return L$;
    }),
    (r.prototype.changeData = function (t) {
      this.updateOption({ data: t });
      var n = this.options.yField,
        i = this.chart.views.find(function (a) {
          return a.id === f1;
        });
      i && i.data(t), this.chart.changeData(v1(t, n));
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return $$;
    }),
    r
  );
})(lt);
function Lp(e, r, t) {
  return e.length > 1 ? ''.concat(r, '_').concat(t) : ''.concat(r);
}
function d1(e) {
  var r = e.data,
    t = e.xField,
    n = e.measureField,
    i = e.rangeField,
    a = e.targetField,
    o = e.layout,
    s = [],
    l = [];
  r.forEach(function (h, f) {
    var v = [h[i]].flat();
    v.sort(function (g, y) {
      return g - y;
    }),
      v.forEach(function (g, y) {
        var m,
          b = y === 0 ? g : v[y] - v[y - 1];
        s.push(
          ((m = { rKey: ''.concat(i, '_').concat(y) }),
          (m[t] = t ? h[t] : String(f)),
          (m[i] = b),
          m),
        );
      });
    var d = [h[n]].flat();
    d.forEach(function (g, y) {
      var m;
      s.push(((m = { mKey: Lp(d, n, y) }), (m[t] = t ? h[t] : String(f)), (m[n] = g), m));
    });
    var p = [h[a]].flat();
    p.forEach(function (g, y) {
      var m;
      s.push(((m = { tKey: Lp(p, a, y) }), (m[t] = t ? h[t] : String(f)), (m[a] = g), m));
    }),
      l.push(h[i], h[n], h[a]);
  });
  var u = Math.min.apply(Math, l.flat(1 / 0)),
    c = Math.max.apply(Math, l.flat(1 / 0));
  return (u = u > 0 ? 0 : u), o === 'vertical' && s.reverse(), { min: u, max: c, ds: s };
}
function N$(e) {
  var r = e.chart,
    t = e.options,
    n = t.bulletStyle,
    i = t.targetField,
    a = t.rangeField,
    o = t.measureField,
    s = t.xField,
    l = t.color,
    u = t.layout,
    c = t.size,
    h = t.label,
    f = d1(t),
    v = f.min,
    d = f.max,
    p = f.ds;
  r.data(p);
  var g = O({}, e, {
    options: {
      xField: s,
      yField: a,
      seriesField: 'rKey',
      isStack: !0,
      label: A(h, 'range'),
      interval: { color: A(l, 'range'), style: A(n, 'range'), size: A(c, 'range') },
    },
  });
  ee(g), r.geometries[0].tooltip(!1);
  var y = O({}, e, {
    options: {
      xField: s,
      yField: o,
      seriesField: 'mKey',
      isStack: !0,
      label: A(h, 'measure'),
      interval: { color: A(l, 'measure'), style: A(n, 'measure'), size: A(c, 'measure') },
    },
  });
  ee(y);
  var m = O({}, e, {
    options: {
      xField: s,
      yField: i,
      seriesField: 'tKey',
      label: A(h, 'target'),
      point: {
        color: A(l, 'target'),
        style: A(n, 'target'),
        size: U(A(c, 'target'))
          ? function (b) {
              return A(c, 'target')(b) / 2;
            }
          : A(c, 'target') / 2,
        shape: u === 'horizontal' ? 'line' : 'hyphen',
      },
    },
  });
  return (
    Le(m),
    u === 'horizontal' && r.coordinate().transpose(),
    x(x({}, e), { ext: { data: { min: v, max: d } } })
  );
}
function p1(e) {
  var r,
    t,
    n = e.options,
    i = e.ext,
    a = n.xAxis,
    o = n.yAxis,
    s = n.targetField,
    l = n.rangeField,
    u = n.measureField,
    c = n.xField,
    h = i.data;
  return it(
    Rt(
      ((r = {}), (r[c] = a), (r[u] = o), r),
      ((t = {}),
      (t[u] = { min: h == null ? void 0 : h.min, max: h == null ? void 0 : h.max, sync: !0 }),
      (t[s] = { sync: ''.concat(u) }),
      (t[l] = { sync: ''.concat(u) }),
      t),
    ),
  )(e);
}
function z$(e) {
  var r = e.chart,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = t.xField,
    o = t.measureField,
    s = t.rangeField,
    l = t.targetField;
  return (
    r.axis(''.concat(s), !1),
    r.axis(''.concat(l), !1),
    n === !1 ? r.axis(''.concat(a), !1) : r.axis(''.concat(a), n),
    i === !1 ? r.axis(''.concat(o), !1) : r.axis(''.concat(o), i),
    e
  );
}
function G$(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend;
  return (
    r.removeInteraction('legend-filter'),
    r.legend(n),
    r.legend('rKey', !1),
    r.legend('mKey', !1),
    r.legend('tKey', !1),
    e
  );
}
function V$(e) {
  var r = e.chart,
    t = e.options,
    n = t.label,
    i = t.measureField,
    a = t.targetField,
    o = t.rangeField,
    s = r.geometries,
    l = s[0],
    u = s[1],
    c = s[2];
  return (
    A(n, 'range')
      ? l.label(''.concat(o), x({ layout: [{ type: 'limit-in-plot' }] }, jt(n.range)))
      : l.label(!1),
    A(n, 'measure')
      ? u.label(''.concat(i), x({ layout: [{ type: 'limit-in-plot' }] }, jt(n.measure)))
      : u.label(!1),
    A(n, 'target')
      ? c.label(''.concat(a), x({ layout: [{ type: 'limit-in-plot' }] }, jt(n.target)))
      : c.label(!1),
    e
  );
}
function H$(e) {
  it(N$, p1, z$, G$, vt, V$, Wt, It, St)(e);
}
var Y$ = O({}, lt.getDefaultOptions(), {
  layout: 'horizontal',
  size: { range: 30, measure: 20, target: 20 },
  xAxis: { tickLine: !1, line: null },
  bulletStyle: { range: { fillOpacity: 0.5 } },
  label: { measure: { position: 'right' } },
  tooltip: { showMarkers: !1 },
});
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'bullet'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return Y$;
    }),
    (r.prototype.changeData = function (t) {
      this.updateOption({ data: t });
      var n = d1(this.options),
        i = n.min,
        a = n.max,
        o = n.ds;
      p1({ options: this.options, ext: { data: { min: i, max: a } }, chart: this.chart }),
        this.chart.changeData(o);
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return H$;
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    r
  );
})(lt);
var W$ = {
  y: 0,
  nodeWidthRatio: 0.05,
  weight: !1,
  nodePaddingRatio: 0.1,
  id: function (e) {
    return e.id;
  },
  source: function (e) {
    return e.source;
  },
  target: function (e) {
    return e.target;
  },
  sourceWeight: function (e) {
    return e.value || 1;
  },
  targetWeight: function (e) {
    return e.value || 1;
  },
  sortBy: null,
};
function X$(e, r, t) {
  M(e, function (n, i) {
    (n.inEdges = r.filter(function (a) {
      return ''.concat(t.target(a)) === ''.concat(i);
    })),
      (n.outEdges = r.filter(function (a) {
        return ''.concat(t.source(a)) === ''.concat(i);
      })),
      (n.edges = n.outEdges.concat(n.inEdges)),
      (n.frequency = n.edges.length),
      (n.value = 0),
      n.inEdges.forEach(function (a) {
        n.value += t.targetWeight(a);
      }),
      n.outEdges.forEach(function (a) {
        n.value += t.sourceWeight(a);
      });
  });
}
function _$(e, r) {
  var t = {
      weight: function (i, a) {
        return a.value - i.value;
      },
      frequency: function (i, a) {
        return a.frequency - i.frequency;
      },
      id: function (i, a) {
        return ''.concat(r.id(i)).localeCompare(''.concat(r.id(a)));
      },
    },
    n = t[r.sortBy];
  !n && U(r.sortBy) && (n = r.sortBy), n && e.sort(n);
}
function j$(e, r) {
  var t = e.length;
  if (!t) throw new TypeError("Invalid nodes: it's empty!");
  if (r.weight) {
    var n = r.nodePaddingRatio;
    if (n < 0 || n >= 1)
      throw new TypeError('Invalid nodePaddingRatio: it must be in range [0, 1)!');
    var i = n / (2 * t),
      a = r.nodeWidthRatio;
    if (a <= 0 || a >= 1)
      throw new TypeError('Invalid nodeWidthRatio: it must be in range (0, 1)!');
    var o = 0;
    e.forEach(function (l) {
      o += l.value;
    }),
      e.forEach(function (l) {
        (l.weight = l.value / o), (l.width = l.weight * (1 - n)), (l.height = a);
      }),
      e.forEach(function (l, u) {
        for (var c = 0, h = u - 1; h >= 0; h--) c += e[h].width + 2 * i;
        var f = (l.minX = i + c),
          v = (l.maxX = l.minX + l.width),
          d = (l.minY = r.y - a / 2),
          p = (l.maxY = d + a);
        (l.x = [f, v, v, f]), (l.y = [d, d, p, p]);
      });
  } else {
    var s = 1 / t;
    e.forEach(function (l, u) {
      (l.x = (u + 0.5) * s), (l.y = r.y);
    });
  }
  return e;
}
function U$(e, r, t) {
  if (t.weight) {
    var n = {};
    M(e, function (i, a) {
      n[a] = i.value;
    }),
      r.forEach(function (i) {
        var a = t.source(i),
          o = t.target(i),
          s = e[a],
          l = e[o];
        if (s && l) {
          var u = n[a],
            c = t.sourceWeight(i),
            h = s.minX + ((s.value - u) / s.value) * s.width,
            f = h + (c / s.value) * s.width;
          n[a] -= c;
          var v = n[o],
            d = t.targetWeight(i),
            p = l.minX + ((l.value - v) / l.value) * l.width,
            g = p + (d / l.value) * l.width;
          n[o] -= d;
          var y = t.y;
          (i.x = [h, f, p, g]), (i.y = [y, y, y, y]), (i.source = s), (i.target = l);
        }
      });
  } else
    r.forEach(function (i) {
      var a = e[t.source(i)],
        o = e[t.target(i)];
      a && o && ((i.x = [a.x, o.x]), (i.y = [a.y, o.y]), (i.source = a), (i.target = o));
    });
  return r;
}
function q$(e) {
  return bt({}, W$, e);
}
function Z$(e, r) {
  var t = q$(e),
    n = {},
    i = r.nodes,
    a = r.links;
  i.forEach(function (l) {
    var u = t.id(l);
    n[u] = l;
  }),
    X$(n, a, t),
    _$(i, t);
  var o = j$(i, t),
    s = U$(n, a, t);
  return { nodes: o, links: s };
}
var g1 = 'x',
  y1 = 'y',
  m1 = 'name',
  x1 = 'source',
  K$ = {
    nodeStyle: { opacity: 1, fillOpacity: 1, lineWidth: 1 },
    edgeStyle: { opacity: 0.5, lineWidth: 2 },
    label: {
      fields: ['x', 'name'],
      callback: function (e, r) {
        var t = (e[0] + e[1]) / 2,
          n = t > 0.5 ? -4 : 4;
        return { offsetX: n, content: r };
      },
      labelEmit: !0,
      style: { fill: '#8c8c8c' },
    },
    tooltip: {
      showTitle: !1,
      showMarkers: !1,
      fields: ['source', 'target', 'value', 'isNode'],
      showContent: function (e) {
        return !A(e, [0, 'data', 'isNode']);
      },
      formatter: function (e) {
        var r = e.source,
          t = e.target,
          n = e.value;
        return { name: ''.concat(r, ' -> ').concat(t), value: n };
      },
    },
    interactions: [{ type: 'element-active' }],
    weight: !0,
    nodePaddingRatio: 0.1,
    nodeWidthRatio: 0.05,
  };
function Q$(e) {
  var r = e.options,
    t = r.data,
    n = r.sourceField,
    i = r.targetField,
    a = r.weightField,
    o = r.nodePaddingRatio,
    s = r.nodeWidthRatio,
    l = r.rawFields,
    u = l === void 0 ? [] : l,
    c = rx(t, n, i, a),
    h = Z$({ weight: !0, nodePaddingRatio: o, nodeWidthRatio: s }, c),
    f = h.nodes,
    v = h.links,
    d = f.map(function (g) {
      return x(x({}, mt(g, J(['id', 'x', 'y', 'name'], u, !0))), { isNode: !0 });
    }),
    p = v.map(function (g) {
      return x(
        x(
          { source: g.source.name, target: g.target.name, name: g.source.name || g.target.name },
          mt(g, J(['x', 'y', 'value'], u, !0)),
        ),
        { isNode: !1 },
      );
    });
  return x(x({}, e), { ext: x(x({}, e.ext), { chordData: { nodesData: d, edgesData: p } }) });
}
function J$(e) {
  var r,
    t = e.chart;
  return (
    t.scale(
      ((r = { x: { sync: !0, nice: !0 }, y: { sync: !0, nice: !0, max: 1 } }),
      (r[m1] = { sync: 'color' }),
      (r[x1] = { sync: 'color' }),
      r),
    ),
    e
  );
}
function tN(e) {
  var r = e.chart;
  return r.axis(!1), e;
}
function eN(e) {
  var r = e.chart;
  return r.legend(!1), e;
}
function rN(e) {
  var r = e.chart,
    t = e.options,
    n = t.tooltip;
  return r.tooltip(n), e;
}
function nN(e) {
  var r = e.chart;
  return r.coordinate('polar').reflect('y'), e;
}
function iN(e) {
  var r = e.chart,
    t = e.options,
    n = e.ext.chordData.nodesData,
    i = t.nodeStyle,
    a = t.label,
    o = t.tooltip,
    s = r.createView();
  return (
    s.data(n),
    El({
      chart: s,
      options: {
        xField: g1,
        yField: y1,
        seriesField: m1,
        polygon: { style: i },
        label: a,
        tooltip: o,
      },
    }),
    e
  );
}
function aN(e) {
  var r = e.chart,
    t = e.options,
    n = e.ext.chordData.edgesData,
    i = t.edgeStyle,
    a = t.tooltip,
    o = r.createView();
  o.data(n);
  var s = { xField: g1, yField: y1, seriesField: x1, edge: { style: i, shape: 'arc' }, tooltip: a };
  return fx({ chart: o, options: s }), e;
}
function oN(e) {
  var r = e.chart,
    t = e.options,
    n = t.animation;
  return eo(r, n, zO(r)), e;
}
function sN(e) {
  return it(vt, Q$, nN, J$, tN, eN, rN, aN, iN, It, on, oN)(e);
}
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'chord'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return K$;
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return sN;
    }),
    r
  );
})(lt);
var lN = ['x', 'y', 'r', 'name', 'value', 'path', 'depth'],
  uN = {
    colorField: 'name',
    autoFit: !0,
    pointStyle: { lineWidth: 0, stroke: '#fff' },
    legend: !1,
    hierarchyConfig: { size: [1, 1], padding: 0 },
    label: { fields: ['name'], layout: { type: 'limit-in-shape' } },
    tooltip: { showMarkers: !1, showTitle: !1 },
    drilldown: { enabled: !1 },
  },
  Pp = 4,
  cN = 0,
  Op = 5,
  Dp = 'drilldown-bread-crumb',
  hN = {
    position: 'top-left',
    dividerText: '/',
    textStyle: { fontSize: 12, fill: 'rgba(0, 0, 0, 0.65)', cursor: 'pointer' },
    activeTextStyle: { fill: '#87B5FF' },
  },
  Ga = 'hierarchy-data-transform-params',
  fN = (function (e) {
    k(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (
        (t.name = 'drill-down'),
        (t.historyCache = []),
        (t.breadCrumbGroup = null),
        (t.breadCrumbCfg = hN),
        t
      );
    }
    return (
      (r.prototype.click = function () {
        var t = A(this.context, ['event', 'data', 'data']);
        if (!t) return !1;
        this.drill(t), this.drawBreadCrumb();
      }),
      (r.prototype.resetPosition = function () {
        if (this.breadCrumbGroup) {
          var t = this.context.view.getCoordinate(),
            n = this.breadCrumbGroup,
            i = n.getBBox(),
            a = this.getButtonCfg().position,
            o = { x: t.start.x, y: t.end.y - (i.height + Op * 2) };
          t.isPolar && (o = { x: 0, y: 0 }),
            a === 'bottom-left' && (o = { x: t.start.x, y: t.start.y });
          var s = me.transform(null, [['t', o.x + cN, o.y + i.height + Op]]);
          n.setMatrix(s);
        }
      }),
      (r.prototype.back = function () {
        _t(this.historyCache) && this.backTo(this.historyCache.slice(0, -1));
      }),
      (r.prototype.reset = function () {
        this.historyCache[0] && this.backTo(this.historyCache.slice(0, 1)),
          (this.historyCache = []),
          this.hideCrumbGroup();
      }),
      (r.prototype.drill = function (t) {
        var n = this.context.view,
          i = A(n, ['interactions', 'drill-down', 'cfg', 'transformData'], function (u) {
            return u;
          }),
          a = i(x({ data: t.data }, t[Ga]));
        n.changeData(a);
        for (var o = [], s = t; s; ) {
          var l = s.data;
          o.unshift({
            id: ''.concat(l.name, '_').concat(s.height, '_').concat(s.depth),
            name: l.name,
            children: i(x({ data: l }, t[Ga])),
          }),
            (s = s.parent);
        }
        this.historyCache = (this.historyCache || []).slice(0, -1).concat(o);
      }),
      (r.prototype.backTo = function (t) {
        if (!(!t || t.length <= 0)) {
          var n = this.context.view,
            i = Ht(t).children;
          n.changeData(i),
            t.length > 1
              ? ((this.historyCache = t), this.drawBreadCrumb())
              : ((this.historyCache = []), this.hideCrumbGroup());
        }
      }),
      (r.prototype.getButtonCfg = function () {
        var t = this.context.view,
          n = A(t, ['interactions', 'drill-down', 'cfg', 'drillDownConfig']);
        return O(this.breadCrumbCfg, n == null ? void 0 : n.breadCrumb, this.cfg);
      }),
      (r.prototype.drawBreadCrumb = function () {
        this.drawBreadCrumbGroup(), this.resetPosition(), this.breadCrumbGroup.show();
      }),
      (r.prototype.drawBreadCrumbGroup = function () {
        var t = this,
          n = this.getButtonCfg(),
          i = this.historyCache;
        this.breadCrumbGroup
          ? this.breadCrumbGroup.clear()
          : (this.breadCrumbGroup = this.context.view.foregroundGroup.addGroup({ name: Dp }));
        var a = 0;
        i.forEach(function (o, s) {
          var l = t.breadCrumbGroup.addShape({
              type: 'text',
              id: o.id,
              name: ''.concat(Dp, '_').concat(o.name, '_text'),
              attrs: x(x({ text: s === 0 && !$(n.rootText) ? n.rootText : o.name }, n.textStyle), {
                x: a,
                y: 0,
              }),
            }),
            u = l.getBBox();
          if (
            ((a += u.width + Pp),
            l.on('click', function (f) {
              var v,
                d = f.target.get('id');
              if (d !== ((v = Ht(i)) === null || v === void 0 ? void 0 : v.id)) {
                var p = i.slice(
                  0,
                  i.findIndex(function (g) {
                    return g.id === d;
                  }) + 1,
                );
                t.backTo(p);
              }
            }),
            l.on('mouseenter', function (f) {
              var v,
                d = f.target.get('id');
              d !== ((v = Ht(i)) === null || v === void 0 ? void 0 : v.id)
                ? l.attr(n.activeTextStyle)
                : l.attr({ cursor: 'default' });
            }),
            l.on('mouseleave', function () {
              l.attr(n.textStyle);
            }),
            s < i.length - 1)
          ) {
            var c = t.breadCrumbGroup.addShape({
                type: 'text',
                name: ''.concat(n.name, '_').concat(o.name, '_divider'),
                attrs: x(x({ text: n.dividerText }, n.textStyle), { x: a, y: 0 }),
              }),
              h = c.getBBox();
            a += h.width + Pp;
          }
        });
      }),
      (r.prototype.hideCrumbGroup = function () {
        this.breadCrumbGroup && this.breadCrumbGroup.hide();
      }),
      (r.prototype.destroy = function () {
        this.breadCrumbGroup && this.breadCrumbGroup.remove(), e.prototype.destroy.call(this);
      }),
      r
    );
  })(Ft);
function vN(e, r) {
  return e.parent === r.parent ? 1 : 2;
}
function dN(e) {
  return e.reduce(pN, 0) / e.length;
}
function pN(e, r) {
  return e + r.x;
}
function gN(e) {
  return 1 + e.reduce(yN, 0);
}
function yN(e, r) {
  return Math.max(e, r.y);
}
function mN(e) {
  for (var r; (r = e.children); ) e = r[0];
  return e;
}
function xN(e) {
  for (var r; (r = e.children); ) e = r[r.length - 1];
  return e;
}
function wN() {
  var e = vN,
    r = 1,
    t = 1,
    n = !1;
  function i(a) {
    var o,
      s = 0;
    a.eachAfter(function (f) {
      var v = f.children;
      v ? ((f.x = dN(v)), (f.y = gN(v))) : ((f.x = o ? (s += e(f, o)) : 0), (f.y = 0), (o = f));
    });
    var l = mN(a),
      u = xN(a),
      c = l.x - e(l, u) / 2,
      h = u.x + e(u, l) / 2;
    return a.eachAfter(
      n
        ? function (f) {
            (f.x = (f.x - a.x) * r), (f.y = (a.y - f.y) * t);
          }
        : function (f) {
            (f.x = ((f.x - c) / (h - c)) * r), (f.y = (1 - (a.y ? f.y / a.y : 1)) * t);
          },
    );
  }
  return (
    (i.separation = function (a) {
      return arguments.length ? ((e = a), i) : e;
    }),
    (i.size = function (a) {
      return arguments.length ? ((n = !1), (r = +a[0]), (t = +a[1]), i) : n ? null : [r, t];
    }),
    (i.nodeSize = function (a) {
      return arguments.length ? ((n = !0), (r = +a[0]), (t = +a[1]), i) : n ? [r, t] : null;
    }),
    i
  );
}
function bN(e) {
  var r = 0,
    t = e.children,
    n = t && t.length;
  if (!n) r = 1;
  else for (; --n >= 0; ) r += t[n].value;
  e.value = r;
}
function SN() {
  return this.eachAfter(bN);
}
function CN(e, r) {
  let t = -1;
  for (const n of this) e.call(r, n, ++t, this);
  return this;
}
function MN(e, r) {
  for (var t = this, n = [t], i, a, o = -1; (t = n.pop()); )
    if ((e.call(r, t, ++o, this), (i = t.children)))
      for (a = i.length - 1; a >= 0; --a) n.push(i[a]);
  return this;
}
function AN(e, r) {
  for (var t = this, n = [t], i = [], a, o, s, l = -1; (t = n.pop()); )
    if ((i.push(t), (a = t.children))) for (o = 0, s = a.length; o < s; ++o) n.push(a[o]);
  for (; (t = i.pop()); ) e.call(r, t, ++l, this);
  return this;
}
function FN(e, r) {
  let t = -1;
  for (const n of this) if (e.call(r, n, ++t, this)) return n;
}
function EN(e) {
  return this.eachAfter(function (r) {
    for (var t = +e(r.data) || 0, n = r.children, i = n && n.length; --i >= 0; ) t += n[i].value;
    r.value = t;
  });
}
function TN(e) {
  return this.eachBefore(function (r) {
    r.children && r.children.sort(e);
  });
}
function kN(e) {
  for (var r = this, t = IN(r, e), n = [r]; r !== t; ) (r = r.parent), n.push(r);
  for (var i = n.length; e !== t; ) n.splice(i, 0, e), (e = e.parent);
  return n;
}
function IN(e, r) {
  if (e === r) return e;
  var t = e.ancestors(),
    n = r.ancestors(),
    i = null;
  for (e = t.pop(), r = n.pop(); e === r; ) (i = e), (e = t.pop()), (r = n.pop());
  return i;
}
function LN() {
  for (var e = this, r = [e]; (e = e.parent); ) r.push(e);
  return r;
}
function PN() {
  return Array.from(this);
}
function ON() {
  var e = [];
  return (
    this.eachBefore(function (r) {
      r.children || e.push(r);
    }),
    e
  );
}
function DN() {
  var e = this,
    r = [];
  return (
    e.each(function (t) {
      t !== e && r.push({ source: t.parent, target: t });
    }),
    r
  );
}
function* BN() {
  var e = this,
    r,
    t = [e],
    n,
    i,
    a;
  do
    for (r = t.reverse(), t = []; (e = r.pop()); )
      if ((yield e, (n = e.children))) for (i = 0, a = n.length; i < a; ++i) t.push(n[i]);
  while (t.length);
}
function Di(e, r) {
  e instanceof Map ? ((e = [void 0, e]), r === void 0 && (r = NN)) : r === void 0 && (r = $N);
  for (var t = new xi(e), n, i = [t], a, o, s, l; (n = i.pop()); )
    if ((o = r(n.data)) && (l = (o = Array.from(o)).length))
      for (n.children = o, s = l - 1; s >= 0; --s)
        i.push((a = o[s] = new xi(o[s]))), (a.parent = n), (a.depth = n.depth + 1);
  return t.eachBefore(w1);
}
function RN() {
  return Di(this).eachBefore(zN);
}
function $N(e) {
  return e.children;
}
function NN(e) {
  return Array.isArray(e) ? e[1] : null;
}
function zN(e) {
  e.data.value !== void 0 && (e.value = e.data.value), (e.data = e.data.data);
}
function w1(e) {
  var r = 0;
  do e.height = r;
  while ((e = e.parent) && e.height < ++r);
}
function xi(e) {
  (this.data = e), (this.depth = this.height = 0), (this.parent = null);
}
xi.prototype = Di.prototype = {
  constructor: xi,
  count: SN,
  each: CN,
  eachAfter: AN,
  eachBefore: MN,
  find: FN,
  sum: EN,
  sort: TN,
  path: kN,
  ancestors: LN,
  descendants: PN,
  leaves: ON,
  links: DN,
  copy: RN,
  [Symbol.iterator]: BN,
};
function GN(e) {
  return typeof e == 'object' && 'length' in e ? e : Array.from(e);
}
function VN(e) {
  for (var r = e.length, t, n; r; )
    (n = (Math.random() * r--) | 0), (t = e[r]), (e[r] = e[n]), (e[n] = t);
  return e;
}
function b1(e) {
  for (var r = 0, t = (e = VN(Array.from(e))).length, n = [], i, a; r < t; )
    (i = e[r]), a && S1(a, i) ? ++r : ((a = YN((n = HN(n, i)))), (r = 0));
  return a;
}
function HN(e, r) {
  var t, n;
  if (Cu(r, e)) return [r];
  for (t = 0; t < e.length; ++t) if (Ho(r, e[t]) && Cu(ra(e[t], r), e)) return [e[t], r];
  for (t = 0; t < e.length - 1; ++t)
    for (n = t + 1; n < e.length; ++n)
      if (
        Ho(ra(e[t], e[n]), r) &&
        Ho(ra(e[t], r), e[n]) &&
        Ho(ra(e[n], r), e[t]) &&
        Cu(C1(e[t], e[n], r), e)
      )
        return [e[t], e[n], r];
  throw new Error();
}
function Ho(e, r) {
  var t = e.r - r.r,
    n = r.x - e.x,
    i = r.y - e.y;
  return t < 0 || t * t < n * n + i * i;
}
function S1(e, r) {
  var t = e.r - r.r + Math.max(e.r, r.r, 1) * 1e-9,
    n = r.x - e.x,
    i = r.y - e.y;
  return t > 0 && t * t > n * n + i * i;
}
function Cu(e, r) {
  for (var t = 0; t < r.length; ++t) if (!S1(e, r[t])) return !1;
  return !0;
}
function YN(e) {
  switch (e.length) {
    case 1:
      return WN(e[0]);
    case 2:
      return ra(e[0], e[1]);
    case 3:
      return C1(e[0], e[1], e[2]);
  }
}
function WN(e) {
  return { x: e.x, y: e.y, r: e.r };
}
function ra(e, r) {
  var t = e.x,
    n = e.y,
    i = e.r,
    a = r.x,
    o = r.y,
    s = r.r,
    l = a - t,
    u = o - n,
    c = s - i,
    h = Math.sqrt(l * l + u * u);
  return { x: (t + a + (l / h) * c) / 2, y: (n + o + (u / h) * c) / 2, r: (h + i + s) / 2 };
}
function C1(e, r, t) {
  var n = e.x,
    i = e.y,
    a = e.r,
    o = r.x,
    s = r.y,
    l = r.r,
    u = t.x,
    c = t.y,
    h = t.r,
    f = n - o,
    v = n - u,
    d = i - s,
    p = i - c,
    g = l - a,
    y = h - a,
    m = n * n + i * i - a * a,
    b = m - o * o - s * s + l * l,
    w = m - u * u - c * c + h * h,
    S = v * d - f * p,
    C = (d * w - p * b) / (S * 2) - n,
    F = (p * g - d * y) / S,
    E = (v * b - f * w) / (S * 2) - i,
    I = (f * y - v * g) / S,
    T = F * F + I * I - 1,
    P = 2 * (a + C * F + E * I),
    R = C * C + E * E - a * a,
    B = -(T ? (P + Math.sqrt(P * P - 4 * T * R)) / (2 * T) : R / P);
  return { x: n + C + F * B, y: i + E + I * B, r: B };
}
function Bp(e, r, t) {
  var n = e.x - r.x,
    i,
    a,
    o = e.y - r.y,
    s,
    l,
    u = n * n + o * o;
  u
    ? ((a = r.r + t.r),
      (a *= a),
      (l = e.r + t.r),
      (l *= l),
      a > l
        ? ((i = (u + l - a) / (2 * u)),
          (s = Math.sqrt(Math.max(0, l / u - i * i))),
          (t.x = e.x - i * n - s * o),
          (t.y = e.y - i * o + s * n))
        : ((i = (u + a - l) / (2 * u)),
          (s = Math.sqrt(Math.max(0, a / u - i * i))),
          (t.x = r.x + i * n - s * o),
          (t.y = r.y + i * o + s * n)))
    : ((t.x = r.x + t.r), (t.y = r.y));
}
function Rp(e, r) {
  var t = e.r + r.r - 1e-6,
    n = r.x - e.x,
    i = r.y - e.y;
  return t > 0 && t * t > n * n + i * i;
}
function $p(e) {
  var r = e._,
    t = e.next._,
    n = r.r + t.r,
    i = (r.x * t.r + t.x * r.r) / n,
    a = (r.y * t.r + t.y * r.r) / n;
  return i * i + a * a;
}
function Yo(e) {
  (this._ = e), (this.next = null), (this.previous = null);
}
function M1(e) {
  if (!(i = (e = GN(e)).length)) return 0;
  var r, t, n, i, a, o, s, l, u, c, h;
  if (((r = e[0]), (r.x = 0), (r.y = 0), !(i > 1))) return r.r;
  if (((t = e[1]), (r.x = -t.r), (t.x = r.r), (t.y = 0), !(i > 2))) return r.r + t.r;
  Bp(t, r, (n = e[2])),
    (r = new Yo(r)),
    (t = new Yo(t)),
    (n = new Yo(n)),
    (r.next = n.previous = t),
    (t.next = r.previous = n),
    (n.next = t.previous = r);
  t: for (s = 3; s < i; ++s) {
    Bp(r._, t._, (n = e[s])),
      (n = new Yo(n)),
      (l = t.next),
      (u = r.previous),
      (c = t._.r),
      (h = r._.r);
    do
      if (c <= h) {
        if (Rp(l._, n._)) {
          (t = l), (r.next = t), (t.previous = r), --s;
          continue t;
        }
        (c += l._.r), (l = l.next);
      } else {
        if (Rp(u._, n._)) {
          (r = u), (r.next = t), (t.previous = r), --s;
          continue t;
        }
        (h += u._.r), (u = u.previous);
      }
    while (l !== u.next);
    for (n.previous = r, n.next = t, r.next = t.previous = t = n, a = $p(r); (n = n.next) !== t; )
      (o = $p(n)) < a && ((r = n), (a = o));
    t = r.next;
  }
  for (r = [t._], n = t; (n = n.next) !== t; ) r.push(n._);
  for (n = b1(r), s = 0; s < i; ++s) (r = e[s]), (r.x -= n.x), (r.y -= n.y);
  return n.r;
}
function XN(e) {
  return M1(e), e;
}
function _N(e) {
  return e == null ? null : ks(e);
}
function ks(e) {
  if (typeof e != 'function') throw new Error();
  return e;
}
function vn() {
  return 0;
}
function Zn(e) {
  return function () {
    return e;
  };
}
function jN(e) {
  return Math.sqrt(e.value);
}
function A1() {
  var e = null,
    r = 1,
    t = 1,
    n = vn;
  function i(a) {
    return (
      (a.x = r / 2),
      (a.y = t / 2),
      e
        ? a.eachBefore(Np(e)).eachAfter(Mu(n, 0.5)).eachBefore(zp(1))
        : a
            .eachBefore(Np(jN))
            .eachAfter(Mu(vn, 1))
            .eachAfter(Mu(n, a.r / Math.min(r, t)))
            .eachBefore(zp(Math.min(r, t) / (2 * a.r))),
      a
    );
  }
  return (
    (i.radius = function (a) {
      return arguments.length ? ((e = _N(a)), i) : e;
    }),
    (i.size = function (a) {
      return arguments.length ? ((r = +a[0]), (t = +a[1]), i) : [r, t];
    }),
    (i.padding = function (a) {
      return arguments.length ? ((n = typeof a == 'function' ? a : Zn(+a)), i) : n;
    }),
    i
  );
}
function Np(e) {
  return function (r) {
    r.children || (r.r = Math.max(0, +e(r) || 0));
  };
}
function Mu(e, r) {
  return function (t) {
    if ((n = t.children)) {
      var n,
        i,
        a = n.length,
        o = e(t) * r || 0,
        s;
      if (o) for (i = 0; i < a; ++i) n[i].r += o;
      if (((s = M1(n)), o)) for (i = 0; i < a; ++i) n[i].r -= o;
      t.r = s + o;
    }
  };
}
function zp(e) {
  return function (r) {
    var t = r.parent;
    (r.r *= e), t && ((r.x = t.x + e * r.x), (r.y = t.y + e * r.y));
  };
}
function F1(e) {
  (e.x0 = Math.round(e.x0)),
    (e.y0 = Math.round(e.y0)),
    (e.x1 = Math.round(e.x1)),
    (e.y1 = Math.round(e.y1));
}
function oo(e, r, t, n, i) {
  for (var a = e.children, o, s = -1, l = a.length, u = e.value && (n - r) / e.value; ++s < l; )
    (o = a[s]), (o.y0 = t), (o.y1 = i), (o.x0 = r), (o.x1 = r += o.value * u);
}
function E1() {
  var e = 1,
    r = 1,
    t = 0,
    n = !1;
  function i(o) {
    var s = o.height + 1;
    return (
      (o.x0 = o.y0 = t), (o.x1 = e), (o.y1 = r / s), o.eachBefore(a(r, s)), n && o.eachBefore(F1), o
    );
  }
  function a(o, s) {
    return function (l) {
      l.children && oo(l, l.x0, (o * (l.depth + 1)) / s, l.x1, (o * (l.depth + 2)) / s);
      var u = l.x0,
        c = l.y0,
        h = l.x1 - t,
        f = l.y1 - t;
      h < u && (u = h = (u + h) / 2),
        f < c && (c = f = (c + f) / 2),
        (l.x0 = u),
        (l.y0 = c),
        (l.x1 = h),
        (l.y1 = f);
    };
  }
  return (
    (i.round = function (o) {
      return arguments.length ? ((n = !!o), i) : n;
    }),
    (i.size = function (o) {
      return arguments.length ? ((e = +o[0]), (r = +o[1]), i) : [e, r];
    }),
    (i.padding = function (o) {
      return arguments.length ? ((t = +o), i) : t;
    }),
    i
  );
}
var UN = { depth: -1 },
  Gp = {};
function qN(e) {
  return e.id;
}
function ZN(e) {
  return e.parentId;
}
function KN() {
  var e = qN,
    r = ZN;
  function t(n) {
    var i = Array.from(n),
      a = i.length,
      o,
      s,
      l,
      u,
      c,
      h,
      f,
      v = new Map();
    for (s = 0; s < a; ++s)
      (o = i[s]),
        (c = i[s] = new xi(o)),
        (h = e(o, s, n)) != null && (h += '') && ((f = c.id = h), v.set(f, v.has(f) ? Gp : c)),
        (h = r(o, s, n)) != null && (h += '') && (c.parent = h);
    for (s = 0; s < a; ++s)
      if (((c = i[s]), (h = c.parent))) {
        if (((u = v.get(h)), !u)) throw new Error('missing: ' + h);
        if (u === Gp) throw new Error('ambiguous: ' + h);
        u.children ? u.children.push(c) : (u.children = [c]), (c.parent = u);
      } else {
        if (l) throw new Error('multiple roots');
        l = c;
      }
    if (!l) throw new Error('no root');
    if (
      ((l.parent = UN),
      l
        .eachBefore(function (d) {
          (d.depth = d.parent.depth + 1), --a;
        })
        .eachBefore(w1),
      (l.parent = null),
      a > 0)
    )
      throw new Error('cycle');
    return l;
  }
  return (
    (t.id = function (n) {
      return arguments.length ? ((e = ks(n)), t) : e;
    }),
    (t.parentId = function (n) {
      return arguments.length ? ((r = ks(n)), t) : r;
    }),
    t
  );
}
function QN(e, r) {
  return e.parent === r.parent ? 1 : 2;
}
function Au(e) {
  var r = e.children;
  return r ? r[0] : e.t;
}
function Fu(e) {
  var r = e.children;
  return r ? r[r.length - 1] : e.t;
}
function JN(e, r, t) {
  var n = t / (r.i - e.i);
  (r.c -= n), (r.s += t), (e.c += n), (r.z += t), (r.m += t);
}
function t5(e) {
  for (var r = 0, t = 0, n = e.children, i = n.length, a; --i >= 0; )
    (a = n[i]), (a.z += r), (a.m += r), (r += a.s + (t += a.c));
}
function e5(e, r, t) {
  return e.a.parent === r.parent ? e.a : t;
}
function Jo(e, r) {
  (this._ = e),
    (this.parent = null),
    (this.children = null),
    (this.A = null),
    (this.a = this),
    (this.z = 0),
    (this.m = 0),
    (this.c = 0),
    (this.s = 0),
    (this.t = null),
    (this.i = r);
}
Jo.prototype = Object.create(xi.prototype);
function r5(e) {
  for (var r = new Jo(e, 0), t, n = [r], i, a, o, s; (t = n.pop()); )
    if ((a = t._.children))
      for (t.children = new Array((s = a.length)), o = s - 1; o >= 0; --o)
        n.push((i = t.children[o] = new Jo(a[o], o))), (i.parent = t);
  return ((r.parent = new Jo(null, 0)).children = [r]), r;
}
function n5() {
  var e = QN,
    r = 1,
    t = 1,
    n = null;
  function i(u) {
    var c = r5(u);
    if ((c.eachAfter(a), (c.parent.m = -c.z), c.eachBefore(o), n)) u.eachBefore(l);
    else {
      var h = u,
        f = u,
        v = u;
      u.eachBefore(function (m) {
        m.x < h.x && (h = m), m.x > f.x && (f = m), m.depth > v.depth && (v = m);
      });
      var d = h === f ? 1 : e(h, f) / 2,
        p = d - h.x,
        g = r / (f.x + d + p),
        y = t / (v.depth || 1);
      u.eachBefore(function (m) {
        (m.x = (m.x + p) * g), (m.y = m.depth * y);
      });
    }
    return u;
  }
  function a(u) {
    var c = u.children,
      h = u.parent.children,
      f = u.i ? h[u.i - 1] : null;
    if (c) {
      t5(u);
      var v = (c[0].z + c[c.length - 1].z) / 2;
      f ? ((u.z = f.z + e(u._, f._)), (u.m = u.z - v)) : (u.z = v);
    } else f && (u.z = f.z + e(u._, f._));
    u.parent.A = s(u, f, u.parent.A || h[0]);
  }
  function o(u) {
    (u._.x = u.z + u.parent.m), (u.m += u.parent.m);
  }
  function s(u, c, h) {
    if (c) {
      for (
        var f = u, v = u, d = c, p = f.parent.children[0], g = f.m, y = v.m, m = d.m, b = p.m, w;
        (d = Fu(d)), (f = Au(f)), d && f;

      )
        (p = Au(p)),
          (v = Fu(v)),
          (v.a = u),
          (w = d.z + m - f.z - g + e(d._, f._)),
          w > 0 && (JN(e5(d, u, h), u, w), (g += w), (y += w)),
          (m += d.m),
          (g += f.m),
          (b += p.m),
          (y += v.m);
      d && !Fu(v) && ((v.t = d), (v.m += m - y)),
        f && !Au(p) && ((p.t = f), (p.m += g - b), (h = u));
    }
    return h;
  }
  function l(u) {
    (u.x *= r), (u.y = u.depth * t);
  }
  return (
    (i.separation = function (u) {
      return arguments.length ? ((e = u), i) : e;
    }),
    (i.size = function (u) {
      return arguments.length ? ((n = !1), (r = +u[0]), (t = +u[1]), i) : n ? null : [r, t];
    }),
    (i.nodeSize = function (u) {
      return arguments.length ? ((n = !0), (r = +u[0]), (t = +u[1]), i) : n ? [r, t] : null;
    }),
    i
  );
}
function Dl(e, r, t, n, i) {
  for (var a = e.children, o, s = -1, l = a.length, u = e.value && (i - t) / e.value; ++s < l; )
    (o = a[s]), (o.x0 = r), (o.x1 = n), (o.y0 = t), (o.y1 = t += o.value * u);
}
var T1 = (1 + Math.sqrt(5)) / 2;
function k1(e, r, t, n, i, a) {
  for (
    var o = [],
      s = r.children,
      l,
      u,
      c = 0,
      h = 0,
      f = s.length,
      v,
      d,
      p = r.value,
      g,
      y,
      m,
      b,
      w,
      S,
      C;
    c < f;

  ) {
    (v = i - t), (d = a - n);
    do g = s[h++].value;
    while (!g && h < f);
    for (
      y = m = g, S = Math.max(d / v, v / d) / (p * e), C = g * g * S, w = Math.max(m / C, C / y);
      h < f;
      ++h
    ) {
      if (
        ((g += u = s[h].value),
        u < y && (y = u),
        u > m && (m = u),
        (C = g * g * S),
        (b = Math.max(m / C, C / y)),
        b > w)
      ) {
        g -= u;
        break;
      }
      w = b;
    }
    o.push((l = { value: g, dice: v < d, children: s.slice(c, h) })),
      l.dice
        ? oo(l, t, n, i, p ? (n += (d * g) / p) : a)
        : Dl(l, t, n, p ? (t += (v * g) / p) : i, a),
      (p -= g),
      (c = h);
  }
  return o;
}
const I1 = (function e(r) {
  function t(n, i, a, o, s) {
    k1(r, n, i, a, o, s);
  }
  return (
    (t.ratio = function (n) {
      return e((n = +n) > 1 ? n : 1);
    }),
    t
  );
})(T1);
function L1() {
  var e = I1,
    r = !1,
    t = 1,
    n = 1,
    i = [0],
    a = vn,
    o = vn,
    s = vn,
    l = vn,
    u = vn;
  function c(f) {
    return (
      (f.x0 = f.y0 = 0),
      (f.x1 = t),
      (f.y1 = n),
      f.eachBefore(h),
      (i = [0]),
      r && f.eachBefore(F1),
      f
    );
  }
  function h(f) {
    var v = i[f.depth],
      d = f.x0 + v,
      p = f.y0 + v,
      g = f.x1 - v,
      y = f.y1 - v;
    g < d && (d = g = (d + g) / 2),
      y < p && (p = y = (p + y) / 2),
      (f.x0 = d),
      (f.y0 = p),
      (f.x1 = g),
      (f.y1 = y),
      f.children &&
        ((v = i[f.depth + 1] = a(f) / 2),
        (d += u(f) - v),
        (p += o(f) - v),
        (g -= s(f) - v),
        (y -= l(f) - v),
        g < d && (d = g = (d + g) / 2),
        y < p && (p = y = (p + y) / 2),
        e(f, d, p, g, y));
  }
  return (
    (c.round = function (f) {
      return arguments.length ? ((r = !!f), c) : r;
    }),
    (c.size = function (f) {
      return arguments.length ? ((t = +f[0]), (n = +f[1]), c) : [t, n];
    }),
    (c.tile = function (f) {
      return arguments.length ? ((e = ks(f)), c) : e;
    }),
    (c.padding = function (f) {
      return arguments.length ? c.paddingInner(f).paddingOuter(f) : c.paddingInner();
    }),
    (c.paddingInner = function (f) {
      return arguments.length ? ((a = typeof f == 'function' ? f : Zn(+f)), c) : a;
    }),
    (c.paddingOuter = function (f) {
      return arguments.length
        ? c.paddingTop(f).paddingRight(f).paddingBottom(f).paddingLeft(f)
        : c.paddingTop();
    }),
    (c.paddingTop = function (f) {
      return arguments.length ? ((o = typeof f == 'function' ? f : Zn(+f)), c) : o;
    }),
    (c.paddingRight = function (f) {
      return arguments.length ? ((s = typeof f == 'function' ? f : Zn(+f)), c) : s;
    }),
    (c.paddingBottom = function (f) {
      return arguments.length ? ((l = typeof f == 'function' ? f : Zn(+f)), c) : l;
    }),
    (c.paddingLeft = function (f) {
      return arguments.length ? ((u = typeof f == 'function' ? f : Zn(+f)), c) : u;
    }),
    c
  );
}
function i5(e, r, t, n, i) {
  var a = e.children,
    o,
    s = a.length,
    l,
    u = new Array(s + 1);
  for (u[0] = l = o = 0; o < s; ++o) u[o + 1] = l += a[o].value;
  c(0, s, e.value, r, t, n, i);
  function c(h, f, v, d, p, g, y) {
    if (h >= f - 1) {
      var m = a[h];
      (m.x0 = d), (m.y0 = p), (m.x1 = g), (m.y1 = y);
      return;
    }
    for (var b = u[h], w = v / 2 + b, S = h + 1, C = f - 1; S < C; ) {
      var F = (S + C) >>> 1;
      u[F] < w ? (S = F + 1) : (C = F);
    }
    w - u[S - 1] < u[S] - w && h + 1 < S && --S;
    var E = u[S] - b,
      I = v - E;
    if (g - d > y - p) {
      var T = v ? (d * I + g * E) / v : g;
      c(h, S, E, d, p, T, y), c(S, f, I, T, p, g, y);
    } else {
      var P = v ? (p * I + y * E) / v : y;
      c(h, S, E, d, p, g, P), c(S, f, I, d, P, g, y);
    }
  }
}
function a5(e, r, t, n, i) {
  (e.depth & 1 ? Dl : oo)(e, r, t, n, i);
}
const o5 = (function e(r) {
    function t(n, i, a, o, s) {
      if ((l = n._squarify) && l.ratio === r)
        for (var l, u, c, h, f = -1, v, d = l.length, p = n.value; ++f < d; ) {
          for (u = l[f], c = u.children, h = u.value = 0, v = c.length; h < v; ++h)
            u.value += c[h].value;
          u.dice
            ? oo(u, i, a, o, p ? (a += ((s - a) * u.value) / p) : s)
            : Dl(u, i, a, p ? (i += ((o - i) * u.value) / p) : o, s),
            (p -= u.value);
        }
      else (n._squarify = l = k1(r, n, i, a, o, s)), (l.ratio = r);
    }
    return (
      (t.ratio = function (n) {
        return e((n = +n) > 1 ? n : 1);
      }),
      t
    );
  })(T1),
  Vp = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        cluster: wN,
        hierarchy: Di,
        pack: A1,
        packEnclose: b1,
        packSiblings: XN,
        partition: E1,
        stratify: KN,
        tree: n5,
        treemap: L1,
        treemapBinary: i5,
        treemapDice: oo,
        treemapResquarify: o5,
        treemapSlice: Dl,
        treemapSliceDice: a5,
        treemapSquarify: I1,
      },
      Symbol.toStringTag,
      { value: 'Module' },
    ),
  );
var P1 = 'nodeIndex',
  O1 = 'childNodeCount',
  pf = 'nodeAncestor',
  Eu = 'Invalid field: it must be a string!';
function gf(e, r) {
  var t = e.field,
    n = e.fields;
  if (et(t)) return t;
  if (N(t)) return console.warn(Eu), t[0];
  if ((console.warn(''.concat(Eu, ' will try to get fields instead.')), et(n))) return n;
  if (N(n) && n.length) return n[0];
  if (r) return r;
  throw new TypeError(Eu);
}
function yf(e) {
  var r = [];
  if (e && e.each) {
    var t, n;
    e.each(function (i) {
      var a, o;
      i.parent !== t ? ((t = i.parent), (n = 0)) : (n += 1);
      var s = Jt(
        (((a = i.ancestors) === null || a === void 0 ? void 0 : a.call(i)) || []).map(function (l) {
          return (
            r.find(function (u) {
              return u.name === l.name;
            }) || l
          );
        }),
        function (l) {
          var u = l.depth;
          return u > 0 && u < i.depth;
        },
      );
      (i[pf] = s),
        (i[O1] = ((o = i.children) === null || o === void 0 ? void 0 : o.length) || 0),
        (i[P1] = n),
        r.push(i);
    });
  } else
    e &&
      e.eachNode &&
      e.eachNode(function (i) {
        r.push(i);
      });
  return r;
}
var s5 = {
  field: 'value',
  as: ['x', 'y', 'r'],
  sort: function (e, r) {
    return r.value - e.value;
  },
};
function l5(e, r) {
  r = bt({}, s5, r);
  var t = r.as;
  if (!N(t) || t.length !== 3)
    throw new TypeError('Invalid as: it must be an array with 3 strings (e.g. [ "x", "y", "r" ])!');
  var n;
  try {
    n = gf(r);
  } catch (u) {
    console.warn(u);
  }
  var i = function (u) {
      return A1().size(r.size).padding(r.padding)(
        Di(u)
          .sum(function (c) {
            return c[n];
          })
          .sort(r.sort),
      );
    },
    a = i(e),
    o = t[0],
    s = t[1],
    l = t[2];
  return (
    a.each(function (u) {
      (u[o] = u.x), (u[s] = u.y), (u[l] = u.r);
    }),
    yf(a)
  );
}
function D1(e) {
  var r = e.data,
    t = e.hierarchyConfig,
    n = e.rawFields,
    i = n === void 0 ? [] : n,
    a = e.enableDrillDown,
    o = l5(r, x(x({}, t), { field: 'value', as: ['x', 'y', 'r'] })),
    s = [];
  return (
    o.forEach(function (l) {
      for (var u, c = l.data.name, h = x({}, l); h.depth > 1; )
        (c = ''
          .concat((u = h.parent.data) === null || u === void 0 ? void 0 : u.name, ' / ')
          .concat(c)),
          (h = h.parent);
      if (a && l.depth > 2) return null;
      var f = O({}, l.data, x(x(x({}, mt(l.data, i)), { path: c }), l));
      (f.ext = t), (f[Ga] = { hierarchyConfig: t, rawFields: i, enableDrillDown: a }), s.push(f);
    }),
    s
  );
}
function B1(e, r, t) {
  var n = tf([e, r]),
    i = n[0],
    a = n[1],
    o = n[2],
    s = n[3],
    l = t.width,
    u = t.height,
    c = l - (s + a),
    h = u - (i + o),
    f = Math.min(c, h),
    v = (c - f) / 2,
    d = (h - f) / 2,
    p = i + d,
    g = a + v,
    y = o + d,
    m = s + v,
    b = [p, g, y, m],
    w = f < 0 ? 0 : f;
  return { finalPadding: b, finalSize: w };
}
function u5(e) {
  var r = e.chart,
    t = Math.min(r.viewBBox.width, r.viewBBox.height);
  return O(
    {
      options: {
        size: function (n) {
          var i = n.r;
          return i * t;
        },
      },
    },
    e,
  );
}
function c5(e) {
  var r = e.options,
    t = e.chart,
    n = t.viewBBox,
    i = r.padding,
    a = r.appendPadding,
    o = r.drilldown,
    s = a;
  if (o != null && o.enabled) {
    var l = Sl(t.appendPadding, A(o, ['breadCrumb', 'position']));
    s = tf([l, a]);
  }
  var u = B1(i, s, n).finalPadding;
  return (t.padding = u), (t.appendPadding = 0), e;
}
function h5(e) {
  var r = e.chart,
    t = e.options,
    n = r.padding,
    i = r.appendPadding,
    a = t.color,
    o = t.colorField,
    s = t.pointStyle,
    l = t.hierarchyConfig,
    u = t.sizeField,
    c = t.rawFields,
    h = c === void 0 ? [] : c,
    f = t.drilldown,
    v = D1({
      data: t.data,
      hierarchyConfig: l,
      enableDrillDown: f == null ? void 0 : f.enabled,
      rawFields: h,
    });
  r.data(v);
  var d = r.viewBBox,
    p = B1(n, i, d).finalSize,
    g = function (y) {
      var m = y.r;
      return m * p;
    };
  return (
    u &&
      (g = function (y) {
        return y[u] * p;
      }),
    Le(
      O({}, e, {
        options: {
          xField: 'x',
          yField: 'y',
          seriesField: o,
          sizeField: u,
          rawFields: J(J([], lN, !0), h, !0),
          point: { color: a, style: s, shape: 'circle', size: g },
        },
      }),
    ),
    e
  );
}
function f5(e) {
  return it(
    Rt(
      {},
      {
        x: { min: 0, max: 1, minLimit: 0, maxLimit: 1, nice: !0 },
        y: { min: 0, max: 1, minLimit: 0, maxLimit: 1, nice: !0 },
      },
    ),
  )(e);
}
function v5(e) {
  var r = e.chart,
    t = e.options,
    n = t.tooltip;
  if (n === !1) r.tooltip(!1);
  else {
    var i = n;
    A(n, 'fields') ||
      (i = O(
        {},
        {
          customItems: function (a) {
            return a.map(function (o) {
              var s = A(r.getOptions(), 'scales'),
                l = A(s, ['name', 'formatter'], function (c) {
                  return c;
                }),
                u = A(s, ['value', 'formatter'], function (c) {
                  return c;
                });
              return x(x({}, o), { name: l(o.data.name), value: u(o.data.value) });
            });
          },
        },
        i,
      )),
      r.tooltip(i);
  }
  return e;
}
function d5(e) {
  var r = e.chart;
  return r.axis(!1), e;
}
function p5(e) {
  var r = e.drilldown,
    t = e.interactions,
    n = t === void 0 ? [] : t;
  return r != null && r.enabled
    ? O({}, e, {
        interactions: J(
          J([], n, !0),
          [
            {
              type: 'drill-down',
              cfg: { drillDownConfig: r, transformData: D1, enableDrillDown: !0 },
            },
          ],
          !1,
        ),
      })
    : e;
}
function g5(e) {
  var r = e.chart,
    t = e.options;
  return It({ chart: r, options: p5(t) }), e;
}
function y5(e) {
  return it(Ie('pointStyle'), u5, c5, vt, f5, h5, d5, Ii, v5, g5, St, Pt())(e);
}
function Hp(e) {
  var r = A(e, ['event', 'data', 'data'], {});
  return N(r.children) && r.children.length > 0;
}
function Yp(e) {
  var r = e.view.getCoordinate(),
    t = r.innerRadius;
  if (t) {
    var n = e.event,
      i = n.x,
      a = n.y,
      o = r.center,
      s = o.x,
      l = o.y,
      u = r.getRadius() * t,
      c = Math.sqrt(Math.pow(s - i, 2) + Math.pow(l - a, 2));
    return c < u;
  }
  return !1;
}
Q('drill-down-action', fN);
ot('drill-down', {
  showEnable: [
    { trigger: 'element:mouseenter', action: 'cursor:pointer', isEnable: Hp },
    { trigger: 'element:mouseleave', action: 'cursor:default' },
    { trigger: 'element:mouseleave', action: 'cursor:pointer', isEnable: Yp },
  ],
  start: [
    { trigger: 'element:click', isEnable: Hp, action: ['drill-down-action:click'] },
    { trigger: 'afterchangesize', action: ['drill-down-action:resetPosition'] },
    { trigger: 'click', isEnable: Yp, action: ['drill-down-action:back'] },
  ],
});
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'circle-packing'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return uN;
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return y5;
    }),
    (r.prototype.triggerResize = function () {
      this.chart.destroyed ||
        (this.chart.forceFit(), this.chart.clear(), this.execAdaptor(), this.chart.render(!0));
    }),
    r
  );
})(lt);
var Pe = 'left-axes-view',
  Oe = 'right-axes-view',
  R1 = { nice: !0, label: { autoHide: !0, autoRotate: !1 } },
  m5 = x(x({}, R1), { position: 'left' }),
  x5 = x(x({}, R1), { position: 'right', grid: null }),
  wi;
(function (e) {
  (e.Left = 'Left'), (e.Right = 'Right');
})(wi || (wi = {}));
var $n;
(function (e) {
  (e.Line = 'line'), (e.Column = 'column');
})($n || ($n = {}));
function kc(e) {
  return A(e, 'geometry') === $n.Line;
}
function mf(e) {
  return A(e, 'geometry') === $n.Column;
}
function Wp(e, r, t) {
  return mf(t)
    ? O(
        {},
        {
          geometry: $n.Column,
          label:
            t.label && t.isRange
              ? {
                  content: function (n) {
                    var i;
                    return (i = n[r]) === null || i === void 0 ? void 0 : i.join('-');
                  },
                }
              : void 0,
        },
        t,
      )
    : x({ geometry: $n.Line }, t);
}
function Xp(e, r) {
  var t = e[0],
    n = e[1];
  if (N(r)) {
    var i = r[0],
      a = r[1];
    return [i, a];
  }
  var o = A(r, t),
    s = A(r, n);
  return [o, s];
}
function _p(e, r) {
  return r === wi.Left
    ? e === !1
      ? !1
      : O({}, m5, e)
    : r === wi.Right
    ? e === !1
      ? !1
      : O({}, x5, e)
    : e;
}
function w5(e) {
  var r = e.options,
    t = e.chart,
    n = r.geometryOption,
    i = n.isStack,
    a = n.color,
    o = n.seriesField,
    s = n.groupField,
    l = n.isGroup,
    u = ['xField', 'yField'];
  if (kc(n)) {
    Li(
      O({}, e, {
        options: x(x(x({}, mt(r, u)), n), { line: { color: n.color, style: n.lineStyle } }),
      }),
    ),
      Le(
        O({}, e, {
          options: x(x(x({}, mt(r, u)), n), {
            point: n.point && x({ color: a, shape: 'circle' }, n.point),
          }),
        }),
      );
    var c = [];
    l && c.push({ type: 'dodge', dodgeBy: s || o, customOffset: 0 }),
      i && c.push({ type: 'stack' }),
      c.length &&
        M(t.geometries, function (h) {
          h.adjust(c);
        });
  }
  return (
    mf(n) &&
      Pl(
        O({}, e, {
          options: x(x(x({}, mt(r, u)), n), {
            widthRatio: n.columnWidthRatio,
            interval: x(x({}, mt(n, ['color'])), { style: n.columnStyle }),
          }),
        }),
      ),
    e
  );
}
function jp(e) {
  var r = e.view,
    t = e.geometryOption,
    n = e.yField,
    i = e.legend,
    a = A(i, 'marker'),
    o = te(r, kc(t) ? 'line' : 'interval');
  if (!t.seriesField) {
    var s = A(r, 'options.scales.'.concat(n, '.alias')) || n,
      l = o.getAttribute('color'),
      u = r.getTheme().defaultColor;
    l && (u = me.getMappingValue(l, s, A(l, ['values', 0], u)));
    var c =
      (U(a) ? a : !ye(a) && O({}, { style: { stroke: u, fill: u } }, a)) ||
      (kc(t)
        ? {
            symbol: function (f, v, d) {
              return [
                ['M', f - d, v],
                ['L', f + d, v],
              ];
            },
            style: { lineWidth: 2, r: 6, stroke: u },
          }
        : { symbol: 'square', style: { fill: u } });
    return [{ value: n, name: s, marker: c, isGeometry: !0, viewId: r.id }];
  }
  var h = o.getGroupAttributes();
  return ie(
    h,
    function (f, v) {
      var d = me.getLegendItems(r, o, v, r.getTheme(), a);
      return f.concat(d);
    },
    [],
  );
}
var Up = function (e, r) {
  var t = r[0],
    n = r[1],
    i = e.getOptions().data,
    a = e.getXScale(),
    o = _t(i);
  if (!(!a || !o)) {
    var s = je(i, a.field),
      l = s,
      u = _t(l),
      c = Math.floor(t * (u - 1)),
      h = Math.floor(n * (u - 1));
    e.filter(a.field, function (f) {
      var v = l.indexOf(f);
      return v > -1 ? VO(v, c, h) : !0;
    }),
      e.getRootView().render(!0);
  }
};
function b5(e) {
  var r,
    t = e.options,
    n = t.geometryOptions,
    i = n === void 0 ? [] : n,
    a = t.xField,
    o = t.yField,
    s = Gc(i, function (l) {
      var u = l.geometry;
      return u === $n.Line || u === void 0;
    });
  return O(
    {},
    {
      options: {
        geometryOptions: [],
        meta: ((r = {}), (r[a] = { type: 'cat', sync: !0, range: s ? [0, 1] : void 0 }), r),
        tooltip: { showMarkers: s, showCrosshairs: s, shared: !0, crosshairs: { type: 'x' } },
        interactions: s
          ? [{ type: 'legend-visible-filter' }]
          : [{ type: 'legend-visible-filter' }, { type: 'active-region' }],
        legend: { position: 'top-left' },
      },
    },
    e,
    {
      options: {
        yAxis: Xp(o, t.yAxis),
        geometryOptions: [Wp(a, o[0], i[0]), Wp(a, o[1], i[1])],
        annotations: Xp(o, t.annotations),
      },
    },
  );
}
function S5(e) {
  var r,
    t,
    n = e.chart,
    i = e.options,
    a = i.geometryOptions,
    o = { line: 0, column: 1 },
    s = [
      { type: (r = a[0]) === null || r === void 0 ? void 0 : r.geometry, id: Pe },
      { type: (t = a[1]) === null || t === void 0 ? void 0 : t.geometry, id: Oe },
    ];
  return (
    s
      .sort(function (l, u) {
        return -o[l.type] + o[u.type];
      })
      .forEach(function (l) {
        return n.createView({ id: l.id });
      }),
    e
  );
}
function C5(e) {
  var r = e.chart,
    t = e.options,
    n = t.xField,
    i = t.yField,
    a = t.geometryOptions,
    o = t.data,
    s = t.tooltip,
    l = [
      x(x({}, a[0]), { id: Pe, data: o[0], yField: i[0] }),
      x(x({}, a[1]), { id: Oe, data: o[1], yField: i[1] }),
    ];
  return (
    l.forEach(function (u) {
      var c = u.id,
        h = u.data,
        f = u.yField,
        v = mf(u) && u.isPercent,
        d = v ? yx(h, f, n, f) : h,
        p = ct(r, c).data(d),
        g = v
          ? x(
              {
                formatter: function (y) {
                  return {
                    name: y[u.seriesField] || f,
                    value: (Number(y[f]) * 100).toFixed(2) + '%',
                  };
                },
              },
              s,
            )
          : s;
      w5({ chart: p, options: { xField: n, yField: f, tooltip: g, geometryOption: u } });
    }),
    e
  );
}
function M5(e) {
  var r,
    t = e.chart,
    n = e.options,
    i = n.geometryOptions,
    a = ((r = t.getTheme()) === null || r === void 0 ? void 0 : r.colors10) || [],
    o = 0;
  return (
    t.once('beforepaint', function () {
      M(i, function (s, l) {
        var u = ct(t, l === 0 ? Pe : Oe);
        if (!s.color) {
          var c = u.getGroupScales(),
            h = A(c, [0, 'values', 'length'], 1),
            f = a.slice(o, o + h).concat(l === 0 ? [] : a);
          u.geometries.forEach(function (v) {
            s.seriesField ? v.color(s.seriesField, f) : v.color(f[0]);
          }),
            (o += h);
        }
      }),
        t.render(!0);
    }),
    e
  );
}
function A5(e) {
  var r,
    t,
    n = e.chart,
    i = e.options,
    a = i.xAxis,
    o = i.yAxis,
    s = i.xField,
    l = i.yField;
  return (
    Rt(((r = {}), (r[s] = a), (r[l[0]] = o[0]), r))(O({}, e, { chart: ct(n, Pe) })),
    Rt(((t = {}), (t[s] = a), (t[l[1]] = o[1]), t))(O({}, e, { chart: ct(n, Oe) })),
    e
  );
}
function F5(e) {
  var r = e.chart,
    t = e.options,
    n = ct(r, Pe),
    i = ct(r, Oe),
    a = t.xField,
    o = t.yField,
    s = t.xAxis,
    l = t.yAxis;
  return (
    r.axis(a, !1),
    r.axis(o[0], !1),
    r.axis(o[1], !1),
    n.axis(a, s),
    n.axis(o[0], _p(l[0], wi.Left)),
    i.axis(a, !1),
    i.axis(o[1], _p(l[1], wi.Right)),
    e
  );
}
function E5(e) {
  var r = e.chart,
    t = e.options,
    n = t.tooltip,
    i = ct(r, Pe),
    a = ct(r, Oe);
  return r.tooltip(n), i.tooltip({ shared: !0 }), a.tooltip({ shared: !0 }), e;
}
function T5(e) {
  var r = e.chart;
  return It(O({}, e, { chart: ct(r, Pe) })), It(O({}, e, { chart: ct(r, Oe) })), e;
}
function k5(e) {
  var r = e.chart,
    t = e.options,
    n = t.annotations,
    i = A(n, [0]),
    a = A(n, [1]);
  return (
    Pt(i)(O({}, e, { chart: ct(r, Pe), options: { annotations: i } })),
    Pt(a)(O({}, e, { chart: ct(r, Oe), options: { annotations: a } })),
    e
  );
}
function I5(e) {
  var r = e.chart;
  return vt(O({}, e, { chart: ct(r, Pe) })), vt(O({}, e, { chart: ct(r, Oe) })), vt(e), e;
}
function L5(e) {
  var r = e.chart;
  return St(O({}, e, { chart: ct(r, Pe) })), St(O({}, e, { chart: ct(r, Oe) })), e;
}
function P5(e) {
  var r = e.chart,
    t = e.options,
    n = t.yAxis;
  return (
    Rn(O({}, e, { chart: ct(r, Pe), options: { yAxis: n[0] } })),
    Rn(O({}, e, { chart: ct(r, Oe), options: { yAxis: n[1] } })),
    e
  );
}
function O5(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend,
    i = t.geometryOptions,
    a = t.yField,
    o = t.data,
    s = ct(r, Pe),
    l = ct(r, Oe);
  if (n === !1) r.legend(!1);
  else if (xt(n) && n.custom === !0) r.legend(n);
  else {
    var u = A(i, [0, 'legend'], n),
      c = A(i, [1, 'legend'], n);
    r.once('beforepaint', function () {
      var h = o[0].length ? jp({ view: s, geometryOption: i[0], yField: a[0], legend: u }) : [],
        f = o[1].length ? jp({ view: l, geometryOption: i[1], yField: a[1], legend: c }) : [];
      r.legend(O({}, n, { custom: !0, items: h.concat(f) }));
    }),
      i[0].seriesField && s.legend(i[0].seriesField, u),
      i[1].seriesField && l.legend(i[1].seriesField, c),
      r.on('legend-item:click', function (h) {
        var f = A(h, 'gEvent.delegateObject', {});
        if (f && f.item) {
          var v = f.item,
            d = v.value,
            p = v.isGeometry,
            g = v.viewId;
          if (p) {
            var y = Tg(a, function (w) {
              return w === d;
            });
            if (y > -1) {
              var m = A(ct(r, g), 'geometries');
              M(m, function (w) {
                w.changeVisible(!f.item.unchecked);
              });
            }
          } else {
            var b = A(r.getController('legend'), 'option.items', []);
            M(r.views, function (w) {
              var S = w.getGroupScales();
              M(S, function (C) {
                C.values &&
                  C.values.indexOf(d) > -1 &&
                  w.filter(C.field, function (F) {
                    var E = Xe(b, function (I) {
                      return I.value === F;
                    });
                    return !E.unchecked;
                  });
              }),
                r.render(!0);
            });
          }
        }
      });
  }
  return e;
}
function D5(e) {
  var r = e.chart,
    t = e.options,
    n = t.slider,
    i = ct(r, Pe),
    a = ct(r, Oe);
  return (
    n &&
      (i.option('slider', n),
      i.on('slider:valuechanged', function (o) {
        var s = o.event,
          l = s.value,
          u = s.originValue;
        Dt(l, u) || Up(a, l);
      }),
      r.once('afterpaint', function () {
        if (!ui(n)) {
          var o = n.start,
            s = n.end;
          (o || s) && Up(a, [o, s]);
        }
      })),
    e
  );
}
function B5(e) {
  return it(b5, S5, I5, C5, A5, F5, P5, E5, T5, k5, L5, M5, O5, D5)(e);
}
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'dual-axes'), t;
  }
  return (
    (r.prototype.getDefaultOptions = function () {
      return O({}, e.prototype.getDefaultOptions.call(this), { yAxis: [], syncViewPadding: !0 });
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return B5;
    }),
    r
  );
})(lt);
function R5(e, r) {
  var t = r.data,
    n = r.coordinate,
    i = r.interactions,
    a = r.annotations,
    o = r.animation,
    s = r.tooltip,
    l = r.axes,
    u = r.meta,
    c = r.geometries;
  t && e.data(t);
  var h = {};
  l &&
    M(l, function (f, v) {
      h[v] = mt(f, pe);
    }),
    (h = O({}, u, h)),
    e.scale(h),
    n && e.coordinate(n),
    l === !1
      ? e.axis(!1)
      : M(l, function (f, v) {
          e.axis(v, f);
        }),
    M(c, function (f) {
      var v = be({ chart: e, options: f }).ext,
        d = f.adjust;
      d && v.geometry.adjust(d);
    }),
    M(i, function (f) {
      f.enable === !1 ? e.removeInteraction(f.type) : e.interaction(f.type, f.cfg);
    }),
    M(a, function (f) {
      e.annotation()[f.type](x({}, f));
    }),
    eo(e, o),
    s ? (e.interaction('tooltip'), e.tooltip(s)) : s === !1 && e.removeInteraction('tooltip');
}
function $5(e) {
  var r = e.chart,
    t = e.options,
    n = t.type,
    i = t.data,
    a = t.fields,
    o = t.eachView,
    s = Vs(t, [
      'type',
      'data',
      'fields',
      'eachView',
      'axes',
      'meta',
      'tooltip',
      'coordinate',
      'theme',
      'legend',
      'interactions',
      'annotations',
    ]);
  return (
    r.data(i),
    r.facet(
      n,
      x(x({}, s), {
        fields: a,
        eachView: function (l, u) {
          var c = o(l, u);
          if (c.geometries) R5(l, c);
          else {
            var h = c,
              f = h.options;
            f.tooltip && l.interaction('tooltip'), Tc(h.type, l, f);
          }
        },
      }),
    ),
    e
  );
}
function N5(e) {
  var r = e.chart,
    t = e.options,
    n = t.axes,
    i = t.meta,
    a = t.tooltip,
    o = t.coordinate,
    s = t.theme,
    l = t.legend,
    u = t.interactions,
    c = t.annotations,
    h = {};
  return (
    n &&
      M(n, function (f, v) {
        h[v] = mt(f, pe);
      }),
    (h = O({}, i, h)),
    r.scale(h),
    r.coordinate(o),
    n
      ? M(n, function (f, v) {
          r.axis(v, f);
        })
      : r.axis(!1),
    a ? (r.interaction('tooltip'), r.tooltip(a)) : a === !1 && r.removeInteraction('tooltip'),
    r.legend(l),
    s && r.theme(s),
    M(u, function (f) {
      f.enable === !1 ? r.removeInteraction(f.type) : r.interaction(f.type, f.cfg);
    }),
    M(c, function (f) {
      r.annotation()[f.type](x({}, f));
    }),
    e
  );
}
function z5(e) {
  return it(vt, $5, N5)(e);
}
var G5 = {
  title: { style: { fontSize: 12, fill: 'rgba(0,0,0,0.65)' } },
  rowTitle: { style: { fontSize: 12, fill: 'rgba(0,0,0,0.65)' } },
  columnTitle: { style: { fontSize: 12, fill: 'rgba(0,0,0,0.65)' } },
};
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'area'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return G5;
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return z5;
    }),
    r
  );
})(lt);
function V5(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = t.type,
    a = t.xField,
    o = t.yField,
    s = t.colorField,
    l = t.sizeField,
    u = t.sizeRatio,
    c = t.shape,
    h = t.color,
    f = t.tooltip,
    v = t.heatmapStyle,
    d = t.meta;
  r.data(n);
  var p = 'polygon';
  i === 'density' && (p = 'heatmap');
  var g = Ve(f, [a, o, s]),
    y = g.fields,
    m = g.formatter,
    b = 1;
  return (
    (u || u === 0) &&
      (!c && !l
        ? console.warn('sizeRatio is not in effect: Must define shape or sizeField first')
        : u < 0 || u > 1
        ? console.warn('sizeRatio is not in effect: It must be a number in [0,1]')
        : (b = u)),
    be(
      O({}, e, {
        options: {
          type: p,
          colorField: s,
          tooltipFields: y,
          shapeField: l || '',
          label: void 0,
          mapping: {
            tooltip: m,
            shape:
              c &&
              (l
                ? function (w) {
                    var S = n.map(function (I) {
                        return I[l];
                      }),
                      C = (d == null ? void 0 : d[l]) || {},
                      F = C.min,
                      E = C.max;
                    return (
                      (F = at(F) ? F : Math.min.apply(Math, S)),
                      (E = at(E) ? E : Math.max.apply(Math, S)),
                      [c, (A(w, l) - F) / (E - F), b]
                    );
                  }
                : function () {
                    return [c, 1, b];
                  }),
            color: h || (s && r.getTheme().sequenceColors.join('-')),
            style: v,
          },
        },
      }),
    ),
    e
  );
}
function H5(e) {
  var r,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = t.xField,
    o = t.yField;
  return it(Rt(((r = {}), (r[a] = n), (r[o] = i), r)))(e);
}
function Y5(e) {
  var r = e.chart,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = t.xField,
    o = t.yField;
  return n === !1 ? r.axis(a, !1) : r.axis(a, n), i === !1 ? r.axis(o, !1) : r.axis(o, i), e;
}
function W5(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend,
    i = t.colorField,
    a = t.sizeField,
    o = t.sizeLegend,
    s = n !== !1;
  return (
    i && r.legend(i, s ? n : !1),
    a && r.legend(a, o === void 0 ? n : o),
    !s && !o && r.legend(!1),
    e
  );
}
function X5(e) {
  var r = e.chart,
    t = e.options,
    n = t.label,
    i = t.colorField,
    a = t.type,
    o = te(r, a === 'density' ? 'heatmap' : 'polygon');
  if (!n) o.label(!1);
  else if (i) {
    var s = n.callback,
      l = wt(n, ['callback']);
    o.label({ fields: [i], callback: s, cfg: jt(l) });
  }
  return e;
}
function _5(e) {
  var r,
    t,
    n = e.chart,
    i = e.options,
    a = i.coordinate,
    o = i.reflect,
    s = O({ actions: [] }, a != null ? a : { type: 'rect' });
  return (
    o &&
      ((t = (r = s.actions) === null || r === void 0 ? void 0 : r.push) === null ||
        t === void 0 ||
        t.call(r, ['reflect', o])),
    n.coordinate(s),
    e
  );
}
function j5(e) {
  return it(vt, Ie('heatmapStyle'), H5, _5, V5, Y5, W5, Wt, X5, Pt(), It, St, on)(e);
}
var U5 = O({}, lt.getDefaultOptions(), {
  type: 'polygon',
  legend: !1,
  coordinate: { type: 'rect' },
  xAxis: {
    tickLine: null,
    line: null,
    grid: { alignTick: !1, line: { style: { lineWidth: 1, lineDash: null, stroke: '#f0f0f0' } } },
  },
  yAxis: {
    grid: { alignTick: !1, line: { style: { lineWidth: 1, lineDash: null, stroke: '#f0f0f0' } } },
  },
});
gt('polygon', 'circle', {
  draw: function (e, r) {
    var t,
      n,
      i = e.x,
      a = e.y,
      o = this.parsePoints(e.points),
      s = Math.abs(o[2].x - o[1].x),
      l = Math.abs(o[1].y - o[0].y),
      u = Math.min(s, l) / 2,
      c = Number(e.shape[1]),
      h = Number(e.shape[2]),
      f = Math.sqrt(h),
      v = u * f * Math.sqrt(c),
      d =
        ((t = e.style) === null || t === void 0 ? void 0 : t.fill) ||
        e.color ||
        ((n = e.defaultStyle) === null || n === void 0 ? void 0 : n.fill),
      p = r.addShape('circle', {
        attrs: x(x(x({ x: i, y: a, r: v }, e.defaultStyle), e.style), { fill: d }),
      });
    return p;
  },
});
gt('polygon', 'square', {
  draw: function (e, r) {
    var t,
      n,
      i = e.x,
      a = e.y,
      o = this.parsePoints(e.points),
      s = Math.abs(o[2].x - o[1].x),
      l = Math.abs(o[1].y - o[0].y),
      u = Math.min(s, l),
      c = Number(e.shape[1]),
      h = Number(e.shape[2]),
      f = Math.sqrt(h),
      v = u * f * Math.sqrt(c),
      d =
        ((t = e.style) === null || t === void 0 ? void 0 : t.fill) ||
        e.color ||
        ((n = e.defaultStyle) === null || n === void 0 ? void 0 : n.fill),
      p = r.addShape('rect', {
        attrs: x(
          x(x({ x: i - v / 2, y: a - v / 2, width: v, height: v }, e.defaultStyle), e.style),
          { fill: d },
        ),
      });
    return p;
  },
});
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'heatmap'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return U5;
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return j5;
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    r
  );
})(lt);
var q5 = 'liquid';
function $1(e) {
  return [{ percent: e, type: q5 }];
}
function Z5(e) {
  var r = e.chart,
    t = e.options,
    n = t.percent,
    i = t.liquidStyle,
    a = t.radius,
    o = t.outline,
    s = t.wave,
    l = t.shape,
    u = t.shapeStyle,
    c = t.animation;
  r.scale({ percent: { min: 0, max: 1 } }), r.data($1(n));
  var h = t.color || r.getTheme().defaultColor,
    f = O({}, e, {
      options: {
        xField: 'type',
        yField: 'percent',
        widthRatio: a,
        interval: { color: h, style: i, shape: 'liquid-fill-gauge' },
      },
    }),
    v = ee(f).ext,
    d = v.geometry,
    p = r.getTheme().background,
    g = {
      percent: n,
      radius: a,
      outline: o,
      wave: s,
      shape: l,
      shapeStyle: u,
      background: p,
      animation: c,
    };
  return d.customInfo(g), r.legend(!1), r.axis(!1), r.tooltip(!1), e;
}
function N1(e, r) {
  var t = e.chart,
    n = e.options,
    i = n.statistic,
    a = n.percent,
    o = n.meta;
  t.getController('annotation').clear(!0);
  var s =
      A(o, ['percent', 'formatter']) ||
      function (u) {
        return ''.concat((u * 100).toFixed(2), '%');
      },
    l = i.content;
  return (
    l && (l = O({}, l, { content: $(l.content) ? s(a) : l.content })),
    Cl(t, { statistic: x(x({}, i), { content: l }), plotType: 'liquid' }, { percent: a }),
    r && t.render(!0),
    e
  );
}
function K5(e) {
  return it(vt, Ie('liquidStyle'), Z5, N1, Rt({}), St, It)(e);
}
var Q5 = {
    radius: 0.9,
    statistic: {
      title: !1,
      content: {
        style: { opacity: 0.75, fontSize: '30px', lineHeight: '30px', textAlign: 'center' },
      },
    },
    outline: { border: 2, distance: 0 },
    wave: { count: 3, length: 192 },
    shape: 'circle',
  },
  qp = 5e3;
function Zp(e, r, t) {
  return e + (r - e) * t;
}
function J5(e) {
  var r = x({ opacity: 1 }, e.style);
  return e.color && !r.fill && (r.fill = e.color), r;
}
function tz(e) {
  var r = { fill: '#fff', fillOpacity: 0, lineWidth: 4 },
    t = bt({}, r, e.style);
  return (
    e.color && !t.stroke && (t.stroke = e.color),
    at(e.opacity) && (t.opacity = t.strokeOpacity = e.opacity),
    t
  );
}
function ez(e, r, t, n) {
  return r === 0
    ? [
        [e + ((1 / 2) * t) / Math.PI / 2, n / 2],
        [e + ((1 / 2) * t) / Math.PI, n],
        [e + t / 4, n],
      ]
    : r === 1
    ? [
        [e + (((1 / 2) * t) / Math.PI / 2) * (Math.PI - 2), n],
        [e + (((1 / 2) * t) / Math.PI / 2) * (Math.PI - 1), n / 2],
        [e + t / 4, 0],
      ]
    : r === 2
    ? [
        [e + ((1 / 2) * t) / Math.PI / 2, -n / 2],
        [e + ((1 / 2) * t) / Math.PI, -n],
        [e + t / 4, -n],
      ]
    : [
        [e + (((1 / 2) * t) / Math.PI / 2) * (Math.PI - 2), -n],
        [e + (((1 / 2) * t) / Math.PI / 2) * (Math.PI - 1), -n / 2],
        [e + t / 4, 0],
      ];
}
function rz(e, r, t, n, i, a, o) {
  for (var s = Math.ceil(((2 * e) / t) * 4) * 4, l = [], u = n; u < -Math.PI * 2; )
    u += Math.PI * 2;
  for (; u > 0; ) u -= Math.PI * 2;
  u = (u / Math.PI / 2) * t;
  var c = a - e + u - e * 2;
  l.push(['M', c, r]);
  for (var h = 0, f = 0; f < s; ++f) {
    var v = f % 4,
      d = ez((f * t) / 4, v, t, i);
    l.push(['C', d[0][0] + c, -d[0][1] + r, d[1][0] + c, -d[1][1] + r, d[2][0] + c, -d[2][1] + r]),
      f === s - 1 && (h = d[2][0]);
  }
  return l.push(['L', h + c, o + e]), l.push(['L', c, o + e]), l.push(['Z']), l;
}
function nz(e, r, t, n, i, a, o, s, l, u) {
  for (
    var c = i.fill, h = i.opacity, f = o.getBBox(), v = f.maxX - f.minX, d = f.maxY - f.minY, p = 0;
    p < n;
    p++
  ) {
    var g = n <= 1 ? 1 : p / (n - 1),
      y = a.addShape('path', {
        name: 'waterwave-path',
        attrs: {
          path: rz(s, f.minY + d * t, l, 0, v / 32, e, r),
          fill: c,
          opacity: Zp(0.2, 0.9, g) * h,
        },
      });
    try {
      if (u === !1) return;
      var m = Ec([['t', l, 0]]);
      y.stopAnimate(), y.animate({ matrix: m }, { duration: Zp(0.5 * qp, qp, g), repeat: !0 });
    } catch (b) {
      console.warn('off-screen group animate error!');
    }
  }
}
function iz(e, r, t, n) {
  var i = (t * 2) / 3,
    a = Math.max(i, n),
    o = i / 2,
    s = e,
    l = o + r - a / 2,
    u = Math.asin(o / ((a - o) * 0.85)),
    c = Math.sin(u) * o,
    h = Math.cos(u) * o,
    f = s - h,
    v = l + c,
    d = e,
    p = l + o / Math.sin(u);
  return `
      M `
    .concat(f, ' ')
    .concat(
      v,
      `
      A `,
    )
    .concat(o, ' ')
    .concat(o, ' 0 1 1 ')
    .concat(f + h * 2, ' ')
    .concat(
      v,
      `
      Q `,
    )
    .concat(d, ' ')
    .concat(p, ' ')
    .concat(e, ' ')
    .concat(
      r + a / 2,
      `
      Q `,
    )
    .concat(d, ' ')
    .concat(p, ' ')
    .concat(f, ' ')
    .concat(
      v,
      `
      Z 
    `,
    );
}
function az(e, r, t, n) {
  var i = t / 2,
    a = n / 2;
  return `
      M `
    .concat(e, ' ')
    .concat(
      r - a,
      ` 
      a `,
    )
    .concat(i, ' ')
    .concat(a, ' 0 1 0 0 ')
    .concat(
      a * 2,
      `
      a `,
    )
    .concat(i, ' ')
    .concat(a, ' 0 1 0 0 ')
    .concat(
      -a * 2,
      `
      Z
    `,
    );
}
function oz(e, r, t, n) {
  var i = n / 2,
    a = t / 2;
  return `
      M `
    .concat(e, ' ')
    .concat(
      r - i,
      `
      L `,
    )
    .concat(e + a, ' ')
    .concat(
      r,
      `
      L `,
    )
    .concat(e, ' ')
    .concat(
      r + i,
      `
      L `,
    )
    .concat(e - a, ' ')
    .concat(
      r,
      `
      Z
    `,
    );
}
function sz(e, r, t, n) {
  var i = n / 2,
    a = t / 2;
  return `
      M `
    .concat(e, ' ')
    .concat(
      r - i,
      `
      L `,
    )
    .concat(e + a, ' ')
    .concat(
      r + i,
      `
      L `,
    )
    .concat(e - a, ' ')
    .concat(
      r + i,
      `
      Z
    `,
    );
}
function lz(e, r, t, n) {
  var i = 0.618,
    a = n / 2,
    o = (t / 2) * i;
  return `
      M `
    .concat(e - o, ' ')
    .concat(
      r - a,
      `
      L `,
    )
    .concat(e + o, ' ')
    .concat(
      r - a,
      `
      L `,
    )
    .concat(e + o, ' ')
    .concat(
      r + a,
      `
      L `,
    )
    .concat(e - o, ' ')
    .concat(
      r + a,
      `
      Z
    `,
    );
}
var Kp = { pin: iz, circle: az, diamond: oz, triangle: sz, rect: lz };
gt('interval', 'liquid-fill-gauge', {
  draw: function (e, r) {
    var t = 0.5,
      n = 0.5,
      i = e.customInfo,
      a = i,
      o = a.percent,
      s = a.radius,
      l = a.shape,
      u = a.shapeStyle,
      c = a.background,
      h = a.animation,
      f = i.outline,
      v = i.wave,
      d = f.border,
      p = f.distance,
      g = v.count,
      y = v.length,
      m = ie(
        e.points,
        function (G, j) {
          return Math.min(G, j.x);
        },
        1 / 0,
      ),
      b = this.parsePoint({ x: t, y: n }),
      w = this.parsePoint({ x: m, y: n }),
      S = b.x - w.x,
      C = Math.min(S, w.y * s),
      F = J5(e),
      E = tz(bt({}, e, f)),
      I = C - d / 2,
      T = typeof l == 'function' ? l : Kp[l] || Kp.circle,
      P = T(b.x, b.y, I * 2, I * 2);
    if ((u && r.addShape('path', { name: 'shape', attrs: x({ path: P }, u) }), o > 0)) {
      var R = r.addGroup({ name: 'waves' }),
        B = R.setClip({ type: 'path', attrs: { path: P } });
      nz(b.x, b.y, 1 - e.points[1].y, g, F, R, B, C * 2, y, h);
    }
    return (
      r.addShape('path', {
        name: 'distance',
        attrs: {
          path: P,
          fill: 'transparent',
          lineWidth: d + p * 2,
          stroke: c === 'transparent' ? '#fff' : c,
        },
      }),
      r.addShape('path', {
        name: 'wrap',
        attrs: bt(E, { path: P, fill: 'transparent', lineWidth: d }),
      }),
      r
    );
  },
});
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'liquid'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return Q5;
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.changeData = function (t) {
      this.chart.emit(ut.BEFORE_CHANGE_DATA, Lt.fromData(this.chart, ut.BEFORE_CHANGE_DATA, null)),
        this.updateOption({ percent: t }),
        this.chart.data($1(t)),
        N1({ chart: this.chart, options: this.options }, !0),
        this.chart.emit(ut.AFTER_CHANGE_DATA, Lt.fromData(this.chart, ut.AFTER_CHANGE_DATA, null));
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return K5;
    }),
    r
  );
})(lt);
function uz(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = t.lineStyle,
    a = t.color,
    o = t.point,
    s = t.area;
  r.data(n);
  var l = O({}, e, {
      options: {
        line: { style: i, color: a },
        point: o && x({ color: a }, o),
        area: s && x({ color: a }, s),
        label: void 0,
      },
    }),
    u = O({}, l, { options: { tooltip: !1 } }),
    c = (o == null ? void 0 : o.state) || t.state,
    h = O({}, l, { options: { tooltip: !1, state: c } });
  return Li(l), Le(h), Fl(u), e;
}
function cz(e) {
  var r,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = t.xField,
    o = t.yField;
  return it(Rt(((r = {}), (r[a] = n), (r[o] = i), r)))(e);
}
function hz(e) {
  var r = e.chart,
    t = e.options,
    n = t.radius,
    i = t.startAngle,
    a = t.endAngle;
  return r.coordinate('polar', { radius: n, startAngle: i, endAngle: a }), e;
}
function fz(e) {
  var r = e.chart,
    t = e.options,
    n = t.xField,
    i = t.xAxis,
    a = t.yField,
    o = t.yAxis;
  return r.axis(n, i), r.axis(a, o), e;
}
function vz(e) {
  var r = e.chart,
    t = e.options,
    n = t.label,
    i = t.yField,
    a = te(r, 'line');
  if (!n) a.label(!1);
  else {
    var o = n.callback,
      s = wt(n, ['callback']);
    a.label({ fields: [i], callback: o, cfg: jt(s) });
  }
  return e;
}
function dz(e) {
  return it(uz, cz, vt, hz, fz, Ii, Wt, vz, It, St, Pt())(e);
}
var pz = (function (e) {
  k(r, e);
  function r() {
    return (e !== null && e.apply(this, arguments)) || this;
  }
  return (
    Object.defineProperty(r.prototype, 'name', {
      get: function () {
        return 'radar-tooltip';
      },
      enumerable: !1,
      configurable: !0,
    }),
    (r.prototype.getTooltipItems = function (t) {
      var n = this.getTooltipCfg(),
        i = n.shared,
        a = n.title,
        o = e.prototype.getTooltipItems.call(this, t);
      if (o.length > 0) {
        var s = this.view.geometries[0],
          l = s.dataArray,
          u = o[0].name,
          c = [];
        return (
          l.forEach(function (h) {
            h.forEach(function (f) {
              var v = me.getTooltipItems(f, s),
                d = v[0];
              if (!i && d && d.name === u) {
                var p = $(a) ? u : a;
                c.push(x(x({}, d), { name: d.title, title: p }));
              } else if (i && d) {
                var p = $(a) ? d.name || u : a;
                c.push(x(x({}, d), { name: d.title, title: p }));
              }
            });
          }),
          c
        );
      }
      return [];
    }),
    r
  );
})(jm);
zn('radar-tooltip', pz);
var gz = (function (e) {
  k(r, e);
  function r() {
    return (e !== null && e.apply(this, arguments)) || this;
  }
  return (
    (r.prototype.init = function () {
      var t = this.context.view;
      t.removeInteraction('tooltip');
    }),
    (r.prototype.show = function () {
      var t = this.context.event,
        n = this.getTooltipController();
      n.showTooltip({ x: t.x, y: t.y });
    }),
    (r.prototype.hide = function () {
      var t = this.getTooltipController();
      t.hideTooltip();
    }),
    (r.prototype.getTooltipController = function () {
      var t = this.context.view;
      return t.getController('radar-tooltip');
    }),
    r
  );
})(Ft);
Q('radar-tooltip', gz);
ot('radar-tooltip', {
  start: [{ trigger: 'plot:mousemove', action: 'radar-tooltip:show' }],
  end: [{ trigger: 'plot:mouseleave', action: 'radar-tooltip:hide' }],
});
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'radar'), t;
  }
  return (
    (r.prototype.changeData = function (t) {
      this.updateOption({ data: t }), this.chart.changeData(t);
    }),
    (r.prototype.getDefaultOptions = function () {
      return O({}, e.prototype.getDefaultOptions.call(this), {
        xAxis: { label: { offset: 15 }, grid: { line: { type: 'line' } } },
        yAxis: { grid: { line: { type: 'circle' } } },
        legend: { position: 'top' },
        tooltip: {
          shared: !0,
          showCrosshairs: !0,
          showMarkers: !0,
          crosshairs: {
            type: 'xy',
            line: { style: { stroke: '#565656', lineDash: [4] } },
            follow: !0,
          },
        },
      });
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return dz;
    }),
    r
  );
})(lt);
function yz(e, r, t) {
  var n = t
      .map(function (o) {
        return o[r];
      })
      .filter(function (o) {
        return o !== void 0;
      }),
    i = n.length > 0 ? Math.max.apply(Math, n) : 0,
    a = Math.abs(e) % 360;
  return a ? (i * 360) / a : i;
}
function mz(e, r, t) {
  var n = [];
  return (
    e.forEach(function (i) {
      var a = n.find(function (o) {
        return o[r] === i[r];
      });
      a ? (a[t] += i[t] || null) : n.push(x({}, i));
    }),
    n
  );
}
function xz(e) {
  var r = e.chart,
    t = e.options,
    n = t.barStyle,
    i = t.color,
    a = t.tooltip,
    o = t.colorField,
    s = t.type,
    l = t.xField,
    u = t.yField,
    c = t.data,
    h = t.shape,
    f = yi(c, u);
  r.data(f);
  var v = O({}, e, {
    options: {
      tooltip: a,
      seriesField: o,
      interval: { style: n, color: i, shape: h || (s === 'line' ? 'line' : 'intervel') },
      minColumnWidth: t.minBarWidth,
      maxColumnWidth: t.maxBarWidth,
      columnBackground: t.barBackground,
    },
  });
  return (
    ee(v),
    s === 'line' &&
      Le({
        chart: r,
        options: { xField: l, yField: u, seriesField: o, point: { shape: 'circle', color: i } },
      }),
    e
  );
}
function z1(e) {
  var r,
    t = e.options,
    n = t.yField,
    i = t.xField,
    a = t.data,
    o = t.isStack,
    s = t.isGroup,
    l = t.colorField,
    u = t.maxAngle,
    c = o && !s && l ? mz(a, i, n) : a,
    h = yi(c, n);
  return it(Rt(((r = {}), (r[n] = { min: 0, max: yz(u, n, h) }), r)))(e);
}
function wz(e) {
  var r = e.chart,
    t = e.options,
    n = t.radius,
    i = t.innerRadius,
    a = t.startAngle,
    o = t.endAngle;
  return (
    r
      .coordinate({ type: 'polar', cfg: { radius: n, innerRadius: i, startAngle: a, endAngle: o } })
      .transpose(),
    e
  );
}
function bz(e) {
  var r = e.chart,
    t = e.options,
    n = t.xField,
    i = t.xAxis;
  return r.axis(n, i), e;
}
function Sz(e) {
  var r = e.chart,
    t = e.options,
    n = t.label,
    i = t.yField,
    a = te(r, 'interval');
  if (!n) a.label(!1);
  else {
    var o = n.callback,
      s = wt(n, ['callback']);
    a.label({ fields: [i], callback: o, cfg: x(x({}, jt(s)), { type: 'polar' }) });
  }
  return e;
}
function Cz(e) {
  return it(Ie('barStyle'), xz, z1, bz, wz, It, St, vt, Wt, Ii, Pt(), Sz)(e);
}
var Mz = O({}, lt.getDefaultOptions(), {
  interactions: [{ type: 'element-active' }],
  legend: !1,
  tooltip: { showMarkers: !1 },
  xAxis: { grid: null, tickLine: null, line: null },
  maxAngle: 240,
});
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'radial-bar'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return Mz;
    }),
    (r.prototype.changeData = function (t) {
      this.updateOption({ data: t }),
        z1({ chart: this.chart, options: this.options }),
        this.chart.changeData(t);
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return Cz;
    }),
    r
  );
})(lt);
function Az(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = t.sectorStyle,
    a = t.shape,
    o = t.color;
  return (
    r.data(n),
    it(ee)(O({}, e, { options: { marginRatio: 1, interval: { style: i, color: o, shape: a } } })),
    e
  );
}
function Fz(e) {
  var r = e.chart,
    t = e.options,
    n = t.label,
    i = t.xField,
    a = te(r, 'interval');
  if (n === !1) a.label(!1);
  else if (xt(n)) {
    var o = n.callback,
      s = n.fields,
      l = wt(n, ['callback', 'fields']),
      u = l.offset,
      c = l.layout;
    (u === void 0 || u >= 0) &&
      ((c = c ? (N(c) ? c : [c]) : []),
      (l.layout = Jt(c, function (h) {
        return h.type !== 'limit-in-shape';
      })),
      l.layout.length || delete l.layout),
      a.label({ fields: s || [i], callback: o, cfg: jt(l) });
  } else Fr(qe.WARN, n === null, 'the label option must be an Object.'), a.label({ fields: [i] });
  return e;
}
function Ez(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend,
    i = t.seriesField;
  return n === !1 ? r.legend(!1) : i && r.legend(i, n), e;
}
function Tz(e) {
  var r = e.chart,
    t = e.options,
    n = t.radius,
    i = t.innerRadius,
    a = t.startAngle,
    o = t.endAngle;
  return (
    r.coordinate({ type: 'polar', cfg: { radius: n, innerRadius: i, startAngle: a, endAngle: o } }),
    e
  );
}
function kz(e) {
  var r,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = t.xField,
    o = t.yField;
  return it(Rt(((r = {}), (r[a] = n), (r[o] = i), r)))(e);
}
function Iz(e) {
  var r = e.chart,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = t.xField,
    o = t.yField;
  return n ? r.axis(a, n) : r.axis(a, !1), i ? r.axis(o, i) : r.axis(o, !1), e;
}
function Lz(e) {
  it(Ie('sectorStyle'), Az, kz, Fz, Tz, Iz, Ez, Wt, It, St, vt, Pt(), on)(e);
}
var Pz = O({}, lt.getDefaultOptions(), {
  xAxis: !1,
  yAxis: !1,
  legend: { position: 'right', radio: {} },
  sectorStyle: { stroke: '#fff', lineWidth: 1 },
  label: { layout: { type: 'limit-in-shape' } },
  tooltip: { shared: !0, showMarkers: !1 },
  interactions: [{ type: 'active-region' }],
});
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'rose'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return Pz;
    }),
    (r.prototype.changeData = function (t) {
      this.updateOption({ data: t }), this.chart.changeData(t);
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return Lz;
    }),
    r
  );
})(lt);
var Qp = 'x',
  Jp = 'y',
  tg = 'name',
  Bl = 'nodes',
  Rl = 'edges';
function Oz(e, r, t) {
  var n = [];
  return (
    e.forEach(function (i) {
      var a = i[r],
        o = i[t];
      n.includes(a) || n.push(a), n.includes(o) || n.push(o);
    }),
    n
  );
}
function Dz(e, r, t, n) {
  var i = {};
  return (
    r.forEach(function (a) {
      (i[a] = {}),
        r.forEach(function (o) {
          i[a][o] = 0;
        });
    }),
    e.forEach(function (a) {
      i[a[t]][a[n]] = 1;
    }),
    i
  );
}
function Bz(e, r, t) {
  if (!N(e)) return [];
  var n = [],
    i = Oz(e, r, t),
    a = Dz(e, i, r, t),
    o = {};
  i.forEach(function (l) {
    o[l] = 0;
  });
  function s(l) {
    (o[l] = 1),
      i.forEach(function (u) {
        if (a[l][u] != 0)
          if (o[u] == 1) n.push(''.concat(l, '_').concat(u));
          else {
            if (o[u] == -1) return;
            s(u);
          }
      }),
      (o[l] = -1);
  }
  return (
    i.forEach(function (l) {
      o[l] != -1 && s(l);
    }),
    n.length !== 0 &&
      console.warn('sankey data contains circle, '.concat(n.length, ' records removed.'), n),
    e.filter(function (l) {
      return (
        n.findIndex(function (u) {
          return u === ''.concat(l[r], '_').concat(l[t]);
        }) < 0
      );
    })
  );
}
function Rz(e) {
  return e.target.depth;
}
function $z(e) {
  return e.depth;
}
function Nz(e, r) {
  return r - 1 - e.height;
}
function xf(e, r) {
  return e.sourceLinks.length ? e.depth : r - 1;
}
function zz(e) {
  return e.targetLinks.length ? e.depth : e.sourceLinks.length ? KS(e.sourceLinks, Rz) - 1 : 0;
}
function Wo(e) {
  return function () {
    return e;
  };
}
function Tu(e, r) {
  for (var t = 0, n = 0; n < e.length; n++) t += r(e[n]);
  return t;
}
function ku(e, r) {
  for (var t = -1 / 0, n = 0; n < e.length; n++) t = Math.max(r(e[n]), t);
  return t;
}
function Gz(e, r) {
  for (var t = 1 / 0, n = 0; n < e.length; n++) t = Math.min(r(e[n]), t);
  return t;
}
function eg(e, r) {
  return Is(e.source, r.source) || e.index - r.index;
}
function rg(e, r) {
  return Is(e.target, r.target) || e.index - r.index;
}
function Is(e, r) {
  return e.y0 - r.y0;
}
function Iu(e) {
  return e.value;
}
function Vz(e) {
  return e.index;
}
function Hz(e) {
  return e.nodes;
}
function Yz(e) {
  return e.links;
}
function ng(e, r) {
  var t = e.get(r);
  if (!t) throw new Error('missing: ' + r);
  return t;
}
function ig(e) {
  for (var r = e.nodes, t = 0, n = r; t < n.length; t++) {
    for (var i = n[t], a = i.y0, o = a, s = 0, l = i.sourceLinks; s < l.length; s++) {
      var u = l[s];
      (u.y0 = a + u.width / 2), (a += u.width);
    }
    for (var c = 0, h = i.targetLinks; c < h.length; c++) {
      var u = h[c];
      (u.y1 = o + u.width / 2), (o += u.width);
    }
  }
}
function Wz() {
  var e = 0,
    r = 0,
    t = 1,
    n = 1,
    i = 24,
    a = 8,
    o,
    s = Vz,
    l = xf,
    u,
    c,
    h,
    f = Hz,
    v = Yz,
    d = 6;
  function p(D) {
    var z = { nodes: f(D), links: v(D) };
    return g(z), y(z), m(z), b(z), C(z), ig(z), z;
  }
  (p.update = function (D) {
    return ig(D), D;
  }),
    (p.nodeId = function (D) {
      return arguments.length ? ((s = typeof D == 'function' ? D : Wo(D)), p) : s;
    }),
    (p.nodeAlign = function (D) {
      return arguments.length ? ((l = typeof D == 'function' ? D : Wo(D)), p) : l;
    }),
    (p.nodeDepth = function (D) {
      return arguments.length ? ((u = D), p) : u;
    }),
    (p.nodeSort = function (D) {
      return arguments.length ? ((c = D), p) : c;
    }),
    (p.nodeWidth = function (D) {
      return arguments.length ? ((i = +D), p) : i;
    }),
    (p.nodePadding = function (D) {
      return arguments.length ? ((a = o = +D), p) : a;
    }),
    (p.nodes = function (D) {
      return arguments.length ? ((f = typeof D == 'function' ? D : Wo(D)), p) : f;
    }),
    (p.links = function (D) {
      return arguments.length ? ((v = typeof D == 'function' ? D : Wo(D)), p) : v;
    }),
    (p.linkSort = function (D) {
      return arguments.length ? ((h = D), p) : h;
    }),
    (p.size = function (D) {
      return arguments.length ? ((e = r = 0), (t = +D[0]), (n = +D[1]), p) : [t - e, n - r];
    }),
    (p.extent = function (D) {
      return arguments.length
        ? ((e = +D[0][0]), (t = +D[1][0]), (r = +D[0][1]), (n = +D[1][1]), p)
        : [
            [e, r],
            [t, n],
          ];
    }),
    (p.iterations = function (D) {
      return arguments.length ? ((d = +D), p) : d;
    });
  function g(D) {
    var z = D.nodes,
      X = D.links;
    z.forEach(function (K, nt) {
      (K.index = nt), (K.sourceLinks = []), (K.targetLinks = []);
    });
    var Y = new Map(
      z.map(function (K) {
        return [s(K), K];
      }),
    );
    if (
      (X.forEach(function (K, nt) {
        K.index = nt;
        var st = K.source,
          ft = K.target;
        typeof st != 'object' && (st = K.source = ng(Y, st)),
          typeof ft != 'object' && (ft = K.target = ng(Y, ft)),
          st.sourceLinks.push(K),
          ft.targetLinks.push(K);
      }),
      h != null)
    )
      for (var V = 0, W = z; V < W.length; V++) {
        var tt = W[V],
          rt = tt.sourceLinks,
          Z = tt.targetLinks;
        rt.sort(h), Z.sort(h);
      }
  }
  function y(D) {
    for (var z = D.nodes, X = 0, Y = z; X < Y.length; X++) {
      var V = Y[X];
      V.value =
        V.fixedValue === void 0
          ? Math.max(Tu(V.sourceLinks, Iu), Tu(V.targetLinks, Iu))
          : V.fixedValue;
    }
  }
  function m(D) {
    for (var z = D.nodes, X = z.length, Y = new Set(z), V = new Set(), W = 0; Y.size; ) {
      if (
        (Y.forEach(function (K) {
          K.depth = W;
          for (var nt = 0, st = K.sourceLinks; nt < st.length; nt++) {
            var ft = st[nt].target;
            V.add(ft);
          }
        }),
        ++W > X)
      )
        throw new Error('circular link');
      (Y = V), (V = new Set());
    }
    if (u)
      for (
        var tt = Math.max(
            ku(z, function (K) {
              return K.depth;
            }) + 1,
            0,
          ),
          rt = void 0,
          Z = 0;
        Z < z.length;
        Z++
      )
        (rt = z[Z]), (rt.depth = u.call(null, rt, tt));
  }
  function b(D) {
    for (var z = D.nodes, X = z.length, Y = new Set(z), V = new Set(), W = 0; Y.size; ) {
      if (
        (Y.forEach(function (tt) {
          tt.height = W;
          for (var rt = 0, Z = tt.targetLinks; rt < Z.length; rt++) {
            var K = Z[rt].source;
            V.add(K);
          }
        }),
        ++W > X)
      )
        throw new Error('circular link');
      (Y = V), (V = new Set());
    }
  }
  function w(D) {
    for (
      var z = D.nodes,
        X = Math.max(
          ku(z, function (ft) {
            return ft.depth;
          }) + 1,
          0,
        ),
        Y = (t - e - i) / (X - 1),
        V = new Array(X).fill(0).map(function () {
          return [];
        }),
        W = 0,
        tt = z;
      W < tt.length;
      W++
    ) {
      var rt = tt[W],
        Z = Math.max(0, Math.min(X - 1, Math.floor(l.call(null, rt, X))));
      (rt.layer = Z),
        (rt.x0 = e + Z * Y),
        (rt.x1 = rt.x0 + i),
        V[Z] ? V[Z].push(rt) : (V[Z] = [rt]);
    }
    if (c)
      for (var K = 0, nt = V; K < nt.length; K++) {
        var st = nt[K];
        st.sort(c);
      }
    return V;
  }
  function S(D) {
    for (
      var z = Gz(D, function (Et) {
          return (n - r - (Et.length - 1) * o) / Tu(Et, Iu);
        }),
        X = 0,
        Y = D;
      X < Y.length;
      X++
    ) {
      for (var V = Y[X], W = r, tt = 0, rt = V; tt < rt.length; tt++) {
        var Z = rt[tt];
        (Z.y0 = W), (Z.y1 = W + Z.value * z), (W = Z.y1 + o);
        for (var K = 0, nt = Z.sourceLinks; K < nt.length; K++) {
          var st = nt[K];
          st.width = st.value * z;
        }
      }
      W = (n - W + o) / (V.length + 1);
      for (var ft = 0; ft < V.length; ++ft) {
        var Z = V[ft];
        (Z.y0 += W * (ft + 1)), (Z.y1 += W * (ft + 1));
      }
      B(V);
    }
  }
  function C(D) {
    var z = w(D);
    (o = Math.min(
      a,
      (n - r) /
        (ku(z, function (W) {
          return W.length;
        }) -
          1),
    )),
      S(z);
    for (var X = 0; X < d; ++X) {
      var Y = Math.pow(0.99, X),
        V = Math.max(1 - Y, (X + 1) / d);
      E(z, Y, V), F(z, Y, V);
    }
  }
  function F(D, z, X) {
    for (var Y = 1, V = D.length; Y < V; ++Y) {
      for (var W = D[Y], tt = 0, rt = W; tt < rt.length; tt++) {
        for (var Z = rt[tt], K = 0, nt = 0, st = 0, ft = Z.targetLinks; st < ft.length; st++) {
          var Et = ft[st],
            Yt = Et.source,
            Se = Et.value,
            fr = Se * (Z.layer - Yt.layer);
          (K += G(Yt, Z) * fr), (nt += fr);
        }
        if (nt > 0) {
          var sn = (K / nt - Z.y0) * z;
          (Z.y0 += sn), (Z.y1 += sn), R(Z);
        }
      }
      c === void 0 && W.sort(Is), W.length && I(W, X);
    }
  }
  function E(D, z, X) {
    for (var Y = D.length, V = Y - 2; V >= 0; --V) {
      for (var W = D[V], tt = 0, rt = W; tt < rt.length; tt++) {
        for (var Z = rt[tt], K = 0, nt = 0, st = 0, ft = Z.sourceLinks; st < ft.length; st++) {
          var Et = ft[st],
            Yt = Et.target,
            Se = Et.value,
            fr = Se * (Yt.layer - Z.layer);
          (K += j(Z, Yt) * fr), (nt += fr);
        }
        if (nt > 0) {
          var sn = (K / nt - Z.y0) * z;
          (Z.y0 += sn), (Z.y1 += sn), R(Z);
        }
      }
      c === void 0 && W.sort(Is), W.length && I(W, X);
    }
  }
  function I(D, z) {
    var X = D.length >> 1,
      Y = D[X];
    P(D, Y.y0 - o, X - 1, z), T(D, Y.y1 + o, X + 1, z), P(D, n, D.length - 1, z), T(D, r, 0, z);
  }
  function T(D, z, X, Y) {
    for (; X < D.length; ++X) {
      var V = D[X],
        W = (z - V.y0) * Y;
      W > 1e-6 && ((V.y0 += W), (V.y1 += W)), (z = V.y1 + o);
    }
  }
  function P(D, z, X, Y) {
    for (; X >= 0; --X) {
      var V = D[X],
        W = (V.y1 - z) * Y;
      W > 1e-6 && ((V.y0 -= W), (V.y1 -= W)), (z = V.y0 - o);
    }
  }
  function R(D) {
    var z = D.sourceLinks,
      X = D.targetLinks;
    if (h === void 0) {
      for (var Y = 0, V = X; Y < V.length; Y++) {
        var W = V[Y].source.sourceLinks;
        W.sort(rg);
      }
      for (var tt = 0, rt = z; tt < rt.length; tt++) {
        var Z = rt[tt].target.targetLinks;
        Z.sort(eg);
      }
    }
  }
  function B(D) {
    if (h === void 0)
      for (var z = 0, X = D; z < X.length; z++) {
        var Y = X[z],
          V = Y.sourceLinks,
          W = Y.targetLinks;
        V.sort(rg), W.sort(eg);
      }
  }
  function G(D, z) {
    for (
      var X = D.y0 - ((D.sourceLinks.length - 1) * o) / 2, Y = 0, V = D.sourceLinks;
      Y < V.length;
      Y++
    ) {
      var W = V[Y],
        tt = W.target,
        rt = W.width;
      if (tt === z) break;
      X += rt + o;
    }
    for (var Z = 0, K = z.targetLinks; Z < K.length; Z++) {
      var nt = K[Z],
        tt = nt.source,
        rt = nt.width;
      if (tt === D) break;
      X -= rt;
    }
    return X;
  }
  function j(D, z) {
    for (
      var X = z.y0 - ((z.targetLinks.length - 1) * o) / 2, Y = 0, V = z.targetLinks;
      Y < V.length;
      Y++
    ) {
      var W = V[Y],
        tt = W.source,
        rt = W.width;
      if (tt === D) break;
      X += rt + o;
    }
    for (var Z = 0, K = D.sourceLinks; Z < K.length; Z++) {
      var nt = K[Z],
        tt = nt.target,
        rt = nt.width;
      if (tt === z) break;
      X -= rt;
    }
    return X;
  }
  return p;
}
var Xz = { left: $z, right: Nz, center: zz, justify: xf },
  _z = {
    nodeId: function (e) {
      return e.index;
    },
    nodeAlign: 'justify',
    nodeWidth: 0.008,
    nodePadding: 0.03,
    nodeSort: void 0,
  };
function jz(e) {
  var r = et(e) ? Xz[e] : U(e) ? e : null;
  return r || xf;
}
function Uz(e) {
  return bt({}, _z, e);
}
function qz(e, r) {
  var t = Uz(e),
    n = t.nodeId,
    i = t.nodeSort,
    a = t.nodeAlign,
    o = t.nodeWidth,
    s = t.nodePadding,
    l = t.nodeDepth,
    u = Wz()
      .nodeSort(i)
      .nodeWidth(o)
      .nodePadding(s)
      .nodeDepth(l)
      .nodeAlign(jz(a))
      .extent([
        [0, 0],
        [1, 1],
      ])
      .nodeId(n),
    c = u(r),
    h = c.nodes
      .map(function (v) {
        var d = v.x0,
          p = v.x1,
          g = v.y0,
          y = v.y1;
        return (v.x = [d, p, p, d]), (v.y = [g, g, y, y]), v;
      })
      .filter(function (v) {
        return v.name !== null;
      }),
    f = c.links
      .map(function (v) {
        var d = v.source,
          p = v.target,
          g = d.x1,
          y = p.x0;
        v.x = [g, g, y, y];
        var m = v.width / 2;
        return (v.y = [v.y0 + m, v.y0 - m, v.y1 + m, v.y1 - m]), v;
      })
      .filter(function (v) {
        var d = v.source,
          p = v.target;
        return d.name !== null && p.name !== null;
      });
  return { nodes: h, links: f };
}
function Zz(e) {
  return e === 'node-link';
}
function Kz(e, r, t) {
  return Bn(e) ? e / t : r;
}
function Qz(e, r, t) {
  return Bn(e) ? e / t : r;
}
function G1(e, r, t) {
  var n = e.dataType,
    i = e.data,
    a = e.sourceField,
    o = e.targetField,
    s = e.weightField,
    l = e.nodeAlign,
    u = e.nodeSort,
    c = e.nodePadding,
    h = e.nodePaddingRatio,
    f = e.nodeWidth,
    v = e.nodeWidthRatio,
    d = e.nodeDepth,
    p = e.rawFields,
    g = p === void 0 ? [] : p,
    y;
  Zz(n) ? (y = i) : (y = rx(Bz(i, a, o), a, o, s, g));
  var m = qz(
      { nodeAlign: l, nodePadding: Qz(c, h, t), nodeWidth: Kz(f, v, r), nodeSort: u, nodeDepth: d },
      y,
    ),
    b = m.nodes,
    w = m.links;
  return {
    nodes: b.map(function (S) {
      return x(x({}, mt(S, J(['x', 'y', 'name'], g, !0))), { isNode: !0 });
    }),
    edges: w.map(function (S) {
      return x(
        x(
          { source: S.source.name, target: S.target.name, name: S.source.name || S.target.name },
          mt(S, J(['x', 'y', 'value'], g, !0)),
        ),
        { isNode: !1 },
      );
    }),
  };
}
function Jz(e) {
  var r = e.options,
    t = r.rawFields,
    n = t === void 0 ? [] : t;
  return O(
    {},
    {
      options: {
        tooltip: { fields: In(J(['name', 'source', 'target', 'value', 'isNode'], n, !0)) },
        label: { fields: In(J(['x', 'name'], n, !0)) },
      },
    },
    e,
  );
}
function tG(e) {
  var r = e.chart,
    t = e.options,
    n = t.color,
    i = t.nodeStyle,
    a = t.edgeStyle,
    o = t.label,
    s = t.tooltip,
    l = t.nodeState,
    u = t.edgeState,
    c = t.rawFields,
    h = c === void 0 ? [] : c;
  r.legend(!1), r.tooltip(s), r.axis(!1), r.coordinate().reflect('y');
  var f = G1(t, r.width, r.height),
    v = f.nodes,
    d = f.edges,
    p = r.createView({ id: Rl });
  p.data(d),
    fx({
      chart: p,
      options: {
        xField: Qp,
        yField: Jp,
        seriesField: tg,
        rawFields: J(['source', 'target'], h, !0),
        edge: { color: n, style: a, shape: 'arc' },
        tooltip: s,
        state: u,
      },
    });
  var g = r.createView({ id: Bl });
  return (
    g.data(v),
    El({
      chart: g,
      options: {
        xField: Qp,
        yField: Jp,
        seriesField: tg,
        polygon: { color: n, style: i },
        label: o,
        tooltip: s,
        state: l,
      },
    }),
    r.interaction('element-active'),
    r.scale({
      x: { sync: !0, nice: !0, min: 0, max: 1, minLimit: 0, maxLimit: 1 },
      y: { sync: !0, nice: !0, min: 0, max: 1, minLimit: 0, maxLimit: 1 },
      name: { sync: 'color', type: 'cat' },
    }),
    e
  );
}
function eG(e) {
  var r = e.chart,
    t = e.options,
    n = t.animation,
    i = J(J([], r.views[0].geometries, !0), r.views[1].geometries, !0);
  return eo(r, n, i), e;
}
function rG(e) {
  var r = e.chart,
    t = e.options,
    n = t.nodeDraggable,
    i = 'sankey-node-draggable';
  return n ? r.interaction(i) : r.removeInteraction(i), e;
}
function nG(e) {
  var r = e.chart,
    t = e.options,
    n = t.interactions,
    i = n === void 0 ? [] : n,
    a = [].concat(i, t.nodeInteractions || []),
    o = [].concat(i, t.edgeInteractions || []),
    s = ct(r, Bl),
    l = ct(r, Rl);
  return (
    a.forEach(function (u) {
      (u == null ? void 0 : u.enable) === !1
        ? s.removeInteraction(u.type)
        : s.interaction(u.type, u.cfg || {});
    }),
    o.forEach(function (u) {
      (u == null ? void 0 : u.enable) === !1
        ? l.removeInteraction(u.type)
        : l.interaction(u.type, u.cfg || {});
    }),
    e
  );
}
function iG(e) {
  return it(Jz, tG, nG, rG, eG, vt)(e);
}
var aG = (function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.isDragging = !1), t;
  }
  return (
    (r.prototype.isNodeElement = function () {
      var t = A(this.context, 'event.target');
      if (t) {
        var n = t.get('element');
        return n && n.getModel().data.isNode;
      }
      return !1;
    }),
    (r.prototype.getNodeView = function () {
      return ct(this.context.view, Bl);
    }),
    (r.prototype.getEdgeView = function () {
      return ct(this.context.view, Rl);
    }),
    (r.prototype.getCurrentDatumIdx = function (t) {
      return this.getNodeView().geometries[0].elements.indexOf(t);
    }),
    (r.prototype.start = function () {
      if (this.isNodeElement()) {
        this.prevPoint = { x: A(this.context, 'event.x'), y: A(this.context, 'event.y') };
        var t = this.context.event.target.get('element'),
          n = this.getCurrentDatumIdx(t);
        if (n === -1) return;
        (this.currentElementIdx = n),
          (this.context.isDragging = !0),
          (this.isDragging = !0),
          (this.prevNodeAnimateCfg = this.getNodeView().getOptions().animate),
          (this.prevEdgeAnimateCfg = this.getEdgeView().getOptions().animate),
          this.getNodeView().animate(!1),
          this.getEdgeView().animate(!1);
      }
    }),
    (r.prototype.translate = function () {
      if (this.isDragging) {
        var t = this.context.view,
          n = { x: A(this.context, 'event.x'), y: A(this.context, 'event.y') },
          i = n.x - this.prevPoint.x,
          a = n.y - this.prevPoint.y,
          o = this.getNodeView(),
          s = o.geometries[0].elements[this.currentElementIdx];
        if (s && s.getModel()) {
          var l = s.getModel().data,
            u = o.getOptions().data,
            c = o.getCoordinate(),
            h = { x: i / c.getWidth(), y: a / c.getHeight() },
            f = x(x({}, l), {
              x: l.x.map(function (y) {
                return (y += h.x);
              }),
              y: l.y.map(function (y) {
                return (y += h.y);
              }),
            }),
            v = J([], u, !0);
          (v[this.currentElementIdx] = f), o.data(v);
          var d = l.name,
            p = this.getEdgeView(),
            g = p.getOptions().data;
          g.forEach(function (y) {
            y.source === d && ((y.x[0] += h.x), (y.x[1] += h.x), (y.y[0] += h.y), (y.y[1] += h.y)),
              y.target === d &&
                ((y.x[2] += h.x), (y.x[3] += h.x), (y.y[2] += h.y), (y.y[3] += h.y));
          }),
            p.data(g),
            (this.prevPoint = n),
            t.render(!0);
        }
      }
    }),
    (r.prototype.end = function () {
      (this.isDragging = !1),
        (this.context.isDragging = !1),
        (this.prevPoint = null),
        (this.currentElementIdx = null),
        this.getNodeView().animate(this.prevNodeAnimateCfg),
        this.getEdgeView().animate(this.prevEdgeAnimateCfg);
    }),
    r
  );
})(Ft);
Q('sankey-node-drag', aG);
ot('sankey-node-draggable', {
  showEnable: [
    { trigger: 'polygon:mouseenter', action: 'cursor:pointer' },
    { trigger: 'polygon:mouseleave', action: 'cursor:default' },
  ],
  start: [{ trigger: 'polygon:mousedown', action: 'sankey-node-drag:start' }],
  processing: [
    { trigger: 'plot:mousemove', action: 'sankey-node-drag:translate' },
    {
      isEnable: function (e) {
        return e.isDragging;
      },
      trigger: 'plot:mousemove',
      action: 'cursor:move',
    },
  ],
  end: [{ trigger: 'plot:mouseup', action: 'sankey-node-drag:end' }],
});
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'sankey'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return {
        appendPadding: 8,
        syncViewPadding: !0,
        nodeStyle: { opacity: 1, fillOpacity: 1, lineWidth: 1 },
        edgeStyle: { opacity: 0.3, lineWidth: 0 },
        edgeState: { active: { style: { opacity: 0.8, lineWidth: 0 } } },
        label: {
          formatter: function (t) {
            var n = t.name;
            return n;
          },
          callback: function (t) {
            var n = t[1] === 1;
            return {
              style: { fill: '#545454', textAlign: n ? 'end' : 'start' },
              offsetX: n ? -8 : 8,
            };
          },
          layout: [{ type: 'hide-overlap' }],
        },
        tooltip: {
          showTitle: !1,
          showMarkers: !1,
          shared: !1,
          showContent: function (t) {
            return !A(t, [0, 'data', 'isNode']);
          },
          formatter: function (t) {
            var n = t.source,
              i = t.target,
              a = t.value;
            return { name: n + ' -> ' + i, value: a };
          },
        },
        nodeWidthRatio: 0.008,
        nodePaddingRatio: 0.01,
        animation: { appear: { animation: 'wave-in' }, enter: { animation: 'wave-in' } },
      };
    }),
    (r.prototype.changeData = function (t) {
      this.updateOption({ data: t });
      var n = G1(this.options, this.chart.width, this.chart.height),
        i = n.nodes,
        a = n.edges,
        o = ct(this.chart, Bl),
        s = ct(this.chart, Rl);
      o.changeData(i), s.changeData(a);
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return iG;
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    r
  );
})(lt);
var wf = 'ancestor-node',
  V1 = 'value',
  Va = 'path',
  oG = [Va, P1, pf, O1, 'name', 'depth', 'height'],
  sG = O({}, lt.getDefaultOptions(), {
    innerRadius: 0,
    radius: 0.85,
    hierarchyConfig: { field: 'value' },
    tooltip: { shared: !0, showMarkers: !1, offset: 20, showTitle: !1 },
    legend: !1,
    sunburstStyle: { lineWidth: 0.5, stroke: '#FFF' },
    drilldown: { enabled: !0 },
  }),
  lG = {
    field: 'value',
    size: [1, 1],
    round: !1,
    padding: 0,
    sort: function (e, r) {
      return r.value - e.value;
    },
    as: ['x', 'y'],
    ignoreParentValue: !0,
  };
function uG(e, r) {
  r = bt({}, lG, r);
  var t = r.as;
  if (!N(t) || t.length !== 2)
    throw new TypeError('Invalid as: it must be an array with 2 strings (e.g. [ "x", "y" ])!');
  var n;
  try {
    n = gf(r);
  } catch (l) {
    console.warn(l);
  }
  var i = function (l) {
      return E1().size(r.size).round(r.round).padding(r.padding)(
        Di(l)
          .sum(function (u) {
            return _t(u.children)
              ? r.ignoreParentValue
                ? 0
                : u[n] -
                  ie(
                    u.children,
                    function (c, h) {
                      return c + h[n];
                    },
                    0,
                  )
              : u[n];
          })
          .sort(r.sort),
      );
    },
    a = i(e),
    o = t[0],
    s = t[1];
  return (
    a.each(function (l) {
      var u, c;
      (l[o] = [l.x0, l.x1, l.x1, l.x0]),
        (l[s] = [l.y1, l.y1, l.y0, l.y0]),
        (l.name =
          l.name ||
          ((u = l.data) === null || u === void 0 ? void 0 : u.name) ||
          ((c = l.data) === null || c === void 0 ? void 0 : c.label)),
        (l.data.name = l.name),
        ['x0', 'x1', 'y0', 'y1'].forEach(function (h) {
          t.indexOf(h) === -1 && delete l[h];
        });
    }),
    yf(a)
  );
}
var cG = {
  field: 'value',
  tile: 'treemapSquarify',
  size: [1, 1],
  round: !1,
  ignoreParentValue: !0,
  padding: 0,
  paddingInner: 0,
  paddingOuter: 0,
  paddingTop: 0,
  paddingRight: 0,
  paddingBottom: 0,
  paddingLeft: 0,
  as: ['x', 'y'],
  sort: function (e, r) {
    return r.value - e.value;
  },
  ratio: 0.5 * (1 + Math.sqrt(5)),
};
function hG(e, r) {
  return e === 'treemapSquarify' ? Vp[e].ratio(r) : Vp[e];
}
function H1(e, r) {
  r = bt({}, cG, r);
  var t = r.as;
  if (!N(t) || t.length !== 2)
    throw new TypeError('Invalid as: it must be an array with 2 strings (e.g. [ "x", "y" ])!');
  var n;
  try {
    n = gf(r);
  } catch (u) {
    console.warn(u);
  }
  var i = hG(r.tile, r.ratio),
    a = function (u) {
      return L1()
        .tile(i)
        .size(r.size)
        .round(r.round)
        .padding(r.padding)
        .paddingInner(r.paddingInner)
        .paddingOuter(r.paddingOuter)
        .paddingTop(r.paddingTop)
        .paddingRight(r.paddingRight)
        .paddingBottom(r.paddingBottom)
        .paddingLeft(r.paddingLeft)(
        Di(u)
          .sum(function (c) {
            return r.ignoreParentValue && c.children ? 0 : c[n];
          })
          .sort(r.sort),
      );
    },
    o = a(e),
    s = t[0],
    l = t[1];
  return (
    o.each(function (u) {
      (u[s] = [u.x0, u.x1, u.x1, u.x0]),
        (u[l] = [u.y1, u.y1, u.y0, u.y0]),
        ['x0', 'x1', 'y0', 'y1'].forEach(function (c) {
          t.indexOf(c) === -1 && delete u[c];
        });
    }),
    yf(o)
  );
}
function Y1(e) {
  var r = e.data,
    t = e.colorField,
    n = e.rawFields,
    i = e.hierarchyConfig,
    a = i === void 0 ? {} : i,
    o = a.activeDepth,
    s = { partition: uG, treemap: H1 },
    l = e.seriesField,
    u = e.type || 'partition',
    c = s[u](
      r,
      x(x({ field: l || 'value' }, Vs(a, ['activeDepth'])), {
        type: 'hierarchy.'.concat(u),
        as: ['x', 'y'],
      }),
    ),
    h = [];
  return (
    c.forEach(function (f) {
      var v, d, p, g, y, m;
      if (f.depth === 0 || (o > 0 && f.depth > o)) return null;
      for (var b = f.data.name, w = x({}, f); w.depth > 1; )
        (b = ''
          .concat((d = w.parent.data) === null || d === void 0 ? void 0 : d.name, ' / ')
          .concat(b)),
          (w = w.parent);
      var S = x(
        x(
          x({}, mt(f.data, J(J([], n || [], !0), [a.field], !1))),
          ((v = {}), (v[Va] = b), (v[wf] = w.data.name), v),
        ),
        f,
      );
      l &&
        (S[l] =
          f.data[l] ||
          ((g = (p = f.parent) === null || p === void 0 ? void 0 : p.data) === null || g === void 0
            ? void 0
            : g[l])),
        t &&
          (S[t] =
            f.data[t] ||
            ((m = (y = f.parent) === null || y === void 0 ? void 0 : y.data) === null ||
            m === void 0
              ? void 0
              : m[t])),
        (S.ext = a),
        (S[Ga] = { hierarchyConfig: a, colorField: t, rawFields: n }),
        h.push(S);
    }),
    h
  );
}
function fG(e) {
  var r = e.chart,
    t = e.options,
    n = t.color,
    i = t.colorField,
    a = i === void 0 ? wf : i,
    o = t.sunburstStyle,
    s = t.rawFields,
    l = s === void 0 ? [] : s,
    u = t.shape,
    c = Y1(t);
  r.data(c);
  var h;
  return (
    o &&
      (h = function (f) {
        return O({}, { fillOpacity: Math.pow(0.85, f.depth) }, U(o) ? o(f) : o);
      }),
    El(
      O({}, e, {
        options: {
          xField: 'x',
          yField: 'y',
          seriesField: a,
          rawFields: In(J(J([], oG, !0), l, !0)),
          polygon: { color: n, style: h, shape: u },
        },
      }),
    ),
    e
  );
}
function vG(e) {
  var r = e.chart;
  return r.axis(!1), e;
}
function dG(e) {
  var r = e.chart,
    t = e.options,
    n = t.label,
    i = te(r, 'polygon');
  if (!n) i.label(!1);
  else {
    var a = n.fields,
      o = a === void 0 ? ['name'] : a,
      s = n.callback,
      l = wt(n, ['fields', 'callback']);
    i.label({ fields: o, callback: s, cfg: jt(l) });
  }
  return e;
}
function pG(e) {
  var r = e.chart,
    t = e.options,
    n = t.innerRadius,
    i = t.radius,
    a = t.reflect,
    o = r.coordinate({ type: 'polar', cfg: { innerRadius: n, radius: i } });
  return a && o.reflect(a), e;
}
function gG(e) {
  var r,
    t = e.options,
    n = t.hierarchyConfig,
    i = t.meta;
  return it(Rt({}, ((r = {}), (r[V1] = A(i, A(n, ['field'], 'value'))), r)))(e);
}
function yG(e) {
  var r = e.chart,
    t = e.options,
    n = t.tooltip;
  if (n === !1) r.tooltip(!1);
  else {
    var i = n;
    A(n, 'fields') ||
      (i = O(
        {},
        {
          customItems: function (a) {
            return a.map(function (o) {
              var s = A(r.getOptions(), 'scales'),
                l = A(s, [Va, 'formatter'], function (c) {
                  return c;
                }),
                u = A(s, [V1, 'formatter'], function (c) {
                  return c;
                });
              return x(x({}, o), { name: l(o.data[Va]), value: u(o.data.value) });
            });
          },
        },
        i,
      )),
      r.tooltip(i);
  }
  return e;
}
function mG(e) {
  var r = e.drilldown,
    t = e.interactions,
    n = t === void 0 ? [] : t;
  return r != null && r.enabled
    ? O({}, e, {
        interactions: J(
          J([], n, !0),
          [{ type: 'drill-down', cfg: { drillDownConfig: r, transformData: Y1 } }],
          !1,
        ),
      })
    : e;
}
function xG(e) {
  var r = e.chart,
    t = e.options,
    n = t.drilldown;
  return (
    It({ chart: r, options: mG(t) }),
    n != null &&
      n.enabled &&
      (r.appendPadding = Sl(r.appendPadding, A(n, ['breadCrumb', 'position']))),
    e
  );
}
function wG(e) {
  return it(vt, Ie('sunburstStyle'), fG, vG, gG, Ii, pG, yG, dG, xG, St, Pt())(e);
}
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'sunburst'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return sG;
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return wG;
    }),
    (r.SUNBURST_ANCESTOR_FIELD = wf),
    (r.SUNBURST_PATH_FIELD = Va),
    (r.NODE_ANCESTORS_FIELD = pf),
    r
  );
})(lt);
function W1(e, r) {
  if (N(e))
    return e.find(function (t) {
      return t.type === r;
    });
}
function X1(e, r) {
  var t = W1(e, r);
  return t && t.enable !== !1;
}
function bf(e) {
  var r = e.interactions,
    t = e.drilldown;
  return A(t, 'enabled') || X1(r, 'treemap-drill-down');
}
function bG(e) {
  var r = e.interactions['drill-down'];
  if (r) {
    var t = r.context.actions.find(function (n) {
      return n.name === 'drill-down-action';
    });
    t.reset();
  }
}
function Sf(e) {
  var r = e.data,
    t = e.colorField,
    n = e.enableDrillDown,
    i = e.hierarchyConfig,
    a = H1(r, x(x({}, i), { type: 'hierarchy.treemap', field: 'value', as: ['x', 'y'] })),
    o = [];
  return (
    a.forEach(function (s) {
      if (s.depth === 0 || (n && s.depth !== 1) || (!n && s.children)) return null;
      var l = s.ancestors().map(function (f) {
          return { data: f.data, height: f.height, value: f.value };
        }),
        u = n && N(r.path) ? l.concat(r.path.slice(1)) : l,
        c = Object.assign(
          {},
          s.data,
          x({ x: s.x, y: s.y, depth: s.depth, value: s.value, path: u }, s),
        );
      if (!s.data[t] && s.parent) {
        var h = s.ancestors().find(function (f) {
          return f.data[t];
        });
        c[t] = h == null ? void 0 : h.data[t];
      } else c[t] = s.data[t];
      (c[Ga] = { hierarchyConfig: i, colorField: t, enableDrillDown: n }), o.push(c);
    }),
    o
  );
}
function SG(e) {
  var r = e.options,
    t = r.colorField;
  return O(
    {
      options: {
        rawFields: ['value'],
        tooltip: {
          fields: ['name', 'value', t, 'path'],
          formatter: function (n) {
            return { name: n.name, value: n.value };
          },
        },
      },
    },
    e,
  );
}
function CG(e) {
  var r = e.chart,
    t = e.options,
    n = t.color,
    i = t.colorField,
    a = t.rectStyle,
    o = t.hierarchyConfig,
    s = t.rawFields,
    l = Sf({ data: t.data, colorField: t.colorField, enableDrillDown: bf(t), hierarchyConfig: o });
  return (
    r.data(l),
    El(
      O({}, e, {
        options: {
          xField: 'x',
          yField: 'y',
          seriesField: i,
          rawFields: s,
          polygon: { color: n, style: a },
        },
      }),
    ),
    r.coordinate().reflect('y'),
    e
  );
}
function MG(e) {
  var r = e.chart;
  return r.axis(!1), e;
}
function AG(e) {
  var r = e.drilldown,
    t = e.interactions,
    n = t === void 0 ? [] : t,
    i = bf(e);
  return i
    ? O({}, e, {
        interactions: J(
          J([], n, !0),
          [{ type: 'drill-down', cfg: { drillDownConfig: r, transformData: Sf } }],
          !1,
        ),
      })
    : e;
}
function FG(e) {
  var r = e.chart,
    t = e.options,
    n = t.interactions,
    i = t.drilldown;
  It({ chart: r, options: AG(t) });
  var a = W1(n, 'view-zoom');
  a &&
    (a.enable !== !1
      ? r.getCanvas().on('mousewheel', function (s) {
          s.preventDefault();
        })
      : r.getCanvas().off('mousewheel'));
  var o = bf(t);
  return o && (r.appendPadding = Sl(r.appendPadding, A(i, ['breadCrumb', 'position']))), e;
}
function EG(e) {
  return it(SG, vt, Ie('rectStyle'), CG, MG, Ii, Wt, FG, St, Pt())(e);
}
var TG = {
  colorField: 'name',
  rectStyle: { lineWidth: 1, stroke: '#fff' },
  hierarchyConfig: { tile: 'treemapSquarify' },
  label: { fields: ['name'], layout: { type: 'limit-in-shape' } },
  tooltip: { showMarkers: !1, showTitle: !1 },
  drilldown: {
    enabled: !1,
    breadCrumb: {
      position: 'bottom-left',
      rootText: '初始',
      dividerText: '/',
      textStyle: { fontSize: 12, fill: 'rgba(0, 0, 0, 0.65)', cursor: 'pointer' },
      activeTextStyle: { fill: '#87B5FF' },
    },
  },
};
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'treemap'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return TG;
    }),
    (r.prototype.changeData = function (t) {
      var n = this.options,
        i = n.colorField,
        a = n.interactions,
        o = n.hierarchyConfig;
      this.updateOption({ data: t });
      var s = Sf({
        data: t,
        colorField: i,
        enableDrillDown: X1(a, 'treemap-drill-down'),
        hierarchyConfig: o,
      });
      this.chart.changeData(s), bG(this.chart);
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return EG;
    }),
    r
  );
})(lt);
var Sr = 'id',
  Ic = 'path',
  kG = {
    appendPadding: [10, 0, 20, 0],
    blendMode: 'multiply',
    tooltip: {
      showTitle: !1,
      showMarkers: !1,
      fields: ['id', 'size'],
      formatter: function (e) {
        return { name: e.id, value: e.size };
      },
    },
    legend: { position: 'top-left' },
    label: { style: { textAlign: 'center', fill: '#fff' } },
    interactions: [{ type: 'legend-filter', enable: !1 }],
    state: {
      active: { style: { stroke: '#000' } },
      selected: { style: { stroke: '#000', lineWidth: 2 } },
      inactive: { style: { fillOpacity: 0.3, strokeOpacity: 0.3 } },
    },
    defaultInteractions: ['tooltip', 'venn-legend-active'],
  };
function $l(e) {
  if (e) {
    var r = e.geometries[0].elements;
    r.forEach(function (t) {
      t.shape.toFront();
    });
  }
}
var IG = dl('element-active'),
  LG = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.syncElementsPos = function () {
        $l(this.context.view);
      }),
      (r.prototype.active = function () {
        e.prototype.active.call(this), this.syncElementsPos();
      }),
      (r.prototype.toggle = function () {
        e.prototype.toggle.call(this), this.syncElementsPos();
      }),
      (r.prototype.reset = function () {
        e.prototype.reset.call(this), this.syncElementsPos();
      }),
      r
    );
  })(IG),
  PG = dl('element-highlight'),
  OG = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.syncElementsPos = function () {
        $l(this.context.view);
      }),
      (r.prototype.highlight = function () {
        e.prototype.highlight.call(this), this.syncElementsPos();
      }),
      (r.prototype.toggle = function () {
        e.prototype.toggle.call(this), this.syncElementsPos();
      }),
      (r.prototype.clear = function () {
        e.prototype.clear.call(this), this.syncElementsPos();
      }),
      (r.prototype.reset = function () {
        e.prototype.reset.call(this), this.syncElementsPos();
      }),
      r
    );
  })(PG),
  DG = dl('element-selected'),
  BG = dl('element-single-selected'),
  RG = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.syncElementsPos = function () {
        $l(this.context.view);
      }),
      (r.prototype.selected = function () {
        e.prototype.selected.call(this), this.syncElementsPos();
      }),
      (r.prototype.toggle = function () {
        e.prototype.toggle.call(this), this.syncElementsPos();
      }),
      (r.prototype.reset = function () {
        e.prototype.reset.call(this), this.syncElementsPos();
      }),
      r
    );
  })(DG),
  $G = (function (e) {
    k(r, e);
    function r() {
      return (e !== null && e.apply(this, arguments)) || this;
    }
    return (
      (r.prototype.syncElementsPos = function () {
        $l(this.context.view);
      }),
      (r.prototype.selected = function () {
        e.prototype.selected.call(this), this.syncElementsPos();
      }),
      (r.prototype.toggle = function () {
        e.prototype.toggle.call(this), this.syncElementsPos();
      }),
      (r.prototype.reset = function () {
        e.prototype.reset.call(this), this.syncElementsPos();
      }),
      r
    );
  })(BG);
Q('venn-element-active', LG);
Q('venn-element-highlight', OG);
Q('venn-element-selected', RG);
Q('venn-element-single-selected', $G);
ot('venn-element-active', {
  start: [{ trigger: 'element:mouseenter', action: 'venn-element-active:active' }],
  end: [{ trigger: 'element:mouseleave', action: 'venn-element-active:reset' }],
});
ot('venn-element-highlight', {
  start: [{ trigger: 'element:mouseenter', action: 'venn-element-highlight:highlight' }],
  end: [{ trigger: 'element:mouseleave', action: 'venn-element-highlight:reset' }],
});
ot('venn-element-selected', {
  start: [{ trigger: 'element:click', action: 'venn-element-selected:toggle' }],
  rollback: [{ trigger: 'dblclick', action: ['venn-element-selected:reset'] }],
});
ot('venn-element-single-selected', {
  start: [{ trigger: 'element:click', action: 'venn-element-single-selected:toggle' }],
  rollback: [{ trigger: 'dblclick', action: ['venn-element-single-selected:reset'] }],
});
ot('venn-legend-active', {
  start: [
    {
      trigger: 'legend-item:mouseenter',
      action: ['list-active:active', 'venn-element-active:active'],
    },
  ],
  end: [
    {
      trigger: 'legend-item:mouseleave',
      action: ['list-active:reset', 'venn-element-active:reset'],
    },
  ],
});
ot('venn-legend-highlight', {
  start: [
    {
      trigger: 'legend-item:mouseenter',
      action: ['legend-item-highlight:highlight', 'venn-element-highlight:highlight'],
    },
  ],
  end: [
    {
      trigger: 'legend-item:mouseleave',
      action: ['legend-item-highlight:reset', 'venn-element-highlight:reset'],
    },
  ],
});
var NG = (function (e) {
  k(r, e);
  function r() {
    return (e !== null && e.apply(this, arguments)) || this;
  }
  return (
    (r.prototype.getLabelPoint = function (t, n, i) {
      var a = t.data,
        o = a.x,
        s = a.y,
        l = t.customLabelInfo,
        u = l.offsetX,
        c = l.offsetY;
      return { content: t.content[i], x: o + u, y: s + c };
    }),
    r
  );
})(ml);
Qa('venn', NG);
var va = `	
\v\f\r   ᠎             　\u2028\u2029`,
  zG = new RegExp(
    '([a-z])[' + va + ',]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[' + va + ']*,?[' + va + ']*)+)',
    'ig',
  ),
  GG = new RegExp('(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[' + va + ']*,?[' + va + ']*', 'ig');
function VG(e) {
  if (!e) return null;
  if ($w(e)) return e;
  var r = { a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0 },
    t = [];
  return (
    String(e).replace(zG, function (n, i, a) {
      var o = [],
        s = i.toLowerCase();
      if (
        (a.replace(GG, function (l, u) {
          u && o.push(+u);
        }),
        s === 'm' &&
          o.length > 2 &&
          (t.push([i].concat(o.splice(0, 2))), (s = 'l'), (i = i === 'm' ? 'l' : 'L')),
        s === 'o' && o.length === 1 && t.push([i, o[0]]),
        s === 'r')
      )
        t.push([i].concat(o));
      else for (; o.length >= r[s] && (t.push([i].concat(o.splice(0, r[s]))), !!r[s]); );
      return '';
    }),
    t
  );
}
function HG(e) {
  return O({}, e.defaultStyle, { fill: e.color }, e.style);
}
gt('schema', 'venn', {
  draw: function (e, r) {
    var t = e.data,
      n = VG(t[Ic]),
      i = HG(e),
      a = r.addGroup({ name: 'venn-shape' });
    a.addShape('path', { attrs: x(x({}, i), { path: n }), name: 'venn-path' });
    var o = e.customInfo,
      s = o.offsetX,
      l = o.offsetY,
      u = me.transform(null, [['t', s, l]]);
    return a.setMatrix(u), a;
  },
  getMarker: function (e) {
    var r = e.color;
    return { symbol: 'circle', style: { lineWidth: 0, stroke: r, fill: r, r: 4 } };
  },
});
var YG = function (e) {
    return function (r, t) {
      var n = [];
      return (n[0] = e(r[0], t[0])), (n[1] = e(r[1], t[1])), (n[2] = e(r[2], t[2])), n;
    };
  },
  ag = {
    normal: function (e) {
      return e;
    },
    multiply: function (e, r) {
      return (e * r) / 255;
    },
    screen: function (e, r) {
      return 255 * (1 - (1 - e / 255) * (1 - r / 255));
    },
    overlay: function (e, r) {
      return r < 128 ? (2 * e * r) / 255 : 255 * (1 - 2 * (1 - e / 255) * (1 - r / 255));
    },
    darken: function (e, r) {
      return e > r ? r : e;
    },
    lighten: function (e, r) {
      return e > r ? e : r;
    },
    dodge: function (e, r) {
      return e === 255 ? 255 : ((e = (255 * (r / 255)) / (1 - e / 255)), e > 255 ? 255 : e);
    },
    burn: function (e, r) {
      return r === 255 ? 255 : e === 0 ? 0 : 255 * (1 - Math.min(1, (1 - r / 255) / (e / 255)));
    },
  },
  WG = function (e) {
    if (!ag[e]) throw new Error('unknown blend mode ' + e);
    return ag[e];
  };
function XG(e, r, t) {
  t === void 0 && (t = 'normal');
  var n = YG(WG(t))(Xo(e), Xo(r)),
    i = Xo(e),
    a = i[0],
    o = i[1],
    s = i[2],
    l = i[3],
    u = Xo(r),
    c = u[0],
    h = u[1],
    f = u[2],
    v = u[3],
    d = Number((l + v * (1 - l)).toFixed(2)),
    p = Math.round(
      ((l * (1 - v) * (a / 255) + l * v * (n[0] / 255) + (1 - l) * v * (c / 255)) / d) * 255,
    ),
    g = Math.round(
      ((l * (1 - v) * (o / 255) + l * v * (n[1] / 255) + (1 - l) * v * (h / 255)) / d) * 255,
    ),
    y = Math.round(
      ((l * (1 - v) * (s / 255) + l * v * (n[2] / 255) + (1 - l) * v * (f / 255)) / d) * 255,
    );
  return 'rgba('.concat(p, ', ').concat(g, ', ').concat(y, ', ').concat(d, ')');
}
function Xo(e) {
  var r = e.replace('/s+/g', ''),
    t;
  return typeof r == 'string' && !r.startsWith('rgba') && !r.startsWith('#')
    ? (t = Hr.rgb2arr(Hr.toRGB(r)).concat([1]))
    : (r.startsWith('rgba') && (t = r.replace('rgba(', '').replace(')', '').split(',')),
      r.startsWith('#') && (t = Hr.rgb2arr(r).concat([1])),
      t.map(function (n, i) {
        return i === 3 ? Number(n) : n | 0;
      }));
}
function _G(e, r, t, n) {
  n = n || {};
  var i = n.maxIterations || 100,
    a = n.tolerance || 1e-10,
    o = e(r),
    s = e(t),
    l = t - r;
  if (o * s > 0) throw 'Initial bisect points must have opposite signs';
  if (o === 0) return r;
  if (s === 0) return t;
  for (var u = 0; u < i; ++u) {
    l /= 2;
    var c = r + l,
      h = e(c);
    if ((h * o >= 0 && (r = c), Math.abs(l) < a || h === 0)) return c;
  }
  return r + l;
}
function Lc(e) {
  for (var r = new Array(e), t = 0; t < e; ++t) r[t] = 0;
  return r;
}
function og(e, r) {
  return Lc(e).map(function () {
    return Lc(r);
  });
}
function li(e, r) {
  for (var t = 0, n = 0; n < e.length; ++n) t += e[n] * r[n];
  return t;
}
function Pc(e) {
  return Math.sqrt(li(e, e));
}
function Oc(e, r, t) {
  for (var n = 0; n < r.length; ++n) e[n] = r[n] * t;
}
function pr(e, r, t, n, i) {
  for (var a = 0; a < e.length; ++a) e[a] = r * t[a] + n * i[a];
}
function _1(e, r, t) {
  t = t || {};
  var n = t.maxIterations || r.length * 200,
    i = t.nonZeroDelta || 1.05,
    a = t.zeroDelta || 0.001,
    o = t.minErrorDelta || 1e-6,
    s = t.minErrorDelta || 1e-5,
    l = t.rho !== void 0 ? t.rho : 1,
    u = t.chi !== void 0 ? t.chi : 2,
    c = t.psi !== void 0 ? t.psi : -0.5,
    h = t.sigma !== void 0 ? t.sigma : 0.5,
    f,
    v = r.length,
    d = new Array(v + 1);
  (d[0] = r), (d[0].fx = e(r)), (d[0].id = 0);
  for (var p = 0; p < v; ++p) {
    var g = r.slice();
    (g[p] = g[p] ? g[p] * i : a), (d[p + 1] = g), (d[p + 1].fx = e(g)), (d[p + 1].id = p + 1);
  }
  function y(R) {
    for (var B = 0; B < R.length; B++) d[v][B] = R[B];
    d[v].fx = R.fx;
  }
  for (
    var m = function (R, B) {
        return R.fx - B.fx;
      },
      b = r.slice(),
      w = r.slice(),
      S = r.slice(),
      C = r.slice(),
      F = 0;
    F < n;
    ++F
  ) {
    if ((d.sort(m), t.history)) {
      var E = d.map(function (R) {
        var B = R.slice();
        return (B.fx = R.fx), (B.id = R.id), B;
      });
      E.sort(function (R, B) {
        return R.id - B.id;
      }),
        t.history.push({ x: d[0].slice(), fx: d[0].fx, simplex: E });
    }
    for (f = 0, p = 0; p < v; ++p) f = Math.max(f, Math.abs(d[0][p] - d[1][p]));
    if (Math.abs(d[0].fx - d[v].fx) < o && f < s) break;
    for (p = 0; p < v; ++p) {
      b[p] = 0;
      for (var I = 0; I < v; ++I) b[p] += d[I][p];
      b[p] /= v;
    }
    var T = d[v];
    if ((pr(w, 1 + l, b, -l, T), (w.fx = e(w)), w.fx < d[0].fx))
      pr(C, 1 + u, b, -u, T), (C.fx = e(C)), C.fx < w.fx ? y(C) : y(w);
    else if (w.fx >= d[v - 1].fx) {
      var P = !1;
      if (
        (w.fx > T.fx
          ? (pr(S, 1 + c, b, -c, T), (S.fx = e(S)), S.fx < T.fx ? y(S) : (P = !0))
          : (pr(S, 1 - c * l, b, c * l, T), (S.fx = e(S)), S.fx < w.fx ? y(S) : (P = !0)),
        P)
      ) {
        if (h >= 1) break;
        for (p = 1; p < d.length; ++p) pr(d[p], 1 - h, d[0], h, d[p]), (d[p].fx = e(d[p]));
      }
    } else y(w);
  }
  return d.sort(m), { fx: d[0].fx, x: d[0] };
}
function jG(e, r, t, n, i, a, o) {
  var s = t.fx,
    l = li(t.fxprime, r),
    u = s,
    c = s,
    h = l,
    f = 0;
  (i = i || 1), (a = a || 1e-6), (o = o || 0.1);
  function v(p, g, y) {
    for (var m = 0; m < 16; ++m)
      if (
        ((i = (p + g) / 2),
        pr(n.x, 1, t.x, i, r),
        (u = n.fx = e(n.x, n.fxprime)),
        (h = li(n.fxprime, r)),
        u > s + a * i * l || u >= y)
      )
        g = i;
      else {
        if (Math.abs(h) <= -o * l) return i;
        h * (g - p) >= 0 && (g = p), (p = i), (y = u);
      }
    return 0;
  }
  for (var d = 0; d < 10; ++d) {
    if (
      (pr(n.x, 1, t.x, i, r),
      (u = n.fx = e(n.x, n.fxprime)),
      (h = li(n.fxprime, r)),
      u > s + a * i * l || (d && u >= c))
    )
      return v(f, i, c);
    if (Math.abs(h) <= -o * l) return i;
    if (h >= 0) return v(i, f, u);
    (c = u), (f = i), (i *= 2);
  }
  return i;
}
function UG(e, r, t) {
  var n = { x: r.slice(), fx: 0, fxprime: r.slice() },
    i = { x: r.slice(), fx: 0, fxprime: r.slice() },
    a = r.slice(),
    o,
    s,
    l = 1,
    u;
  (t = t || {}),
    (u = t.maxIterations || r.length * 20),
    (n.fx = e(n.x, n.fxprime)),
    (o = n.fxprime.slice()),
    Oc(o, n.fxprime, -1);
  for (var c = 0; c < u; ++c) {
    if (
      ((l = jG(e, o, n, i, l)),
      t.history &&
        t.history.push({ x: n.x.slice(), fx: n.fx, fxprime: n.fxprime.slice(), alpha: l }),
      !l)
    )
      Oc(o, n.fxprime, -1);
    else {
      pr(a, 1, i.fxprime, -1, n.fxprime);
      var h = li(n.fxprime, n.fxprime),
        f = Math.max(0, li(a, i.fxprime) / h);
      pr(o, f, o, -1, i.fxprime), (s = n), (n = i), (i = s);
    }
    if (Pc(n.fxprime) <= 1e-5) break;
  }
  return (
    t.history && t.history.push({ x: n.x.slice(), fx: n.fx, fxprime: n.fxprime.slice(), alpha: l }),
    n
  );
}
var j1 = 1e-10;
function Cf(e, r) {
  var t = ZG(e),
    n = t.filter(function (F) {
      return qG(F, e);
    }),
    i = 0,
    a = 0,
    o,
    s = [];
  if (n.length > 1) {
    var l = Z1(n);
    for (o = 0; o < n.length; ++o) {
      var u = n[o];
      u.angle = Math.atan2(u.x - l.x, u.y - l.y);
    }
    n.sort(function (F, E) {
      return E.angle - F.angle;
    });
    var c = n[n.length - 1];
    for (o = 0; o < n.length; ++o) {
      var h = n[o];
      a += (c.x + h.x) * (h.y - c.y);
      for (
        var f = { x: (h.x + c.x) / 2, y: (h.y + c.y) / 2 }, v = null, d = 0;
        d < h.parentIndex.length;
        ++d
      )
        if (c.parentIndex.indexOf(h.parentIndex[d]) > -1) {
          var p = e[h.parentIndex[d]],
            g = Math.atan2(h.x - p.x, h.y - p.y),
            y = Math.atan2(c.x - p.x, c.y - p.y),
            m = y - g;
          m < 0 && (m += 2 * Math.PI);
          var b = y - m / 2,
            w = _e(f, { x: p.x + p.radius * Math.sin(b), y: p.y + p.radius * Math.cos(b) });
          w > p.radius * 2 && (w = p.radius * 2),
            (v === null || v.width > w) && (v = { circle: p, width: w, p1: h, p2: c });
        }
      v !== null && (s.push(v), (i += Dc(v.circle.radius, v.width)), (c = h));
    }
  } else {
    var S = e[0];
    for (o = 1; o < e.length; ++o) e[o].radius < S.radius && (S = e[o]);
    var C = !1;
    for (o = 0; o < e.length; ++o)
      if (_e(e[o], S) > Math.abs(S.radius - e[o].radius)) {
        C = !0;
        break;
      }
    C
      ? (i = a = 0)
      : ((i = S.radius * S.radius * Math.PI),
        s.push({
          circle: S,
          p1: { x: S.x, y: S.y + S.radius },
          p2: { x: S.x - j1, y: S.y + S.radius },
          width: S.radius * 2,
        }));
  }
  return (
    (a /= 2),
    r &&
      ((r.area = i + a),
      (r.arcArea = i),
      (r.polygonArea = a),
      (r.arcs = s),
      (r.innerPoints = n),
      (r.intersectionPoints = t)),
    i + a
  );
}
function qG(e, r) {
  for (var t = 0; t < r.length; ++t) if (_e(e, r[t]) > r[t].radius + j1) return !1;
  return !0;
}
function ZG(e) {
  for (var r = [], t = 0; t < e.length; ++t)
    for (var n = t + 1; n < e.length; ++n)
      for (var i = q1(e[t], e[n]), a = 0; a < i.length; ++a) {
        var o = i[a];
        (o.parentIndex = [t, n]), r.push(o);
      }
  return r;
}
function Dc(e, r) {
  return e * e * Math.acos(1 - r / e) - (e - r) * Math.sqrt(r * (2 * e - r));
}
function _e(e, r) {
  return Math.sqrt((e.x - r.x) * (e.x - r.x) + (e.y - r.y) * (e.y - r.y));
}
function U1(e, r, t) {
  if (t >= e + r) return 0;
  if (t <= Math.abs(e - r)) return Math.PI * Math.min(e, r) * Math.min(e, r);
  var n = e - (t * t - r * r + e * e) / (2 * t),
    i = r - (t * t - e * e + r * r) / (2 * t);
  return Dc(e, n) + Dc(r, i);
}
function q1(e, r) {
  var t = _e(e, r),
    n = e.radius,
    i = r.radius;
  if (t >= n + i || t <= Math.abs(n - i)) return [];
  var a = (n * n - i * i + t * t) / (2 * t),
    o = Math.sqrt(n * n - a * a),
    s = e.x + (a * (r.x - e.x)) / t,
    l = e.y + (a * (r.y - e.y)) / t,
    u = -(r.y - e.y) * (o / t),
    c = -(r.x - e.x) * (o / t);
  return [
    { x: s + u, y: l - c },
    { x: s - u, y: l + c },
  ];
}
function Z1(e) {
  for (var r = { x: 0, y: 0 }, t = 0; t < e.length; ++t) (r.x += e[t].x), (r.y += e[t].y);
  return (r.x /= e.length), (r.y /= e.length), r;
}
function Lu(e, r, t) {
  var n = r[0].radius - _e(r[0], e),
    i,
    a;
  for (i = 1; i < r.length; ++i) (a = r[i].radius - _e(r[i], e)), a <= n && (n = a);
  for (i = 0; i < t.length; ++i) (a = _e(t[i], e) - t[i].radius), a <= n && (n = a);
  return n;
}
function K1(e, r) {
  var t = [],
    n;
  for (n = 0; n < e.length; ++n) {
    var i = e[n];
    t.push({ x: i.x, y: i.y }),
      t.push({ x: i.x + i.radius / 2, y: i.y }),
      t.push({ x: i.x - i.radius / 2, y: i.y }),
      t.push({ x: i.x, y: i.y + i.radius / 2 }),
      t.push({ x: i.x, y: i.y - i.radius / 2 });
  }
  var a = t[0],
    o = Lu(t[0], e, r);
  for (n = 1; n < t.length; ++n) {
    var s = Lu(t[n], e, r);
    s >= o && ((a = t[n]), (o = s));
  }
  var l = _1(
      function (f) {
        return -1 * Lu({ x: f[0], y: f[1] }, e, r);
      },
      [a.x, a.y],
      { maxIterations: 500, minErrorDelta: 1e-10 },
    ).x,
    u = { x: l[0], y: l[1] },
    c = !0;
  for (n = 0; n < e.length; ++n)
    if (_e(u, e[n]) > e[n].radius) {
      c = !1;
      break;
    }
  for (n = 0; n < r.length; ++n)
    if (_e(u, r[n]) < r[n].radius) {
      c = !1;
      break;
    }
  if (!c)
    if (e.length == 1) u = { x: e[0].x, y: e[0].y };
    else {
      var h = {};
      Cf(e, h),
        h.arcs.length === 0
          ? (u = { x: 0, y: -1e3, disjoint: !0 })
          : h.arcs.length == 1
          ? (u = { x: h.arcs[0].circle.x, y: h.arcs[0].circle.y })
          : r.length
          ? (u = K1(e, []))
          : (u = Z1(
              h.arcs.map(function (f) {
                return f.p1;
              }),
            ));
    }
  return u;
}
function KG(e) {
  var r = {},
    t = [];
  for (var n in e) t.push(n), (r[n] = []);
  for (var i = 0; i < t.length; i++)
    for (var a = e[t[i]], o = i + 1; o < t.length; ++o) {
      var s = e[t[o]],
        l = _e(a, s);
      l + s.radius <= a.radius + 1e-10
        ? r[t[o]].push(t[i])
        : l + a.radius <= s.radius + 1e-10 && r[t[i]].push(t[o]);
    }
  return r;
}
function QG(e, r) {
  for (var t = {}, n = KG(e), i = 0; i < r.length; ++i) {
    for (var a = r[i].sets, o = {}, s = {}, l = 0; l < a.length; ++l) {
      o[a[l]] = !0;
      for (var u = n[a[l]], c = 0; c < u.length; ++c) s[u[c]] = !0;
    }
    var h = [],
      f = [];
    for (var v in e) v in o ? h.push(e[v]) : v in s || f.push(e[v]);
    var d = K1(h, f);
    (t[a] = d),
      d.disjoint &&
        r[i].size > 0 &&
        console.log('WARNING: area ' + a + ' not represented on screen');
  }
  return t;
}
function JG(e, r, t) {
  var n = [],
    i = e - t,
    a = r;
  return (
    n.push('M', i, a),
    n.push('A', t, t, 0, 1, 0, i + 2 * t, a),
    n.push('A', t, t, 0, 1, 0, i, a),
    n.join(' ')
  );
}
function t3(e) {
  var r = {};
  Cf(e, r);
  var t = r.arcs;
  if (t.length === 0) return 'M 0 0';
  if (t.length == 1) {
    var n = t[0].circle;
    return JG(n.x, n.y, n.radius);
  } else {
    for (
      var i = [
          `
M`,
          t[0].p2.x,
          t[0].p2.y,
        ],
        a = 0;
      a < t.length;
      ++a
    ) {
      var o = t[a],
        s = o.circle.radius,
        l = o.width > s;
      i.push(
        `
A`,
        s,
        s,
        0,
        l ? 1 : 0,
        1,
        o.p1.x,
        o.p1.y,
      );
    }
    return i.join(' ');
  }
}
function e3(e, r) {
  (r = r || {}), (r.maxIterations = r.maxIterations || 500);
  var t = r.initialLayout || a3,
    n = r.lossFunction || Mf;
  e = r3(e);
  var i = t(e, r),
    a = [],
    o = [],
    s;
  for (s in i) i.hasOwnProperty(s) && (a.push(i[s].x), a.push(i[s].y), o.push(s));
  for (
    var l = _1(
        function (h) {
          for (var f = {}, v = 0; v < o.length; ++v) {
            var d = o[v];
            f[d] = { x: h[2 * v], y: h[2 * v + 1], radius: i[d].radius };
          }
          return n(f, e);
        },
        a,
        r,
      ),
      u = l.x,
      c = 0;
    c < o.length;
    ++c
  )
    (s = o[c]), (i[s].x = u[2 * c]), (i[s].y = u[2 * c + 1]);
  return i;
}
var Q1 = 1e-10;
function Bc(e, r, t) {
  return Math.min(e, r) * Math.min(e, r) * Math.PI <= t + Q1
    ? Math.abs(e - r)
    : _G(
        function (n) {
          return U1(e, r, n) - t;
        },
        0,
        e + r,
      );
}
function r3(e) {
  e = e.slice();
  var r = [],
    t = {},
    n,
    i,
    a,
    o;
  for (n = 0; n < e.length; ++n) {
    var s = e[n];
    s.sets.length == 1
      ? r.push(s.sets[0])
      : s.sets.length == 2 &&
        ((a = s.sets[0]), (o = s.sets[1]), (t[[a, o]] = !0), (t[[o, a]] = !0));
  }
  for (
    r.sort(function (l, u) {
      return l > u ? 1 : -1;
    }),
      n = 0;
    n < r.length;
    ++n
  )
    for (a = r[n], i = n + 1; i < r.length; ++i)
      (o = r[i]), [a, o] in t || e.push({ sets: [a, o], size: 0 });
  return e;
}
function n3(e, r, t) {
  var n = og(r.length, r.length),
    i = og(r.length, r.length);
  return (
    e
      .filter(function (a) {
        return a.sets.length == 2;
      })
      .map(function (a) {
        var o = t[a.sets[0]],
          s = t[a.sets[1]],
          l = Math.sqrt(r[o].size / Math.PI),
          u = Math.sqrt(r[s].size / Math.PI),
          c = Bc(l, u, a.size);
        n[o][s] = n[s][o] = c;
        var h = 0;
        a.size + 1e-10 >= Math.min(r[o].size, r[s].size) ? (h = 1) : a.size <= 1e-10 && (h = -1),
          (i[o][s] = i[s][o] = h);
      }),
    { distances: n, constraints: i }
  );
}
function i3(e, r, t, n) {
  var i = 0,
    a;
  for (a = 0; a < r.length; ++a) r[a] = 0;
  for (a = 0; a < t.length; ++a)
    for (var o = e[2 * a], s = e[2 * a + 1], l = a + 1; l < t.length; ++l) {
      var u = e[2 * l],
        c = e[2 * l + 1],
        h = t[a][l],
        f = n[a][l],
        v = (u - o) * (u - o) + (c - s) * (c - s),
        d = Math.sqrt(v),
        p = v - h * h;
      (f > 0 && d <= h) ||
        (f < 0 && d >= h) ||
        ((i += 2 * p * p),
        (r[2 * a] += 4 * p * (o - u)),
        (r[2 * a + 1] += 4 * p * (s - c)),
        (r[2 * l] += 4 * p * (u - o)),
        (r[2 * l + 1] += 4 * p * (c - s)));
    }
  return i;
}
function a3(e, r) {
  var t = s3(e, r),
    n = r.lossFunction || Mf;
  if (e.length >= 8) {
    var i = o3(e, r),
      a = n(i, e),
      o = n(t, e);
    a + 1e-8 < o && (t = i);
  }
  return t;
}
function o3(e, r) {
  r = r || {};
  var t = r.restarts || 10,
    n = [],
    i = {},
    a;
  for (a = 0; a < e.length; ++a) {
    var o = e[a];
    o.sets.length == 1 && ((i[o.sets[0]] = n.length), n.push(o));
  }
  var s = n3(e, n, i),
    l = s.distances,
    u = s.constraints,
    c = Pc(l.map(Pc)) / l.length;
  l = l.map(function (m) {
    return m.map(function (b) {
      return b / c;
    });
  });
  var h = function (m, b) {
      return i3(m, b, l, u);
    },
    f,
    v;
  for (a = 0; a < t; ++a) {
    var d = Lc(l.length * 2).map(Math.random);
    (v = UG(h, d, r)), (!f || v.fx < f.fx) && (f = v);
  }
  var p = f.x,
    g = {};
  for (a = 0; a < n.length; ++a) {
    var y = n[a];
    g[y.sets[0]] = { x: p[2 * a] * c, y: p[2 * a + 1] * c, radius: Math.sqrt(y.size / Math.PI) };
  }
  if (r.history) for (a = 0; a < r.history.length; ++a) Oc(r.history[a].x, c);
  return g;
}
function s3(e, r) {
  for (
    var t = r && r.lossFunction ? r.lossFunction : Mf, n = {}, i = {}, a, o = 0;
    o < e.length;
    ++o
  ) {
    var s = e[o];
    s.sets.length == 1 &&
      ((a = s.sets[0]),
      (n[a] = {
        x: 1e10,
        y: 1e10,
        rowid: Object.keys(n).length,
        size: s.size,
        radius: Math.sqrt(s.size / Math.PI),
      }),
      (i[a] = []));
  }
  e = e.filter(function (D) {
    return D.sets.length == 2;
  });
  for (var o = 0; o < e.length; ++o) {
    var l = e[o],
      u = l.hasOwnProperty('weight') ? l.weight : 1,
      c = l.sets[0],
      h = l.sets[1];
    l.size + Q1 >= Math.min(n[c].size, n[h].size) && (u = 0),
      i[c].push({ set: h, size: l.size, weight: u }),
      i[h].push({ set: c, size: l.size, weight: u });
  }
  var f = [];
  for (a in i)
    if (i.hasOwnProperty(a)) {
      for (var v = 0, o = 0; o < i[a].length; ++o) v += i[a][o].size * i[a][o].weight;
      f.push({ set: a, size: v });
    }
  function d(D, z) {
    return z.size - D.size;
  }
  f.sort(d);
  var p = {};
  function g(D) {
    return D.set in p;
  }
  function y(D, z) {
    (n[z].x = D.x), (n[z].y = D.y), (p[z] = !0);
  }
  y({ x: 0, y: 0 }, f[0].set);
  for (var o = 1; o < f.length; ++o) {
    var m = f[o].set,
      b = i[m].filter(g);
    if (((a = n[m]), b.sort(d), b.length === 0))
      throw 'ERROR: missing pairwise overlap information';
    for (var w = [], S = 0; S < b.length; ++S) {
      var C = n[b[S].set],
        F = Bc(a.radius, C.radius, b[S].size);
      w.push({ x: C.x + F, y: C.y }),
        w.push({ x: C.x - F, y: C.y }),
        w.push({ y: C.y + F, x: C.x }),
        w.push({ y: C.y - F, x: C.x });
      for (var E = S + 1; E < b.length; ++E)
        for (
          var I = n[b[E].set],
            T = Bc(a.radius, I.radius, b[E].size),
            P = q1({ x: C.x, y: C.y, radius: F }, { x: I.x, y: I.y, radius: T }),
            R = 0;
          R < P.length;
          ++R
        )
          w.push(P[R]);
    }
    for (var B = 1e50, G = w[0], S = 0; S < w.length; ++S) {
      (n[m].x = w[S].x), (n[m].y = w[S].y);
      var j = t(n, e);
      j < B && ((B = j), (G = w[S]));
    }
    y(G, m);
  }
  return n;
}
function Mf(e, r) {
  var t = 0;
  function n(c) {
    return c.map(function (h) {
      return e[h];
    });
  }
  for (var i = 0; i < r.length; ++i) {
    var a = r[i],
      o = void 0;
    if (a.sets.length != 1) {
      if (a.sets.length == 2) {
        var s = e[a.sets[0]],
          l = e[a.sets[1]];
        o = U1(s.radius, l.radius, _e(s, l));
      } else o = Cf(n(a.sets));
      var u = a.hasOwnProperty('weight') ? a.weight : 1;
      t += u * (o - a.size) * (o - a.size);
    }
  }
  return t;
}
function l3(e) {
  var r = function (t) {
    var n = Math.max.apply(
        null,
        e.map(function (a) {
          return a[t] + a.radius;
        }),
      ),
      i = Math.min.apply(
        null,
        e.map(function (a) {
          return a[t] - a.radius;
        }),
      );
    return { max: n, min: i };
  };
  return { xRange: r('x'), yRange: r('y') };
}
function u3(e, r, t, n) {
  var i = [],
    a = [];
  for (var o in e) e.hasOwnProperty(o) && (a.push(o), i.push(e[o]));
  (r -= 2 * n), (t -= 2 * n);
  var s = l3(i),
    l = s.xRange,
    u = s.yRange;
  if (l.max == l.min || u.max == u.min)
    return console.log('not scaling solution: zero size detected'), e;
  for (
    var c = r / (l.max - l.min),
      h = t / (u.max - u.min),
      f = Math.min(h, c),
      v = (r - (l.max - l.min) * f) / 2,
      d = (t - (u.max - u.min) * f) / 2,
      p = {},
      g = 0;
    g < i.length;
    ++g
  ) {
    var y = i[g];
    p[a[g]] = { radius: f * y.radius, x: n + v + (y.x - l.min) * f, y: n + d + (y.y - u.min) * f };
  }
  return p;
}
var c3 = Ai(
  function (e, r, t, n) {
    var i = new Map(),
      a = e.length;
    return (
      r.forEach(function (o, s) {
        if (o[n].length === 1) i.set(o[Sr], e[(s + a) % a]);
        else {
          var l = o[n].map(function (u) {
            return i.get(u);
          });
          i.set(
            o[Sr],
            l.slice(1).reduce(function (u, c) {
              return XG(u, c, t);
            }, l[0]),
          );
        }
      }),
      i
    );
  },
  function () {
    for (var e = [], r = 0; r < arguments.length; r++) e[r] = arguments[r];
    return JSON.stringify(e);
  },
);
function h3(e, r, t, n) {
  n === void 0 && (n = 0);
  var i = e.data,
    a = e.setsField,
    o = e.sizeField;
  if (i.length === 0) return Fr(qe.WARN, !1, 'warn: %s', '数据不能为空'), [];
  var s = i.map(function (h) {
    var f;
    return x(x({}, h), ((f = { sets: h[a] || [], size: h[o] }), (f[Ic] = ''), (f[Sr] = ''), f));
  });
  s.sort(function (h, f) {
    return h.sets.length - f.sets.length;
  });
  var l = e3(s),
    u = u3(l, r, t, n),
    c = QG(u, s);
  return (
    s.forEach(function (h) {
      var f = h.sets,
        v = f.join(',');
      h[Sr] = v;
      var d = f.map(function (y) {
          return u[y];
        }),
        p = t3(d);
      /[zZ]$/.test(p) || (p += ' Z'), (h[Ic] = p);
      var g = c[v] || { x: 0, y: 0 };
      bt(h, g);
    }),
    s
  );
}
function f3(e, r) {
  for (var t = 0; t < r.length; t++) if (!e.includes(r[t])) return !1;
  return !0;
}
var v3 = 40;
function J1(e, r, t) {
  var n = e.chart,
    i = e.options,
    a = i.blendMode,
    o = i.setsField,
    s = n.getTheme(),
    l = s.colors10,
    u = s.colors20,
    c = t;
  N(c) ||
    (c =
      r.filter(function (f) {
        return f[o].length === 1;
      }).length <= 10
        ? l
        : u);
  var h = c3(c, r, a, o);
  return function (f) {
    return h.get(f) || c[0];
  };
}
function d3(e, r) {
  var t = e.options,
    n = t.color;
  if (typeof n != 'function') {
    var i = typeof n == 'string' ? [n] : n,
      a = J1(e, r, i);
    return function (o) {
      return a(o[Sr]);
    };
  }
  return n;
}
function p3(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend,
    i = t.appendPadding,
    a = t.padding,
    o = Kr(i);
  return n !== !1 && (o = Sl(i, A(n, 'position'), v3)), (r.appendPadding = tf([o, a])), e;
}
function g3(e) {
  var r = e.options,
    t = r.data;
  t || (Fr(qe.WARN, !1, 'warn: %s', '数据不能为空'), (t = []));
  var n = t
      .filter(function (a) {
        return a.sets.length === 1;
      })
      .map(function (a) {
        return a.sets[0];
      }),
    i = t.filter(function (a) {
      var o = a.sets;
      return f3(n, o);
    });
  return (
    Dt(i, t) || Fr(qe.WARN, !1, 'warn: %s', '交集中不能出现不存在的集合, 请输入合法数据'),
    _({}, e, { options: { data: i } })
  );
}
function y3(e) {
  var r = e.chart,
    t = e.options,
    n = t.pointStyle,
    i = t.setsField,
    a = t.sizeField,
    o = Kr(r.appendPadding),
    s = o[0],
    l = o[1],
    u = o[2],
    c = o[3],
    h = { offsetX: c, offsetY: s },
    f = r.viewBBox,
    v = f.width,
    d = f.height,
    p = h3(t, Math.max(v - (l + c), 0), Math.max(d - (s + u), 0), 0);
  r.data(p);
  var g = of(
      O({}, e, {
        options: {
          xField: 'x',
          yField: 'y',
          sizeField: a,
          seriesField: Sr,
          rawFields: [i, a],
          schema: { shape: 'venn', style: n },
        },
      }),
    ).ext,
    y = g.geometry;
  y.customInfo(h);
  var m = d3(e, p);
  return (
    typeof m == 'function' &&
      y.color(Sr, function (b) {
        var w = p.find(function (C) {
            return C[Sr] === b;
          }),
          S = J1(e, p)(b);
        return m(w, S);
      }),
    e
  );
}
function m3(e) {
  var r = e.chart,
    t = e.options,
    n = t.label,
    i = Kr(r.appendPadding),
    a = i[0],
    o = i[3],
    s = { offsetX: o, offsetY: a },
    l = te(r, 'schema');
  if (!n) l.label(!1);
  else {
    var u = n.callback,
      c = wt(n, ['callback']);
    l.label({
      fields: ['id'],
      callback: u,
      cfg: _({}, jt(c), { type: 'venn', customLabelInfo: s }),
    });
  }
  return e;
}
function x3(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend,
    i = t.sizeField;
  return r.legend(Sr, n), r.legend(i, !1), e;
}
function w3(e) {
  var r = e.chart;
  return r.axis(!1), e;
}
function b3(e) {
  var r = e.options,
    t = e.chart,
    n = r.interactions;
  if (n) {
    var i = { 'legend-active': 'venn-legend-active', 'legend-highlight': 'venn-legend-highlight' };
    It(
      O({}, e, {
        options: {
          interactions: n.map(function (a) {
            return x(x({}, a), { type: i[a.type] || a.type });
          }),
        },
      }),
    );
  }
  return t.removeInteraction('legend-active'), t.removeInteraction('legend-highlight'), e;
}
function S3(e) {
  return it(p3, vt, g3, y3, m3, Rt({}), x3, w3, Wt, b3, St)(e);
}
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'venn'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return kG;
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return S3;
    }),
    (r.prototype.triggerResize = function () {
      this.chart.destroyed ||
        (this.chart.forceFit(), this.chart.clear(), this.execAdaptor(), this.chart.render(!0));
    }),
    r
  );
})(lt);
var Be = 'x',
  wn = 'violinY',
  C3 = 'violinSize',
  tw = 'minMax',
  ew = 'quantile',
  rw = 'median',
  Af = 'violin_view',
  M3 = 'min_max_view',
  A3 = 'quantile_view',
  F3 = 'median_view',
  E3 = O({}, lt.getDefaultOptions(), {
    syncViewPadding: !0,
    kde: { type: 'triangular', sampleSize: 32, width: 3 },
    violinStyle: { lineWidth: 1, fillOpacity: 0.3, strokeOpacity: 0.75 },
    xAxis: { grid: { line: null }, tickLine: { alignTick: !1 } },
    yAxis: { grid: { line: { style: { lineWidth: 0.5, lineDash: [4, 4] } } } },
    legend: { position: 'top-left' },
    tooltip: { showMarkers: !1 },
  }),
  nw = { exports: {} },
  iw = { exports: {} };
(function (e) {
  var r = e.exports;
  (e.exports.isNumber = function (t) {
    return typeof t == 'number';
  }),
    (e.exports.findMin = function (t) {
      if (t.length === 0) return 1 / 0;
      for (var n = t[0], i = 1; i < t.length; i++) n = Math.min(n, t[i]);
      return n;
    }),
    (e.exports.findMax = function (t) {
      if (t.length === 0) return -1 / 0;
      for (var n = t[0], i = 1; i < t.length; i++) n = Math.max(n, t[i]);
      return n;
    }),
    (e.exports.findMinMulti = function (t) {
      for (var n = r.findMin(t[0]), i = 1; i < t.length; i++) n = Math.min(n, r.findMin(t[i]));
      return n;
    }),
    (e.exports.findMaxMulti = function (t) {
      for (var n = r.findMax(t[0]), i = 1; i < t.length; i++) n = Math.max(n, r.findMax(t[i]));
      return n;
    }),
    (e.exports.inside = function (t, n, i) {
      return t <= i && i <= n;
    });
})(iw);
var T3 = iw.exports;
(function (e) {
  var r = 50,
    t = 2,
    n = Math.log(2),
    i = e.exports,
    a = T3;
  function o(l) {
    return 1 - Math.abs(l);
  }
  (e.exports.getUnifiedMinMax = function (l, u) {
    return i.getUnifiedMinMaxMulti([l], u);
  }),
    (e.exports.getUnifiedMinMaxMulti = function (l, u) {
      u = u || {};
      var c = !1,
        h = !1,
        f = a.isNumber(u.width) ? u.width : t,
        v = a.isNumber(u.size) ? u.size : r,
        d = a.isNumber(u.min) ? u.min : ((c = !0), a.findMinMulti(l)),
        p = a.isNumber(u.max) ? u.max : ((h = !0), a.findMaxMulti(l)),
        g = p - d,
        y = g / (v - 1);
      return c && (d = d - 2 * f * y), h && (p = p + 2 * f * y), { min: d, max: p };
    }),
    (e.exports.create = function (l, u) {
      if (((u = u || {}), !l || l.length === 0)) return [];
      var c = a.isNumber(u.size) ? u.size : r,
        h = a.isNumber(u.width) ? u.width : t,
        f = i.getUnifiedMinMax(l, { size: c, width: h, min: u.min, max: u.max }),
        v = f.min,
        d = f.max,
        p = d - v,
        g = p / (c - 1);
      if (p === 0) return [{ x: v, y: 1 }];
      for (var y = [], m = 0; m < c; m++) y.push({ x: v + m * g, y: 0 });
      var b = function (P) {
          return Math.floor((P - v) / g);
        },
        w = s(o, h),
        S = w[h],
        C = w[h - 1] - w[h - 2],
        F = 0;
      l.forEach(function (P) {
        var R = b(P);
        if (!(R + h < 0 || R - h >= y.length)) {
          var B = Math.max(R - h, 0),
            G = R,
            j = Math.min(R + h, y.length - 1),
            D = B - (R - h),
            z = R + h - j,
            X = w[-h - 1 + D] || 0,
            Y = w[-h - 1 + z] || 0,
            V = S / (S - X - Y);
          D > 0 && (F += V * (D - 1) * C);
          var W = Math.max(0, R - h + 1);
          a.inside(0, y.length - 1, W) && (y[W].y += V * 1 * C),
            a.inside(0, y.length - 1, G + 1) && (y[G + 1].y -= V * 2 * C),
            a.inside(0, y.length - 1, j + 1) && (y[j + 1].y += V * 1 * C);
        }
      });
      var E = F,
        I = 0,
        T = 0;
      return (
        y.forEach(function (P) {
          (I += P.y), (E += I), (P.y = E), (T += E);
        }),
        T > 0 &&
          y.forEach(function (P) {
            P.y /= T;
          }),
        y
      );
    });
  function s(l, u) {
    for (var c = {}, h = 0, f = -u; f <= u; f++) (h += l(f / u)), (c[f] = h);
    return c;
  }
  (e.exports.getExpectedValueFromPdf = function (l) {
    if (!(!l || l.length === 0)) {
      var u = 0;
      return (
        l.forEach(function (c) {
          u += c.x * c.y;
        }),
        u
      );
    }
  }),
    (e.exports.getXWithLeftTailArea = function (l, u) {
      if (!(!l || l.length === 0)) {
        for (var c = 0, h = 0, f = 0; f < l.length && ((h = f), (c += l[f].y), !(c >= u)); f++);
        return l[h].x;
      }
    }),
    (e.exports.getPerplexity = function (l) {
      if (!(!l || l.length === 0)) {
        var u = 0;
        return (
          l.forEach(function (c) {
            var h = Math.log(c.y);
            isFinite(h) && (u += c.y * h);
          }),
          (u = -u / n),
          Math.pow(2, u)
        );
      }
    });
})(nw);
var k3 = nw.exports;
const I3 = Nw(k3);
function sg(e, r) {
  var t = e.length * r;
  if (e.length === 0) throw new Error('quantile requires at least one data point.');
  if (r < 0 || r > 1) throw new Error('quantiles must be between 0 and 1');
  return r === 1
    ? e[e.length - 1]
    : r === 0
    ? e[0]
    : t % 1 !== 0
    ? e[Math.ceil(t) - 1]
    : e.length % 2 === 0
    ? (e[t - 1] + e[t]) / 2
    : e[t];
}
function Xi(e, r, t) {
  var n = e[r];
  (e[r] = e[t]), (e[t] = n);
}
function ts(e, r, t, n) {
  for (t = t || 0, n = n || e.length - 1; n > t; ) {
    if (n - t > 600) {
      var i = n - t + 1,
        a = r - t + 1,
        o = Math.log(i),
        s = 0.5 * Math.exp((2 * o) / 3),
        l = 0.5 * Math.sqrt((o * s * (i - s)) / i);
      a - i / 2 < 0 && (l *= -1);
      var u = Math.max(t, Math.floor(r - (a * s) / i + l)),
        c = Math.min(n, Math.floor(r + ((i - a) * s) / i + l));
      ts(e, r, u, c);
    }
    var h = e[r],
      f = t,
      v = n;
    for (Xi(e, t, r), e[n] > h && Xi(e, t, n); f < v; ) {
      for (Xi(e, f, v), f++, v--; e[f] < h; ) f++;
      for (; e[v] > h; ) v--;
    }
    e[t] === h ? Xi(e, t, v) : (v++, Xi(e, v, n)), v <= r && (t = v + 1), r <= v && (n = v - 1);
  }
}
function _i(e, r) {
  var t = e.slice();
  if (Array.isArray(r)) {
    L3(t, r);
    for (var n = [], i = 0; i < r.length; i++) n[i] = sg(t, r[i]);
    return n;
  } else {
    var a = ow(t.length, r);
    return aw(t, a, 0, t.length - 1), sg(t, r);
  }
}
function aw(e, r, t, n) {
  r % 1 === 0 ? ts(e, r, t, n) : ((r = Math.floor(r)), ts(e, r, t, n), ts(e, r + 1, r + 1, n));
}
function L3(e, r) {
  for (var t = [0], n = 0; n < r.length; n++) t.push(ow(e.length, r[n]));
  t.push(e.length - 1), t.sort(P3);
  for (var i = [0, t.length - 1]; i.length; ) {
    var a = Math.ceil(i.pop()),
      o = Math.floor(i.pop());
    if (!(a - o <= 1)) {
      var s = Math.floor((o + a) / 2);
      aw(e, t[s], Math.floor(t[o]), Math.ceil(t[a])), i.push(o, s, s, a);
    }
  }
}
function P3(e, r) {
  return e - r;
}
function ow(e, r) {
  var t = e * r;
  return r === 1 ? e - 1 : r === 0 ? 0 : t % 1 !== 0 ? Math.ceil(t) - 1 : e % 2 === 0 ? t - 0.5 : t;
}
var lg = function (e) {
    return {
      low: $e(e),
      high: Te(e),
      q1: _i(e, 0.25),
      q3: _i(e, 0.75),
      median: _i(e, [0.5]),
      minMax: [$e(e), Te(e)],
      quantile: [_i(e, 0.25), _i(e, 0.75)],
    };
  },
  ug = function (e, r) {
    var t = I3.create(e, r);
    return {
      violinSize: t.map(function (n) {
        return n.y;
      }),
      violinY: t.map(function (n) {
        return n.x;
      }),
    };
  },
  sw = function (e) {
    var r = e.xField,
      t = e.yField,
      n = e.seriesField,
      i = e.data,
      a = e.kde,
      o = { min: a.min, max: a.max, size: a.sampleSize, width: a.width };
    if (!n) {
      var s = Ae(i, r);
      return Object.keys(s).map(function (c) {
        var h = s[c],
          f = h.map(function (v) {
            return v[t];
          });
        return x(x({ x: c }, ug(f, o)), lg(f));
      });
    }
    var l = [],
      u = Ae(i, n);
    return (
      Object.keys(u).forEach(function (c) {
        var h = Ae(u[c], r);
        return Object.keys(h).forEach(function (f) {
          var v,
            d = h[f],
            p = d.map(function (g) {
              return g[t];
            });
          l.push(x(x(((v = { x: f }), (v[n] = c), v), ug(p, o)), lg(p)));
        });
      }),
      l
    );
  },
  es = ['low', 'high', 'q1', 'q3', 'median'],
  rs = [{ type: 'dodge', marginRatio: 1 / 32 }];
function O3(e) {
  var r = e.chart,
    t = e.options;
  return r.data(sw(t)), e;
}
function D3(e) {
  var r = e.chart,
    t = e.options,
    n = t.seriesField,
    i = t.color,
    a = t.shape,
    o = a === void 0 ? 'violin' : a,
    s = t.violinStyle,
    l = t.tooltip,
    u = t.state,
    c = r.createView({ id: Af });
  return (
    sD({
      chart: c,
      options: {
        xField: Be,
        yField: wn,
        seriesField: n || Be,
        sizeField: C3,
        tooltip: x({ fields: es }, l),
        violin: { style: s, color: i, shape: o },
        state: u,
      },
    }),
    c.geometries[0].adjust(rs),
    e
  );
}
function B3(e) {
  var r = e.chart,
    t = e.options,
    n = t.seriesField,
    i = t.color,
    a = t.tooltip,
    o = t.box;
  if (o === !1) return e;
  var s = r.createView({ id: M3 });
  ee({
    chart: s,
    options: {
      xField: Be,
      yField: tw,
      seriesField: n || Be,
      tooltip: x({ fields: es }, a),
      state: typeof o == 'object' ? o.state : {},
      interval: { color: i, size: 1, style: { lineWidth: 0 } },
    },
  }),
    s.geometries[0].adjust(rs);
  var l = r.createView({ id: A3 });
  ee({
    chart: l,
    options: {
      xField: Be,
      yField: ew,
      seriesField: n || Be,
      tooltip: x({ fields: es }, a),
      state: typeof o == 'object' ? o.state : {},
      interval: { color: i, size: 8, style: { fillOpacity: 1 } },
    },
  }),
    l.geometries[0].adjust(rs);
  var u = r.createView({ id: F3 });
  return (
    Le({
      chart: u,
      options: {
        xField: Be,
        yField: rw,
        seriesField: n || Be,
        tooltip: x({ fields: es }, a),
        state: typeof o == 'object' ? o.state : {},
        point: { color: i, size: 1, style: { fill: 'white', lineWidth: 0 } },
      },
    }),
    u.geometries[0].adjust(rs),
    l.axis(!1),
    s.axis(!1),
    u.axis(!1),
    u.legend(!1),
    s.legend(!1),
    l.legend(!1),
    e
  );
}
function R3(e) {
  var r,
    t = e.chart,
    n = e.options,
    i = n.meta,
    a = n.xAxis,
    o = n.yAxis,
    s = {},
    l = O(
      s,
      i,
      ((r = {}),
      (r[Be] = x(x({ sync: !0 }, mt(a, pe)), { type: 'cat' })),
      (r[wn] = x({ sync: !0 }, mt(o, pe))),
      (r[tw] = x({ sync: wn }, mt(o, pe))),
      (r[ew] = x({ sync: wn }, mt(o, pe))),
      (r[rw] = x({ sync: wn }, mt(o, pe))),
      r),
    );
  return t.scale(l), e;
}
function $3(e) {
  var r = e.chart,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = ct(r, Af);
  return (
    n === !1 ? a.axis(Be, !1) : a.axis(Be, n),
    i === !1 ? a.axis(wn, !1) : a.axis(wn, i),
    r.axis(!1),
    e
  );
}
function N3(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend,
    i = t.seriesField,
    a = t.shape;
  if (n === !1) r.legend(!1);
  else {
    var o = i || Be,
      s = Vs(n, ['selected']);
    (!a || !a.startsWith('hollow')) &&
      (A(s, ['marker', 'style', 'lineWidth']) || Gt(s, ['marker', 'style', 'lineWidth'], 0)),
      r.legend(o, s),
      A(n, 'selected') &&
        M(r.views, function (l) {
          return l.legend(o, n);
        });
  }
  return e;
}
function z3(e) {
  var r = e.chart,
    t = ct(r, Af);
  return Pt()(x(x({}, e), { chart: t })), e;
}
function G3(e) {
  var r = e.chart,
    t = e.options,
    n = t.animation;
  return (
    M(r.views, function (i) {
      eo(i, n);
    }),
    e
  );
}
function V3(e) {
  return it(vt, O3, D3, B3, R3, Wt, $3, N3, It, z3, G3)(e);
}
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'violin'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return E3;
    }),
    (r.prototype.changeData = function (t) {
      this.updateOption({ data: t }), this.chart.changeData(sw(this.options));
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return V3;
    }),
    r
  );
})(lt);
var Re = '$$yField$$',
  Nl = '$$diffField$$',
  Ff = '$$absoluteField$$',
  Rc = '$$isTotal$$',
  H3 = {
    label: {},
    leaderLine: { style: { lineWidth: 1, stroke: '#8c8c8c', lineDash: [4, 2] } },
    total: { style: { fill: 'rgba(0, 0, 0, 0.25)' } },
    interactions: [{ type: 'element-active' }],
    risingFill: '#f4664a',
    fallingFill: '#30bf78',
    waterfallStyle: { fill: 'rgba(0, 0, 0, 0.25)' },
    yAxis: { grid: { line: { style: { lineDash: [4, 2] } } } },
  };
function Y3(e) {
  for (var r = [], t = 0; t < e.length; t++) {
    var n = e[t];
    if (n) {
      var i = t === 0 ? 'M' : 'L';
      r.push([i, n.x, n.y]);
    }
  }
  var a = e[0];
  return r.push(['L', a.x, a.y]), r.push(['z']), r;
}
function W3(e) {
  return O({}, e.defaultStyle, e.style, { fill: e.color });
}
gt('interval', 'waterfall', {
  draw: function (e, r) {
    var t = e.customInfo,
      n = e.points,
      i = e.nextPoints,
      a = r.addGroup(),
      o = this.parsePath(Y3(n)),
      s = W3(e);
    a.addShape('path', { attrs: x(x({}, s), { path: o }) });
    var l = A(t, 'leaderLine');
    if (l && i) {
      var u = [
        ['M', n[2].x, n[2].y],
        ['L', i[0].x, i[0].y],
      ];
      n[2].y === i[1].y && (u[1] = ['L', i[1].x, i[1].y]),
        (u = this.parsePath(u)),
        a.addShape('path', { attrs: x({ path: u }, l.style || {}) });
    }
    return a;
  },
});
function X3(e, r, t, n, i) {
  var a,
    o = [];
  if (
    (ie(
      e,
      function (l, u) {
        var c;
        Fr(qe.WARN, at(u[t]), ''.concat(u[t], ' is not a valid number'));
        var h = pn(u[t]) ? null : u[t];
        return o.push(x(x({}, u), ((c = {}), (c[n] = [l, l + h]), c))), l + h;
      },
      0,
    ),
    o.length && i)
  ) {
    var s = A(o, [[e.length - 1], n, [1]]);
    o.push(((a = {}), (a[r] = i.label), (a[t] = s), (a[n] = [0, s]), a));
  }
  return o;
}
function lw(e, r, t, n) {
  var i = X3(e, r, t, Re, n);
  return i.map(function (a, o) {
    var s;
    return xt(a)
      ? x(
          x({}, a),
          ((s = {}),
          (s[Ff] = a[Re][1]),
          (s[Nl] = a[Re][1] - a[Re][0]),
          (s[Rc] = o === e.length),
          s),
        )
      : a;
  });
}
function _3(e) {
  var r = e.options,
    t = r.locale,
    n = r.total,
    i = Al(t).get(['waterfall', 'total']);
  return n && typeof n.label != 'string' && i && (e.options.total.label = i), e;
}
function j3(e) {
  var r = e.chart,
    t = e.options,
    n = t.data,
    i = t.xField,
    a = t.yField,
    o = t.total,
    s = t.leaderLine,
    l = t.columnWidthRatio,
    u = t.waterfallStyle,
    c = t.risingFill,
    h = t.fallingFill,
    f = t.color,
    v = t.shape,
    d = t.customInfo;
  r.data(lw(n, i, a, o));
  var p =
      f ||
      function (b) {
        return A(b, [Rc]) ? A(o, ['style', 'fill'], '') : A(b, [Re, 1]) - A(b, [Re, 0]) > 0 ? c : h;
      },
    g = O({}, e, {
      options: {
        xField: i,
        yField: Re,
        seriesField: i,
        rawFields: [a, Nl, Rc, Re],
        widthRatio: l,
        interval: { style: u, shape: v || 'waterfall', color: p },
      },
    }),
    y = ee(g).ext,
    m = y.geometry;
  return m.customInfo(x(x({}, d), { leaderLine: s })), e;
}
function U3(e) {
  var r,
    t,
    n = e.options,
    i = n.xAxis,
    a = n.yAxis,
    o = n.xField,
    s = n.yField,
    l = n.meta,
    u = O({}, { alias: s }, A(l, s));
  return it(
    Rt(
      ((r = {}), (r[o] = i), (r[s] = a), (r[Re] = a), r),
      O({}, l, ((t = {}), (t[Re] = u), (t[Nl] = u), (t[Ff] = u), t)),
    ),
  )(e);
}
function q3(e) {
  var r = e.chart,
    t = e.options,
    n = t.xAxis,
    i = t.yAxis,
    a = t.xField,
    o = t.yField;
  return (
    n === !1 ? r.axis(a, !1) : r.axis(a, n),
    i === !1 ? (r.axis(o, !1), r.axis(Re, !1)) : (r.axis(o, i), r.axis(Re, i)),
    e
  );
}
function Z3(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend,
    i = t.total,
    a = t.risingFill,
    o = t.fallingFill,
    s = t.locale,
    l = Al(s);
  if (n === !1) r.legend(!1);
  else {
    var u = [
      {
        name: l.get(['general', 'increase']),
        value: 'increase',
        marker: { symbol: 'square', style: { r: 5, fill: a } },
      },
      {
        name: l.get(['general', 'decrease']),
        value: 'decrease',
        marker: { symbol: 'square', style: { r: 5, fill: o } },
      },
    ];
    i &&
      u.push({
        name: i.label || '',
        value: 'total',
        marker: { symbol: 'square', style: O({}, { r: 5 }, A(i, 'style')) },
      }),
      r.legend(O({}, { custom: !0, position: 'top', items: u }, n)),
      r.removeInteraction('legend-filter');
  }
  return e;
}
function K3(e) {
  var r = e.chart,
    t = e.options,
    n = t.label,
    i = t.labelMode,
    a = t.xField,
    o = te(r, 'interval');
  if (!n) o.label(!1);
  else {
    var s = n.callback,
      l = wt(n, ['callback']);
    o.label({ fields: i === 'absolute' ? [Ff, a] : [Nl, a], callback: s, cfg: jt(l) });
  }
  return e;
}
function Q3(e) {
  var r = e.chart,
    t = e.options,
    n = t.tooltip,
    i = t.xField,
    a = t.yField;
  if (n !== !1) {
    r.tooltip(x({ showCrosshairs: !1, showMarkers: !1, shared: !0, fields: [a] }, n));
    var o = r.geometries[0];
    n != null && n.formatter ? o.tooltip(''.concat(i, '*').concat(a), n.formatter) : o.tooltip(a);
  } else r.tooltip(!1);
  return e;
}
function J3(e) {
  return it(_3, vt, j3, U3, q3, Z3, Q3, K3, on, It, St, Pt())(e);
}
(function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'waterfall'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return H3;
    }),
    (r.prototype.changeData = function (t) {
      var n = this.options,
        i = n.xField,
        a = n.yField,
        o = n.total;
      this.updateOption({ data: t }), this.chart.changeData(lw(t, i, a, o));
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return J3;
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    r
  );
})(lt);
var Ef = 'color',
  tV = O({}, lt.getDefaultOptions(), {
    timeInterval: 2e3,
    legend: !1,
    tooltip: {
      showTitle: !1,
      showMarkers: !1,
      showCrosshairs: !1,
      fields: ['text', 'value', Ef],
      formatter: function (e) {
        return { name: e.text, value: e.value };
      },
    },
    wordStyle: {
      fontFamily: 'Verdana',
      fontWeight: 'normal',
      padding: 1,
      fontSize: [12, 60],
      rotation: [0, 90],
      rotationSteps: 2,
      rotateRatio: 0.5,
    },
  }),
  eV = {
    font: function () {
      return 'serif';
    },
    padding: 1,
    size: [500, 500],
    spiral: 'archimedean',
    timeInterval: 3e3,
  };
function rV(e, r) {
  return (r = bt({}, eV, r)), nV(e, r);
}
function nV(e, r) {
  var t = gV();
  [
    'font',
    'fontSize',
    'fontWeight',
    'padding',
    'rotate',
    'size',
    'spiral',
    'timeInterval',
    'random',
  ].forEach(function (l) {
    $(r[l]) || t[l](r[l]);
  }),
    t.words(e),
    r.imageMask && t.createMask(r.imageMask);
  var n = t.start(),
    i = n._tags;
  i.forEach(function (l) {
    (l.x += r.size[0] / 2), (l.y += r.size[1] / 2);
  });
  var a = r.size,
    o = a[0],
    s = a[1];
  return (
    i.push({ text: '', value: 0, x: 0, y: 0, opacity: 0 }),
    i.push({ text: '', value: 0, x: o, y: s, opacity: 0 }),
    i
  );
}
var Pu = Math.PI / 180,
  na = 64,
  ns = 2048;
function iV(e) {
  return e.text;
}
function aV() {
  return 'serif';
}
function cg() {
  return 'normal';
}
function oV(e) {
  return e.value;
}
function sV() {
  return ~~(Math.random() * 2) * 90;
}
function lV() {
  return 1;
}
function uV(e, r, t, n) {
  if (!r.sprite) {
    var i = e.context,
      a = e.ratio;
    i.clearRect(0, 0, (na << 5) / a, ns / a);
    var o = 0,
      s = 0,
      l = 0,
      u = t.length;
    for (--n; ++n < u; ) {
      (r = t[n]),
        i.save(),
        (i.font = r.style + ' ' + r.weight + ' ' + ~~((r.size + 1) / a) + 'px ' + r.font);
      var c = i.measureText(r.text + 'm').width * a,
        h = r.size << 1;
      if (r.rotate) {
        var f = Math.sin(r.rotate * Pu),
          v = Math.cos(r.rotate * Pu),
          d = c * v,
          p = c * f,
          g = h * v,
          y = h * f;
        (c = ((Math.max(Math.abs(d + y), Math.abs(d - y)) + 31) >> 5) << 5),
          (h = ~~Math.max(Math.abs(p + g), Math.abs(p - g)));
      } else c = ((c + 31) >> 5) << 5;
      if ((h > l && (l = h), o + c >= na << 5 && ((o = 0), (s += l), (l = 0)), s + h >= ns)) break;
      i.translate((o + (c >> 1)) / a, (s + (h >> 1)) / a),
        r.rotate && i.rotate(r.rotate * Pu),
        i.fillText(r.text, 0, 0),
        r.padding && ((i.lineWidth = 2 * r.padding), i.strokeText(r.text, 0, 0)),
        i.restore(),
        (r.width = c),
        (r.height = h),
        (r.xoff = o),
        (r.yoff = s),
        (r.x1 = c >> 1),
        (r.y1 = h >> 1),
        (r.x0 = -r.x1),
        (r.y0 = -r.y1),
        (r.hasText = !0),
        (o += c);
    }
    for (var m = i.getImageData(0, 0, (na << 5) / a, ns / a).data, b = []; --n >= 0; )
      if (((r = t[n]), !!r.hasText)) {
        for (var c = r.width, w = c >> 5, h = r.y1 - r.y0, S = 0; S < h * w; S++) b[S] = 0;
        if (((o = r.xoff), o == null)) return;
        s = r.yoff;
        for (var C = 0, F = -1, E = 0; E < h; E++) {
          for (var S = 0; S < c; S++) {
            var I = w * E + (S >> 5),
              T = m[((s + E) * (na << 5) + (o + S)) << 2] ? 1 << (31 - (S % 32)) : 0;
            (b[I] |= T), (C |= T);
          }
          C ? (F = E) : (r.y0++, h--, E--, s++);
        }
        (r.y1 = r.y0 + F), (r.sprite = b.slice(0, (r.y1 - r.y0) * w));
      }
  }
}
function cV(e, r, t) {
  t >>= 5;
  for (
    var n = e.sprite,
      i = e.width >> 5,
      a = e.x - (i << 4),
      o = a & 127,
      s = 32 - o,
      l = e.y1 - e.y0,
      u = (e.y + e.y0) * t + (a >> 5),
      c,
      h = 0;
    h < l;
    h++
  ) {
    c = 0;
    for (var f = 0; f <= i; f++)
      if (((c << s) | (f < i ? (c = n[h * i + f]) >>> o : 0)) & r[u + f]) return !0;
    u += t;
  }
  return !1;
}
function hV(e, r) {
  var t = e[0],
    n = e[1];
  r.x + r.x0 < t.x && (t.x = r.x + r.x0),
    r.y + r.y0 < t.y && (t.y = r.y + r.y0),
    r.x + r.x1 > n.x && (n.x = r.x + r.x1),
    r.y + r.y1 > n.y && (n.y = r.y + r.y1);
}
function fV(e, r) {
  return e.x + e.x1 > r[0].x && e.x + e.x0 < r[1].x && e.y + e.y1 > r[0].y && e.y + e.y0 < r[1].y;
}
function uw(e) {
  var r = e[0] / e[1];
  return function (t) {
    return [r * (t *= 0.1) * Math.cos(t), t * Math.sin(t)];
  };
}
function vV(e) {
  var r = 4,
    t = (r * e[0]) / e[1],
    n = 0,
    i = 0;
  return function (a) {
    var o = a < 0 ? -1 : 1;
    switch ((Math.sqrt(1 + 4 * o * a) - o) & 3) {
      case 0:
        n += t;
        break;
      case 1:
        i += r;
        break;
      case 2:
        n -= t;
        break;
      default:
        i -= r;
        break;
    }
    return [n, i];
  };
}
function hg(e) {
  for (var r = [], t = -1; ++t < e; ) r[t] = 0;
  return r;
}
function dV() {
  return document.createElement('canvas');
}
function tr(e) {
  return U(e)
    ? e
    : function () {
        return e;
      };
}
var pV = { archimedean: uw, rectangular: vV };
function gV() {
  var e = [256, 256],
    r = aV,
    t = oV,
    n = cg,
    i = sV,
    a = lV,
    o = uw,
    s = Math.random,
    l = [],
    u = 1 / 0,
    c = iV,
    h = cg,
    f = dV,
    v = {};
  v.start = function () {
    var g = e[0],
      y = e[1],
      m = d(f()),
      b = v.board ? v.board : hg((e[0] >> 5) * e[1]),
      w = l.length,
      S = [],
      C = l
        .map(function (T, P, R) {
          return (
            (T.text = c.call(this, T, P, R)),
            (T.font = r.call(this, T, P, R)),
            (T.style = h.call(this, T, P, R)),
            (T.weight = n.call(this, T, P, R)),
            (T.rotate = i.call(this, T, P, R)),
            (T.size = ~~t.call(this, T, P, R)),
            (T.padding = a.call(this, T, P, R)),
            T
          );
        })
        .sort(function (T, P) {
          return P.size - T.size;
        }),
      F = -1,
      E = v.board
        ? [
            { x: 0, y: 0 },
            { x: g, y },
          ]
        : null;
    I();
    function I() {
      for (var T = Date.now(); Date.now() - T < u && ++F < w; ) {
        var P = C[F];
        (P.x = (g * (s() + 0.5)) >> 1),
          (P.y = (y * (s() + 0.5)) >> 1),
          uV(m, P, C, F),
          P.hasText &&
            p(b, P, E) &&
            (S.push(P),
            E
              ? v.hasImage || hV(E, P)
              : (E = [
                  { x: P.x + P.x0, y: P.y + P.y0 },
                  { x: P.x + P.x1, y: P.y + P.y1 },
                ]),
            (P.x -= e[0] >> 1),
            (P.y -= e[1] >> 1));
      }
      (v._tags = S), (v._bounds = E);
    }
    return v;
  };
  function d(g) {
    g.width = g.height = 1;
    var y = Math.sqrt(
      g.getContext('2d', { willReadFrequently: !0 }).getImageData(0, 0, 1, 1).data.length >> 2,
    );
    (g.width = (na << 5) / y), (g.height = ns / y);
    var m = g.getContext('2d', { willReadFrequently: !0 });
    return (
      (m.fillStyle = m.strokeStyle = 'red'), (m.textAlign = 'center'), { context: m, ratio: y }
    );
  }
  function p(g, y, m) {
    for (
      var b = y.x,
        w = y.y,
        S = Math.sqrt(e[0] * e[0] + e[1] * e[1]),
        C = o(e),
        F = s() < 0.5 ? 1 : -1,
        E,
        I = -F,
        T,
        P;
      (E = C((I += F))) && ((T = ~~E[0]), (P = ~~E[1]), !(Math.min(Math.abs(T), Math.abs(P)) >= S));

    )
      if (
        ((y.x = b + T),
        (y.y = w + P),
        !(y.x + y.x0 < 0 || y.y + y.y0 < 0 || y.x + y.x1 > e[0] || y.y + y.y1 > e[1]) &&
          (!m || !cV(y, g, e[0])) &&
          (!m || fV(y, m)))
      ) {
        for (
          var R = y.sprite,
            B = y.width >> 5,
            G = e[0] >> 5,
            j = y.x - (B << 4),
            D = j & 127,
            z = 32 - D,
            X = y.y1 - y.y0,
            Y = void 0,
            V = (y.y + y.y0) * G + (j >> 5),
            W = 0;
          W < X;
          W++
        ) {
          Y = 0;
          for (var tt = 0; tt <= B; tt++)
            g[V + tt] |= (Y << z) | (tt < B ? (Y = R[W * B + tt]) >>> D : 0);
          V += G;
        }
        return delete y.sprite, !0;
      }
    return !1;
  }
  return (
    (v.createMask = function (g) {
      var y = document.createElement('canvas'),
        m = e[0],
        b = e[1];
      if (!(!m || !b)) {
        var w = m >> 5,
          S = hg((m >> 5) * b);
        (y.width = m), (y.height = b);
        var C = y.getContext('2d');
        C.drawImage(g, 0, 0, g.width, g.height, 0, 0, m, b);
        for (var F = C.getImageData(0, 0, m, b).data, E = 0; E < b; E++)
          for (var I = 0; I < m; I++) {
            var T = w * E + (I >> 5),
              P = (E * m + I) << 2,
              R = F[P] >= 250 && F[P + 1] >= 250 && F[P + 2] >= 250,
              B = R ? 1 << (31 - (I % 32)) : 0;
            S[T] |= B;
          }
        (v.board = S), (v.hasImage = !0);
      }
    }),
    (v.timeInterval = function (g) {
      u = g == null ? 1 / 0 : g;
    }),
    (v.words = function (g) {
      l = g;
    }),
    (v.size = function (g) {
      e = [+g[0], +g[1]];
    }),
    (v.font = function (g) {
      r = tr(g);
    }),
    (v.fontWeight = function (g) {
      n = tr(g);
    }),
    (v.rotate = function (g) {
      i = tr(g);
    }),
    (v.spiral = function (g) {
      o = pV[g] || g;
    }),
    (v.fontSize = function (g) {
      t = tr(g);
    }),
    (v.padding = function (g) {
      a = tr(g);
    }),
    (v.random = function (g) {
      s = tr(g);
    }),
    v
  );
}
function cw(e) {
  var r = e.options,
    t = e.chart,
    n = t,
    i = n.width,
    a = n.height,
    o = n.padding,
    s = n.appendPadding,
    l = n.ele,
    u = r.data,
    c = r.imageMask,
    h = r.wordField,
    f = r.weightField,
    v = r.colorField,
    d = r.wordStyle,
    p = r.timeInterval,
    g = r.random,
    y = r.spiral,
    m = r.autoFit,
    b = m === void 0 ? !0 : m,
    w = r.placementStrategy;
  if (!u || !u.length) return [];
  var S = d.fontFamily,
    C = d.fontWeight,
    F = d.padding,
    E = d.fontSize,
    I = bV(u, f),
    T = [MV(I), AV(I)],
    P = u.map(function (G) {
      return { text: G[h], value: G[f], color: G[v], datum: G };
    }),
    R = {
      imageMask: c,
      font: S,
      fontSize: wV(E, T),
      fontWeight: C,
      size: yV({ width: i, height: a, padding: o, appendPadding: s, autoFit: b, container: l }),
      padding: F,
      timeInterval: p,
      random: g,
      spiral: y,
      rotate: SV(r),
    };
  if (U(w)) {
    var B = P.map(function (G, j, D) {
      return x(
        x(x({}, G), {
          hasText: !!G.text,
          font: tr(R.font)(G, j, D),
          weight: tr(R.fontWeight)(G, j, D),
          rotate: tr(R.rotate)(G, j, D),
          size: tr(R.fontSize)(G, j, D),
          style: 'normal',
        }),
        w.call(t, G, j, D),
      );
    });
    return (
      B.push({ text: '', value: 0, x: 0, y: 0, opacity: 0 }),
      B.push({ text: '', value: 0, x: R.size[0], y: R.size[1], opacity: 0 }),
      B
    );
  }
  return rV(P, R);
}
function yV(e) {
  var r = e.width,
    t = e.height,
    n = e.container,
    i = e.autoFit,
    a = e.padding,
    o = e.appendPadding;
  if (i) {
    var s = Sc(n);
    (r = s.width), (t = s.height);
  }
  (r = r || 400), (t = t || 400);
  var l = mV({ padding: a, appendPadding: o }),
    u = l[0],
    c = l[1],
    h = l[2],
    f = l[3],
    v = [r - (f + c), t - (u + h)];
  return v;
}
function mV(e) {
  var r = Kr(e.padding),
    t = Kr(e.appendPadding),
    n = r[0] + t[0],
    i = r[1] + t[1],
    a = r[2] + t[2],
    o = r[3] + t[3];
  return [n, i, a, o];
}
function xV(e) {
  return new Promise(function (r, t) {
    if (e instanceof HTMLImageElement) {
      r(e);
      return;
    }
    if (et(e)) {
      var n = new Image();
      (n.crossOrigin = 'anonymous'),
        (n.src = e),
        (n.onload = function () {
          r(n);
        }),
        (n.onerror = function () {
          Fr(qe.ERROR, !1, 'image %s load failed !!!', e), t();
        });
      return;
    }
    Fr(qe.WARN, e === void 0, 'The type of imageMask option must be String or HTMLImageElement.'),
      t();
  });
}
function wV(e, r) {
  if (U(e)) return e;
  if (N(e)) {
    var t = e[0],
      n = e[1];
    if (!r)
      return function () {
        return (n + t) / 2;
      };
    var i = r[0],
      a = r[1];
    return a === i
      ? function () {
          return (n + t) / 2;
        }
      : function (s) {
          var l = s.value;
          return ((n - t) / (a - i)) * (l - i) + t;
        };
  }
  return function () {
    return e;
  };
}
function bV(e, r) {
  return e
    .map(function (t) {
      return t[r];
    })
    .filter(function (t) {
      return typeof t == 'number' && !isNaN(t);
    });
}
function SV(e) {
  var r = CV(e),
    t = r.rotation,
    n = r.rotationSteps;
  if (!N(t)) return t;
  var i = t[0],
    a = t[1],
    o = n === 1 ? 0 : (a - i) / (n - 1);
  return function () {
    return a === i ? a : Math.floor(Math.random() * n) * o;
  };
}
function CV(e) {
  var r = e.wordStyle.rotationSteps;
  return (
    r < 1 &&
      (Fr(qe.WARN, !1, 'The rotationSteps option must be greater than or equal to 1.'), (r = 1)),
    { rotation: e.wordStyle.rotation, rotationSteps: r }
  );
}
function MV(e) {
  return Math.min.apply(Math, e);
}
function AV(e) {
  return Math.max.apply(Math, e);
}
function FV(e) {
  var r = e.chart,
    t = e.options,
    n = t.colorField,
    i = t.color,
    a = cw(e);
  r.data(a);
  var o = O({}, e, {
      options: {
        xField: 'x',
        yField: 'y',
        seriesField: n && Ef,
        rawFields: U(i) && J(J([], A(t, 'rawFields', []), !0), ['datum'], !1),
        point: { color: i, shape: 'word-cloud' },
      },
    }),
    s = Le(o).ext;
  return s.geometry.label(!1), r.coordinate().reflect('y'), r.axis(!1), e;
}
function EV(e) {
  return it(Rt({ x: { nice: !1 }, y: { nice: !1 } }))(e);
}
function TV(e) {
  var r = e.chart,
    t = e.options,
    n = t.legend,
    i = t.colorField;
  return n === !1 ? r.legend(!1) : i && r.legend(Ef, n), e;
}
function kV(e) {
  it(FV, EV, Wt, TV, It, St, vt, on)(e);
}
gt('point', 'word-cloud', {
  draw: function (e, r) {
    var t = e.x,
      n = e.y,
      i = r.addShape('text', { attrs: x(x({}, IV(e)), { x: t, y: n }) }),
      a = e.data.rotate;
    return typeof a == 'number' && me.rotate(i, (a * Math.PI) / 180), i;
  },
});
function IV(e) {
  return {
    fontSize: e.data.size,
    text: e.data.text,
    textAlign: 'center',
    fontFamily: e.data.font,
    fontWeight: e.data.weight,
    fill: e.color || e.defaultStyle.stroke,
    textBaseline: 'alphabetic',
  };
}
var LV = (function (e) {
  k(r, e);
  function r() {
    var t = (e !== null && e.apply(this, arguments)) || this;
    return (t.type = 'word-cloud'), t;
  }
  return (
    (r.getDefaultOptions = function () {
      return tV;
    }),
    (r.prototype.changeData = function (t) {
      this.updateOption({ data: t }),
        this.options.imageMask
          ? this.render()
          : this.chart.changeData(cw({ chart: this.chart, options: this.options }));
    }),
    (r.prototype.getDefaultOptions = function () {
      return r.getDefaultOptions();
    }),
    (r.prototype.render = function () {
      var t = this;
      return new Promise(function (n) {
        var i = t.options.imageMask;
        if (!i) {
          e.prototype.render.call(t), n();
          return;
        }
        var a = function (o) {
          (t.options = x(x({}, t.options), { imageMask: o || null })),
            e.prototype.render.call(t),
            n();
        };
        xV(i).then(a).catch(a);
      });
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return kV;
    }),
    (r.prototype.triggerResize = function () {
      var t = this;
      this.chart.destroyed ||
        (this.execAdaptor(),
        window.setTimeout(function () {
          e.prototype.triggerResize.call(t);
        }));
    }),
    r
  );
})(lt);
(function (e) {
  k(r, e);
  function r(t, n, i, a) {
    var o = e.call(this, t, O({}, a, n)) || this;
    return (o.type = 'g2-plot'), (o.defaultOptions = a), (o.adaptor = i), o;
  }
  return (
    (r.prototype.getDefaultOptions = function () {
      return this.defaultOptions;
    }),
    (r.prototype.getSchemaAdaptor = function () {
      return this.adaptor;
    }),
    r
  );
})(lt);
hx('en-US', iD);
hx('zh-CN', aD);
var $c = function () {
    return (
      ($c =
        Object.assign ||
        function (e) {
          for (var r, t = 1, n = arguments.length; t < n; t++) {
            r = arguments[t];
            for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (e[i] = r[i]);
          }
          return e;
        }),
      $c.apply(this, arguments)
    );
  },
  so = $c({}, zw),
  PV = so.version,
  OV = so.render;
so.unmountComponentAtNode;
var Tf;
try {
  var DV = Number((PV || '').split('.')[0]);
  DV >= 18 && (Tf = so.createRoot);
} catch (e) {}
function fg(e) {
  var r = so.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  r && typeof r == 'object' && (r.usingClientEntryPoint = e);
}
var vg = '__rc_react_root__';
function BV(e, r) {
  fg(!0);
  var t = r[vg] || Tf(r);
  fg(!1), t.render(e), (r[vg] = t);
}
function RV(e, r) {
  OV(e, r);
}
function $V(e, r) {
  if (Tf) {
    BV(e, r);
    return;
  }
  RV(e, r);
}
var Ou = new Map(),
  NV = function (e, r, t) {
    var n = document.createElement('div');
    return (
      r === 'tooltip' &&
        (n.setAttribute('data-uuid', t),
        Ou.has(t) ? (n = Ou.get(t)) : Ou.set(t, n),
        (n.className = 'g2-tooltip')),
      $V(e, n),
      n
    );
  };
const zV = NV;
var _o = function (e, r) {
    var t = {}.toString;
    return t.call(e) === '[object '.concat(r, ']');
  },
  GV = function (e) {
    if (!e) return e;
    var r = {};
    for (var t in e) r[t] = e[t];
    return r;
  },
  Ls = function (e) {
    if (!e || typeof e != 'object') return e;
    var r;
    return (
      Array.isArray(e)
        ? (r = e.map(function (t) {
            return Ls(t);
          }))
        : ((r = {}),
          Object.keys(e).forEach(function (t) {
            return (r[t] = Ls(e[t]));
          })),
      r
    );
  },
  ji = function (e, r) {
    for (var t = e, n = 0; n < r.length; n += 1)
      if (t != null && t[r[n]]) t = t[r[n]];
      else {
        t = void 0;
        break;
      }
    return t;
  },
  VV = function (e, r, t) {
    if (!e) return e;
    var n = e;
    return (
      r.forEach(function (i, a) {
        a < r.length - 1 ? (n = n[i]) : (n[i] = t);
      }),
      e
    );
  },
  HV = function () {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (e) {
      var r = (Math.random() * 16) | 0,
        t = e == 'x' ? r : (r & 3) | 8;
      return t.toString(16);
    });
  },
  kf = function (e, r) {
    e && (U(e) ? e(r) : (e.current = r));
  },
  Nc = function () {
    return (
      (Nc =
        Object.assign ||
        function (e) {
          for (var r, t = 1, n = arguments.length; t < n; t++) {
            r = arguments[t];
            for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (e[i] = r[i]);
          }
          return e;
        }),
      Nc.apply(this, arguments)
    );
  },
  dg = function (e, r) {
    var t = {};
    for (var n in e)
      Object.prototype.hasOwnProperty.call(e, n) && r.indexOf(n) < 0 && (t[n] = e[n]);
    if (e != null && typeof Object.getOwnPropertySymbols == 'function')
      for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++)
        r.indexOf(n[i]) < 0 &&
          Object.prototype.propertyIsEnumerable.call(e, n[i]) &&
          (t[n[i]] = e[n[i]]);
    return t;
  };
function If(e, r) {
  var t = L.useRef(),
    n = L.useRef(),
    i = L.useRef(null),
    a = r.onReady,
    o = r.onEvent,
    s = function (h, f) {
      var v;
      return (
        h === void 0 && (h = 'image/png'),
        (v = t.current) === null || v === void 0 ? void 0 : v.chart.canvas.cfg.el.toDataURL(h, f)
      );
    },
    l = function (h, f, v) {
      var d;
      h === void 0 && (h = 'download'), f === void 0 && (f = 'image/png');
      var p = h;
      h.indexOf('.') === -1 && (p = ''.concat(h, '.').concat(f.split('/')[1]));
      var g =
          (d = t.current) === null || d === void 0 ? void 0 : d.chart.canvas.cfg.el.toDataURL(f, v),
        y = document.createElement('a');
      return (
        (y.href = g),
        (y.download = p),
        document.body.appendChild(y),
        y.click(),
        document.body.removeChild(y),
        (y = null),
        p
      );
    },
    u = function (h, f, v, d) {
      var p = ji(h, f);
      VV(h, f, function () {
        for (var g = [], y = 0; y < arguments.length; y++) g[y] = arguments[y];
        var m = _o(p, 'Function') ? p.apply(void 0, g) : p;
        return _o(m, 'String') || _o(m, 'Number') || _o(m, 'HTMLDivElement') ? m : zV(m, v, d);
      });
    },
    c = function () {
      var h = HV();
      ji(r, ['statistic', 'content', 'customHtml']) && u(r, ['statistic', 'content', 'customHtml']),
        ji(r, ['statistic', 'title', 'customHtml']) && u(r, ['statistic', 'title', 'customHtml']),
        typeof r.tooltip == 'object' &&
          (ji(r, ['tooltip', 'container']) && u(r, ['tooltip', 'container'], 'tooltip', h),
          ji(r, ['tooltip', 'customContent']) && u(r, ['tooltip', 'customContent'], 'tooltip', h));
    };
  return (
    L.useEffect(
      function () {
        if (t.current && !Dt(n.current, r)) {
          var h = !1;
          if (n.current) {
            var f = n.current;
            f.data, f.value, f.percent;
            var v = dg(f, ['data', 'value', 'percent']);
            r.data, r.value, r.percent;
            var d = dg(r, ['data', 'value', 'percent']);
            h = Dt(v, d);
          }
          if (((n.current = Ls(r)), h && A(r, 'chartType') !== 'Mix')) {
            var p = 'data',
              g = ['percent'],
              y = Object.keys(r);
            g.forEach(function (m) {
              y.includes(m) && (p = m);
            }),
              t.current.changeData((r == null ? void 0 : r[p]) || []),
              t.current.render();
          } else c(), t.current.update(r);
        }
      },
      [r],
    ),
    L.useEffect(function () {
      if (!i.current)
        return function () {
          return null;
        };
      n.current || (n.current = Ls(r)), c();
      var h = new e(i.current, Nc({}, r));
      (h.toDataURL = function (v, d) {
        return s(v, d);
      }),
        (h.downloadImage = function (v, d, p) {
          return l(v, d, p);
        }),
        h.render(),
        (t.current = GV(h)),
        a && a(h);
      var f = function (v) {
        o && o(h, v);
      };
      return (
        h.on('*', f),
        function () {
          t.current && (t.current.destroy(), t.current.off('*', f), (t.current = void 0));
        }
      );
    }, []),
    { chart: t, container: i }
  );
}
var YV = (function () {
    var e = function (r, t) {
      return (
        (e =
          Object.setPrototypeOf ||
          ({ __proto__: [] } instanceof Array &&
            function (n, i) {
              n.__proto__ = i;
            }) ||
          function (n, i) {
            for (var a in i) Object.prototype.hasOwnProperty.call(i, a) && (n[a] = i[a]);
          }),
        e(r, t)
      );
    };
    return function (r, t) {
      if (typeof t != 'function' && t !== null)
        throw new TypeError('Class extends value ' + String(t) + ' is not a constructor or null');
      e(r, t);
      function n() {
        this.constructor = r;
      }
      r.prototype = t === null ? Object.create(t) : ((n.prototype = t.prototype), new n());
    };
  })(),
  WV = (function (e) {
    YV(r, e);
    function r() {
      var t = (e !== null && e.apply(this, arguments)) || this;
      return (
        (t.state = { hasError: !1 }),
        (t.renderError = function (n) {
          var i = t.props.errorTemplate;
          switch (n) {
            default:
              return typeof i == 'function'
                ? i(n)
                : i || Bt.createElement('h5', null, '组件出错了，请核查后重试： ', n.message);
          }
        }),
        t
      );
    }
    return (
      (r.getDerivedStateFromError = function (t) {
        return { hasError: !0, error: t };
      }),
      (r.getDerivedStateFromProps = function (t, n) {
        return n.children !== t.children
          ? { children: t.children, hasError: !1, error: void 0 }
          : null;
      }),
      (r.prototype.render = function () {
        return this.state.hasError
          ? this.renderError(this.state.error)
          : Bt.createElement(L.Fragment, null, this.props.children);
      }),
      r
    );
  })(Bt.Component);
const Lf = WV;
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */ var Xr =
  function () {
    return (
      (Xr =
        Object.assign ||
        function (r) {
          for (var t, n = 1, i = arguments.length; n < i; n++) {
            t = arguments[n];
            for (var a in t) Object.prototype.hasOwnProperty.call(t, a) && (r[a] = t[a]);
          }
          return r;
        }),
      Xr.apply(this, arguments)
    );
  };
function XV(e, r) {
  var t = {};
  for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && r.indexOf(n) < 0 && (t[n] = e[n]);
  if (e != null && typeof Object.getOwnPropertySymbols == 'function')
    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++)
      r.indexOf(n[i]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(e, n[i]) &&
        (t[n[i]] = e[n[i]]);
  return t;
}
var _V = function () {
    return Math.random().toString(36).substring(6);
  },
  hw = function (e) {
    var r = e.animate,
      t = e.backgroundColor,
      n = e.backgroundOpacity,
      i = e.baseUrl,
      a = e.children,
      o = e.foregroundColor,
      s = e.foregroundOpacity,
      l = e.gradientRatio,
      u = e.uniqueKey,
      c = e.interval,
      h = e.rtl,
      f = e.speed,
      v = e.style,
      d = e.title,
      p = XV(e, [
        'animate',
        'backgroundColor',
        'backgroundOpacity',
        'baseUrl',
        'children',
        'foregroundColor',
        'foregroundOpacity',
        'gradientRatio',
        'uniqueKey',
        'interval',
        'rtl',
        'speed',
        'style',
        'title',
      ]),
      g = u || _V(),
      y = g + '-diff',
      m = g + '-animated-diff',
      b = g + '-aria',
      w = h ? { transform: 'scaleX(-1)' } : null,
      S = '0; ' + c + '; 1',
      C = f + 's';
    return L.createElement(
      'svg',
      Xr({ 'aria-labelledby': b, role: 'img', style: Xr(Xr({}, v), w) }, p),
      d ? L.createElement('title', { id: b }, d) : null,
      L.createElement('rect', {
        role: 'presentation',
        x: '0',
        y: '0',
        width: '100%',
        height: '100%',
        clipPath: 'url(' + i + '#' + y + ')',
        style: { fill: 'url(' + i + '#' + m + ')' },
      }),
      L.createElement(
        'defs',
        { role: 'presentation' },
        L.createElement('clipPath', { id: y }, a),
        L.createElement(
          'linearGradient',
          { id: m },
          L.createElement(
            'stop',
            { offset: '0%', stopColor: t, stopOpacity: n },
            r &&
              L.createElement('animate', {
                attributeName: 'offset',
                values: -l + '; ' + -l + '; 1',
                keyTimes: S,
                dur: C,
                repeatCount: 'indefinite',
              }),
          ),
          L.createElement(
            'stop',
            { offset: '50%', stopColor: o, stopOpacity: s },
            r &&
              L.createElement('animate', {
                attributeName: 'offset',
                values: -l / 2 + '; ' + -l / 2 + '; ' + (1 + l / 2),
                keyTimes: S,
                dur: C,
                repeatCount: 'indefinite',
              }),
          ),
          L.createElement(
            'stop',
            { offset: '100%', stopColor: t, stopOpacity: n },
            r &&
              L.createElement('animate', {
                attributeName: 'offset',
                values: '0; 0; ' + (1 + l),
                keyTimes: S,
                dur: C,
                repeatCount: 'indefinite',
              }),
          ),
        ),
      ),
    );
  };
hw.defaultProps = {
  animate: !0,
  backgroundColor: '#f5f6f7',
  backgroundOpacity: 1,
  baseUrl: '',
  foregroundColor: '#eee',
  foregroundOpacity: 1,
  gradientRatio: 2,
  id: null,
  interval: 0.25,
  rtl: !1,
  speed: 1.2,
  style: {},
  title: 'Loading...',
};
var fw = function (e) {
    return e.children ? L.createElement(hw, Xr({}, e)) : L.createElement(jV, Xr({}, e));
  },
  jV = function (e) {
    return L.createElement(
      fw,
      Xr({ viewBox: '0 0 476 124' }, e),
      L.createElement('rect', { x: '48', y: '8', width: '88', height: '6', rx: '3' }),
      L.createElement('rect', { x: '48', y: '26', width: '52', height: '6', rx: '3' }),
      L.createElement('rect', { x: '0', y: '56', width: '410', height: '6', rx: '3' }),
      L.createElement('rect', { x: '0', y: '72', width: '380', height: '6', rx: '3' }),
      L.createElement('rect', { x: '0', y: '88', width: '178', height: '6', rx: '3' }),
      L.createElement('circle', { cx: '20', cy: '20', r: '20' }),
    );
  };
const UV = fw;
var qV = function (e) {
  var r = e.loadingTemplate,
    t = e.theme,
    n = t === void 0 ? 'light' : t,
    i = function () {
      return (
        r ||
        Bt.createElement(
          UV,
          {
            viewBox: '0 0 400 180',
            width: 200,
            height: 90,
            speed: 1,
            backgroundColor: n === 'dark' ? '#262626' : '#D9D9D9',
          },
          Bt.createElement('rect', {
            x: '20',
            y: '5',
            rx: '0',
            ry: '0',
            width: '1',
            height: '170',
          }),
          Bt.createElement('rect', {
            x: '20',
            y: '175',
            rx: '0',
            ry: '0',
            width: '360',
            height: '1',
          }),
          Bt.createElement('rect', {
            x: '40',
            y: '75',
            rx: '0',
            ry: '0',
            width: '35',
            height: '100',
          }),
          Bt.createElement('rect', {
            x: '80',
            y: '125',
            rx: '0',
            ry: '0',
            width: '35',
            height: '50',
          }),
          Bt.createElement('rect', {
            x: '120',
            y: '105',
            rx: '0',
            ry: '0',
            width: '35',
            height: '70',
          }),
          Bt.createElement('rect', {
            x: '160',
            y: '35',
            rx: '0',
            ry: '0',
            width: '35',
            height: '140',
          }),
          Bt.createElement('rect', {
            x: '200',
            y: '55',
            rx: '0',
            ry: '0',
            width: '35',
            height: '120',
          }),
          Bt.createElement('rect', {
            x: '240',
            y: '15',
            rx: '0',
            ry: '0',
            width: '35',
            height: '160',
          }),
          Bt.createElement('rect', {
            x: '280',
            y: '135',
            rx: '0',
            ry: '0',
            width: '35',
            height: '40',
          }),
          Bt.createElement('rect', {
            x: '320',
            y: '85',
            rx: '0',
            ry: '0',
            width: '35',
            height: '90',
          }),
        )
      );
    };
  return Bt.createElement(
    'div',
    {
      className: 'charts-loading-container',
      style: {
        position: 'absolute',
        width: '100%',
        height: '100%',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        left: 0,
        top: 0,
        zIndex: 99,
        backgroundColor: n === 'dark' ? 'rgb(20, 20, 20)' : 'rgb(255, 255, 255)',
      },
    },
    i(),
  );
};
const Pf = qV;
var ZV = function (e, r) {
    var t = {};
    for (var n in e)
      Object.prototype.hasOwnProperty.call(e, n) && r.indexOf(n) < 0 && (t[n] = e[n]);
    if (e != null && typeof Object.getOwnPropertySymbols == 'function')
      for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++)
        r.indexOf(n[i]) < 0 &&
          Object.prototype.propertyIsEnumerable.call(e, n[i]) &&
          (t[n[i]] = e[n[i]]);
    return t;
  },
  KV = L.forwardRef(function (e, r) {
    var t = e.chartRef,
      n = e.style,
      i = n === void 0 ? { height: 'inherit' } : n,
      a = e.className,
      o = e.loading,
      s = e.loadingTemplate,
      l = e.errorTemplate,
      u = ZV(e, ['chartRef', 'style', 'className', 'loading', 'loadingTemplate', 'errorTemplate']),
      c = If(Sx, u),
      h = c.chart,
      f = c.container;
    return (
      L.useEffect(
        function () {
          kf(t, h.current);
        },
        [h.current],
      ),
      L.useImperativeHandle(r, function () {
        return {
          getChart: function () {
            return h.current;
          },
        };
      }),
      Bt.createElement(
        Lf,
        { errorTemplate: l },
        o && Bt.createElement(Pf, { loadingTemplate: s, theme: e.theme }),
        Bt.createElement('div', { className: a, style: i, ref: f }),
      )
    );
  });
const QV = KV;
var JV = function (e, r) {
    var t = {};
    for (var n in e)
      Object.prototype.hasOwnProperty.call(e, n) && r.indexOf(n) < 0 && (t[n] = e[n]);
    if (e != null && typeof Object.getOwnPropertySymbols == 'function')
      for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++)
        r.indexOf(n[i]) < 0 &&
          Object.prototype.propertyIsEnumerable.call(e, n[i]) &&
          (t[n[i]] = e[n[i]]);
    return t;
  },
  tH = L.forwardRef(function (e, r) {
    var t = e.chartRef,
      n = e.style,
      i = n === void 0 ? { height: 'inherit' } : n,
      a = e.className,
      o = e.loading,
      s = e.loadingTemplate,
      l = e.errorTemplate,
      u = JV(e, ['chartRef', 'style', 'className', 'loading', 'loadingTemplate', 'errorTemplate']),
      c = If(jx, u),
      h = c.chart,
      f = c.container;
    return (
      L.useEffect(
        function () {
          kf(t, h.current);
        },
        [h.current],
      ),
      L.useImperativeHandle(r, function () {
        return {
          getChart: function () {
            return h.current;
          },
        };
      }),
      Bt.createElement(
        Lf,
        { errorTemplate: l },
        o && Bt.createElement(Pf, { loadingTemplate: s, theme: e.theme }),
        Bt.createElement('div', { className: a, style: i, ref: f }),
      )
    );
  });
const eH = tH;
var rH = function (e, r) {
    var t = {};
    for (var n in e)
      Object.prototype.hasOwnProperty.call(e, n) && r.indexOf(n) < 0 && (t[n] = e[n]);
    if (e != null && typeof Object.getOwnPropertySymbols == 'function')
      for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++)
        r.indexOf(n[i]) < 0 &&
          Object.prototype.propertyIsEnumerable.call(e, n[i]) &&
          (t[n[i]] = e[n[i]]);
    return t;
  },
  nH = L.forwardRef(function (e, r) {
    var t = e.chartRef,
      n = e.style,
      i = n === void 0 ? { height: 'inherit' } : n,
      a = e.className,
      o = e.loading,
      s = e.loadingTemplate,
      l = e.errorTemplate,
      u = rH(e, ['chartRef', 'style', 'className', 'loading', 'loadingTemplate', 'errorTemplate']),
      c = If(LV, u),
      h = c.chart,
      f = c.container;
    return (
      L.useEffect(
        function () {
          kf(t, h.current);
        },
        [h.current],
      ),
      L.useImperativeHandle(r, function () {
        return {
          getChart: function () {
            return h.current;
          },
        };
      }),
      Bt.createElement(
        Lf,
        { errorTemplate: l },
        o && Bt.createElement(Pf, { loadingTemplate: s, theme: e.theme }),
        Bt.createElement('div', { className: a, style: i, ref: f }),
      )
    );
  });
const iH = nH,
  aH = '#ffffff',
  oH = 'rgba(0,0,0,0.05)',
  sH = '#F4664A',
  lH = '#30BF78',
  uH = 'auto',
  cH = `"Segoe UI", Roboto, "Helvetica Neue", Arial,
    "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"`,
  hH = 0.5,
  fH = null,
  vH = null,
  dH = 0.9999999,
  pH = 0.7692307692307692,
  gH = [
    '#d8daff',
    '#aeb6ff',
    '#7d94ff',
    '#5d80fd',
    '#4973fa',
    '#2d66f6',
    '#0359ef',
    '#034ddf',
    '#0241cf',
    '#0035c0',
  ],
  yH = {
    point: [
      'hollow-circle',
      'hollow-square',
      'hollow-bowtie',
      'hollow-diamond',
      'hollow-hexagon',
      'hollow-triangle',
      'hollow-triangle-down',
      'circle',
      'square',
      'bowtie',
      'diamond',
      'hexagon',
      'triangle',
      'triangle-down',
      'cross',
      'tick',
      'plus',
      'hyphen',
      'line',
    ],
    line: ['line', 'dash', 'dot', 'smooth'],
    area: ['area', 'smooth', 'line', 'smooth-line'],
    interval: ['rect', 'hollow-rect', 'line', 'tick'],
  },
  mH = [1, 10],
  xH = {
    axis: {
      common: {
        title: {
          autoRotate: !0,
          position: 'center',
          spacing: 12,
          style: {
            fill: '#595959',
            fontSize: 12,
            lineHeight: 12,
            textBaseline: 'middle',
            fontFamily: `"Segoe UI", Roboto, "Helvetica Neue", Arial,
    "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"`,
          },
        },
        label: {
          autoRotate: !1,
          autoEllipsis: !1,
          autoHide: { type: 'equidistance', cfg: { minGap: 6 } },
          offset: 8,
          style: {
            fill: '#8C8C8C',
            fontSize: 12,
            lineHeight: 12,
            fontFamily: `"Segoe UI", Roboto, "Helvetica Neue", Arial,
    "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"`,
          },
        },
        line: { style: { lineWidth: 1, stroke: '#BFBFBF' } },
        grid: {
          line: { type: 'line', style: { stroke: '#D9D9D9', lineWidth: 1, lineDash: null } },
          alignTick: !0,
          animate: !0,
        },
        tickLine: { style: { lineWidth: 1, stroke: '#BFBFBF' }, alignTick: !0, length: 4 },
        subTickLine: null,
        animate: !0,
      },
      top: { position: 'top', grid: null, title: null, verticalLimitLength: 0.5 },
      bottom: { position: 'bottom', grid: null, title: null, verticalLimitLength: 0.5 },
      left: {
        position: 'left',
        title: null,
        line: null,
        tickLine: null,
        verticalLimitLength: 0.3333333333333333,
      },
      right: {
        position: 'right',
        title: null,
        line: null,
        tickLine: null,
        verticalLimitLength: 0.3333333333333333,
      },
      circle: {
        title: null,
        grid: {
          line: { type: 'line', style: { stroke: '#D9D9D9', lineWidth: 1, lineDash: null } },
          alignTick: !0,
          animate: !0,
        },
      },
      radius: {
        title: null,
        grid: {
          line: { type: 'circle', style: { stroke: '#D9D9D9', lineWidth: 1, lineDash: null } },
          alignTick: !0,
          animate: !0,
        },
      },
    },
    legend: {
      common: {
        title: null,
        marker: { symbol: 'circle', spacing: 8, style: { r: 4, fill: '#5B8FF9' } },
        itemName: {
          spacing: 5,
          style: {
            fill: '#595959',
            fontFamily: `"Segoe UI", Roboto, "Helvetica Neue", Arial,
    "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"`,
            fontSize: 12,
            lineHeight: 12,
            fontWeight: 'normal',
            textAlign: 'start',
            textBaseline: 'middle',
          },
        },
        itemStates: {
          active: { nameStyle: { opacity: 0.8 } },
          unchecked: {
            nameStyle: { fill: '#D8D8D8' },
            markerStyle: { fill: '#D8D8D8', stroke: '#D8D8D8' },
          },
          inactive: { nameStyle: { fill: '#D8D8D8' }, markerStyle: { opacity: 0.2 } },
        },
        flipPage: !0,
        pageNavigator: {
          marker: {
            style: {
              size: 12,
              inactiveFill: '#000',
              inactiveOpacity: 0.45,
              fill: '#000',
              opacity: 1,
            },
          },
          text: { style: { fill: '#8C8C8C', fontSize: 12 } },
        },
        animate: !1,
        maxItemWidth: 200,
        itemSpacing: 24,
        itemMarginBottom: 12,
        padding: [8, 8, 8, 8],
      },
      right: { layout: 'vertical', padding: [0, 8, 0, 8] },
      left: { layout: 'vertical', padding: [0, 8, 0, 8] },
      top: { layout: 'horizontal', padding: [8, 0, 8, 0] },
      bottom: { layout: 'horizontal', padding: [8, 0, 8, 0] },
      continuous: {
        title: null,
        background: null,
        track: {},
        rail: {
          type: 'color',
          size: 12,
          defaultLength: 100,
          style: { fill: '#D9D9D9', stroke: null, lineWidth: 0 },
        },
        label: {
          align: 'rail',
          spacing: 4,
          formatter: null,
          style: {
            fill: '#8C8C8C',
            fontSize: 12,
            lineHeight: 12,
            textBaseline: 'middle',
            fontFamily: `"Segoe UI", Roboto, "Helvetica Neue", Arial,
    "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"`,
          },
        },
        handler: { size: 10, style: { fill: '#F0F0F0', stroke: '#BFBFBF' } },
        slidable: !0,
        padding: [8, 8, 8, 8],
      },
    },
    tooltip: {
      showContent: !0,
      follow: !0,
      showCrosshairs: !1,
      showMarkers: !0,
      shared: !1,
      enterable: !1,
      position: 'auto',
      marker: {
        symbol: 'circle',
        stroke: '#fff',
        shadowBlur: 10,
        shadowOffsetX: 0,
        shadowOffsetY: 0,
        shadowColor: 'rgba(0,0,0,0.09)',
        lineWidth: 2,
        r: 4,
      },
      crosshairs: {
        line: { style: { stroke: '#BFBFBF', lineWidth: 1 } },
        text: null,
        textBackground: {
          padding: 2,
          style: { fill: 'rgba(0, 0, 0, 0.25)', lineWidth: 0, stroke: null },
        },
        follow: !1,
      },
      domStyles: {
        'g2-tooltip': {
          position: 'absolute',
          visibility: 'hidden',
          zIndex: 8,
          transition:
            'left 0.4s cubic-bezier(0.23, 1, 0.32, 1) 0s, top 0.4s cubic-bezier(0.23, 1, 0.32, 1) 0s',
          backgroundColor: 'rgb(255, 255, 255)',
          opacity: 0.95,
          boxShadow: '0px 0px 10px #aeaeae',
          borderRadius: '3px',
          color: '#595959',
          fontSize: '12px',
          fontFamily: `"Segoe UI", Roboto, "Helvetica Neue", Arial,
    "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"`,
          lineHeight: '12px',
          padding: '0 12px 0 12px',
        },
        'g2-tooltip-title': { marginBottom: '12px', marginTop: '12px' },
        'g2-tooltip-list': { margin: 0, listStyleType: 'none', padding: 0 },
        'g2-tooltip-list-item': {
          listStyleType: 'none',
          padding: 0,
          marginBottom: '12px',
          marginTop: '12px',
          marginLeft: 0,
          marginRight: 0,
        },
        'g2-tooltip-marker': {
          width: '8px',
          height: '8px',
          borderRadius: '50%',
          display: 'inline-block',
          marginRight: '8px',
        },
        'g2-tooltip-value': { display: 'inline-block', float: 'right', marginLeft: '30px' },
      },
    },
    annotation: {
      arc: { style: { stroke: '#D9D9D9', lineWidth: 1 }, animate: !0 },
      line: {
        style: { stroke: '#BFBFBF', lineDash: null, lineWidth: 1 },
        text: {
          position: 'start',
          autoRotate: !0,
          style: {
            fill: '#595959',
            stroke: null,
            lineWidth: 0,
            fontSize: 12,
            textAlign: 'start',
            fontFamily: `"Segoe UI", Roboto, "Helvetica Neue", Arial,
    "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"`,
            textBaseline: 'bottom',
          },
        },
        animate: !0,
      },
      text: {
        style: {
          fill: '#595959',
          stroke: null,
          lineWidth: 0,
          fontSize: 12,
          textBaseline: 'middle',
          textAlign: 'start',
          fontFamily: `"Segoe UI", Roboto, "Helvetica Neue", Arial,
    "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"`,
        },
        animate: !0,
      },
      region: {
        top: !1,
        style: { lineWidth: 0, stroke: null, fill: '#000', fillOpacity: 0.06 },
        animate: !0,
      },
      image: { top: !1, animate: !0 },
      dataMarker: {
        top: !0,
        point: { style: { r: 3, stroke: '#5B8FF9', lineWidth: 2 } },
        line: { style: { stroke: '#BFBFBF', lineWidth: 1 }, length: 16 },
        text: {
          style: {
            textAlign: 'start',
            fill: '#595959',
            stroke: null,
            lineWidth: 0,
            fontSize: 12,
            fontFamily: `"Segoe UI", Roboto, "Helvetica Neue", Arial,
    "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"`,
          },
        },
        direction: 'upward',
        autoAdjust: !0,
        animate: !0,
      },
      dataRegion: {
        style: {
          region: { fill: '#000', fillOpacity: 0.06 },
          text: {
            textAlign: 'center',
            textBaseline: 'bottom',
            fill: '#595959',
            stroke: null,
            lineWidth: 0,
            fontSize: 12,
            fontFamily: `"Segoe UI", Roboto, "Helvetica Neue", Arial,
    "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"`,
          },
        },
        animate: !0,
      },
    },
    slider: {
      common: {
        padding: [8, 8, 8, 8],
        backgroundStyle: { fill: '#416180', opacity: 0.05 },
        foregroundStyle: { fill: '#5B8FF9', opacity: 0.15 },
        handlerStyle: {
          width: 10,
          height: 24,
          fill: '#F7F7F7',
          opacity: 1,
          stroke: '#BFBFBF',
          lineWidth: 1,
          radius: 2,
          highLightFill: '#FFF',
        },
        textStyle: {
          fill: '#000',
          opacity: 0.45,
          fontSize: 12,
          lineHeight: 12,
          fontWeight: 'normal',
          stroke: null,
          lineWidth: 0,
        },
      },
    },
    scrollbar: {
      common: { padding: [8, 8, 8, 8] },
      default: { style: { trackColor: 'rgba(0,0,0,0)', thumbColor: 'rgba(0,0,0,0.15)' } },
      hover: { style: { thumbColor: 'rgba(0,0,0,0.2)' } },
    },
  },
  wH = {
    offset: 12,
    style: {
      fill: '#595959',
      fontSize: 12,
      fontFamily: `"Segoe UI", Roboto, "Helvetica Neue", Arial,
    "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"`,
      stroke: null,
      lineWidth: 0,
    },
    fillColorDark: '#2c3542',
    fillColorLight: '#ffffff',
    autoRotate: !0,
  },
  bH = {
    style: {
      fill: '#FFFFFF',
      fontSize: 12,
      fontFamily: `"Segoe UI", Roboto, "Helvetica Neue", Arial,
    "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"`,
      stroke: null,
      lineWidth: 0,
    },
    autoRotate: !0,
  },
  SH = {
    style: {
      fill: '#595959',
      fontSize: 12,
      fontFamily: `"Segoe UI", Roboto, "Helvetica Neue", Arial,
    "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"`,
      stroke: '#FFFFFF',
      lineWidth: 1,
    },
  },
  CH = { labelHeight: 14, offset: 10, labelLine: { style: { lineWidth: 1 } }, autoRotate: !0 },
  MH = {
    brandColor: 'rgba(0, 177, 255, 1)',
    paletteQualitative10: [
      'rgba(0, 177, 255, 1)',
      'rgba(43, 222, 228, 1)',
      '#2498D1',
      '#BBBDE6',
      '#4045B2',
      '#21A97A',
      '#FF745A',
      '#007E99',
      '#FFA8A8',
      '#2391FF',
    ],
    paletteQualitative20: [
      '#025DF4',
      '#DB6BCF',
      '#2498D1',
      '#BBBDE6',
      '#4045B2',
      '#21A97A',
      '#FF745A',
      '#007E99',
      '#FFA8A8',
      '#2391FF',
      '#FFC328',
      '#A0DC2C',
      '#946DFF',
      '#626681',
      '#EB4185',
      '#CD8150',
      '#36BCCB',
      '#327039',
      '#803488',
      '#83BC99',
    ],
  },
  AH = {
    background: aH,
    subColor: oH,
    semanticRed: sH,
    semanticGreen: lH,
    padding: uH,
    fontFamily: cH,
    columnWidthRatio: hH,
    maxColumnWidth: fH,
    minColumnWidth: vH,
    roseWidthRatio: dH,
    multiplePieWidthRatio: pH,
    sequenceColors: gH,
    shapes: yH,
    sizes: mH,
    components: xH,
    labels: wH,
    innerLabels: bH,
    overflowLabels: SH,
    pieLabels: CH,
    styleSheet: MH,
  },
  Of = () => ({ theme: Gw((t) => t.app.themeMode) === 'dark' ? 'dark' : AH }),
  FH = [
    { week: '星期天', value: 150, category: '目标任务' },
    { week: '星期一', value: 154, category: '目标任务' },
    { week: '星期二', value: 201, category: '目标任务' },
    { week: '星期三', value: 299, category: '目标任务' },
    { week: '星期四', value: 190, category: '目标任务' },
    { week: '星期五', value: 330, category: '目标任务' },
    { week: '星期六', value: 410, category: '目标任务' },
    { week: '星期天', value: 220, category: '事项' },
    { week: '星期一', value: 182, category: '事项' },
    { week: '星期二', value: 191, category: '事项' },
    { week: '星期三', value: 234, category: '事项' },
    { week: '星期四', value: 290, category: '事项' },
    { week: '星期五', value: 330, category: '事项' },
    { week: '星期六', value: 310, category: '事项' },
    { week: '星期天', value: 50, category: '任务' },
    { week: '星期一', value: 124, category: '任务' },
    { week: '星期二', value: 191, category: '任务' },
    { week: '星期三', value: 280, category: '任务' },
    { week: '星期四', value: 90, category: '任务' },
    { week: '星期五', value: 30, category: '任务' },
    { week: '星期六', value: 10, category: '任务' },
  ],
  EH = L.memo(() => {
    const { theme: e } = Of();
    return At(
      QV,
      lo(
        {},
        {
          data: FH,
          theme: e,
          height: 362,
          xField: 'week',
          yField: 'value',
          seriesField: 'category',
          smooth: !0,
          legend: !1,
          xAxis: {
            range: [0, 1],
            nice: !0,
            grid: { alignTick: !0, line: { style: { stroke: '#ddd', opacity: 0.5 } } },
          },
          yAxis: {
            nice: !0,
            tickCount: 7,
            min: 0,
            max: 1e3,
            grid: { alignTick: !0, line: { style: { stroke: '#ddd', opacity: 0.5 } } },
          },
        },
      ),
    );
  }),
  TH = [
    { type: 'Vue', value: 70 },
    { type: 'React', value: 20 },
    { type: 'Angular', value: 10 },
  ],
  kH = L.memo(() => {
    const { theme: e } = Of();
    return At(
      eH,
      lo(
        {},
        {
          appendPadding: 10,
          data: TH,
          theme: e,
          height: 362,
          angleField: 'value',
          colorField: 'type',
          radius: 1,
          innerRadius: 0.64,
          meta: { value: { formatter: (t) => `${t}` } },
          legend: { layout: 'horizontal', position: 'bottom' },
          label: {
            type: 'inner',
            offset: '-50%',
            style: { textAlign: 'center' },
            autoRotate: !1,
            content: '{value}',
          },
          statistic: { title: { customHtml: (t, n, i, a) => (i ? i.type : '卷') } },
          interactions: [
            { type: 'element-selected' },
            { type: 'element-active' },
            { type: 'pie-statistic-active' },
          ],
        },
      ),
    );
  }),
  IH = (e) => ({
    height: 450,
    overflowY: 'auto',
    '.item': {
      display: 'flex',
      '.item-content': {
        marginLeft: 14,
        display: 'flex',
        flexDirection: 'column',
        flex: 1,
        '.title': { fontSize: e.fontSize },
        time: { fontSize: e.fontSizeSM },
        '.text': {
          textOverflow: 'ellipsis',
          overflow: 'hidden',
          display: '-webkit-box',
          WebkitLineClamp: '2',
          ' -webkit-box-orient': 'vertical',
        },
      },
    },
  }),
  LH = L.memo(() => {
    const e = wg.useToken();
    return At('div', {
      css: IH(e.token),
      children: At('ul', {
        children: [1, 2, 3, 4].map((r) =>
          dn(
            'li',
            {
              children: [
                dn('div', {
                  className: 'item',
                  children: [
                    At(pb, { size: 52, icon: At(_w, {}), src: Vw }),
                    dn('div', {
                      className: 'item-content',
                      children: [
                        At('span', { className: 'title', children: '某某某' }),
                        At('span', { className: 'time', children: '2021-12-31' }),
                        At('span', {
                          className: 'text',
                          children:
                            '据我观察，你今天吃意大利面遇到不良商家，没有拌42号混凝土，以及使用劣质螺丝钉，严重影响你的扭矩，从而影响UFO的产量，吸收不足引发内蜂蜜失调，导致排放系统紊乱，对整个太平洋以及充电器造成严重的核污染。我个人认为，这个意大利面就应该拌42号混凝土，因为这个螺丝钉的长度，它很容易会直接影响到挖掘机的扭矩你知道吧，你往里砸的时候，一瞬间它就会产生大量的高能蛋白。',
                        }),
                      ],
                    }),
                  ],
                }),
                At(Hw, {}),
              ],
            },
            r,
          ),
        ),
      }),
    });
  });
let Du = [
  { name: 'Vue', value: 0 },
  { name: 'React', value: 0 },
  { name: 'Angular', value: 0 },
  { name: 'ECharts', value: 0 },
  { name: 'Wechat', value: 0 },
  { name: 'Element', value: 0 },
  { name: 'Vite', value: 0 },
  { name: 'Node', value: 0 },
  { name: 'Router', value: 0 },
  { name: 'I18n', value: 0 },
  { name: 'VitePress', value: 0 },
  { name: 'Umi', value: 0 },
  { name: 'And Design', value: 0 },
];
const PH = L.memo(() => {
    const { theme: e } = Of();
    return (
      (Du = Du.map((t) => ((t.value = Math.random() * 30 + 8), t))),
      At(
        iH,
        lo(
          {},
          {
            data: Du,
            theme: e,
            wordField: 'name',
            weightField: 'value',
            height: 450,
            color: ['#e3e3e3', '#e3e3e3', '#e3e3e3'],
            wordStyle: { fontFamily: 'Verdana', fontSize: [18, 26] },
            interactions: [{ type: 'element-active' }],
            state: { active: { style: { lineWidth: 3 } } },
          },
        ),
      )
    );
  }),
  RH = L.memo(() => {
    const e = wg.useToken(),
      r = [
        { title: '待办事项', online: 24, total: 70 },
        { title: '待办任务', online: 39, total: 100 },
        { title: '目标计划', online: 5, total: 10 },
        { title: '评论回复', online: 10, total: 40 },
      ],
      t = (n, i) => Math.round((n / i) * 100);
    return At('div', {
      className: '',
      children: dn(jw, {
        gutter: [12, 12],
        children: [
          r.map((n) =>
            At(
              Ri,
              {
                lg: 6,
                sm: 24,
                xs: 24,
                children: At($i, {
                  size: 'small',
                  title: n.title,
                  extra: At(Yw, {}),
                  children: dn('div', {
                    css: GS(e.token),
                    children: [
                      dn('div', {
                        className: 'numerical-value',
                        children: [
                          dn('span', { className: 'number', children: [n.online, '/', n.total] }),
                          At('span', { children: 'Online/Total' }),
                        ],
                      }),
                      At(zS, { percent: t(n.online, n.total), strokeColor: e.token.colorPrimary }),
                    ],
                  }),
                }),
              },
              n.title,
            ),
          ),
          At(Ri, {
            lg: 18,
            sm: 24,
            xs: 24,
            children: At($i, { size: 'small', title: '任务数据', children: At(EH, {}) }),
          }),
          At(Ri, {
            lg: 6,
            sm: 24,
            xs: 24,
            children: At($i, { size: 'small', title: '任务数据', children: At(kH, {}) }),
          }),
          At(Ri, {
            lg: 18,
            sm: 24,
            xs: 24,
            children: At($i, { size: 'small', title: '评论列表', children: At(LH, {}) }),
          }),
          At(Ri, {
            lg: 6,
            sm: 24,
            xs: 24,
            children: At($i, { size: 'small', title: '词云', children: At(PH, {}) }),
          }),
        ],
      }),
    });
  });
export { RH as default };
